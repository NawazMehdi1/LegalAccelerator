---
ID: "9ad347d6-0c58-475e-81e8-d8a34ed07b03"
Parent: "7a39c13b-2237-4b60-9956-a3a4ccc57328"
Template: "962b53c4-f93b-4df9-9821-415c867b8903"
Path: /sitecore/media library/Project/GowlingWLG/GowlingWLG/ContentMigration/Insights/WhitePapers
SharedFields:
- ID: "06d5295c-ed2f-4a54-9bf2-26228d113318"
  Hint: __Icon
  Value: "-/media/9AD347D60C58475E81E8D8A34ED07B03.ashx?h=16&thn=1&w=16"
- ID: "40e50ed9-ba07-4702-992e-a912738d32dc"
  Hint: Blob
  BlobID: "b1432a4b-dac2-4c16-a5c9-c2005016dc71"
  Value: 
- ID: "6954b7c7-2487-423f-8600-436cb3b6dc0e"
  Hint: Size
  Value: 80872
- ID: "6f47a0a5-9c94-4b48-abeb-42d38def6054"
  Hint: Mime Type
  Value: text/csv
- ID: "c06867fe-9a43-4c7d-b739-48780492d06f"
  Hint: Extension
  Value: csv
Languages:
- Language: en
  Versions:
  - Version: 1
    Fields:
    - ID: "25bed78c-4957-4165-998a-ca1b52f67497"
      Hint: __Created
      Value: 20230915T111230Z
    - ID: "52807595-0f8f-4b20-8d2a-cb71d28c6103"
      Hint: __Owner
      Value: |
        sitecore\mahesh.kambhampati@altudo.co
    - ID: "5dd74568-4d4b-44c1-b513-0af5f4cda34f"
      Hint: __Created by
      Value: |
        sitecore\mahesh.kambhampati@altudo.co
    - ID: "8cdc337e-a112-42fb-bbb4-4143751e123f"
      Hint: __Revision
      Value: "fed14b25-03d3-41f8-93c2-1368e868ae08"
    - ID: "badd9cf9-53e0-4d0c-bcc0-2d784c282f6a"
      Hint: __Updated by
      Value: |
        sitecore\mahesh.kambhampati@altudo.co
    - ID: "d9cf14b1-fa16-4ba6-9288-e8a174d4d522"
      Hint: __Updated
      Value: 20230915T111230Z
