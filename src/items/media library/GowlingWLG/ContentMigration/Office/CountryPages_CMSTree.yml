---
ID: "71c6f2b6-9a70-47f7-af4c-7d37b84dbadc"
Parent: "bf333c09-7a82-40c8-a251-9116b675a603"
Template: "962b53c4-f93b-4df9-9821-415c867b8903"
Path: /sitecore/media library/Project/GowlingWLG/GowlingWLG/ContentMigration/Office/CountryPages_CMSTree
SharedFields:
- ID: "06d5295c-ed2f-4a54-9bf2-26228d113318"
  Hint: __Icon
  Value: "-/media/71C6F2B69A7047F7AF4C7D37B84DBADC.ashx?h=16&thn=1&w=16"
- ID: "40e50ed9-ba07-4702-992e-a912738d32dc"
  Hint: Blob
  BlobID: "6e847434-92ee-4078-8f1b-56e62b921aa9"
  Value: ﻿GlobalReachID,NodeAliasPath,DocumentCulture,TreeNodeGUID,PageName,Title,Summary,Image,ImageAltText,MainContent,Locations,MenuGroup,DisplayCondition,Offices,BannerContent,ImageUrl,MobileImageUrl,IsLargeBanner,ImageAlignment,LinkUrl,LinkText,KeyContacts,KeyContactsHeading,Evergreen,PageBackgroundColour,ImageSocialMedia,OpenIn
1,/Global-Reach/Africa,en-GB,1812C1C1-2B0C-40E7-9892-9894640DDE5A,Africa,Africa,"Gowling WLG has a long and successful track record of advising on transactions in the natural resources, energy, infrastructure, transportation and financial services industries across Africa.",~/getmedia/69962997-0da6-4312-9181-0ef2d0f12c6e/africa_desktop.jpg.xml?width=1400&height=540&ext=.jpg,NULL,"<p>Gowling WLG has a long and successful track record of advising on transactions in the natural resources, energy, infrastructure, transportation and financial services industries across Africa. Our sector-focused groups are supported by our highly regarded white collar defence, international disputes and global tax teams.</p>

<p>Our legal professionals have been doing business in Africa for over twenty years, and have developed close relationships with business leaders, legal professionals, governments and financial institutions across the continent. We work closely with a wide range of clients, including major banks, development and private equity funds, government agencies, and companies active in the natural resources, energy, infrastructure, transportation, technology and telecommunications sectors.</p>

<p>Recognised for our extensive industry knowledge and in-depth understanding of the unique legal, regulatory, commercial and cultural landscape across Africa, our team is also known for its ability to structure &quot;first of kind&quot; deals in emerging jurisdictions on the continent, particularly in the infrastructure and energy sectors.</p>

<p>We&#39;ve worked on transactions in nearly every jurisdiction in Africa. Transactions in French-speaking and civil law countries are handled from our <a href=""~/en/offices/france/paris/"">Paris</a> and <a href=""~/en/offices/canada/montreal/"">Montréal</a> offices, while transactions in Anglophone and common law jurisdictions are managed out of <a href=""~/en/offices/united-kingdom/london/"">London</a>, <a href=""~/en/offices/united-arab-emirates/dubai/"">Dubai</a>, <a href=""~/en/offices/canada/toronto/"">Toronto</a> and <a href=""~/en/offices/canada/calgary/"">Calgary</a>.</p>

<p>We spend a significant amount of time on the ground in Africa. Our alliances with law firms in Kenya, Rwanda and South Africa, as well as our network of carefully selected &quot;best friend&quot; law and other professional service firms in other jurisdictions, serve as an extension of our team. This gives you access to some of the best lawyers and consultants in Africa, with the added strength and resources of an international law firm.</p>

<h2>Work highlights in Africa</h2>

<h3>Infrastructure</h3>

<ul>
	<li>Currently advising the Rwandan Ministry of Trade and Industry on the development of a series of trade logistics projects, including bonded and unbounded warehouses, logistics parks and off-dock facilities in Kenya and Tanzania.</li>
	<li>Advised TradeMark East Africa and the Kenya Ports Authority on the development of enabling legislation to support ports development through PPP structure.</li>
	<li>Worked with the IFC as lead international legal adviser to their team advising the governments of Kenya and Uganda on the joint concessioning of the two countries&#39; railway systems. The project was Euromoney&#39;s Africa Infrastructure Project of the Year, and Gowling WLG gained runner-up status in the Financial Times Innovative Lawyer Awards for our work.</li>
	<li>Advised the Government of the Central African Republic with respect to the constitution and structuring of contracts in connection with the new international airport and a special economic zone in Bangui.</li>
</ul>

<h3>Energy</h3>

<ul>
	<li>Currently advising the South African National Treasury, Department of Energy and the Development Bank of South Africa on the development of South Africa&#39;s base and mid-load IPP programme across three technologies: cogeneration, coal and most recently natural gas.</li>
	<li>Advised the EEHC and the IFC in relation to the development, design, engineering, construction, financing and maintenance of a US$2.5-billion, 2250MW CCGT power generation complex in Dairut, Egypt.</li>
	<li>Currently advising the sponsors on all financing and project aspects of a 720MW CCGT IPP in Ghana, and the same client on a 140MW IPP in Tanzania.</li>
	<li>Advised Africa Growth and Energy Solutions on the development of a 25MW solar farm in Sierra Leone, the first of its kind in the country. We&#39;re advising the same client on a project to solarise telephone masts and a series of mini-hydro facilities in Cameroon.</li>
	<li>Advised Artumas Group Inc in multi-stakeholder negotiations with the Government of Tanzania agencies, lenders and other stakeholders in respect of a fully integrated gas-to-power-to-transmission and distribution project.</li>
</ul>

<h3>Natural Resources</h3>

<ul>
	<li>Advised BNP Paribas on a $50-million borrowing base facility for Sea Dragon Energy in respect of oil and gas concessions in Egypt.</li>
	<li>Advised HSBC, Standard Chartered, Nedbank and the IFC on the $500-million financing of Petroceltic plc, which included Egyptian and Algerian assets.</li>
	<li>Advised Cove Energy Plc on its AIM IPO in connection with its farm-in to certain oil and gas assets in Mozambique and Tanzania, a related &pound;42-million fundraising and its subsequent &pound;1.2-billion takeover.</li>
	<li>Advised AIM quoted Firestone Diamonds plc on its acquisition of Kopane Diamond Developments plc with assets in Lesotho for &pound;52.7 million, and on its US$225-million debt and equity fundraising to build and commission its main treatment plant.</li>
	<li>Advised Hummingbird Resources Plc on its admission to AIM, strategic investment by the IFC, royalty financing with Anglo Pacific, acquisition of its Yanfolila gold project in Mali from Gold Fields and its project finance facility with Taurus Mining Finance.</li>
</ul>

<p>To learn more about how we can help you pursue business opportunities in Africa and beyond, please contact <a href=""~/en/people/jonathan-brufal/"">Jonathan Brufal</a>.</p>
",GWLG.Africa,header-mega-menu,NULL,NULL,NULL,~/getmedia/69962997-0da6-4312-9181-0ef2d0f12c6e/africa_desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/c1d5cdef-351a-4800-946b-b46283eb5983/africa_mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,612ac63e-b8e8-4615-beb9-be3097aed2cf,Key Contact,0,NULL,NULL,NULL
3,/Global-Reach/Australia-New-Zealand,en-GB,4CFFEC03-EB27-4EC6-9340-3217D5718903,Australia & New Zealand,Australia & New Zealand,Gowling WLG helps co-ordinate legal services for clients who are pursuing business opportunities in Australia and New Zealand. We also work with clients who are looking to do business outside of the region.,~/getmedia/3d8b2472-8e1a-44f7-9631-29d9b030cb09/australia_desktop.jpg.xml?width=1400&height=540&ext=.jpg,NULL,"<p>Gowling WLG helps co-ordinate legal services for clients who are pursuing business opportunities in Australia and New Zealand. We also work with clients who are looking to do business outside of the region.</p>

<p>From Perth to Sydney, Auckland to Christchurch, members of our team are frequent visitors to Australia and New Zealand, and hold close ties with the countries&#39; leading law firms and other key service providers. Our outbound role is to connect international clients to the local firms that are best-suited to assist in their transactions and projects across a range of key sectors - including technology and life sciences, natural resources, energy, financial services, and manufacturing.</p>

<p>We also apply our extensive experience to assist clients headquartered in Australia and New Zealand with establishing their business operations internationally - whether through an acquisition or by establishing a greenfield operation - and taking care of their ongoing legal needs.</p>

<p>Gowling WLG also has a long history of advising publicly-traded Australian mining companies in Canada and the UK, and has advised on numerous M&amp;A transactions involving Australian natural resources companies. Our other key inbound experience includes:</p>

<ul>
	<li>Working with several leading Australian infrastructure companies on the procurement and execution of their projects in Canada</li>
	<li>Assisting Australian investors with their acquisition of a Canadian casino operator</li>
	<li>Representing a major Australian casino operator in relation to the protection and enforcement of Intellectual Property (IP) rights in Europe</li>
	<li>Assisting in the merger of two Canadian and Australian companies to form a global leader in engineering, environmental consulting, architecture and construction services consultancy</li>
	<li>Assisting Australian and New Zealand retailers and franchises in establishing their operations in several key areas around the world</li>
</ul>

<p>Throughout our service regions, we&#39;ve represented leading Australia- and New Zealand-based technology and life science companies in the protection of their intellectual property. This experience includes:</p>

<ul>
	<li>Filing and prosecuting trademarks and designs for Australian and New Zealand clients in China</li>
	<li>Organising global protection for an innovative motor technology from New Zealand</li>
	<li>Acting for many leading Australia- and New Zealand-based companies with respect to the protection of their <abbr title=""Intellectual Property"">IP</abbr> rights in Canada</li>
</ul>

<p>To learn more about how we can help your business succeed, please contact <a href=""~/en/people/gordon-harris/"">Gordon Harris</a>.</p>
",GWLG.AustraliaNewZealand,header-mega-menu,NULL,NULL,NULL,~/getmedia/3d8b2472-8e1a-44f7-9631-29d9b030cb09/australia_desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/7f54cb79-7885-43d6-ad07-fa759b6c4bb3/australia_mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,6767b2fc-7817-42ae-a54e-05595fe6c1cd;46b21a2f-6764-47aa-a5e4-93f7e0959916,NULL,0,NULL,NULL,NULL
4,/Global-Reach/Austria,en-GB,03D82EBF-3E23-4BCC-B13C-F670A95C4B31,Austria,Austria,Austria is one of the most prosperous EU Member States and offers its investors ideal conditions - and Gowling WLG enjoys close working relationships with a number of Austrian corporates and law firms.,~/getmedia/11b2692f-1074-49e6-97c3-c37e6d328274/austria_desktop.jpg.xml?width=1400&height=540&ext=.jpg,NULL,"<p>Austria is one of the most prosperous EU Member States and offers its investors ideal conditions - and Gowling WLG enjoys close working relationships with a number of Austrian corporates and law firms.</p>

<p>Industries such as food and luxury commodities, mechanical engineering and steel construction, chemicals, and vehicle manufacturing characterise the Austrian economic sectors as much as the service sector does.</p>

<p>Gowling WLG assists its international clients in their dealings in Austria, inter alia in selecting the most suitable legal advisers. Our knowledge of the legal market and the leading law firms will allow us to get you the advice needed.</p>

<p>We are also counsel to Austrian clients in many of the jurisdictions we cover.</p>

<p>Members of our Austria Desk regularly visit clients and law firms in Vienna and other major cities.</p>

<p>Our team includes native, and other, fluent German speakers.</p>

<p>To learn more about how we can help your business succeed, please contact <a href=""~/en/people/andreas-woelfle/"">Andreas Woelfle</a> or <a href=""~/en/people/jennifer-morton/"">Jennifer Morton</a>.</p>
",GWLG.Austria,header-mega-menu,NULL,NULL,NULL,~/getmedia/11b2692f-1074-49e6-97c3-c37e6d328274/austria_desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/d29909c2-a45a-4b96-8b0c-a68cc6899ff9/austria_mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,199becac-9a85-4082-aec2-fd0969f7da84;5f99910a-0f55-443d-803f-ad13952b4946,NULL,0,NULL,NULL,NULL
5,/Global-Reach/Baltic-States,en-GB,496D0841-AA63-45DB-A32D-191A0035A4FE,Baltic States,Baltic States,"In the thriving markets of the Baltic States - Estonia, Latvia and Lithuania, you need advice from lawyers who understand the territory.",~/getmedia/10576e3a-7a80-4c81-b6b8-6c12a117482a/baltic-states_desktop.jpg.xml?width=1400&height=540&ext=.jpg,NULL,"<p>In the thriving markets of the Baltic States, you need advice from lawyers who understand the territory. Gowling WLG has been active in this important region for a number of years.</p>

<p>The Baltic States - Estonia, Latvia and Lithuania - are small countries with a great deal to offer overseas businesses. According to The World Bank&#39;s Ease of Doing Business Index, all three are among the top five countries in the Eastern Europe and Central Asia region. The Baltic States&#39; favourable business climate has made them an attractive investment and business location for numerous overseas companies, with some of the most liberal trade regimes in the world.</p>

<p>The role of Gowling WLG&#39;s Baltic team is two-fold. Outbound, our role is to assist clients from outside the Baltic area in selecting the most suitable advisers in the region to help them with their business in the Baltics. Our comprehensive knowledge of the region&#39;s law firms and legal market will ensure you get the advice you need.</p>

<p>Our inbound role is to apply our extensive experience in assisting clients headquartered in the Baltic States with establishing their business operations outside the region - whether through acquisition or by establishing a greenfield operation - and looking after their ongoing legal needs.</p>

<p>We can also assist you in protecting and enforcing your IP rights in the Baltic countries, including the filing of patents and trademarks, co-ordinating oppositions and litigation, and conducting anti-counterfeiting work.</p>

<p>Members of our Baltic team regularly visit clients and other contacts in Estonia, Latvia and Lithuania. When we make these visits, we take a hands-on approach, and often tour our clients&#39; facilities and meet with management to improve our understanding of the challenges they face. We see these visits as essential to both learning what our clients&#39; priorities are, and to tailoring our legal advice to help them meet those objectives.</p>

<p>Our team includes a fluent speaker of Estonian. To learn more about how we can help you succeed, please contact <a href=""~/en/people/julian-henwood/"">Julian Henwood</a>.</p>
",GWLG.BalticStates,header-mega-menu,NULL,NULL,NULL,~/getmedia/10576e3a-7a80-4c81-b6b8-6c12a117482a/baltic-states_desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/c148d22f-37ee-4d4b-acb1-8b8053e5cefc/baltic-states_mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,0368d60b-27da-4355-a0a7-6b9b0cc01c28,Key contact,0,NULL,NULL,NULL
6,/Global-Reach/Belgium,en-GB,A56F1189-2246-424A-A05F-9B3FD209EC74,Belgium,Belgium,"Brussels is at the centre of decision-making in Europe. For multinational businesses, it's therefore crucial to have advisers based in Belgium who understand how Europe works, know the direction of future legislation and can provide access to key decision-makers.",~/getmedia/038e80ec-9a15-4ead-baaa-57aad107cb69/belgium_desktop.jpg.xml?width=1400&height=540&ext=.jpg,NULL,"<p>Brussels is at the centre of decision-making in Europe. For multinational businesses, it&#39;s therefore crucial to have advisers based in Belgium who understand how Europe works, know the direction of future legislation and can provide access to key decision-makers.</p>

<p>Gowling WLG offers you both expertise in the law and the ability to plug into networks of contacts within the European institutions.</p>

<p>Our experience enables us to provide you with strategic advice on EU-level activities, including EU competition law. In particular, we actively contribute to a number of significant organisations in Brussels, which function to shape and evolve EU competition policy and legislative reform.</p>

<p>Our award-winning competition &amp; EU team advises on:</p>

<ul class=""two-columns"">
	<li>Commercial agreements, practices and settlements</li>
	<li>Competition compliance</li>
	<li>EU regulation</li>
	<li>Public procurement and State aid</li>
	<li>Competition litigation, including actions for damages</li>
	<li>Merger control in the UK, EU and Rest of World</li>
	<li>Regulatory investigations, including &#39;dawn raids&#39;</li>
</ul>

<p>Working with domestic and multi-national businesses, we provide clear, solutions-focused legal and policy advice. To learn more, please contact <a href=""~/en/people/bernardine-adkins/"">Bernardine Adkins</a>.</p>
",GWLG.Belgium,header-mega-menu,NULL,ea97af58-91c6-4d94-b812-dcaaab2a4fcc,NULL,~/getmedia/038e80ec-9a15-4ead-baaa-57aad107cb69/belgium_desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/86e1d885-20d8-4850-b84f-2fae2d911a08/belgium_mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,NULL,NULL,0,NULL,NULL,NULL
7,/Global-Reach/Canada,en-GB,5FA00627-155B-47C5-A583-EB62744CA703,Canada,Canada,"Boasting an exceptional wealth of natural resources, a sound financial system and world-class infrastructure, Canada is one of the world's premier locations for business investment.",~/getmedia/2ffaee02-ec02-478d-8805-41eb9e375342/canada_desktop.jpg.xml?width=1400&height=540&ext=.jpg,NULL,"<p>Boasting an exceptional wealth of natural resources, a sound financial system and world-class infrastructure, Canada is one of the world&#39;s premier locations for business investment. Its generous research and development incentives, low corporate tax rates, and easy access to major US markets make it a top destination for foreign companies seeking a foothold in North America.</p>

<p>As a global, sector-focused law firm, Gowling WLG can help you navigate the complexities of establishing and conducting business in Canada. With expertise that covers a wide range of services and sectors, our team understands the distinct challenges you face - and is uniquely positioned to help you succeed.</p>

<p>Our Canadian team is made up of more than 700 legal professionals in seven cities across the country. <a href=""~/en/services/"">Learn more about our expertise</a>.</p>

<p><a class=""c-button-white"" href=""~/en/footer/updates/subscribe-canada/"">Sign up to receive our updates on the latest legal trends and developments that matter most to you</a></p>
",GWLG.Canada,header-mega-menu,NULL,8bf72d3f-e216-4fdd-b0be-52d41a644293;99ff96bc-6649-4ada-8d31-93d1e5409024;cb61c4c1-d0cf-4aa1-ba0b-5dab5dc99393;4eebbc16-5ec7-4186-b6bb-a7f0cf2f7ca4;b2dc4461-dc66-4f96-9ae6-32bc2b14259d;afd10be7-206c-4f2d-9094-257d6b5e7bcc;5cf9e103-2a23-401f-8d01-81abc3653158,NULL,~/getmedia/2ffaee02-ec02-478d-8805-41eb9e375342/canada_desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/4d899e55-34f3-4c31-8843-0f14e27034c3/canada_mobile.jpg.xml?width=500&height=550&ext=.jpg,0,has-bg-righ,NULL,NULL,NULL,NULL,0,NULL,NULL,NULL
8,/Global-Reach/Central-and-Eastern-Europe,en-GB,697C3ED9-D513-4F9E-8B46-06766E9AEB67,Central and Eastern Europe,Central and Eastern Europe,Central and Eastern Europe (CEE) is a large and diverse region with many exciting business opportunities - and is a key area of focus for Gowling WLG.,~/getmedia/2b6f877b-0edb-466d-afcc-278eb59c1723/central-and-eastern-europe_desktop.jpg.xml?width=1400&height=540&ext=.jpg,NULL,"<p>Central and Eastern Europe (CEE) is a large and diverse region with many exciting business opportunities - and is a key area of focus for Gowling WLG. We regularly act for clients in every <abbr title=""Central and Eastern Europe"">CEE</abbr> country, advising on English law issues and working closely with local law firms with whom we&#39;ve developed strong relationships.</p>

<p>The role of the Gowling WLG <abbr title=""Central and Eastern Europe"">CEE</abbr> team is twofold. Outbound, our role is to assist our clients from outside of the <abbr title=""Central and Eastern Europe"">CEE</abbr> region in selecting the most suitable legal advisers in each relevant country to help them with their <abbr title=""Central and Eastern Europe"">CEE</abbr> business. Our comprehensive knowledge of the region&#39;s law firms and legal market will ensure you get the advice you need.</p>

<p>Inbound, our role is to apply our extensive experience to assist clients operating in the <abbr title=""Central and Eastern Europe"">CEE</abbr> region with English legal advice and with establishing their business operations internationally - whether through an acquisition or by establishing a greenfield operation - and looking after our clients&#39; ongoing legal needs.</p>

<p>Members of our <abbr title=""Central and Eastern Europe"">CEE</abbr> team regularly visit their clients and contacts in major business centres of the <abbr title=""Central and Eastern Europe"">CEE</abbr> region, including annual trips to Warsaw, Prague, Vienna, Budapest, Bucharest and Sofia.</p>

<p>When we make these visits, we take a hands-on approach, and often tour our clients&#39; facilities and meet with management to improve our understanding of the challenges they face. We see these visits as essential to both learning what our clients&#39; priorities are, and to tailoring our legal advice to help our clients meet those objectives.</p>

<p>Although English is commonly spoken throughout the <abbr title=""Central and Eastern Europe"">CEE</abbr> region, our team includes fluent speakers of Polish, Hungarian, French and German. This means you&#39;ll always receive seamless service, no matter what language you - or your business partners - speak.</p>

<p>To learn more about how we can help your business succeed, please contact <a href=""~/en/people/tom-price/"">Tom Price</a> or <a href=""~/en/people/rafal-wrzesien/"">Rafal Wrzesien</a>.</p>
",GWLG.CentralEasternEurope,header-mega-menu,NULL,NULL,NULL,~/getmedia/2b6f877b-0edb-466d-afcc-278eb59c1723/central-and-eastern-europe_desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/36beba72-5f4b-416a-81ee-77ddba43521a/central-and-eastern-europe_mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,d860ac5f-06d9-4ddb-ab3a-fe70cc71745e;64d72901-d015-4cec-935d-24439a03ab07;cba60c6d-eb6d-4fa1-b4b4-a4b8c0d0c080,NULL,0,NULL,NULL,NULL
9,/Global-Reach/Channel-Islands,en-GB,8BECE49C-B191-45E3-8323-ED167A557775,Channel Islands,Channel Islands,Our Channel Islands team helps co-ordinate legal services for clients who are pursuing business opportunities in the Channel Islands. ,~/getmedia/d1f24dcd-dd15-4a48-9481-2d614a29acc9/channel-islands_desktop.jpg.xml?width=1400&height=540&ext=.jpg,NULL,"<p>Our Channel Islands team helps co-ordinate legal services for clients who are pursuing business opportunities in the Channel Islands. We also work with Channel Islands clients who are looking to do business internationally.</p>

<p>For clients based outside the Channel Islands, we can recommend the most suitable legal advisers to act on Jersey or Guernsey matters. We have strong links with a range of firms that we know well.</p>

<p>For Channel Islands clients, we offer a multi-disciplinary team covering the full range of legal services, including litigation, real estate and investment funds. We have significant experience in the financial services sector and boast an award-winning trusts litigation team.</p>

<h2>Experience</h2>

<p>Our highlights include:</p>

<ul>
	<li>Acting for the Federal Republic of Brazil in relation to the successful recovery of assets stemming from alleged corruption of Paulo Maluf, the former mayor of Sao Paulo, including in respect of proceedings in the Royal Court of Jersey and the dismissal of the Defendants&#39; appeal to the Privy Council.</li>
	<li>Advising Mariana Resources (a Guernsey company) on its $175 million acquisition by Sandstorm Gold.</li>
	<li>Acting for a consortium of high-net worth individuals to pursue claims to recover assets in connection with a &pound;100 million property fraud scheme. We obtained freezing orders in Jersey and elsewhere and made substantial recoveries.</li>
	<li>Acting for a Jersey-based professional services client defending multi-million pound proceedings in the English High Court.</li>
	<li>Advising Guernsey-based CEIBA Investment on its listing on the specialist fund segment of the main market for listed securities of the London Stock Exchange.</li>
	<li>Advising in relation to the Z Trust litigation.</li>
</ul>

<p>Members of the team visit the firm&#39;s clients and contacts in Jersey and Guernsey several times a year.</p>

<p>To learn more about how we can help, please contact <a href=""~/en/people/catherine-naylor/"">Catherine Naylor</a> or <a href=""~/en/people/james-sidwell/"">James Sidwell</a>.</p>
",GWLG.ChannelIslands,header-mega-menu,NULL,NULL,NULL,~/getmedia/d1f24dcd-dd15-4a48-9481-2d614a29acc9/channel-islands_desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/492000b4-caef-4780-a0f8-3aa4456b2657/channel-islands_mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,3110a84a-f993-4c98-b2f3-54f983a40915;18c972b4-6383-49da-8645-30a3b18621a5,NULL,0,NULL,NULL,NULL
10,/Global-Reach/China,en-GB,D894B34A-A633-49AD-84BE-F68E423E065D,China,China,"Whether you're a China-based company that needs assistance on offshore transactions, or an entity doing business in China, Gowling WLG can help you succeed.",~/getmedia/93d08936-4165-4bea-9d3d-27933b816487/china_desktop.jpg.xml?width=1400&height=540&ext=.jpg,NULL,"<p>China has continued to grow at a dynamic and rapid pace, steadily expanding its influence in key markets and economies around the world. It&#39;s a country that offers many opportunities to both inward and outward investors - but how do you make the most of these opportunities?</p>

<p>Engaging a law firm that understands these opportunities is a big step in the right direction. Whether you&#39;re a China-based company that needs assistance on offshore transactions, or an entity doing business in China, Gowling WLG can help you succeed.</p>

<p>With a Representative Office in Guangzhou and Corporate Representative Offices in Beijing and Shanghai - as well as an established market presence and connections in <a href=""~/en/global-reach/ch/hong-kong/"">Hong Kong SAR</a> - Gowling WLG offers a crucial combination of legal expertise and cultural awareness through our dedicated China practice team, with members who:</p>

<ul>
	<li>Hold expertise in various industries, including technology, advanced manufacturing, automotive, aerospace, energy, natural resources, life sciences, finance and real estate</li>
	<li>Have extensive experience in and knowledge of Chinese law and customs</li>
	<li>Are fluent in English, Mandarin, Cantonese and other languages</li>
</ul>

<p>Our connection with China is further enhanced by the successful and longstanding relationships we hold with many of China&#39;s top corporations, government entities, professional service firms and associations that promote cross-border trade and investment.</p>

<h2>From China to the world</h2>

<p>We offer our China-based clients assistance on outbound legal and commercial matters through our global network of offices, which have proven experience in advising Chinese companies on their investments and transactions in Canada, Europe, the Middle East and elsewhere.</p>

<p>Our lawyers regularly advise Chinese clients in the following areas:</p>

<ul class=""two-columns"">
	<li>Mergers &amp; acquisitions</li>
	<li>Corporate finance &amp; securities</li>
	<li>Company incorporation &amp; corporate</li>
	<li>Secretarial services</li>
	<li>Commercial transactions</li>
	<li>Tax</li>
	<li>Real estate</li>
	<li>Private equity &amp; venture capital</li>
	<li>Employment &amp; labour</li>
	<li>Regulatory</li>
	<li>Intellectual property</li>
</ul>

<h2>Doing business in China</h2>

<p>Whether you&#39;re an SME about to enter the market or a multinational corporation with existing operations in the country, Gowling WLG offers assistance to clients with business interests in mainland China.</p>

<p>Our China team speaks English as well as Mandarin, Cantonese and French, and holds experience in providing strategic, in-country advice in areas that include:</p>

<ul class=""two-columns"">
	<li>Intellectual property (IP) filing</li>
	<li>Prosecution, enforcement &amp; litigation</li>
	<li>Company incorporation &amp; corporate</li>
	<li>Secretarial services</li>
	<li>Mergers &amp; acquisitions</li>
	<li>Commercial transactions</li>
	<li>Regulatory</li>
	<li>Employment &amp; labour</li>
</ul>

<p>Our trusted and reputable network of local Chinese law firms, private investigators and other specialised agents help us ensure the best and most efficient results for our clients, wherever the issue may be within mainland China.</p>

<h2>Intellectual property services in China</h2>

<p>China is home to the world&#39;s fastest growing market for <abbr title=""intellectual property"">IP</abbr> registrations, with over one million new patent applications and over seven million new trademark applications filed in 2018. For businesses looking to mitigate risk and realize new opportunities, the protection of <abbr title=""intellectual property"">IP</abbr> assets in China should be an essential part of any strategy.</p>

<p>That&#39;s why Gowling WLG is pleased to offer clients an advanced suite of <abbr title=""intellectual property"">IP</abbr> services from its offices in Beijing and Guangzhou covering filing and prosecution, licensing and enforcement. Our internationally acclaimed <abbr title=""intellectual property"">IP</abbr> team has the knowledge and resources needed to support you throughout the entire lifecycle of your <abbr title=""intellectual property"">IP</abbr> portfolio.</p>

<h2>Learn more</h2>

<p>No matter what your business dealings are with China or what your needs are when venturing outside of China, you&#39;ll receive the same high level of service, value and expertise from Gowling WLG.</p>

<p>To learn how we can help you succeed, please <a href=""~/en/people/?page=1&amp;locations=GWLG.China"" target=""_blank"">contact any member of our China team</a>.</p>
",GWLG.China,header-mega-menu,NULL,34ab8a48-a846-42c3-a744-5d9a204337b9;56348bc9-63bc-42ff-8507-e285eb9a41eb;5877b7e5-94e1-47fc-814e-aff2cff43806,NULL,~/getmedia/93d08936-4165-4bea-9d3d-27933b816487/china_desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/f269e875-73e7-4810-9250-1b4435bc2d38/china_mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,bb6e4e98-2d11-42a4-a949-3c3e7a8225f0;9a7a979c-500a-45ae-b4fd-1fed3f6bd376;8ad0e3f6-68e6-45b9-a509-c5811ebc77af,NULL,0,NULL,NULL,NULL
11,/Global-Reach/Cuba,en-GB,8CEE5C73-94D5-4BDE-B496-B841619185F6,Cuba,Cuba,"Cuba's current trade climate offers international companies a unique opportunity to strategically position themselves in an emerging economy. At Gowling WLG, we want to help you take full advantage of the trade and investment prospects available in this growing market.",~/getmedia/ef46f4d6-5b77-4975-b15e-619f3eacc71f/cuba_desktop.jpg.xml?width=1400&height=540&ext=.jpg,NULL,"<p>Cuba&#39;s current trade climate offers international companies a unique opportunity to strategically position themselves in an emerging economy. At Gowling WLG, we want to help you take full advantage of the trade and investment prospects available in this growing market.</p>

<p>Our firm is pleased to offer&nbsp;extensive strategic advisory services in Cuba, with a focus on helping you identify viable commercial opportunities across a range of sectors,&nbsp;including energy, infrastructure, real estate, tourism and telecommunications. While we don&#39;t practice Cuban law, you&#39;ll benefit from the collective experience&nbsp;of lawyers and other professionals with in-depth business and transactional experience in Cuba and throughout Latin America.&nbsp;</p>

<p>Our global Cuba team is based in offices across Canada, the U.K., Europe, Asia and the Middle East, and includes Spanish-speaking lawyers with broad civil law knowledge. These practitioners have a strong track record of&nbsp;working with Cuban local counsel, monitoring and co-ordinating&nbsp;projects and work product in Cuba, and overseeing the integration of this work with Canadian, English and other international legal considerations and standards.</p>

<p>In Cuba, our network is far-reaching: we can connect you with all levels of Cuban government, and introduce you to key members of the Cuban business private sector. We also maintain close relationships with numerous Cuban law firms, and are able to make the necessary arrangements to facilitate the seamless delivery of legal services.</p>

<p>Gowling WLG&#39;s strategic advisory services to international clients in Cuba include the following:</p>

<ul>
	<li>Identifying and exploring investment and trade opportunities</li>
	<li>Managing projects and files in a venture&#39;s establishment phase, including working with Cuban counsel and government representatives</li>
	<li>Delivering general strategic advice on the viability of business proposals based on our extensive knowledge of the Cuban political and economic context</li>
	<li>Offering general business advice on Cuban investment and import/export processes</li>
	<li>Sourcing/facilitating Spanish-English translations and simultaneous translation</li>
	<li>Arranging introductions to local service advisers and parties</li>
	<li><l>Setting up strategic meetings with Cuban partners and government officials</l></li>
</ul>

<p>We also deliver international trade and regulatory advice, legal transactional counsel, and support in project management and development, among other areas. Working together with our colleagues in the firm&#39;s Latin America group, as well as a host of relevant sector and service areas, we&#39;re able to assist you with any matters or transactions you may wish to conduct in Cuba.</p>

<p>Through our Cuba&nbsp;legal and strategic advisory team, Gowling WLG can help you succeed in Cuba&#39;s emerging market. To learn more, please contact <a href=""~/en/people/france-tenaille/"">France Tenaille</a>.</p>

<h2>Insights and media coverage</h2>

<ul>
	<li>Insight: <em>On-demand webinar</em> &ndash;&nbsp;<a href=""~/en/insights-resources/on-demand-webinars/2019/cuba-policy-under-trump/"" target=""_blank"">Cuba policy under Trump: Extraterritorial implications for global business</a></li>
	<li>Insight: <a href=""~/en/insights-resources/articles/2019/cuba-update-helms-burton-title-iii-activated/"" target=""_blank"">Cuba update: Helms Burton Title III activated</a></li>
	<li>Insight: <a href=""~/en/insights-resources/articles/2016/cuba-post-castro-what-happens-now/"">Cuba, post-Castro: What happens now?</a></li>
	<li>Insight: <a href=""~/en/insights-resources/articles/2016/weakened-u-s-embargo-against-cuba-background-for/"">Weakened U.S. embargo against Cuba: Background for Canadian businesses</a></li>
	<li>Media: <a href=""http://www.theglobeandmail.com/report-on-business/industry-news/the-law-page/gowlings-enters-thawing-cuban-market/article23582794/"" target=""_blank"">Gowlings enters thawing Cuba market</a> <em>(The Globe and Mail)</em></li>
</ul>
",GWLG.Cuba,header-mega-menu,NULL,NULL,NULL,~/getmedia/ef46f4d6-5b77-4975-b15e-619f3eacc71f/cuba_desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/db98226d-a877-4bc7-973b-15ae996f8625/cuba_mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,d78233a4-45b3-42d2-97bc-0db06ee57cd2,NULL,0,NULL,NULL,NULL
12,/Global-Reach/Cyprus,en-GB,F46F146C-3552-491F-A18C-EFFE0051C941,Cyprus,Cyprus,Gowling WLG helps co-ordinate legal services for clients who are pursuing business opportunities in Cyprus. We also work with Cyprus-based clients who are looking to do business outside of the region.,~/getmedia/f174188d-5e23-45f6-ae57-e02722c8778c/cyprus_desktop.jpg.xml?width=1400&height=540&ext=.jpg,NULL,"<p>Gowling WLG helps co-ordinate legal services for clients who are pursuing business opportunities in Cyprus. We also work with Cyprus-based clients who are looking to do business outside of the region.</p>

<p>To learn more about how we can help you succeed, please contact <a href=""~/en/people/daniel-lacelle/"">Daniel Lacelle</a> or <a href=""~/en/people/andy-stylianou/"">Andy Stylianou</a>.</p>
",GWLG.Cyprus,header-mega-menu,NULL,NULL,NULL,~/getmedia/f174188d-5e23-45f6-ae57-e02722c8778c/cyprus_desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/119a0d78-9ba7-4396-b04c-d0991867107c/cyprus_mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,NULL,NULL,0,NULL,NULL,NULL
13,/Global-Reach/France,en-GB,0798B70E-E3C7-45BE-812B-47459CBCDE4A,France,France,"Our legal advisers in France know the culture and understand the commerce, providing advice on the unique laws and ways of doing business.",~/getmedia/df7e259e-dedc-4c2a-a7c3-9f513cc39568/france_desktop.jpg.xml?width=1400&height=540&ext=.jpg,NULL,"<p>France is one of the largest economies in Europe and plays a key role in the world. It is a major market and is Europe&#39;s leading destination for foreign direct investment. With a solid knowledge of the French and European markets and business sectors, our lawyers build on their in-depth technical expertise to assist their clients with their day-to-day issues and development projects. They provide pragmatic advice and tailor-made legal solutions for French and international companies, large and medium-sized businesses, start-ups and banks, investment funds and public institutions.</p>

<p>Our teams provide advice and litigation services in the following areas:</p>

<ul>
	<li><a href=""~/en/services/banking-finance/#france"">Banking &amp; Finance</a></li>
	<li><a href=""~/en/services/commercial/#overview"">Commercial Law</a></li>
	<li><a href=""~/en/services/commercial-litigation/#overview"">Commercial Litigation</a></li>
	<li><a href=""~/en/services/corporate/#overview"">Corporate</a> / <a href=""~/en/services/mergers-acquisitions/#france"">Mergers &amp; Acquisitions</a> / <a href=""~/en/services/private-equity/"">Private Equity</a></li>
	<li><a href=""~/en/services/employment-labour-equalities/#france"">Employment</a></li>
	<li><a href=""~/en/services/intellectual-property-law/#france"">Intellectual Property</a></li>
	<li>Public &amp; PPP</li>
	<li><a href=""~/en/services/real-estate/#france"">Real Estate &amp; Construction</a></li>
	<li>Restructuring</li>
	<li><a href=""~/en/services/tax/#france"">Tax</a></li>
</ul>

<p>Our lawyers are fluent in English and are fully integrated into our international network, allowing them to work on the most complex cross-border transactions and to have the breadth of capability to assist their clients on all their matters.</p>

<p>To learn more, please contact <a href=""~/en/people/celine-bey/"">Céline Bey</a> or <a href=""~/en/people/patrick-mousset/"">Patrick Mousset</a>.</p>
",GWLG.France,header-mega-menu,NULL,c34b7263-2bcc-4186-8d40-42ba73a44a76,NULL,~/getmedia/df7e259e-dedc-4c2a-a7c3-9f513cc39568/france_desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/be29d31b-12e3-4a43-b343-388a6bc6cfb5/france_mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,ad4cc2a0-5825-4d92-930d-64226a7659b3;f2155dcb-a964-4080-b470-ef41ab438fbf,NULL,0,NULL,NULL,NULL
14,/Global-Reach/Germany,en-GB,61161A40-95D2-4D76-83FC-484472E3F767,Germany,Germany,"We advise on how to achieve the best results when working in Germany, understanding how business is conducted and with an eye for the latest opportunities.",~/getmedia/f0fc89de-5bf9-4e31-9962-49453baa2086/germany_desktop.jpg.xml?width=1400&height=540&ext=.jpg,NULL,"<p>As the most powerful and important economy in Europe, Germany has been the home of successful enterprises for decades. Our team advises you on how to achieve the best results when working in Germany, with its finger on the pulse of how business is conducted and an eye for the latest opportunities.</p>

<p>We offer services in</p>

<ul>
	<li>Advertising and Product Regulatory</li>
	<li>Commercial</li>
	<li>Corporate, M&amp;A and Capital Markets</li>
	<li>Intellectual Property</li>
	<li>IT and data protection</li>
	<li>Litigation &amp; Dispute Resolution</li>
	<li>Projects</li>
</ul>

<p>and are able to provide service to our clients in all sectors, including</p>

<ul>
	<li>Automotive</li>
	<li>Aviation, Aerospace &amp; Defence</li>
	<li>Construction &amp; Engineering</li>
	<li>Energy</li>
	<li>Food &amp; Beverage</li>
	<li>Health &amp; Care</li>
	<li>Life Sciences</li>
	<li>Retail and Leisure</li>
	<li>Tech</li>
</ul>

<p>We cooperate seamlessly with our colleagues in other jurisdictions and provide you with all the services you might need: Whether a transaction involves cross-border contracts, IP issues, data protection or litigation, we will apply deal-specific knowledge to help you achieve your goals.</p>

<p>Fluent in English, French, Spanish and Italian, our German lawyers get to the core of your issues quickly, whatever the jurisdiction and can interpret decisions arising from the European and international courts as they happen. To learn more, please contact&nbsp;<a href=""~/en/people/andreas-woelfle/"">Andreas Woelfle</a>.</p>
",GWLG.Germany,header-mega-menu,NULL,a1545ae9-a498-4b1d-b5e5-a71093fb7f2b;390d3721-96d1-4af7-a8d3-f3db8b09aeb6,NULL,~/getmedia/f0fc89de-5bf9-4e31-9962-49453baa2086/germany_desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/ea6cae34-5c0e-483b-9394-f159b0866450/germany_mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,199becac-9a85-4082-aec2-fd0969f7da84;44e4aa31-07d9-4e3f-a88e-b3398f315e4b,NULL,0,NULL,NULL,NULL
15,/Global-Reach/India,en-GB,6A6F8D73-8AEF-4F01-B628-786366F79AA5,India,India,"Gowling WLG's India team has a long and successful track record in advising some of India's largest companies - and most successful high net worth individuals - on their international activities. This track record also extends to assisting businesses from across Europe, the Middle East and North America with their India-related operations.",~/getmedia/8657ae24-33ee-470e-ba7f-87aca6b8ffc0/india_desktop.jpg.xml?width=1400&height=540&ext=.jpg,NULL,"<p>Gowling WLG&#39;s India team has a long and successful track record in advising some of India&#39;s largest companies - and most successful high net worth individuals - on their international activities. This track record also extends to assisting businesses from across Europe, the Middle East and North America with their India-related operations.</p>

<p>Our position as one of the world&#39;s top advisers to Indian businesses has been recognised by the <em>Indian Business Law Journal</em>, which described Gowling WLG as a leading international law firm for India-related work.</p>

<p>Our full-service team is drawn from across our global offices and provides coverage in many of the jurisdictions considered key for Indian businesses, such as the UK, Germany, Dubai, Singapore, China, Canada and France. The team not only consists of lawyers providing a complete range of corporate and private capital legal and tax services, but also includes specialists in the sectors in which Indian companies have been most active, namely advanced engineering, tech, life sciences, energy, resources and hospitality and retail.</p>

<p>In particular, Gowling WLG&#39;s India team has significant experience in advising Indian corporates and financial institutions on public and private M&amp;A, equity capital markets (AIM and Main Market IPOs and secondary fundraisings), joint ventures and collaborations, banking and finance, IP/IT and commercial transactions and real estate transactions. We&#39;re recognised as the number one firm for AIM IPOs (AIM Advisers Rankings guide 2016), and have been involved in over 40% of the AIM IPOs of Indian trading companies - and continue to act for a number of those companies. We also work closely with our firm&#39;s leading private capital team to offer Indian promoters and their families with a broad range of private client services.</p>

<p>Members of our India team regularly travel to India, making and maintaining connections with local law firms and advisers, business leaders, financial institutions and government and keeping up-to-date with the latest developments in the Indian business landscape. We use this knowledge to advise our Indian clients on the latest opportunities in their global markets and our international clients on how they can best participate in India&#39;s growth story.</p>

<p>Spending such a significant amount of time on the ground and working on India-related matters means that our relationships with Indian professional advisers are carefully selected, such that they serve as an extension of our team. In working with us, you&#39;ll have access to some of the best advisers in India - combined with our added resources and over 20 years&#39; experience of doing business there.</p>

<p>Members of our group also maintain strong connections with the Indian business community through ongoing local outreach and participation in various trade associations. Our immersion in the Indo-Canadian and Indo-UK business communities has enabled us to gain a multi-faceted understanding of India&#39;s cultural and commercial environment.</p>

<p>We know what Indian clients want and expect from their overseas counsel: great service, top-tier, city-quality advice and increased cost certainty with people who have the skills, experience and connections to help international businesses successfully enter a territory where local knowledge and expertise is essential. Gowling WLG delivers on all counts.</p>

<h2>Experience</h2>

<p>Our client service highlights include advising:</p>

<ul>
	<li>State Bank of&nbsp;India on a variety of banking matters</li>
	<li>Mortice Limited, an AIM-listed security and facilities management company, on its acquisition of UK-based Office &amp; General Group Limited</li>
	<li>Jaguar Land Rover on a broad spectrum of legal matters</li>
	<li>A leading UK travel IT company on its acquisition of a software testing operation in India</li>
	<li>Greenko Group plc on the $250-million sale of its Mauritius-registered operating subsidiary, Greenko Mauritius</li>
	<li>Eicher Motors on its acquisition of Harris Products Ltd, a market-leading motorcycle design and build business</li>
	<li>Mahindra on cross-border M&amp;A</li>
	<li>Tube Investments of India Limited, part of the Murugappa Group, on its acquisition of Sedis</li>
	<li>Delta Magnets, a Mumbai-based magnet manufacturer, on its acquisition of MMG Magdev Limited and MMG India Private limited - two subsidiaries of TT Electronics plc</li>
	<li>Philips Electronics in its attempt to acquire a Bombay Stock Exchange-listed automotive parts manufacturer</li>
	<li>JSW Energy Limited on its acquisition of CIC Energy Corporation, a listed Canadian company</li>
	<li>Patni Computer Systems Limited on its $200-million partnership agreement with the UK FTSE phone provider The Carphone Warehouse</li>
	<li>Lalit Hotel Group on cross border M&amp;A</li>
	<li>Essar on its UK commercial contracts</li>
	<li>Saksoft Solutions Limited in relation to its corporate activities in Germany and the UK</li>
</ul>

<p>To learn more about how we can help you either expand your business or interests outside of India or pursue your commercial interests in India, please contact <a href=""https://gowlingwlg.com/en/people/anurag-ragi-singh/"" target=""_blank"">Anurag (Ragi) Singh</a>&nbsp;or&nbsp;<a href=""https://gowlingwlg.com/en/people/sunil-kakkad/"" target=""_blank"">Sunil Kakkad</a>.</p>
",GWLG.India,header-mega-menu,NULL,NULL,NULL,~/getmedia/8657ae24-33ee-470e-ba7f-87aca6b8ffc0/india_desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/f35fdb59-74d1-47fd-9e43-e5f73930beb0/india_mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,04b8437f-d586-44f4-be8e-17baff70c905;e296f021-59e1-410e-a0ad-0626e49ce506;01bea73f-9609-4ce3-ab93-b3ea47687e39,NULL,0,NULL,NULL,NULL
16,/Global-Reach/Ireland,en-GB,F12B88E6-9BEE-480A-BED6-060BB0BA4FC1,Ireland,Ireland,We help co-ordinate legal services for clients who are pursuing business opportunities in both Northern and Southern Ireland. We also work with Irish clients who are looking to do business outside of the region.,~/getmedia/4c8656f5-f2c9-4656-996a-646fdc8755bd/ireland_desktop.jpg.xml?width=1400&height=540&ext=.jpg,NULL,"<p>Gowling WLG helps co-ordinate legal services for clients who are pursuing business&nbsp;opportunities in both Ireland and Northern Ireland. We also work with Irish clients who are looking to do business outside of the region.</p>

<p>With an in-depth understanding of the latest legal, economic and business developments in Ireland, our team can refer international clients to the Irish law firms that are best-suited to assist in transactions and projects across a range of key sectors. Gowling WLG&#39;s global reach across the UK, Canada, Europe, Asia and the Middle East also enables us to assist Irish corporate clients who wish to conduct business beyond their borders.</p>

<p>We regularly visit our clients and law firm friends in Dublin and Belfast, and are committed to providing Irish companies and law firms with world-class advice and personalised, responsive service.</p>

<p>To learn more about how we can help you succeed, please contact <a href=""~/en/people/neil-hendron/#panel-button1"">Neil Hendron</a>.</p>
",GWLG.Ireland,header-mega-menu,NULL,NULL,NULL,~/getmedia/4c8656f5-f2c9-4656-996a-646fdc8755bd/ireland_desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/95ad1e8b-5fb6-4729-a684-18ad33eb0eb9/ireland_mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,d8e49641-362e-4dfc-ba16-657ae21a7760,NULL,0,NULL,NULL,NULL
17,/Global-Reach/Italy,en-GB,D8B93E0B-453B-4280-AA67-3F8F7E58B623,Italy,Italy,Gowling WLG helps co-ordinate legal services for clients who are pursuing business opportunities in Italy. We also work closely with Italian clients who are looking to do business outside of the region.,~/getmedia/87aa7fd0-fbda-41aa-8760-05158dc72795/italy_desktop.jpg.xml?width=1400&height=540&ext=.jpg,NULL,"<p>Gowling WLG helps co-ordinate legal services for clients who are pursuing business opportunities in Italy. We also work closely with Italian clients who are looking to do business outside of the region.</p>

<p>All members of our Italy team hold a personal connection to the country, and several speak fluent Italian. As a result, the team is wholly committed to immersing itself in the culture and business practices of Italy, and is dedicated to offering Italian companies and law firms world-class legal advice and personalised, responsive service.</p>

<p>As regular visitors to clients and law firm friends in Italy, we can refer international clients to the Italian firms that are best-suited to assist in transactions and projects across a range of key sectors.</p>

<p>We&#39;re a proud corporate member of the UK-Italy Chamber of Commerce, and have assisted leading Italian businesses with their legal work around the world. This work has included:</p>

<ul>
	<li>Assisting a major insurance company with its UK employee benefit products</li>
	<li>Assisting a leading financial services company with its establishment in the UAE</li>
	<li>Advising on UK pensions and employment law for a major airline</li>
	<li>Working alongside a major Italian law firm to provide French employment law to a key client on a global deal</li>
	<li>Assisting a state-owned transport entity on a joint venture in the Czech Republic</li>
	<li>Working with a major law firm on the UK aspects of the international re-organisation of a company in the pharmaceutical industry</li>
	<li>Supporting a leading fashion house on a complex real estate transaction in Central London</li>
	<li>Providing legal support, strategic advice and assistance to the Italian Embassy in Ottawa on Canadian-related matters</li>
</ul>

<p>To learn more about how we can help you succeed in Italy and beyond, please contact <a href=""~/en/people/jason-coates/"">Jason Coates</a> or <a href=""~/en/people/rosa-lupo/"">Rosa Lupo</a>.</p>
",GWLG.Italy,header-mega-menu,NULL,NULL,NULL,~/getmedia/87aa7fd0-fbda-41aa-8760-05158dc72795/italy_desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/ede60090-e110-4c0c-8f74-1f8704867bdc/italy_mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,91c9c57f-d1b5-4113-862f-60addeffaa4f;5d0e8ae2-1b58-484b-a89d-c08d752a6175,NULL,0,NULL,NULL,NULL
18,/Global-Reach/Japan,en-GB,485DD390-729A-49C0-BCE1-073DF440A6F7,Japan,Japan,"We hold long-standing relationships with some of Japan's largest companies and law firms, and help Japanese clients take advantage of the tremendous business opportunities available in Canada, the UK and other key markets globally.",~/getmedia/0b502efa-a2d3-4112-998a-1f53483f620b/japan_desktop.jpg.xml?width=1400&height=540&ext=.jpg,NULL,"<p><strong>Gowling WLG holds long-standing relationships with some of Japan&#39;s largest companies and law firms, and helps Japanese clients take advantage of the tremendous business opportunities available in Canada, the UK and other key markets globally.</strong></p>

<p>Japanese clients rely on us to manage their Canadian or UK legal requirements and guide them through a host of issues - from patent prosecution and litigation, cross-border mergers and acquisitions (M&amp;A) and corporate commercial matters to transfer pricing,regulatory and competition/antitrust issues.</p>

<p>Our strategic legal guidance covers the sectors impacting your business, including life sciences, manufacturing, electronics, automotive, energy and technology.</p>

<p><a class=""c-button"" href=""~/getmedia/ccea7b22-7c4c-4c0d-9158-97529b1c5c7b/gowling-wlg-japan-ss-eng.pdf.xml"" target=""_blank"">Download summary of our services (English)</a>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <a class=""c-button"" href=""~/getmedia/c8d4897f-088b-47dc-87f7-9009a059ac29/gowling-wlg-japan-ss-japanese.pdf.xml"" target=""_blank"">Download summary of our services (Japanese)</a></p>

<h2>Experienced, on-the-ground professionals</h2>

<p>Our seasoned lawyers - some of whom are native to Japan and speak fluent Japanese - regularly spend time in Japan to gain important insight into our clients&#39; issues, operations and business goals. This dedication has enabled us to maintain close relationships with a long list of Japanese companies for more than 60 years.</p>

<h2>Top-tier intellectual property (IP) support</h2>

<p>Intellectual property assets are essential to the success of Japanese businesses - which is why protecting, enforcing and defending our clients&#39; industry innovations is our top priority. Gowling WLG delivers a full range of <abbr title=""intellectual property"">IP</abbr> services to clients in Japan and around the world, from patents, trademarks and copyrights to brands, industrial designs and <abbr title=""intellectual property"">IP</abbr> litigation. Learn more about our <a href=""~/getmedia/2ab42843-dc37-4df6-b372-ef3cfe37fb5c/IP-Lit-Strategy-Japan_ss_ltr_Eng_0820.pdf.xml"" target=""_blank"">Japan-specific <abbr title=""intellectual property"">IP</abbr> litigation expertise</a>.</p>

<h2>Mergers &amp; acquisitions strength</h2>

<p>Through the strength of our global <abbr title=""mergers and acquisitions"">M&amp;A</abbr> practice, we assist Japanese companies with their transactions across a range of key industries. We&#39;re one of the world&#39;s busiest law firms in mid-market <abbr title=""mergers and acquisitions"">M&amp;A</abbr>, and have a keen understanding of the challenges you face - because we&#39;re immersed in them every day.</p>

<h2>Award-winning transfer pricing expertise</h2>

<p>Our Transfer Pricing Group can optimise your global tax position and reduce your exposure to unfavourable audit assessments. With team members who have worked directly with Japanese government officials, we also deliver in-depth tax planning and innovative implementation strategies.</p>

<h2>Regulatory, competition &amp; antitrust know-how</h2>

<p>We help Japanese clients navigate the complexities of competition and antitrust law, including compliance and strategic opinions, merger reviews, filings and clearances, pre-notifications, pre-implementation compliance issues, investigations and inquiries, regulatory approvals, and internal compliance policies and programs.</p>

<h2>Select representative work</h2>

<p>Our client service highlights including acting as counsel to:</p>

<ul>
	<li><strong>Mitsui Canada</strong> since its establishment in Canada over 55 years ago, providing ongoing corporate and commercial services for a range of its Canadian operations.</li>
	<li>Numerous <strong>Japanese corporations</strong> on a wide variety of trademark matters over the past three decades, providing strategic advice on selection, registration and enforcement of trademarks in Canada.</li>
	<li><strong>Eisai Co., Ltd</strong> on the European aspects of a US$3.9-billion merger agreement with MGI PHARMA, Inc.</li>
	<li>A wide range of <strong>Japanese manufacturing and distribution companies and their Canadian subsidiaries</strong>, providing a full suite of transfer pricing services, including transfer pricing documentation, audit defence, appeal and competent authority representation, and advanced pricing agreements.</li>
	<li>A <strong>Japanese health care products company</strong> on the distribution of its products in Canada, including its distribution arrangements with the Canadian distributor.</li>
	<li><strong>Astellas Pharma Inc.</strong> on two strategically important licensing deals with global biopharmaceutical company Optimer Pharmaceuticals Inc. for the antibiotic Fidaxomicin, valued at &euro;155 million and US$90 million, respectively.</li>
	<li><strong>Takeda Pharmaceutical Company Ltd. </strong>on multiple patent litigation cases launched in Canada over the past 15 years, as well as on various patent prosecution and regulatory matters.</li>
	<li><strong>Japanese-based innovator pharmaceutical companies</strong>, including<strong> Kyorin Pharmaceutical Co. </strong>and <strong>Astellas</strong>, on patent disputes at the Federal Court of Canada.</li>
	<li><strong>Eisai </strong>on its acquisition of the European rights to the intrathecal painkiller Prialt from Elan for US$100 million</li>
	<li><strong>Transfreight Inc.</strong>, a trucking and logistics company owned by Mitsui with operations across Canada, the US and Mexico, on a wide range of corporate and commercial legal matters for its Canadian operations.</li>
	<li><strong>Eisai Europe</strong> on a cross-border &euro;95-million licence and co-promotion agreement with Bial-Portela &amp; CA, S.A. for the treatment for epilepsy.</li>
	<li>A<strong> Japanese manufacturing company</strong> in obtaining a rare &quot;permanent establishment&quot; advance income tax ruling from the Canada Revenue Agency, which provided tax assurances to the company that it did not carry on its business in Canada through a permanent establishment&nbsp;and was, therefore, exempt from Canadian tax under the Canada-Japan Income Tax Convention.</li>
</ul>

<p>To learn more about how we can help you succeed in Japan and beyond, please contact <a href=""~/en/people/nick-cunningham/"">Nick Cunningham</a> or <a href=""~/en/people/stephen-pike/"">Stephen Pike</a>.</p>
",GWLG.Japan,header-mega-menu,NULL,NULL,NULL,~/getmedia/0b502efa-a2d3-4112-998a-1f53483f620b/japan_desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/3a98db8e-9bed-4310-b03f-f8abcaf2db84/japan_mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,12993b29-3ee0-4306-bebe-5fc8c5422385;03d6dce1-2df8-4f24-8e6b-d7bcda0b6509,Contacts,0,NULL,NULL,NULL
19,/Global-Reach/Latin-America,en-GB,73D15F22-E679-4E65-B8F8-739469952EA2,Latin America,Latin America,"We take a practical, results-driven approach to advising Canadian and international clients investing in Latin America - as well as Latin American companies investing in Canada, the UK and beyond.",~/getmedia/0a0372b8-60e8-4f1b-ac47-6c100b5bd348/latin-america_desktop.jpg.xml?width=1400&height=540&ext=.jpg,NULL,"<p>Over the past decade, Latin America has experienced tremendous growth, which has led to expanded opportunities in a wide range of industries - from energy, mining and infrastructure to telecommunications, transportation, real estate and hospitality.</p>

<p>Gowling WLG&#39;s multidisciplinary legal team holds an in-depth understanding of the unique opportunities and challenges in the region. We take a practical, results-driven approach to advising Canadian and international clients investing in Latin America - as well as Latin American companies investing in Canada, the UK and beyond.</p>

<h2>Local knowledge and expertise</h2>

<p>With Spanish and Portuguese-speaking professionals who are qualified to practise civil law in Latin America, we work closely with our clients and local law firms across the region to ensure legal matters are handled seamlessly. Our unparalleled knowledge of Latin America&#39;s financial markets, industry sectors, legal system, business environments and cultural traditions enables us to tailor our services to meet the specific needs of our clients doing business in Latin America.</p>

<h2>Integrated connections</h2>

<p>The strength and depth of our team has allowed us to develop strong relationships with Latin American business leaders, preeminent local law firms and legal professionals, governments, and institutional organisations. Through our offices in the major financial centres of Toronto, London, Paris, Dubai, Singapore and Beijing, we&#39;re directly connected to key international markets. This gives us access to primary sources of financing for foreign investors looking to invest in Latin America - and for Latin American clients investing abroad.</p>

<h2>Dedicated Cuba team</h2>

<p>Gowling WLG launched a <a href=""~/en/global-reach/cuba/"">dedicated Cuba initiative</a> in response to the economic growth and commercial activity projected to take place in Cuba over the next several years. Drawing on the collective expertise of numerous professionals - including an on-the-ground consultant in Havana - our Cuba team is focused on helping international clients pursue business and investment opportunities and strategically position themselves in the emerging Cuban market. (Gowling WLG delivers strategic advisory services in Cuba through Gowling WLG Consulting Inc.).</p>

<h2>Energy and infrastructure leadership</h2>

<p>Having played a leading role in some of the most significant international energy and infrastructure transactions and litigation in recent history, Gowling WLG offers market-leading expertise and deep industry knowledge in the <a href=""~/en/sectors/energy/global/"">energy</a> (oil and gas, nuclear and renewable) and <a href=""~/en/sectors/infrastructure/global/"">infrastructure</a> sectors. We represent private and public sector clients across a diverse range of energy-related operations and activities, providing assistance with their development, financing and secured lending transactions.</p>

<p>Our team has also been at the forefront of the renewed international focus on projects, public-private partnerships (P3) and infrastructure growth, and has acted on numerous Latin American matters. As a result, we&#39;re well-equipped to lay a strong foundation for your project - regardless of its size, industry or complexity.</p>

<h2>Effective mining solutions</h2>

<p>Gowling WLG delivers forward-looking advice and practical solutions to mining and <a href=""~/en/sectors/mining/global/"">natural resources</a> clients across Latin America. Our expertise covers a full range of business issues, including financings and stock exchange listings, mergers and acquisitions, exploration and joint ventures, operations and closures, regulatory and compliance issues, off-take, royalty and streaming agreements and transactions, and engineering and service contracts.</p>

<p>Working together with our firm colleagues in aligned practice areas, we also offer integrated, sophisticated counsel in key areas such as project and debt financing, public equity, environmental compliance, intellectual property, and occupational health and safety risk assessment and management.</p>

<h2>Business integrity, anti-corruption and international litigation support</h2>

<p>Our Canadian <a href=""~/en/services/white-collar-defence-investigations/#canada"">White Collar Defence &amp; Investigations Group</a> is a leader in corporate compliance and global anti-corruption rules and legislation, and is frequently called upon to address corrupt practices such as bribery and money laundering. In addition, we provide due diligence for acquisitions, investments, joint ventures and other business arrangements, and advise on the design and implementation of appropriate corporate compliance systems.</p>

<p>Our extensive <a href=""~/en/services/litigation-dispute-resolution/#global"">litigation capabilities</a> also include knowledge and experience in global arbitration and bilateral investment treaties. This expertise can be critical to the resolution of your cross-border commercial disputes - in Latin America and beyond.</p>

<h2>Learn more</h2>

<p>To learn more about how we can help you pursue business opportunities in Latin America and beyond, please contact <a href=""~/en/people/andrew-witts/"">Andrew Witts</a> or <a href=""~/en/people/france-tenaille/"">France Tenaille</a>.</p>
",GWLG.LatinAmerica,header-mega-menu,NULL,NULL,NULL,~/getmedia/0a0372b8-60e8-4f1b-ac47-6c100b5bd348/latin-america_desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/0e3fb1d2-8882-4251-b4d3-b44358543a13/latin-america_mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,c36a0bf5-318f-4d02-a8ed-479bad6a8469;d78233a4-45b3-42d2-97bc-0db06ee57cd2,NULL,0,NULL,NULL,NULL
20,/Global-Reach/Luxembourg,en-GB,333E3D76-78BC-4AFA-8607-E3E97AD62A9A,Luxembourg,Luxembourg,We help co-ordinate legal services for clients who are pursuing business opportunities in Luxembourg. We also work with Luxembourg-based clients who are looking to do business outside of the region.,~/getmedia/e0a477c0-b770-45fe-841d-1ef55d48876f/luxembourg_desktop.jpg.xml?width=1400&height=540&ext=.jpg,NULL,"<p>Gowling WLG helps co-ordinate legal services for clients who are pursuing business opportunities in Luxembourg. We also work with Luxembourg-based clients who are looking to do business outside of the region.</p>

<p>To learn more about how we can help you succeed, please contact <a href=""~/en/people/sharon-ayres/"">Sharon Ayres</a> or <a href=""~/en/people/daniel-lacelle/"">Daniel Lacelle</a>.</p>
",GWLG.Luxembourg,header-mega-menu,NULL,NULL,NULL,~/getmedia/e0a477c0-b770-45fe-841d-1ef55d48876f/luxembourg_desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/4b2a5f8e-089b-48da-903c-673bb4cd7966/luxembourg_mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,d7a64117-fe8d-47a0-ace6-75c8607bfcdd;3644af1a-b189-4163-9b6a-7cb8563b5170,NULL,0,NULL,NULL,NULL
24,/Global-Reach/Singapore-ASEAN,en-GB,0CCD30D9-4564-43F3-9241-0AF690CABD57,Singapore & ASEAN,Singapore & ASEAN,Singapore is an important centre for wealth management and our presence means expertise on the ground when and where our clients need it via our exclusive association with JurisAsia LLC.,~/getmedia/1134d953-58af-44c5-b034-d3dd3c3281b3/singapore_desktop.jpg.xml?width=1400&height=540&ext=.jpg,NULL,"<p>With increasing investment and expansion in South East Asia, many businesses and high net worth individuals are choosing Singapore as their base. It&#39;s an important centre for wealth management, and our presence means expertise on the ground when and where our clients need it via our exclusive association with JurisAsia LLC.</p>

<p>JurisAsia has a leading intellectual property team which advises on national and international IP, as well as data protection and privacy laws. Meanwhile, JurisAsia&#39;s corporate team advises on cross-border M&amp;A and capital markets for MNCs, regional conglomerates, private equity and venture capital funds.</p>

<p><a href=""http://www.jurisasiallc.com/"" target=""_blank"">More information about JurisAsia can be found on its website</a>.</p>
",GWLG.Singapore,header-mega-menu,NULL,NULL,NULL,~/getmedia/1134d953-58af-44c5-b034-d3dd3c3281b3/singapore_desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/5a99db8e-fd93-4675-b64b-965cc7d632b2/singapore_mobile.jpg.xml?width=550&height=500&ext=.jpg,0,NULL,NULL,NULL,NULL,NULL,0,NULL,NULL,NULL
25,/Global-Reach/United-Kingdom,en-GB,4B8C1025-00AA-4E46-A691-92676D75F03C,United Kingdom,United Kingdom,"The UK is at the heart of the global economy, with English law underpinning international commerce and London arguably the world's leading financial centre.",~/getmedia/801736e5-de40-4c3a-bdd6-bd2102234132/uk_desktop.jpg.xml?width=1400&height=540&ext=.jpg,NULL,"<p>The UK is at the heart of the global economy, with English law underpinning international commerce and London arguably the world&#39;s leading financial centre.</p>

<p>Gowling WLG&#39;s UK lawyers have outstanding legal expertise plus, crucially, the in-depth market knowledge our clients need to succeed.</p>

<p>This insight you receive will be backed up by people with a resolute focus on commercial results. With bases in London, Leeds and Birmingham, we deliver first-class legal advice in a flexible and cost-effective manner.</p>

<p>Clients in London, the UK and worldwide can be sure that whatever the deal, dispute or project, our lawyers are ideally placed to advise.</p>

<p>Gowling WLG is home to one of the UK&#39;s largest real estate practices: a broad-based practice acting for institutions, investors, developers and occupiers. We&#39;re also the number one AIM firm by market capitalisation and are top-rated for our investment funds, pensions and private capital work.</p>

<p>In dispute resolution, we have core strengths in intellectual property, construction, commercial litigation and international disputes, particularly in the areas of fraud/asset tracing, contentious trusts and insurance/reinsurance.</p>

<p>Making a real connection with our people and clients, we use commercial and innovative thinking to provide the legal solutions our clients need to thrive and prosper, wherever they are in the world.</p>
",GWLG.UK,header-mega-menu,NULL,58076178-da60-4ab6-a07c-ef250971ebf7;cec4ff07-ef16-4560-87e9-89e91d584491;9fbe191e-3bcf-45de-a2ba-338bb194fc9d,NULL,~/getmedia/801736e5-de40-4c3a-bdd6-bd2102234132/uk_desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/7941e79d-a1ff-4c88-b9e5-802f435fc597/uk_mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,NULL,NULL,0,NULL,NULL,NULL
26,/Global-Reach/Netherlands,en-GB,94EC8471-3C42-4903-90B2-6B60EBEF1F7C,Netherlands,Netherlands,The Netherlands is one of the world's top 20 economies and one of Europe's leading destinations for corporate headquarters.,~/getmedia/effdd253-ae4b-46ae-9bab-ff46f73ac8c8/netherlands_desktop.jpg.xml?width=1400&height=540&ext=.jpg,NULL,"<p>The Netherlands is one of the world&#39;s top 20 economies and one of Europe&#39;s leading destinations for corporate headquarters.</p>

<p>The role of Gowling WLG&#39;s Netherlands team is two-fold. Outbound, our role is to assist our clients from outside the country in selecting the most suitable local legal advisers to help them with their business interests. Our comprehensive knowledge of Dutch law firms and legal market will ensure you get the advice you need.</p>

<p>Inbound, our role is to apply our extensive experience to assist clients headquartered in the Netherlands with establishing their business operations internationally - whether through an acquisition or by establishing a greenfield operation - and looking after their ongoing legal needs.</p>

<p>Members of our Netherlands team regularly visit their Dutch clients and contacts in the country&#39;s major business centres, including Amsterdam, Rotterdam and The Hague.</p>

<p>When we make these visits, we take a hands-on approach, and often tour our clients&#39; facilities and meet with management to improve our understanding of the challenges they face. We see these visits as essential to both learning what our clients&#39; priorities are&nbsp;and to tailoring our legal advice to help them meet those objectives.</p>

<p>To learn more about how we can help your business succeed, please contact <a href=""~/en/people/julian-henwood/"">Julian Henwood</a>.</p>
",GWLG.Netherlands,header-mega-menu,NULL,NULL,NULL,~/getmedia/effdd253-ae4b-46ae-9bab-ff46f73ac8c8/netherlands_desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/1c63fa0b-b1c8-4ea4-9adb-4db37b376209/netherlands_mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,0368d60b-27da-4355-a0a7-6b9b0cc01c28,Key contact,0,NULL,NULL,NULL
27,/Global-Reach/Nordic-Region,en-GB,986861C3-A3DB-48C0-BA58-4A64FACAA4A5,Nordic Region,Nordic Region,"The Nordic Region (consisting of Denmark, Finland, Iceland, Norway and Sweden) is a profitable and exciting place to do business - and Gowling WLG has been active in the area for many years.",~/getmedia/dec4d850-c367-43d2-ad1f-2d6dbfc11f3b/nordic-region_desktop.jpg.xml?width=1400&height=540&ext=.jpg,NULL,"<p>The Nordic Region (consisting of Denmark, Finland, Iceland, Norway and Sweden) is a profitable and exciting place to do business - and Gowling WLG has be&nbsp;active in the area for many years.</p>

<p>Year after year, international studies confirm that the Nordic countries offer companies excellent conditions in which to invest and conduct business, which is due to a combination of a strong tradition of research and innovation, along with a well-developed traditional and digital infrastructure.</p>

<p>The role of Gowling WLG&#39;s Nordic team is two-fold. Outbound, our role is to assist our clients from outside of the Nordic Region in selecting the most suitable legal advisers in the area to help them with their Nordic business. Our comprehensive knowledge of the region&#39;s law firms and legal market will ensure you get the advice you need.</p>

<p>Inbound, our role is to apply our extensive experience to assist clients headquartered in the Nordic Region with establishing their business operations internationally - whether through an acquisition or by establishing a greenfield operation - and looking after their ongoing legal needs.</p>

<p>Members of our Nordic team regularly visit the firm&#39;s clients and contacts in the major business centres of the Nordic countries, including Aarhus and Copenhagen in Denmark, Helsinki and Tampere in Finland, Reykjavik in Iceland, Oslo in Norway and Gothenburg, Malmo and Stockholm in Sweden.</p>

<p>When we make these visits, we take a hands-on approach, and often tour our clients&#39; facilities and meet with management to improve our understanding of the challenges they face. We see these visits as essential to both learning what our clients&#39; priorities are&nbsp;and to tailoring our legal advice to help them meet those objectives.</p>

<p>Although English is commonly spoken throughout the Nordic Region, our team includes fluent speakers of both Danish and Swedish.</p>

<p>To learn more about how we can help your business succeed, please contact <a href=""~/en/people/julian-henwood/"">Julian Henwood</a> or <a href=""~/en/people/guy-poitras/"">Guy Poitras</a>.</p>
",GWLG.NordicRegion,header-mega-menu,NULL,NULL,NULL,~/getmedia/dec4d850-c367-43d2-ad1f-2d6dbfc11f3b/nordic-region_desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/536ef007-b3e3-4ad6-a348-b5f7b78ef7ed/nordic-region_mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,0368d60b-27da-4355-a0a7-6b9b0cc01c28;1fb0a8e0-5bb5-44a2-ba8d-fcd7c4870b88,Key contacts,0,NULL,NULL,NULL
28,/Global-Reach/Portugal,en-GB,1BA01059-AEF5-42B0-9EB7-3F41A861C010,Portugal,Portugal,Gowling WLG helps co-ordinate legal services for clients who are pursuing business opportunities in Portugal. We also work closely with clients who are looking to do business outside of Portugal.,~/getmedia/034d56b9-d976-4b2c-b65a-fdbca7bd3f56/portugal_desktop.jpg.xml?width=1400&height=540&ext=.jpg,NULL,"<p>Gowling WLG helps co-ordinate legal services for clients who are pursuing business opportunities in Portugal. We also work closely with clients who are looking to do business outside of Portugal.</p>

<p>Members of our Portugal team speak Portuguese. The team is wholly committed to immersing itself in the culture and business practices of Portugal and is dedicated to offering companies and law firms world-class legal advice and personalised, responsive service.</p>

<p>As regular visitors to clients and law firms in Portugal, we can refer international clients to our best friend Portuguese firms most suited to assist in transactions and projects across a range of key sectors.</p>

<h3>Experience</h3>

<p>We have assisted leading Portuguese businesses with their legal work around the world. This work has included:</p>

<ul>
	<li>assisting a Portuguese oil company with the English aspects of a financing</li>
	<li>assisting a Portuguese hotel owner with a management agreement in Portugal</li>
	<li>assisting a Portuguese hotel company with its expansion outside of Portugal</li>
	<li>assisting various companies with their standard contract conditions in Portugal</li>
	<li>assisting companies with their data protection requirements in Portugal</li>
	<li>advising UK companies on the sale of Portuguese subsidiaries</li>
	<li>advising on the purchase of UK companies by Portuguese clients</li>
</ul>

<p>To learn more about how we can help you succeed in Portugal and beyond, please contact <a href=""~/en/people/sally-pinkerton/"">Sally Pinkerton</a> or <a href=""~/en/people/christopher-n-alam/"">Christopher Alam</a>.</p>
",GWLG.Portugal,header-mega-menu,NULL,NULL,NULL,~/getmedia/034d56b9-d976-4b2c-b65a-fdbca7bd3f56/portugal_desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/a0bcb255-3ede-41ef-8611-a651ae36cfd3/portugal_mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,45042386-e87e-4fa2-8f87-101784526d0a;4a850b45-1170-4e82-b74a-02cc3ef81775,NULL,0,NULL,NULL,NULL
29,/Global-Reach/South-Korea,en-GB,BCA9DAC1-9A39-451F-B916-326F4549F47D,South Korea,South Korea,Gowling WLG is the law firm of choice for South Korean entities pursuing international trade and investment opportunities - and for global companies pursuing business opportunities in South Korea.,~/getmedia/793484fe-e2b5-4987-95fa-3adcf3f55279/south-korea_desktop.jpg.xml?width=1400&height=540&ext=.jpg,NULL,"<p>Home to one of the largest and most experienced teams of Canadian and UK lawyers with on-the-ground expertise in South Korea, Gowling WLG is the law firm of choice for South Korean entities pursuing international trade and investment opportunities - and for global companies pursuing business opportunities in South Korea.</p>

<h2>In-depth understanding and experience</h2>

<p>Our team of lawyers holds an in-depth understanding of South Korea&#39;s unique legal, business and cultural practices. We work closely with South Korean clients on their projects and investments in Canada, the UK and around the world, providing trusted legal advice at every stage of the process. For the convenience of our clients, our lawyers are also equipped to provide legal services in the Korean language.</p>

<h2>Full-service strength</h2>

<p>Gowling WLG is supported by the knowledge and expertise of over 1,500 legal professionals based in 17 cities across Canada and the UK, as well as in Europe, Asia and the Middle East. We offer top-tier legal expertise in a wide range of areas likely impacting your business in South Korea, Canada or the UK - including <a href=""~/en/services/capital-markets/#overview"">capital markets</a>, <a href=""~/en/services/mergers-acquisitions/#overview"">mergers and acquisitions</a>, <a href=""~/en/sectors/financial-institutions-services/"">financial institutions and services</a>, <a href=""~/en/services/intellectual-property-law/#global"">intellectual property</a>, <a href=""~/en/sectors/life-sciences/"">life sciences</a>, <a href=""~/en/services/litigation-dispute-resolution/#global"">litigation and dispute resolution</a>, <a href=""~/en/services/real-estate/#global"">commercial real estate</a>, <a href=""~/en/services/tax/#global"">tax</a>, <a href=""~/en/services/employment-labour-equalities/#global"">employment and labour</a>, and more.</p>

<h2>Industry leadership</h2>

<p>We&#39;ve worked extensively with major South Korean companies, state-owned entities and other market participants on a long list of mining, energy and infrastructure projects. From mergers and acquisitions, joint ventures and takeover bids to shareholder agreements, corporate reorganisations and foreign investments, our team can help you maximise the opportunities available in the extractive and infrastructure sectors.</p>

<h2>Efficient, effective solutions</h2>

<p>Understanding that your budget is finite, we ensure you get the most value from your legal spend by implementing alternative fee arrangements, offering competitive rates and identifying and mitigating risks. Through the use of our in-house legal project management platform, Practical LP&trade;, we seamlessly manage the scope, costs, tasks and resources associated with your file to help keep your legal matter on track, on time and on budget.</p>

<h2>Global, sector-focused capabilities</h2>

<p>As a global law firm, Gowling WLG offers world-class expertise in the sectors that matter most to our South Korean clients. These include life sciences, energy, financial services, projects and infrastructure, real estate, natural resources, technology and automotive.</p>

<p>To learn more about how we can help you pursue business opportunities in South Korea, please contact us.</p>
",GWLG.SouthKorea,header-mega-menu,NULL,NULL,NULL,~/getmedia/793484fe-e2b5-4987-95fa-3adcf3f55279/south-korea_desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/377f65f0-4bcc-41d6-bafe-3abde88ba5af/south-korea_mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,ba5d41d1-0007-44c0-a3bc-2a2506fdec1e;2377a67c-1e57-4514-9b6e-aee6bfab3640,Key Contacts,0,NULL,NULL,NULL
30,/Global-Reach/Spain,en-GB,240BBEB3-8AFB-4A48-828A-BFBF216E4053,Spain,Spain,"Spain is a major European economy that offers great possibilities to investors both within and outside the country. Making the most of these opportunities requires smart, commercial-minded lawyers who understand how business is done in Spain.",~/getmedia/acce0b7e-7324-4550-aed6-ce8c097ec446/spain_desktop.jpg.xml?width=1400&height=540&ext=.jpg,NULL,"<p>Spain is a major European economy that offers great possibilities to investors both within and outside the country. Making the most of these opportunities requires smart, commercial-minded lawyers who understand how business is done in Spain.</p>

<p>The role of our Spanish team is two-fold: we have excellent relationships with the main Spanish law firms who can help connect us and our clients to a variety of businesses and sectors.</p>

<p>We also assist Spanish clients in establishing and maintaining their business operations - whether through an acquisition, a greenfield operation or looking after their general legal needs.</p>

<p>Our team has a proven track record in:</p>

<ul>
	<li>Assisting major Spanish developers, construction groups and engineering groups who are active in the project/infrastructure sectors worldwide</li>
	<li>Acting for Spanish water and energy companies on projects across Africa</li>
	<li>Assisting various Spanish investors on property acquisitions, both in the UK and Canada</li>
	<li>Protecting and enforcing intellectual property (IP) rights in Spain, including the filing of patents and trademarks, co-ordinating oppositions and litigation, and anti-counterfeiting work</li>
	<li>Assisting foreign clients with their investments and transactions in Spain</li>
</ul>

<p>We make regular trips to Spain to build relationships with lawyers and businesses. You&#39;ll benefit directly from the connections we&#39;ve made, and we can put you in touch with people who will make things happen for your business.</p>

<p>To learn more about how we can help you succeed in Spain, please contact <a href=""~/en/people/luc-lissoir/"">Luc Lissoir</a> or <a href=""~/en/people/sally-pinkerton/"">Sally Pinkerton</a>.</p>
",GWLG.Spain,header-mega-menu,NULL,NULL,NULL,~/getmedia/acce0b7e-7324-4550-aed6-ce8c097ec446/spain_desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/fe3e5f21-351b-4943-841f-9efd5a087c56/spain_mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,464cd7c0-1e36-469e-bd96-72a18279e6a9;4a850b45-1170-4e82-b74a-02cc3ef81775,Key contacts,0,NULL,NULL,NULL
31,/Global-Reach/United-States,en-GB,D9566E50-E6DC-4E5A-A8C1-4C97599BAF15,United States,United States,"As a global, full-service law firm, Gowling WLG can handle your legal needs through our extensive network of associate firms.",~/getmedia/069c3232-1d76-4707-ba08-70914c057367/united-states_desktop.jpg.xml?width=1400&height=540&ext=.jpg,Gowling WLG experts in the US,"<p>Many US corporations are eager to expand beyond their country&#39;s borders and enter the exciting markets of Canada, Europe and beyond.</p>

<p>As you embark on your journey, you&#39;ll need a global law firm that can act as your guide outside of the US: legal professionals who can keep you on track and provide advice at every stage of the route to market. This requires extensive geographic reach, the ability to offer the right information at the right time and the capacity to meet the high level of service expected by US general counsel.</p>

<p>As a global, full-service law firm, Gowling WLG can handle your legal needs through our extensive network of associate firms. We&#39;ve been a trusted partner to US businesses for more than 100 years, with clients who call us their firm of choice because we know how to limit their &#39;pain points&#39; - while helping them take advantage of new opportunities and achieve their ambitious goals.</p>

<p>We focus on managing risks while navigating the red tape, and always field the best team for the job, ensuring you benefit from our cost-efficient approach, first-class technical knowledge, and in-depth sector expertise. Our team offers:</p>

<ul>
	<li>Key access to international markets, with lawyers on the ground in many of the world&#39;s largest economies, including Canada, the UK, France, Germany, Belgium, the Middle East, Singapore and China</li>
	<li>Efficient establishment of foreign operations, from forming a company to providing terms and conditions for international, market-facing websites</li>
	<li>Structuring of cost-effective cross-border transactions</li>
	<li>Guidance through the minefield of international labour law and other complex regulations</li>
	<li>Protection of your IP rights, including management of concurrent litigation across different jurisdictions</li>
	<li>Strategies for monetising your own IP through licensing, franchising and joint ventures</li>
	<li>A full range of advice in areas critical to your business, such as tax, real estate, regulation, advertising law, dispute resolution and data protection</li>
</ul>

<p>With over 1,500 legal professionals in 17&nbsp;cities across Canada, the UK, Europe, Asia and the Middle East, Gowling WLG gives you access to legal support in almost every market. Whilst we have no offices in the US (we don&#39;t compete with local firms, making us the best choice for outbound referral work), our lawyers regularly visit clients and contacts in all 50 states.</p>

<p><a href=""~/getmedia/d90c32b8-aa37-4165-be92-1bd13e06e635/doing_business_in_the_uk.pdf.xml"" target=""_blank"">Read our complete guide to doing business in the UK</a>.</p>

<p><a href=""~/en/insights-resources/guides/2022/guide-to-doing-business-in-canada/"" target=""_blank"">Read our complete guide to doing business in Canada</a>.</p>

<p>Expand your borders with a law firm in tune with US needs. We&#39;re ready to help - please reach out to <a href=""~/en/people/wendy-wagner/#panel-button1"" target=""_blank"">Wendy Wagner</a> or <a href=""~/en/people/chris-towle/"">Chris Towle</a> to learn more.</p>
",GWLG.UnitedStates,header-mega-menu,NULL,NULL,NULL,~/getmedia/069c3232-1d76-4707-ba08-70914c057367/united-states_desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/e9c691c4-b30b-4654-9147-70c34d4e1540/united-states_mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,414ac382-6045-48c9-8797-b778fbe6164d;afc382e9-2b75-4a26-9e20-0a8c68694164,NULL,0,NULL,NULL,NULL
32,/Global-Reach/Switzerland,en-GB,5074BB89-4EC2-46AC-B110-B8076B71CBE1,Switzerland,Switzerland,"Gowling WLG enjoys long-standing working relationships with many of Switzerland's most famous corporates, financial institutions and law firms.",~/getmedia/8494b6ad-652b-4ecf-a0d0-63fabfa96256/switzerland_desktop.jpg.xml?width=1400&height=540&ext=.jpg,NULL,"<p>Switzerland has one of the most stable and competitive economies in the world. More than two thirds of Swiss GDP is generated by the service sector, and less than 30% by industry. Nevertheless, some of the world&#39;s most famous corporates are based in Switzerland, not the least in the pharmaceutical and chemical sector. The country is famous for its monetary stability and neutrality which have made Switzerland a safe haven for investors.</p>

<p>Gowling WLG enjoys long-standing working relationships with many of Switzerland&#39;s most famous corporates, financial institutions and law firms. We know the players in the relevant markets and are in an excellent position to ensure that our clients get the best advice. We work with lawyers in Zurich, Geneva, Basel, and other places, and can make good use of differences in approach, expertise and pricing.</p>

<p>Our team includes native, and other, fluent German and French speakers.</p>

<p>To learn more about how we can help your business succeed, please contact <a href=""~/en/people/andreas-woelfle/"">Andreas Woelfle</a> or <a href=""~/en/people/john-norman/"">John Norman</a>.</p>
",GWLG.Switzerland,header-mega-menu,NULL,NULL,NULL,~/getmedia/8494b6ad-652b-4ecf-a0d0-63fabfa96256/switzerland_desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/c13abf66-b988-42ef-814f-e808639ef555/switzerland_mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,199becac-9a85-4082-aec2-fd0969f7da84;870774bf-534e-466c-be9a-e89fb3fb38bf,NULL,0,NULL,NULL,NULL
33,/Global-Reach/United-Arab-Emirates,en-GB,D7BDDBCA-EAC1-4D90-8D11-7C5EC5F8D009,United Arab Emirates,United Arab Emirates,Our partners leading each practice are recognised experts in their fields and lead a team of 16 multilingual lawyers offering combined international expertise with local knowledge and influence.,~/getmedia/227c856b-4b8d-45b6-964e-b254cf126fbd/uae_desktop.jpg.xml?width=1400&height=540&ext=.jpg,law offices in Dubai and the United Arab Emirates,"<p>The Middle East is a fast-growing region, and the United Arab Emirates (UAE) is strategically located in the Arabian Peninsula, sharing borders with Saudi Arabia and Oman. Historically reliant on oil and gas, the <abbr title=""United Arab Emirates"">UAE</abbr> has spent the past decade diversifying its economy into other sectors, including tourism, institutional investments, and real estate. The <abbr title=""United Arab Emirates"">UAE</abbr> is quickly becoming a global commercial hub with increasingly liberal economic policies. The <abbr title=""United Arab Emirates"">UAE</abbr> is a federation of seven Emirates Abu Dhabi, Dubai, Sharjah, Ajman, Umm Al Quwain, Fujairah and Ras Al Khaimah.</p>

<p>We see a large number of international businesses seeking to set up operations in the <abbr title=""United Arab Emirates"">UAE</abbr>, with multinational retailers and food and beverage companies particularly keen to expand their brands and concepts into this market. There is also a lot of encouragement from the government for the technology sector, with a growing number of government-linked and family-backed incubators in support of startups, and innovation taking place in the healthcare sector too.</p>

<p>With over 30 years&#39; experience in the region, Gowling WLG understands the Middle East and how to do business in the <abbr title=""United Arab Emirates"">UAE</abbr>. Our team consists of, individuals who have been in the region for more than eight years and who are recognised experts in their fields, we in addition have a sizeable number of multilingual lawyers who combine international expertise with local knowledge and influence.</p>

<p><a href=""~/en/services/"">Learn more about our expertise</a>.</p>

<p>Contact us to find out more about <a href=""~/en/thinkhouse/"">ThinkHouse</a>, our exclusive in-house training and networking programme for General Counsel and in-house lawyers.</p>
",GWLG.UAEDubai,header-mega-menu,NULL,b2d1e7f6-6e7d-4e76-becf-a5e3ca4ace74;23ef7ff4-756b-454c-a477-8dfedb1af5bc,NULL,~/getmedia/227c856b-4b8d-45b6-964e-b254cf126fbd/uae-dubai_desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/30c8c4f1-0b02-417b-ae37-ca2f1481abb8/uae-dubai_mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,NULL,NULL,0,NULL,NULL,NULL
34,/Global-Reach/Africa,fr-CA,1812C1C1-2B0C-40E7-9892-9894640DDE5A,Afrique,Afrique,"Gowling WLG possède une expérience solide et de longue date quant à la prestation de conseils reliés aux transactions dans divers secteurs partout en Afrique : ressources naturelles, énergie, infrastructure, transport et services financiers.",NULL,NULL,"<p>Gowling WLG possède une expérience solide et de longue date quant à la prestation de conseils reliés aux transactions dans divers secteurs partout en Afrique : ressources naturelles, énergie, infrastructure, transport et services financiers. Axés sur des secteurs clés, nos groupes juridiques reçoivent l&#39;appui de nos équipes très respectées dans les domaines du droit pénal des affaires, des différends d&#39;envergure internationale et de la fiscalité mondiale.</p>

<p>Possédant plus de vingt ans expérience dans le secteur des affaires en Afrique, nos professionnels juridiques ont noué des liens solides avec des chefs d&#39;entreprises, professionnels juridiques, gouvernements et institutions financières à l&#39;échelle du continent. Nous travaillons en étroite collaboration avec une clientèle diversifiée, y compris de grandes banques, des fonds de développement et de capital-investissement, ainsi que des organismes gouvernementaux et des entreprises œuvrant dans les secteurs des ressources naturelles, de l&#39;énergie, de l&#39;infrastructure, du transport, de la technologie et des télécommunications.</p>

<p>Reconnue pour sa vaste connaissance des différents secteurs et sa fine compréhension du contexte particulier de l&#39;Afrique sur les plans juridique, réglementaire, commercial et culturel, notre équipe se démarque également par sa capacité à structurer des transactions novatrices dans des territoires émergents, particulièrement dans les secteurs de l&#39;infrastructure et de l&#39;énergie.</p>

<p>Nous avons traité des transactions dans pratiquement tous les territoires de l&#39;Afrique. Les mandats entrepris pour des pays francophones de droit civil sont traités à partir de nos bureaux de <a href=""~/fr/offices/france/paris"">Paris</a> et <a href=""~/fr/offices/canada/montreal"">Montréal</a>, alors que pour la gestion de mandats visant des pays anglophones de common law, nous mettons à contribution nos équipes de <a href=""~/fr/offices/united-kingdom/london"">Londres</a>, <a href=""~/fr/offices/middle-east/dubai"">Dubaï</a>, <a href=""~/fr/offices/canada/toronto"">Toronto</a> et <a href=""~/fr/offices/canada/calgary"">Calgary</a>.</p>

<p>Nous passons un temps considérable à travailler sur le terrain en Afrique. Notre équipe bénéficie en outre de son alliance avec des cabinets juridiques réputés au Kenya, au Rwanda et en Afrique du Sud, ainsi que du réseau formé de cabinets alliés (cabinets juridiques et autres prestataires de services professionnels) dont nous disposons dans d&#39;autres territoires. Vous aurez ainsi accès aux meilleurs avocats et conseillers de l&#39;Afrique, tout en profitant de la portée et des ressources accrues d&#39;un cabinet juridique de portée mondiale.</p>

<h2>Mandats représentatifs en Afrique</h2>

<h3>Infrastructure</h3>

<ul>
	<li>Nous conseillons actuellement le ministère du Commerce et de l&#39;Industrie du Rwanda quant au développement d&#39;une série de projets de logistique commerciale, y compris des entrepôts de douane, des entrepôts fictifs, des parcs logistiques et des installations hors de la zone portuaire proprement dite au Kenya et en Tanzanie.</li>
	<li>Nous avons conseillé TradeMark East Africa et la Kenya Ports Authority quant à l&#39;élaboration d&#39;une loi habilitante visant le développement des ports au moyen de PPP.</li>
	<li>Nous avons agi à titre de principal conseiller juridique international auprès de la SFI alors qu&#39;une de ses équipes conseillait les gouvernements du Kenya et de l&#39;Ouganda quant à la concession conjointe des systèmes ferroviaires de ces deux pays. Ce projet a été désigné par Euromoney à titre de &laquo; projet africain de l&#39;année en infrastructures &raquo; et a valu à Gowling WLG d&#39;être classée deuxième dans le cadre des prix Innovative Lawyer décernés par le Financial Times.</li>
	<li>Nous avons conseillé le gouvernement de la République centrafricaine quant à la constitution et la structuration de contrats visant le nouvel aéroport international ainsi qu&#39;une zone économique spéciale à Bangui.</li>
</ul>

<h3>Énergie</h3>

<ul>
	<li>Nous conseillons actuellement la trésorerie nationale sud-africaine, le ministère de l&#39;Énergie sud-africain et la Banque de développement d&#39;Afrique du Sud quant au développement d&#39;un programme indépendant de production d&#39;électricité (de base et de pointe) axé sur trois technologies : la cogénération, le charbon, et tout récemment, le gaz naturel.</li>
	<li>Nous avons conseillé l&#39;EEHC et la SFI en ce qui concerne le développement, la conception, l&#39;ingénierie, la construction, le financement et l&#39;entretien d&#39;une installation de 2,5 milliards $ US, soit une centrale électrique à cycle combiné gaz de 2250 MW à Dairut, en Égypte.</li>
	<li>Nous conseillons actuellement les promoteurs quant à l&#39;ensemble des questions de financement et de réalisation de projet entourant un programme indépendant de production d&#39;électricité au Ghana, soit une centrale électrique à cycle combiné gaz de 720 MW, ainsi que relativement à un programme indépendant de production d&#39;électricité de 140 MW en Tanzanie.</li>
	<li>Nous avons conseillé Africa Growth and Energy Solutions quant au développement d&#39;une centrale solaire de 25 MW à la Sierra Leone, premier projet du genre au pays. Nous conseillons également ce même client dans le cadre d&#39;un projet de solarisation de pylônes de téléphone ainsi qu&#39;une série de mini-centrales hydrauliques au Cameroun.</li>
	<li>Nous avons conseillé Artumas Group inc. dans le cadre de négociations multipartites avec des organismes gouvernementaux de la Tanzanie, des prêteurs et d&#39;autres intervenants, relativement à un projet totalement intégré comprenant la production d&#39;énergie à partir du gaz, ainsi que la transmission et la distribution d&#39;énergie.</li>
</ul>

<h3>Ressources naturelles</h3>

<ul>
	<li>Nous avons conseillé BNP Paribas quant à une facilité d&#39;emprunt de 50 millions $ accordée à Sea Dragon Energy relativement à des concessions pétrolières et minières en Égypte.</li>
	<li>Nous avons conseillé HSBC, Standard Chartered, Nedbank et la SFI quant au financement de Petroceltic plc, lequel s&#39;élevait à 500 millions $ et comprenait des actifs d&#39;Égypte et d&#39;Algérie.</li>
	<li>Nous avons conseillé Cove Energy Plc relativement à son PAPE sur l&#39;AIM, une prise d&#39;intérêt dans certains actifs pétroliers et gaziers au Mozambique et en Tanzanie, un financement connexe de 42 millions &pound; ainsi qu&#39;une prise de contrôle subséquente chiffrée à 1,2 milliard &pound;.</li>
	<li>Nous avons conseillé Firestone Diamonds plc, une société cotée à l&#39;AIM, quant à l&#39;acquisition de Kopane Diamond Developments plc, qui possédait des actifs de 52,7 millions &pound; au Lesotho, ainsi que quant à un financement par emprunt et par actions de 225 millions $ US pour la construction et la mise en service de sa principale usine de traitement.</li>
	<li>Nous avons conseillé Hummingbird Resources Plc quant à diverses opérations : son admission à l&#39;AIM; un placement stratégique par la SFI; un financement par redevances avec Anglo Pacific; l&#39;acquisition du projet aurifère Yanfolila au Mali, lequel appartenait à Gold Fields; et l&#39;obtention d&#39;une facilité de financement de projet avec Taurus Mining Finance.</li>
</ul>

<p>Si vous souhaitez savoir comment nous pouvons aider votre entreprise à prospérer en Afrique et ailleurs, veuillez contacter <a href=""~/fr/people/jonathan-brufal"">Jonathan Brufal</a>.</p>
",GWLG.Africa,header-mega-menu,NULL,NULL,NULL,~/getmedia/69962997-0da6-4312-9181-0ef2d0f12c6e/africa_desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/c1d5cdef-351a-4800-946b-b46283eb5983/africa_mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,612ac63e-b8e8-4615-beb9-be3097aed2cf,NULL,0,NULL,NULL,NULL
37,/Global-Reach/Baltic-States,fr-CA,496D0841-AA63-45DB-A32D-191A0035A4FE,Pays Baltes,Pays Baltes,"Pour tirer profit des marchés florissants des pays Baltes, il vous faut compter sur des avocats qui en comprennent bien les rouages. Gowling WLG œuvre dans cette importante région depuis plusieurs années.",NULL,NULL,"<p>Pour tirer profit des marchés florissants des pays Baltes, il vous faut compter sur des avocats qui en comprennent bien les rouages. Gowling WLG œuvre dans cette importante région depuis plusieurs années.</p>

<p>Les pays Baltes : l&#39;Estonie, la Lettonie et la Lituanie - sont de petits pays qui ont beaucoup à offrir à des entreprises de l&#39;étranger. Ils figurent d&#39;ailleurs parmi les cinq meilleurs pays de l&#39;Europe de l&#39;Est et de la région de l&#39;Asie centrale au classement de la Banque Mondiale &laquo; facilité à faire des affaires &raquo; sur le plan des activités commerciales. Le climat propice aux affaires des pays Baltes en font un endroit attrayant pour les investissements et les affaires de nombreuses entreprises étrangères grâce, notamment, à certains des régimes commerciaux les plus libéraux du monde.</p>

<p>L&#39;équipe de Gowling WLG dans les pays Baltes remplit un double rôle. Nous aidons les clients de l&#39;extérieur de la région baltique à y choisir les conseillers tout désignés pour les aider avec leurs affaires. Notre connaissance exhaustive des cabinets et du marché juridiques de la région vous garantit l&#39;obtention des conseils dont vous avez besoin.</p>

<p>À l&#39;inverse, notre riche expérience nous permet d&#39;aider les clients établis dans les pays Baltes à lancer des opérations d&#39;affaires à l&#39;extérieur de la région, que ce soit par l&#39;intermédiaire d&#39;une acquisition, ou par le lancement de nouvelles opérations, et à répondre à leurs besoins juridiques continus.</p>

<p>Nous pouvons aussi vous aider à protéger et à faire respecter vos droits de PI dans les pays Baltes, y compris en ce qui a trait à la poursuite de demandes d&#39;enregistrement de brevets, de marques de commerce, à la coordination des oppositions et des litiges, et aux dossiers touchant la contrefaçon.</p>

<p>Les membres de notre équipe des pays Baltes rendent régulièrement visite à des clients et autres contacts en Estonie, Lettonie et Lituanie. Nous adoptons une approche concrète, et visitons souvent les installations de nos clients et rencontrons leur direction pour mieux saisir les défis qu&#39;ils doivent relever. Ces visites sont essentielles, tant pour connaître quelles sont les priorités de nos clients que pour leur fournir des conseils juridiques sur mesure en vue de les aider à atteindre leurs objectifs.</p>

<p>Notre équipe comprend un membre qui parle couramment le lithuanien, mais tous les membres parlent la langue des affaires des pays Baltes. Si vous souhaitez savoir comment nous pouvons aider votre entreprise à prospérer, veuillez contacter <a href=""~/fr/people/julian-henwood/"">Julian Henwood</a>, <a href=""mailto:kristina.berezonova@gowlingwlg.com"">Kristina Berezonova</a> ou <a href=""mailto:alexandra.mierins@gowlingwlg.com"">Alexandra Mierins</a>.</p>
",GWLG.BalticStates,header-mega-menu,NULL,NULL,NULL,~/getmedia/10576e3a-7a80-4c81-b6b8-6c12a117482a/baltic-states_desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/c148d22f-37ee-4d4b-acb1-8b8053e5cefc/baltic-states_mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,NULL,NULL,0,NULL,NULL,NULL
39,/Global-Reach/Belgium,fr-CA,A56F1189-2246-424A-A05F-9B3FD209EC74,Belgique,Belgique,Gowling WLG allie son expertise juridique et l'accès à un vaste réseau de contacts au sein des institutions européennes.,NULL,NULL,"<p>Bruxelles occupe une position centrale dans la vie politique et économique de l&#39;Europe. Les multinationales ont donc tout intérêt à disposer de conseillers établis en Belgique, qui connaissent les rouages de l&#39;Europe, sont à même d&#39;anticiper l&#39;orientation des législations futures, et peuvent leur donner accès à des décideurs clés.</p>

<p>Gowling WLG allie son expertise juridique et l&#39;accès à un vaste réseau de contacts au sein des institutions européennes.</p>

<p>Notre expérience nous permet de vous fournir des conseils stratégiques quant aux activités de l&#39;UE, y compris en ce qui a trait au droit de la concurrence au sein de l&#39;UE. Nous contribuons activement à plusieurs importantes organisations à Bruxelles, qui façonnent et font évoluer les politiques de l&#39;UE sur la concurrence et les réformes législatives.</p>

<p>Notre équipe primée en droit de la concurrence et de l&#39;UE fournit des conseils sur :</p>

<ul>
	<li>Les accords, pratiques et règlements de différends commerciaux</li>
	<li>La conformité au droit de la concurrence</li>
	<li>La réglementation de l&#39;UE</li>
	<li>Les marchés publics et les subventions de l&#39;État</li>
	<li>Le litige en droit de la concurrence, y compris des actions en dommages-intérêts</li>
	<li>Le contrôle des fusions au R.-U., dans l&#39;UE et le reste du monde</li>
	<li>Les enquêtes réglementaires, y compris les inspections à l&#39;improviste.</li>
</ul>

<p>Œuvrant auprès de sociétés nationales et multinationales, nous fournissons de judicieux conseils en matière de lois et de politiques. Pour en savoir davantage, veuillez communiquer avec <a href=""~/fr/people/bernardine-adkins"">Bernardine Adkins</a>.</p>
",GWLG.Belgium,header-mega-menu,NULL,ea97af58-91c6-4d94-b812-dcaaab2a4fcc,NULL,~/getmedia/038e80ec-9a15-4ead-baaa-57aad107cb69/belgium_desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/86e1d885-20d8-4850-b84f-2fae2d911a08/belgium_mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,2563a6d6-5f45-46c5-8698-e572a35f100b,NULL,0,NULL,NULL,NULL
40,/Global-Reach/Canada,fr-CA,5FA00627-155B-47C5-A583-EB62744CA703,Canada,Canada,"À titre de cabinet juridique de portée mondiale spécialisé dans des secteurs donnés, Gowling WLG peut vous aider à vous implanter et faire des affaires au Canada. ",NULL,NULL,"<p>Jouissant de ressources naturelles abondantes, d&#39;un système financier stable, et d&#39;infrastructures de calibre international, le Canada est reconnu dans le monde entier comme un lieu privilégié pour l&#39;investissement. Son généreux programme incitatif à la recherche et au développement, son faible taux d&#39;imposition des sociétés, et son accès facile aux principaux marchés américains en font une destination de choix pour les entreprises étrangères cherchant à s&#39;établir en Amérique du Nord.</p>

<p>À titre de cabinet juridique de portée mondiale spécialisé dans des secteurs donnés, Gowling WLG peut vous aider à vous implanter et faire des affaires au Canada. Forte de son expertise qui couvre une vaste gamme de services et de secteurs, notre équipe comprend les défis uniques auxquels vous faites face et est particulièrement bien placée pour vous aider à réussir.</p>

<p>Notre équipe canadienne se compose de plus de 700 professionnels juridiques œuvrant dans 7 villes à l&#39;échelle du pays.</p>
",GWLG.Canada,header-mega-menu,NULL,8bf72d3f-e216-4fdd-b0be-52d41a644293;99ff96bc-6649-4ada-8d31-93d1e5409024;cb61c4c1-d0cf-4aa1-ba0b-5dab5dc99393;4eebbc16-5ec7-4186-b6bb-a7f0cf2f7ca4;b2dc4461-dc66-4f96-9ae6-32bc2b14259d;afd10be7-206c-4f2d-9094-257d6b5e7bcc;5cf9e103-2a23-401f-8d01-81abc3653158,NULL,~/getmedia/2ffaee02-ec02-478d-8805-41eb9e375342/canada_desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/4d899e55-34f3-4c31-8843-0f14e27034c3/canada_mobile.jpg.xml?width=500&height=550&ext=.jpg,0,has-bg-righ,NULL,NULL,a382790c-4718-4e75-a6f5-05c801aee1ad;e9e1bd96-06f4-4226-9552-134dc62b5ae6;d3cb8305-d51a-45bf-958b-873716e2cea6;ce7f6c10-9785-4b35-845d-d9c8e2fa6c49,NULL,0,NULL,NULL,NULL
41,/Global-Reach/Central-and-Eastern-Europe,fr-CA,697C3ED9-D513-4F9E-8B46-06766E9AEB67,Europe centrale et orientale,Europe centrale et orientale,"Nous agissons régulièrement pour des clients provenant de chaque pays de l'ECO : nous fournissons des conseils relatifs au droit anglais, et collaborons étroitement avec des cabinets juridiques locaux avec qui nous entretenons des liens solides.",NULL,NULL,"<p>L&#39;Europe centrale et orientale (ECO) est une région vaste et diversifiée. Elle offre de nombreuses occasions d&#39;affaires et représente un secteur d&#39;intérêt pour Gowling WLG. Nous agissons régulièrement pour des clients provenant de chaque pays de l&#39;ECO : nous fournissons des conseils relatifs au droit anglais, et collaborons étroitement avec des cabinets juridiques locaux avec qui nous entretenons des liens solides.</p>

<p>Le rôle de l&#39;équipe de l&#39;ECO de Gowling WLG est double. De l&#39;extérieur de la région, nous aidons nos clients d&#39;ailleurs à sélectionner les conseillers juridiques les plus adéquats dans chaque pays concerné pour les assister dans leurs affaires en ECO. Grâce à notre connaissance approfondie des cabinets et des marchés juridiques de la région, vous recevrez les conseils dont vous avez besoin.</p>

<p>De l&#39;intérieur de la région, nous tirons profit de notre riche expérience pour aider nos clients qui ont des activités en ECO en leur offrant des conseils relatifs au droit anglais, en établissant leurs opérations commerciales à l&#39;échelle internationale (au moyen d&#39;une acquisition ou d&#39;opérations entièrement nouvelles) et en s&#39;occupant continuellement de leurs besoins juridiques.</p>

<p>Les membres de notre équipe visitent régulièrement leurs clients et leurs contacts dans les grands centres d&#39;affaires de la région, et se rendent annuellement à Varsovie, à Vienne, à Budapest, à Bucarest et à Sofia.</p>

<p>Lorsque nous sommes en visite, nous adoptons une approche pratique : nous visitons souvent les locaux de nos clients et rencontrons les membres de la direction pour nous permettre de mieux comprendre les enjeux auxquels ils font face. Ces visites sont essentielles pour connaître les priorités de nos clients et pour adapter nos conseils juridiques de façon à ce qu&#39;ils puissent atteindre leurs objectifs.</p>

<p>Par ailleurs, même si l&#39;anglais est une langue couramment parlée en Europe centrale et orientale, notre équipe se compose de membres maîtrisant le polonais, le hongrois, le français et l&#39;allemand. Ainsi, vous recevrez toujours un service sans faille, et ce, peu importe la langue dans laquelle vous, ou vos partenaires d&#39;affaires, vous exprimez. Si vous souhaitez savoir comment nous pouvons contribuer au succès de votre entreprise, veuillez contacter <a href=""~/fr/people/tom-price/"">Tom Price</a>&nbsp;ou&nbsp;<a href=""~/fr/people/rafal-wrzesien/"">Rafal Wrzesien</a>.</p>
",GWLG.CentralEasternEurope,header-mega-menu,NULL,NULL,NULL,~/getmedia/2b6f877b-0edb-466d-afcc-278eb59c1723/central-and-eastern-europe_desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/36beba72-5f4b-416a-81ee-77ddba43521a/central-and-eastern-europe_mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,NULL,NULL,0,NULL,NULL,NULL
42,/Global-Reach/Channel-Islands,fr-CA,8BECE49C-B191-45E3-8323-ED167A557775,Îles Anglo-Normandes,Îles Anglo-Normandes,Gowling WLG aide à coordonner la prestation de services juridiques aux clients à la recherche d'occasions d'affaires aux Îles Anglo-Normandes.,NULL,NULL,"<p>Gowling WLG aide à coordonner la prestation de services juridiques aux clients à la recherche d&#39;occasions d&#39;affaires aux Îles Anglo-Normandes. Nous travaillons aussi avec des clients qui y sont établis désirant faire des affaires à l&#39;extérieur de la région.</p>

<p>Pour découvrir comment nous pouvons contribuer à votre succès, veuillez contacter <a href=""~/fr/people/daniel-lacelle/"">Daniel Lacelle</a> ou <a href=""~/fr/people/james-sidwell/"">James Sidwell</a>.</p>
",GWLG.ChannelIslands,header-mega-menu,NULL,NULL,NULL,~/getmedia/d1f24dcd-dd15-4a48-9481-2d614a29acc9/channel-islands_desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/492000b4-caef-4780-a0f8-3aa4456b2657/channel-islands_mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,NULL,NULL,0,NULL,NULL,NULL
43,/Global-Reach/China,fr-CA,D894B34A-A633-49AD-84BE-F68E423E065D,Chine,Chine,"Que vous soyez une entreprise établie en Chine à la recherche d'orientation dans le cadre de transactions à l'étranger, ou une entité qui fait des affaires en Chine, Gowling WLG peut vous guider vers la réussite.",NULL,NULL,"<p>La croissance de la Chine se poursuit à une cadence rapide et soutenue. Son influence s&#39;étend maintenant dans les marchés et économies clés du monde entier. Ce pays offre de nombreuses occasions commerciales tant pour les investisseurs du pays que de l&#39;étranger, mais comment en tirer le meilleur profit?</p>

<p>Il faut faire appel à un cabinet juridique qui connaît ces occasions. Que vous soyez une entreprise établie en Chine à la recherche d&#39;orientation dans le cadre de transactions à l&#39;étranger, ou une entité qui fait des affaires en Chine, Gowling WLG peut vous guider vers la réussite.</p>

<p>Bénéficiant d&rsquo;un bureau de représentation à Guangzhou et de bureaux de représentation corporative à Beijing et à Shanghai &ndash; et jouissant de sa présence établie et d&rsquo;un réseau dans la ZAS de <a href=""~/fr/global-reach/ch/hong-kong"">Hong Kong</a> &ndash; le groupe de pratique de la Chine de Gowling WLG fournit l&#39;alliance parfaite de savoir-faire juridique et de sensibilité culturelle. En effet, nos membres :</p>

<ul>
	<li>détiennent une expertise dans une variété de secteurs : la technologie, la fabrication de pointe, l&#39;automobile, l&#39;aérospatiale, l&#39;énergie, les ressources naturelles, les sciences de la vie, la finance et l&#39;immobilier</li>
	<li>possèdent une riche expérience et des connaissances éprouvées du droit et des coutumes de Chine</li>
	<li>parlent couramment l&#39;anglais, le mandarin, le cantonnais et autres langues</li>
</ul>

<p>Nos liens avec la Chine sont d&#39;autant plus solides que nous entretenons de fructueuses relations de longue date avec un bon nombre des plus importants cabinets de services professionnels, organisations, sociétés d&#39;État, et associations spécialisées dans la promotion du commerce et de l&#39;investissement transfrontalier de la Chine.</p>

<h2>De la Chine au monde entier</h2>

<p>Que vous soyez une PME sur le point de pénétrer le marché ou une multinationale établie dans le pays, Gowling WLG soutient les clients qui ont des intérêts commerciaux en Chine continentale.</p>

<p>Le groupe Chine de Gowling WLG parle anglais, mandarin, cantonnais et français, et est à même de fournir des conseils stratégiques sur le terrain quant à des questions telles que :</p>

<ul>
	<li>Le dépôt de demandes en propriété Intellectuelle (PI)</li>
	<li>Les poursuites de demande d&#39;enregistrement, la protection et le litige en PI</li>
	<li>La constitution en société et le droit des affaires</li>
	<li>Les services de secrétariat d&#39;entreprise</li>
	<li>Les fusions et acquisitions</li>
	<li>Les transactions commerciales</li>
	<li>La réglementation</li>
	<li>Le droit du travail et de l&#39;emploi</li>
</ul>

<p>Afin de vous offrir des résultats optimaux et des plus efficaces, nous mettons à profit notre réseau de confiance en Chine continentale. Constitué de cabinets juridiques, d&#39;enquêteurs privés et d&#39;autres mandataires spécialisés œuvrant sur le terrain, ce réseau est mis à votre disposition quels que soient le type d&#39;affaires que vous menez au pays.</p>

<h2 align=""left"">Services de PI en Chine</h2>

<p align=""left"">Le marché de la Chine affiche la croissance la plus rapide à l&rsquo;échelle mondiale en ce qui concerne les enregistrements de PI&nbsp;: en 2018, plus d&rsquo;un million de nouvelles demandes de brevets et plus de 7&nbsp;millions de nouvelles demandes de marques de commerce ont été déposées. Pour les entreprises cherchant à atténuer le risque et à tirer profit de nouvelles occasions, la protection des actifs de PI en Chine devrait être un élément essentiel de toute stratégie.</p>

<p>C&rsquo;est pourquoi Gowling WLG est heureuse d&rsquo;offrir à ses clients une vaste gamme de services de PI couvrant les dépôts, les poursuites de demandes, l&rsquo;octroi de licences et la protection de PI depuis ses bureaux de Beijing et de Guangzhou. Notre équipe de PI de renommée internationale possède les connaissances et les ressources nécessaires pour vous appuyer durant le cycle de vie complet de votre portefeuille de PI.</p>

<h2>Pour en savoir plus</h2>

<p>Peu importe la nature de vos affaires en Chine ou vos besoins à l&#39;extérieur de ce pays, vous recevrez le même excellent niveau de service, de valeur et d&#39;expertise de Gowling WLG.</p>

<p>Si vous souhaitez savoir comment nous pouvons aider votre entreprise à prospérer, veuillez contacter n&#39;importe quel membre de notre groupe Chine.</p>
",GWLG.China,header-mega-menu,NULL,34ab8a48-a846-42c3-a744-5d9a204337b9;56348bc9-63bc-42ff-8507-e285eb9a41eb;5877b7e5-94e1-47fc-814e-aff2cff43806,NULL,~/getmedia/93d08936-4165-4bea-9d3d-27933b816487/china_desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/f269e875-73e7-4810-9250-1b4435bc2d38/china_mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,bb6e4e98-2d11-42a4-a949-3c3e7a8225f0;9a7a979c-500a-45ae-b4fd-1fed3f6bd376;8ad0e3f6-68e6-45b9-a509-c5811ebc77af,Personnes-ressources,0,NULL,NULL,NULL
44,/Global-Reach/Cuba,fr-CA,8CEE5C73-94D5-4BDE-B496-B841619185F6,Cuba,Cuba,L'environnement commercial de Cuba offre aux entreprises internationales une occasion unique de se positionner de manière stratégique dans une économie émergente. Nous voulons vous aider à tirer pleinement parti des opportunités de commerce et d’investissement sur ce marché en croissance.,NULL,NULL,"<p>Le contexte commercial actuel de Cuba offre aux entreprises internationales une occasion unique de se positionner stratégiquement dans une économie émergente. Chez Gowling WLG, nous voulons vous aider à profiter pleinement des perspectives de commerce et d&#39;investissement que présente ce marché en pleine croissance.</p>

<p>Gowling WLG est en mesure de vous offrir des services consultatifs stratégiques à Cuba, grâce à Gowling WLG Consulting (Canada) inc., et de vous aider à cerner les occasions d&#39;affaires rentables dans divers secteurs (énergie, infrastructure, immobilier, tourisme et télécommunications).</p>

<p>Bien que nous ne pratiquions pas le droit cubain, vous pouvez profiter de l&#39;expertise collective de nos avocats et autres professionnels qui possèdent tous des connaissances approfondies en matière de commerce et de transactions, que ce soit à Cuba ou ailleurs en Amérique latine. Vous pouvez aussi obtenir les précieux conseils de notre <a href=""~/fr/people/gregory-biniowsk"">représentant permanent à La Havane</a>, un ressortissant canadien qui vit et œuvre à Cuba depuis plus de 20 ans.</p>

<p>Notre équipe mondiale œuvre à partir de bureaux partout au Canada, au Royaume-Uni, ailleurs en Europe, en Asie et au Moyen-Orient, et se compose d&#39;avocats hispanophones possédant une expertise et des connaissances approfondies en matière de droit civil. Ces derniers sont en mesure de collaborer avec les conseillers locaux cubains, de suivre et de coordonner les projets et le travail, ainsi que de superviser l&#39;intégration de ce travail en tenant compte des considérations et normes juridiques du Canada, de l&#39;Angleterre et d&#39;ailleurs dans le monde.</p>

<p>À Cuba, notre réseau est vaste : nous pouvons vous mettre en contact avec tous les niveaux du gouvernement, et vous présenter aux membres importants du secteur privé du commerce cubain. Nous maintenons également des relations étroites avec de nombreux cabinets juridiques du pays, et prenons les mesures nécessaires pour assurer une prestation de services juridiques uniforme.</p>

<p>Les services consultatifs stratégiques de Gowling WLG offerts à Cuba aux clients internationaux comprennent :</p>

<ul>
	<li>le repérage et l&#39;étude d&#39;occasions d&#39;investissement et de commerce</li>
	<li>la gestion de projets et de dossiers pour les entreprises à l&#39;étape de l&#39;établissement, ce qui inclut la collaboration avec des conseillers et des représentants gouvernementaux cubains</li>
	<li>la prestation de conseils stratégiques généraux sur la rentabilité des propositions d&#39;affaires fondés sur nos connaissances approfondies du contexte politique et économique de Cuba</li>
	<li>la prestation de conseils d&#39;affaires généraux sur les investissements et les processus d&#39;import/export cubains</li>
	<li>l&#39;impartition de services de traduction et d&#39;interprétation simultanée de l&#39;espagnol vers l&#39;anglais</li>
	<li>l&#39;organisation de présentations avec des conseillers en services et des acteurs locaux</li>
	<li>l&#39;organisation de réunions stratégiques avec des associés cubains et de hauts fonctionnaires gouvernementaux</li>
	<li>l&#39;assistance logistique nécessaire pour les voyages clients à Cuba, y compris le soutien relatif aux visas d&#39;affaires, à l&#39;hébergement et au transport.</li>
</ul>

<p>Nous offrons également des conseils relatifs au commerce international et au contexte réglementaire, des conseils juridiques relatifs aux transactions, ainsi que notre soutien en ce qui a trait, entre autres, à la gestion et au développement de projets. En collaboration avec nos collègues du groupe de l&#39;Amérique latine du cabinet, et de nombreux autres secteurs et domaines de pratiques, nous pouvons vous aider, quelle que soit la question ou la transaction que vous souhaitez effectuer à Cuba.</p>

<p>Grâce à notre groupe consultatif juridique stratégique cubain, Gowling WLG peut vous aider à prospérer dans le marché émergent de Cuba. Pour en savoir davantage, veuillez communiquer avec <a href=""~/fr/people/france-tenaille"">France Tenaille</a>, <a href=""~/fr/people/ralph-lean"">Ralph Lean</a> ou <a href=""~/fr/people/andrew-witts"">G</a><a href=""~/en/people/gregory-biniowsky"">regory Biniowsky</a>.</p>

<h2>Actualités et couverture médiatique</h2>

<ul>
	<li>Couverture médiatique : From Havana, this lawyer advises international companies on deals <em>(Cuba Trade)</em></li>
	<li>Couverture médiatique : <a href=""http://www.iheartradio.ca/cjad/site-search-local-7.15195981?searchField=Biniowsky&amp;tab=audiocut"" target=""_blank"">A Canadian in Havana</a> <em>(CJAD)</em></li>
	<li>Couverture médiatique : <a href=""~/fr/insights-resources/articles/2016/cuba-post-castro-what-happens-now/"">Cuba, post-Castro: What happens now?</a></li>
	<li>Couverture médiatique : <a href=""http://www.theglobeandmail.com/news/world/us-cuba-relations-up-in-the-air-as-trump-threatens-to-reintroduce-sanctions/article33065633/"" target=""_blank"">U.S.-Cuba relations up in the air as Trump threatens to reintroduce sanctions</a><em> (The Globe and Mail)</em></li>
	<li>Couverture médiatique : <a href=""http://ici.radio-canada.ca/tele/le-telejournal-22h/2016-2017/segments/reportage/10964/justintrudeau-cuba-visiteofficielle-diplomatie?isAutoPlay=1"" target=""_blank"">Justin Trudeau à Cuba</a> <em>(Telejournal)</em></li>
	<li>Actualités : <a href=""~/fr/insights-resources/articles/2016/weakened-u-s-embargo-against-cuba-background-for/"">Weakened U.S. embargo against Cuba: Background for Canadian businesses</a></li>
	<li>Actualités : Doing business in Cuba: The tension between the U.S. embargo against Cuba and Canada&#39;s <em>Foreign Extraterritorial Measures Act</em></li>
	<li>Couverture médiatique : <a href=""http://en.granma.cu/cuba/2016-08-22/cubas-canadian-friend"" target=""_blank"">Cuba&#39;s Canadian friend</a> <em>(Granma)</em></li>
	<li>Couverture médiatique : <a href=""http://ktpress.rw/2016/03/kagame-looking-forward-to-visit-cuba/"" target=""_blank"">Gregory Biniowsky appointed Rwanda&#39;s honorary consul to Havana</a> <em>(KT Press)</em></li>
	<li>Actualités : <a href=""~/fr/insights-resources/articles/2016/the-cuba-moment-is-finally-ripe-and-ottawa-isn-t/"" target=""_blank"">The Cuba moment is finally ripe, and Ottawa isn&#39;t seizing it</a> <em>(The Globe and Mail)</em></li>
	<li>Couverture médiatique : <a href=""http://www.cbc.ca/player/play/2685682789"" target=""_blank"">Obama visits Cuba</a> (CBC&#39;s <em>The Exchange, </em>1:55 minute mark)</li>
	<li>Couverture médiatique : <a href=""http://www.torontosun.com/2016/03/20/canadian-companies-need-to-cash-in-on-cuba"" target=""_blank"">Canadian companies need to cash in on Cuba</a> <em>(Toronto Sun)</em></li>
	<li>Couverture médiatique : <a href=""http://www.theglobeandmail.com/report-on-business/industry-news/the-law-page/gowlings-enters-thawing-cuban-market/article23582794/"" target=""_blank"">Gowlings enters thawing Cuba market</a> <em>(The Globe and Mail)</em></li>
</ul>
",GWLG.Cuba,header-mega-menu,NULL,NULL,NULL,~/getmedia/ef46f4d6-5b77-4975-b15e-619f3eacc71f/cuba_desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/db98226d-a877-4bc7-973b-15ae996f8625/cuba_mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,d78233a4-45b3-42d2-97bc-0db06ee57cd2;c2707153-6c2a-40cf-b26a-c92ea4cf53be;212c3002-b886-4871-a32d-fff0b120b92d,NULL,0,NULL,NULL,NULL
45,/Global-Reach/Cyprus,fr-CA,F46F146C-3552-491F-A18C-EFFE0051C941,Chypre,Chypre,Gowling WLG aide à coordonner la prestation de services juridiques aux clients à la recherche d'occasions d'affaires à Chypre. Nous travaillons aussi avec des clients qui y sont établis désirant faire des affaires à l'extérieur du pays.,NULL,NULL,"<p>Gowling WLG aide à coordonner la prestation de services juridiques aux clients à la recherche d&#39;occasions d&#39;affaires à Chypre. Nous travaillons aussi avec des clients qui y sont établis désirant faire des affaires à l&#39;extérieur du pays.</p>

<p>Pour découvrir comment nous pouvons contribuer à votre réussite, veuillez contacter <a href=""~/fr/people/daniel-lacelle/"">Daniel Lacelle</a> ou <a href=""~/fr/people/andy-stylianou/"">Andy Stylianou</a>.</p>
",GWLG.Cyprus,header-mega-menu,NULL,NULL,NULL,~/getmedia/f174188d-5e23-45f6-ae57-e02722c8778c/cyprus_desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/119a0d78-9ba7-4396-b04c-d0991867107c/cyprus_mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,NULL,NULL,0,NULL,NULL,NULL
49,/Global-Reach/Germany,fr-CA,61161A40-95D2-4D76-83FC-484472E3F767,Allemagne,Allemagne,"Nos avocats allemands s'expriment couramment en français, anglais, espagnol et italien. Ainsi, ils saisissent rapidement les enjeux qui vous concernent, peu importe le pays, et peuvent rapidement intervenir et interpréter les décisions clés rendues par les tribunaux européens et internationaux.",NULL,NULL,"<p>À titre d&#39;économie la plus puissante et importante d &#39;Europe, l&#39;Allemagne est reconnue pour ses entreprises florissantes depuis des décennies. Attentive au pouls du monde des affaires en Allemagne, et toujours à l&#39;affût des dernières occasions, notre équipe vous aide à y obtenir les meilleurs résultats commerciaux.</p>

<p>Nous offrons les services suivants :</p>

<ul>
	<li>Droit commercial</li>
	<li>Droit des entreprises, fusions et acquisitions et marchés financiers</li>
	<li>Litige et règlements de différends</li>
	<li>Projets</li>
	<li>Propriété intellectuelle</li>
	<li>Publicité et réglementation de produits</li>
	<li>Technologie de l&#39;information et protection des données</li>
</ul>

<p>&hellip;et nous les offrons à des clients œuvrant dans des secteurs diversifiés, dont les suivants :</p>

<ul>
	<li>Aliments et boissons</li>
	<li>Aviation, aéronautique et défense</li>
	<li>Commerce de détail et loisir</li>
	<li>Construction et génie</li>
	<li>Droit de la santé</li>
	<li>Énergie</li>
	<li>Industrie automobile</li>
	<li>Sciences de la vie</li>
	<li>Technologie</li>
</ul>

<p>Nous travaillons en étroite collaboration avec nos collègues d&#39;autres pays pour vous offrir tous les services dont vous avez besoin : qu&#39;il s&#39;agisse d&#39;une transaction comportant des contrats transfrontaliers, de questions de PI, de protection de données ou de litige, nous appliquons nos connaissances en fonction des particularités de la transaction pour vous aider à atteindre vos objectifs. Voilà pourquoi &laquo; Depuis que Gowling WLG a pignon sur rue à Munich, le cabinet ne cesse de prendre de l&#39;ampleur&raquo; (<em>IAM 1000, The World&#39;s Leading Patent Professionals 2016</em>).</p>

<p>Nos avocats allemands s&#39;expriment couramment en français, anglais, espagnol et italien. Ainsi, ils saisissent rapidement les enjeux qui vous concernent, peu importe le pays, et peuvent rapidement intervenir et interpréter les décisions clés rendues par les tribunaux européens et internationaux. Pour en savoir davantage, communiquez avec <a href=""~/fr/people/andreas-woelfle/"">Andreas Woelfle</a>.</p>
",GWLG.Germany,header-mega-menu,NULL,a1545ae9-a498-4b1d-b5e5-a71093fb7f2b;390d3721-96d1-4af7-a8d3-f3db8b09aeb6,NULL,~/getmedia/f0fc89de-5bf9-4e31-9962-49453baa2086/germany_desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/ea6cae34-5c0e-483b-9394-f159b0866450/germany_mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,199becac-9a85-4082-aec2-fd0969f7da84,NULL,0,NULL,NULL,NULL
51,/Global-Reach/India,fr-CA,6A6F8D73-8AEF-4F01-B628-786366F79AA5,Inde,Inde,Le groupe de relations internationales avec l’Inde de Gowling WLG possède une impressionnante feuille de route en matière de prestation de conseils à certaines des plus importantes entreprises du pays – et à certains particuliers fortunés - quant à leurs activités internationales. ,NULL,NULL,"<p>Le groupe de relations internationales avec l&#39;Inde de Gowling WLG possède une impressionnante feuille de route en matière de prestation de conseils à certaines des plus importantes entreprises du pays - et à certains particuliers fortunés - quant à leurs activités internationales. Ce bilan exemplaire englobe également la prestation de conseils à des entreprises de l&#39;Europe, du Moyen-Orient et de l&#39;Amérique du Nord pour leurs activités en Inde.</p>

<p>Notre position parmi les meilleurs conseillers au monde pour les entreprises indiennes a été reconnue par le <em>Indian Business Law Journal</em> qui décrit Gowling WLG comme un cabinet juridique international chef de file en matière de mandats touchant l&#39;Inde.</p>

<p>Établie dans divers bureaux répartis dans le monde, notre équipe offre un vaste éventail de services juridiques et affiche une présence dans plusieurs juridictions clés pour les entreprises indiennes : le Royaume-Uni, l&#39;Allemagne, Dubaï, Singapour, la Chine, le Canada et la France. L&#39;équipe se compose d&#39;avocats œuvrant en droit des sociétés, en capital d&#39;investissement et fiscalité, mais aussi de spécialistes des secteurs les plus actifs pour les entreprises indiennes : le génie, la technologie, les sciences de la vie, l&#39;énergie, les ressources, le secteur hôtelier et le commerce de détail.</p>

<p>Plus particulièrement, l&#39;équipe de relations internationales avec l&#39;Inde de Gowling WLG possède une riche expérience de prestation de conseils à des entreprises et des institutions financières indiennes en matière de fusions et acquisitions publiques et privées, de marchés des capitaux (les PAPE sur l&#39;AIM et le marché principal ainsi que les financements secondaires), de coentreprises et de collaborations, de banques et de finance, de transactions commerciales en PI/TI et de transactions immobilières. Le cabinet figure d&#39;ailleurs au premier rang en ce qui a trait aux PAPE sur l&#39;AIM (selon le guide <em>AIM Advisers Rankings </em>de 2016), et a participé à plus de 40 % des PAPE sur l&#39;AIM d&#39;entreprises commerciales indiennes en plus de continuer à agir pour un certain nombre de ces dernières. Nous collaborons aussi étroitement avec notre équipe chef de file en capital-investissement pour offrir aux promoteurs indiens et leurs familles une vaste gamme de services.</p>

<p>Les membres du groupe Inde se rendent régulièrement sur le terrain pour y établir et entretenir des relations avec des cabinets et des conseillers juridiques, des dirigeants d&#39;entreprises, des institutions financières et des gouvernements locaux en plus de demeurer au fait des derniers développements dans le paysage des affaires. Forts de ces connaissances, ils peuvent conseiller nos clients indiens en ce qui a trait à leurs marchés mondiaux et nos clients internationaux qui souhaitent profiter de la croissance de l&#39;Inde.</p>

<p>Œuvrer sur place pendant un laps de temps significatif nous permet de tisser des liens avec des conseillers professionnels triés sur le volet qui finissent par faire partie intégrante de notre équipe. En retenant nos services, vous aurez accès aux meilleurs conseillers dont la force est combinée à nos vastes ressources et à notre expertise de plus de vingt ans d&#39;activités d&#39;affaires en Inde.</p>

<p>Les membres de notre groupe entretiennent également de solides relations avec la communauté d&#39;affaires indienne au moyen d&#39;activités locales dans diverses associations commerciales. Et grâce à notre immersion dans les communautés d&#39;affaires indo-canadienne et indo-britannique, nous connaissons bien les multiples facettes de l&#39;environnement culturel et commercial de l&#39;Inde.</p>

<p>Nous savons ce que les clients indiens veulent et attendent de leurs conseillers à l&#39;étranger : un excellent service, des conseils de grand calibre et plus de certitude quant aux coûts; le tout offert par des personnes qui ont les qualifications, l&#39;expérience et les connexions pour aider les entreprises internationales à percer sur un territoire où l&#39;expertise et les connaissances du marché sont cruciales. Gowling WLG saura répondre à toutes vos attentes.</p>

<h2>Expérience</h2>

<p>Voici quelques-uns de nos clients et mandats représentatifs :</p>

<ul>
	<li>La Banque Nationale de l&#39;Inde quant à une variété de dossiers bancaires</li>
	<li>Mortice Limited, une entreprise de gestion de sécurité et d&#39;installations inscrite à l&#39;AIM quant à son acquisition d&#39;Office &amp; General Group Limited établie au Royaume-Uni</li>
	<li>Jaguar Land Rover relativement à un vaste éventail de dossiers juridiques</li>
	<li>Une entreprise chef de file des TI de voyage du Royaume-Uni quant à son acquisition d&#39;une exploitation de mise à l&#39;essai de logiciels en Inde</li>
	<li>Greenko Group plc relativement à la vente de sa filiale enregistrée à Maurice, Greenko Mauritius, pour la somme de 250 millions $</li>
	<li>Eicher Motors quant à son acquisition de Harris Products Ltd, une entreprise chef de file de conception-construction de motocyclettes</li>
	<li>Mahindra dans le cadre d&#39;une fusion et acquisition transfrontalière</li>
	<li>Tube Investments of India Limited, faisant partie du Murugappa Group, quant à son acquisition de Sedis</li>
	<li>Delta Magnets, un fabricant d&#39;aimants établi à Mumbai, relativement à son acquisition de MMG Magdev Limited et de MMG India Private limited &ndash; deux filiales de TT Electronics plc</li>
	<li>Philips Electronics quant à sa tentative d&#39;acquérir un fabricant de composantes automobiles inscrit à la cote de Mumbai</li>
	<li>JSW Energy Limited relativement à son acquisition de CIC Energy Corporation, une entreprise canadienne inscrite à la cote</li>
	<li>Patni Computer Systems Limited quant à son entente de partenariat de 200 millions $ avec The Carphone Warehouse, le fournisseur FTSE de services téléphoniques du R.-U.</li>
	<li>Lalit Hotel Group relativement à une fusion et acquisition transfrontalière</li>
	<li>Essar à l&#39;égard de contrats commerciaux du R.-U.</li>
	<li>Saksoft Solutions Limited relativement à ses activités d&#39;affaires en Allemagne et au R.-U.</li>
</ul>

<p>Pour savoir comment nous pouvons vous aider à faire croître vos affaires ou intérêts à l&#39;extérieur de l&#39;Inde ou développer vos intérêts commerciaux en Inde, communiquez avec <a href=""~/fr/people/anurag-ragi-singh"">Anurag (Ragi) Singh</a> ou <a href=""~/fr/people/sunil-kakkad"">Sunil Kakkad</a>.</p>
",GWLG.India,header-mega-menu,NULL,NULL,NULL,~/getmedia/8657ae24-33ee-470e-ba7f-87aca6b8ffc0/india_desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/f35fdb59-74d1-47fd-9e43-e5f73930beb0/india_mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,04b8437f-d586-44f4-be8e-17baff70c905;e296f021-59e1-410e-a0ad-0626e49ce506,NULL,0,NULL,NULL,NULL
52,/Global-Reach/Ireland,fr-CA,F12B88E6-9BEE-480A-BED6-060BB0BA4FC1,Irlande,Irlande,Gowling WLG aide à coordonner la prestation de services juridiques aux clients ayant des intérêts commerciaux en Irlande du Nord et en Irlande du Sud. Nous travaillons aussi avec des clients qui y sont établis et qui souhaitent faire des affaires à l'étranger.,NULL,NULL,"<p>Gowling WLG aide à coordonner la prestation de services juridiques aux clients ayant des intérêts commerciaux en Irlande du Nord et en Irlande du Sud. Nous travaillons aussi avec des clients qui y sont établis et qui souhaitent faire des affaires à l&#39;étranger.</p>

<p>Notre équipe suit l&#39;évolution des affaires en Irlande de près et comprend bien les enjeux juridiques et économiques au pays. Elle dirige les clients internationaux vers des cabinets d&#39;avocats bien placés en Irlande pour prêter leur concours à des transactions et des projets dans différents secteurs d&#39;activités clés. La portée mondiale de Gowling WLG au Royaume-Uni, au Canada, ailleurs en Europe, en Asie et au Moyen-Orient nous permet aussi d&#39;aider les entreprises clientes irlandaises qui souhaitent conduire leurs affaires au-delà de l&#39;Irlande.</p>

<p>Nous rendons fréquemment visite à nos clients et cabinets d&#39;avocats &laquo; amis &raquo; à Dublin et à Belfast, et nous nous engageons à fournir aux sociétés et aux cabinets juridiques irlandais un service rapide et adapté, et des conseils personnalisés de calibre mondial.</p>

<p>Pour découvrir comment nous pouvons contribuer à votre réussite, veuillez contacter <a href=""~/fr/people/w-ian-palm/"">Ian Palm</a>.</p>
",GWLG.Ireland,header-mega-menu,NULL,NULL,NULL,~/getmedia/4c8656f5-f2c9-4656-996a-646fdc8755bd/ireland_desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/95ad1e8b-5fb6-4729-a684-18ad33eb0eb9/ireland_mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,7e822e16-356b-4251-84ae-83b9293fa418,NULL,0,NULL,NULL,NULL
53,/Global-Reach/Italy,fr-CA,D8B93E0B-453B-4280-AA67-3F8F7E58B623,Italie,Italie,Gowling WLG aide à coordonner la prestation de services juridiques aux clients à la recherche d'occasions d'affaires en Italie. Nous travaillons aussi avec des clients qui y sont établis désirant faire des affaires à l'extérieur du pays.,NULL,NULL,"<p>Gowling WLG aide à coordonner la prestation de services juridiques aux clients à la recherche d&#39;occasions d&#39;affaires en Italie. Nous travaillons aussi avec des clients qui y sont établis désirant faire des affaires à l&#39;extérieur du pays.</p>

<p>Tous les membres de notre groupe Italie ont un lien particulier avec ce pays, et plusieurs d&#39;entre eux parlent couramment l&#39;italien. L&#39;équipe est entièrement dévouée à s&#39;immerger complètement dans la culture et les pratiques commerciales de l&#39;Italie, ainsi qu&#39;à offrir aux entreprises et aux cabinets juridiques italiens des conseils de calibre mondial et un service personnalisé et adapté.</p>

<p>À titre de visiteurs réguliers de clients et de cabinets juridiques alliés en Italie, nous pouvons recommander à des clients internationaux les cabinets italiens les mieux désignés pour les aider à réaliser leurs transactions et projets, et ce, dans un éventail de secteurs clés.</p>

<p>En tant que fière société membre de la Chambre de commerce Royaume-Uni&ndash;Italie, l&#39;équipe a aidé des entreprises italiennes de renom dans le cadre de mandats juridiques à l&#39;échelle mondiale. En voici quelques exemples :</p>

<ul>
	<li>Aide à une importante société d&#39;assurance quant à ses produits d&#39;avantages sociaux pour employés au Royaume-Uni</li>
	<li>Aide à une entreprise de services financiers chef de file quant à son établissement au sein des EAU</li>
	<li>Prestation de conseils en matière de droit des pensions et de droit de l&#39;emploi au Royaume-Uni pour une importante ligne aérienne</li>
	<li>Collaboration avec un cabinet juridique italien réputé en vue de fournir des conseils de droit de l&#39;emploi français à un client clé relativement à une transaction mondiale</li>
	<li>Aide à une entité publique du domaine des transports quant à une coentreprise en République tchèque</li>
	<li>Collaboration avec un grand cabinet juridique relativement aux aspects britanniques de la réorganisation internationale d&#39;une entreprise du secteur pharmaceutique</li>
	<li>Soutien à une grande maison de couture quant à une transaction immobilière complexe dans le centre de Londres</li>
	<li>Soutien juridique, conseils stratégiques et aide à l&#39;ambassade d&#39;Italie à Ottawa quant à des questions liées au Canada</li>
</ul>

<p>Si vous souhaitez savoir comment nous pouvons aider votre entreprise à prospérer en Italie et ailleurs, veuillez contacter <a href=""~/fr/people/jason-coates/"">Jason Coates</a> ou <a href=""~/fr/people/rosa-lupo/"">Rosa Lupo</a>.</p>
",GWLG.Italy,header-mega-menu,NULL,NULL,NULL,~/getmedia/87aa7fd0-fbda-41aa-8760-05158dc72795/italy_desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/ede60090-e110-4c0c-8f74-1f8704867bdc/italy_mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,91c9c57f-d1b5-4113-862f-60addeffaa4f;5d0e8ae2-1b58-484b-a89d-c08d752a6175,Personnes-ressources,0,NULL,NULL,NULL
54,/Global-Reach/Japan,fr-CA,485DD390-729A-49C0-BCE1-073DF440A6F7,Japon,Japon,"Gowling WLG entretient des relations de longue date avec plusieurs des sociétés et des cabinets d'avocats les plus importants du Japon. Nous aidons les clients japonais à tirer parti des occasions d'affaires  au Canada, au Royaume-Uni et dans d'autres marchés clés à l'échelle internationale.",NULL,NULL,"<p>Gowling WLG entretient des relations de longue date avec plusieurs des sociétés et des cabinets d&#39;avocats les plus importants du Japon. Nous aidons les clients japonais à tirer parti des occasions d&#39;affaires alléchantes au Canada, au Royaume-Uni et dans d&#39;autres marchés clés à l&#39;échelle internationale.</p>

<p>Les clients du Japon comptent sur notre cabinet pour gérer leurs exigences juridiques au Canada ou au Royaume-Uni et pour les guider dans toute une gamme d&#39;enjeux : traitement des demandes et litiges en matière de brevets, fusions et acquisitions transfrontalières, affaires relevant du droit des sociétés et du droit commercial, prix de transfert, questions de réglementation et de concurrence ou en matière d&#39;antitrust, entre autres.</p>

<p>Les conseils juridiques stratégiques que nous offrons portent sur les secteurs qui ont une incidence sur votre entreprise, notamment les sciences de la vie, la fabrication, l&#39;électronique, l&#39;industrie automobile, l&#39;énergie et les technologies.</p>

<h2>Professionnels expérimentés sur le terrain</h2>

<p>Nos avocats chevronnés, dont certains sont originaires du Japon et parlent couramment le japonais, passent régulièrement du temps au Japon afin d&#39;acquérir des perspectives importantes quant aux enjeux auxquels sont confrontés nos clients, ainsi qu&#39;aux activités qu&#39;ils mènent et aux objectifs commerciaux qu&#39;ils recherchent. Ce dévouement nous a permis d&#39;entretenir des liens étroits avec une longue liste de sociétés japonaises depuis plus de 60 ans.</p>

<h2>Soutien de premier ordre en matière de propriété intellectuelle</h2>

<p>Les actifs de propriété intellectuelle (PI) sont essentiels à la réussite des sociétés japonaises. Notre priorité est donc de protéger, de faire respecter et de défendre les droits de PI applicables aux innovations sectorielles de nos clients. Gowling WLG offre une gamme complète de services en matière de PI à ses clients au Japon et partout ailleurs au monde, qu&#39;il s&#39;agisse de brevets, de marques de commerce, de droits d&#39;auteur, de marques de produits, de dessins industriels ou de litiges en PI.</p>

<h2>Expertise en fusions et acquisitions</h2>

<p>Grâce à notre pratique mondiale éprouvée en fusions et acquisitions, nous sommes en mesure d&#39;aider les sociétés japonaises à réaliser leurs opérations dans une large gamme de secteurs clés. Nous sommes l&#39;un des cabinets d&#39;avocats les plus sollicités au monde relativement aux fusions et acquisitions de sociétés du marché intermédiaire et nous connaissons bien les défis auxquels vous êtes confrontés parce que nous les vivons tous les jours.</p>

<h2>Expertise reconnue en prix de transfert</h2>

<p>Notre groupe Prix de transfert peut optimiser votre situation fiscale à l&#39;échelle mondiale et réduire votre exposition à des audits défavorables. Certains des membres de notre équipe ayant travaillé directement avec des fonctionnaires gouvernementaux japonais, nous offrons également de rigoureux services de planification fiscale ainsi que des stratégies innovatrices de mise en œuvre.</p>

<h2>Savoir-faire en matière de réglementation, de concurrence et d&#39;antitrust</h2>

<p>Nous aidons les clients japonais à s&#39;orienter dans le dédale complexe que sont les lois en matière de concurrence et d&#39;antitrust, notamment en leur donnant des avis stratégiques et sur la conformité, en faisant la revue de fusions, en procédant à des dépôts de demandes, en obtenant des approbations, et en agissant dans le contexte de notifications préalables, de questions de conformité antérieures à la mise en œuvre, d&#39;enquêtes et de demandes de renseignements, d&#39;approbations de la part des autorités de réglementation et de politiques et programmes de conformité internes.</p>

<h2>Mandats représentatifs</h2>

<p>Clients qui ont bénéficié de nos conseils juridiques :</p>

<ul>
	<li><strong>Mitsui Canada</strong> depuis son établissement au Canada il y a plus de 55 ans, société pour laquelle nous assurons des services continus en matière de droit des sociétés et de droit commercial pour toute une gamme de ses activités au Canada.</li>
	<li>De nombreuses <strong>sociétés japonaises</strong> quant à une vaste gamme de questions liées aux marques de commerce au cours des trois dernières décennies, mandats dans le cadre desquels nous avons donné des conseils stratégiques sur le choix, l&#39;enregistrement et le respect de marques de commerce au Canada.</li>
	<li><strong>Eisai Co., Ltd.</strong> quant aux aspects européens d&#39;une convention de fusion de 3,9 G$ US intervenue avec MGI PHARMA, Inc.</li>
	<li>Un grand éventail de <strong>sociétés de fabrication et de distribution japonaises et leurs filiales canadiennes</strong>, auxquelles nous avons fourni une gamme complète de services en matière de prix de transfert, y compris la documentation y relative, la défense dans le cadre d&#39;audits, la représentation dans le cadre d&#39;appels et auprès des autorités compétentes, et la négociation d&#39;accords préalables en matière de prix de transfert.</li>
	<li>Une <strong>société japonaise de produits de santé </strong>dans le cadre de sa distribution de produits au Canada, y compris ses ententes en matière de distribution avec le distributeur canadien.</li>
	<li><strong>Astellas Pharma Inc.</strong> dans le cadre de deux ententes d&#39;octroi de licences stratégiquement importantes intervenues avec la société biopharmaceutique internationale Optimer Pharmaceuticals Inc. relativement à l&#39;antibiotique Fidaxomicin, ententes évaluées à 155 M&euro; et à 90 M$ US, respectivement.</li>
	<li><strong>Takeda Pharmaceutical Company Ltd.</strong> dans le cadre de plusieurs litiges en matière de brevets intentés au Canada au cours des 15 dernières années, ainsi que dans le cadre de divers mandats d&#39;ordre réglementaire et de traitement de demandes de brevet.</li>
	<li>Des <strong>sociétés pharmaceutiques innovatrices établies au Japon</strong>, entre autres, <strong>Kyorin Pharmaceutical Co.</strong> et <strong>Astellas</strong>, dans le cadre de litiges en matière de brevets devant la Cour fédérale du Canada.</li>
	<li><strong>Eisai </strong>dans le cadre de son acquisition des droits de distribution pour l&#39;Europe relativement à l&#39;analgésique intrathécal Prialt auprès d&#39;Elan moyennant 100 M$ US.</li>
	<li><strong>Transfreight Inc.</strong>, société de camionnage et de logistique appartenant à Mitsui et ayant des activités à l&#39;échelle du Canada, des États-Unis et du Mexique, dans le cadre d&#39;une vaste gamme de mandats juridiques relevant du droit des sociétés et du droit commercial pour ses activités aux Canada.</li>
	<li><strong>Eisai Europe</strong> dans le cadre d&#39;une convention de licence et de copromotion transfrontalière de 95 M&euro; intervenue avec Bial-Portela &amp; CA, S.A. pour le traitement de l&#39;épilepsie.</li>
	<li>Une <strong>société de fabrication japonaise</strong> dans le cadre de l&#39;obtention auprès de l&#39;Agence du revenu du Canada d&#39;une rare décision anticipée en matière d&#39;impôt sur le revenu sur &laquo; l&#39;établissement stable &raquo;, ce qui a permis de donner des garanties sur le plan fiscal à la société qu&#39;elle n&#39;exploitait pas ses activités au Canada par l&#39;intermédiaire d&#39;un établissement stable et qu&#39;elle était, par conséquent, exonérée d&#39;impôt canadien en vertu de la Convention fiscale entre le Canada et le Japon.</li>
</ul>

<p>To learn more about how we can help you succeed in Japan and beyond, please contact <a href=""~/fr/people/nick-cunningham/"">Nick Cunningham</a> or <a href=""~/fr/people/stephen-pike/"">Stephen Pike</a>.</p>
",GWLG.Japan,header-mega-menu,NULL,NULL,NULL,~/getmedia/0b502efa-a2d3-4112-998a-1f53483f620b/japan_desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/3a98db8e-9bed-4310-b03f-f8abcaf2db84/japan_mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,12993b29-3ee0-4306-bebe-5fc8c5422385;03d6dce1-2df8-4f24-8e6b-d7bcda0b6509,NULL,0,NULL,NULL,NULL
55,/Global-Reach/Latin-America,fr-CA,73D15F22-E679-4E65-B8F8-739469952EA2,Amérique latine,Amérique latine,"Nous conseillons clients canadiens et étrangers qui investissent en Amérique latine, en adoptant une démarche pratique et axée sur les résultats. Il en va de même pour les sociétés de l'Amérique latine qui investissent au Canada, au Royaume-Uni et ailleurs.",NULL,NULL,"<p>Au cours de la dernière décennie, l&#39;Amérique latine a connu une croissance fulgurante offrant de nouvelles opportunités dans une vaste gamme de secteurs : énergie, extraction minière, infrastructures, télécommunications, transports, immobilier et tourisme d&#39;accueil, entre autres.</p>

<p>L&#39;équipe juridique multidisciplinaire de Gowling WLG connaît bien les débouchés et les défis caractéristiques de cette région. Nous conseillons de nombreux clients canadiens et étrangers qui investissent en Amérique latine, en adoptant une démarche pratique et axée sur les résultats. Il en va de même pour les sociétés de l&#39;Amérique latine qui investissent au Canada, au Royaume-Uni et ailleurs.</p>

<h2>Connaissances et expertise régionales</h2>

<p>Grâce à ses professionnels qui parlent l&#39;espagnol et le portugais et qui sont autorisés à exercer le droit civil en Amérique latine, notre cabinet collabore étroitement avec ses clients et avec des cabinets d&#39;avocats régionaux afin de veiller à ce que les mandats juridiques se déroulent sans heurts. Nos connaissances inégalées des marchés financiers, des secteurs industriels, du régime juridique, des milieux d&#39;affaires et des traditions culturelles de l&#39;Amérique latine nous permettent de proposer des services sur mesure pour répondre aux besoins précis de nos clients qui font affaire en Amérique latine.</p>

<h2>Ressources intégrées</h2>

<p>La force et l&#39;envergure de notre équipe nous ont permis de forger de solides relations avec des chefs d&#39;entreprises de l&#39;Amérique latine, avec des cabinets d&#39;avocats régionaux et des professionnels du droit de premier ordre, des gouvernements et des organisations institutionnelles. Par l&#39;intermédiaire de nos bureaux situés dans les centres financiers principaux de Toronto, de Londres, de Paris, de Dubaï, de Singapour et de Beijing, nous avons un lien direct avec les marchés internationaux clés. Ceci nous donne accès à des sources principales de financement pour les investisseurs étrangers qui souhaitent investir en Amérique latine et pour les clients de l&#39;Amérique latine qui investissent à l&#39;étranger.</p>

<h2>Équipe dédiée à Cuba</h2>

<p>Gowling WLG a lancé une <a href=""~/fr/global-reach/cuba"">initiative dédiée à Cuba</a> en réponse à la croissance économique et commerciale prévues dans ce pays au cours des années à venir. Tirant parti de l&#39;expertise collective de nombreux professionnels, y compris un consultant sur place à La Havane, notre équipe dédiée à Cuba s&#39;emploie à aider les clients internationaux à saisir des opportunités d&#39;affaires et de placement et à se positionner stratégiquement au sein du marché émergent de Cuba. (<em>Gowling WLG offre des services consultatifs stratégiques à Cuba par l&#39;intermédiaire de Gowling WLG Consulting Inc.</em>)</p>

<p>Chefs de file dans les secteurs énergétique et des infrastructures</p>

<p>Ayant joué un rôle de premier plan dans le cadre de certains des opérations et des litiges internationaux récents les plus importants dans les secteurs de l<a href=""~/fr/sectors/energy/global/"">&#39;énergie</a> et des infrastructures, Gowling WLG offre une expertise de premier ordre sur le marché ainsi que des connaissances sectorielles approfondies dans les secteurs de l&#39;énergie (pétrole et gaz, énergies nucléaire et renouvelables) et des <a href=""~/fr/sectors/infrastructure/global/"">infrastructures</a>. Nous représentons des clients des secteurs public et privé dans une vaste gamme d&#39;opérations et d&#39;activités de secteurs liés à l&#39;énergie et nous leur offrons de l&#39;aide dans le cadre de leurs opérations de mise en valeur, de financement et de prêts garantis.</p>

<p>Notre équipe s&#39;est également hissée à l&#39;avant-plan du mouvement de renouveau international axé sur les projets, les partenariats public-privé (PPP) et la croissance des infrastructures, et elle a agi dans le cadre de nombreux mandats exécutés en Amérique latine. Par conséquent, nous sommes bien outillés pour jeter des bases solides pour le projet que vous envisagez, peu importe sa taille, sa complexité ou le secteur visé.</p>

<h2>Solutions minières efficaces</h2>

<p>Gowling WLG offre des conseils prospectifs et des solutions pratiques aux clients des secteurs miniers et des <a href=""~/fr/sectors/natural-resources/global"">ressources naturelles</a> partout en Amérique latine. Notre expertise porte sur un éventail complet d&#39;enjeux commerciaux, notamment les financements et les inscriptions en bourse, les fusions et les acquisitions, l&#39;exploration et les coentreprises, l&#39;exploitation et la fermeture, les questions de conformité et d&#39;ordre réglementaire, les accords et les opérations d&#39;enlèvement, de versement de redevances et d&#39;écoulement et les contrats d&#39;ingénierie et de services.</p>

<p>De concert avec nos collègues du cabinet se spécialisant dans d&#39;autres domaines de pratique, nous offrons aussi des conseils évolués et intégrés dans des domaines clés tels que le financement de projets et par emprunt, les titres de participation de sociétés ouvertes, la conformité environnementale, la propriété intellectuelle et l&#39;évaluation et la gestion des risques en matière de santé et sécurité au travail.</p>

<h2>Intégrité commerciale, lutte contre la corruption et soutien dans le cadre de litiges internationaux</h2>

<p>Notre groupe <a href=""~/fr/services/white-collar-defence-investigations"">Enquêtes et droit pénal des affaires au Canada</a> est un chef de file en matière de conformité d&#39;entreprise et de réglementation et législation de lutte mondiale contre la corruption. Les clients font souvent appel à notre groupe pour s&#39;attaquer à des pratiques de corruption telles que les pots-de-vin et le recyclage des produits de la criminalité. En outre, nous offrons des services de vérification diligente dans le cadre d&#39;acquisitions, d&#39;investissements, de coentreprises et d&#39;autres ententes commerciales. Le groupe donne aussi des conseils sur la conception et la mise en œuvre des systèmes de conformité qui s&#39;imposent.</p>

<p>Nos vastes <a href=""~/fr/services/litigation-dispute-resolution/"">capacités en matière de litige</a> comprennent également des connaissances et une expérience en arbitrage international et portant sur les traités bilatéraux d&#39;investissement. Cette expertise peut être essentielle au règlement de vos différends commerciaux transfrontaliers en Amérique latine et ailleurs.</p>

<h2>Renseignements complémentaires</h2>

<p>Pour en savoir davantage sur la manière dont nous pouvons vous aider à saisir des occasions d&#39;affaires en Amérique latine et ailleurs dans le monde, veuillez communiquer avec <a href=""~/fr/people/andrew-witts"">Andrew Witts</a> ou <a href=""~/fr/people/france-tenaille"">France Tenaille</a>.</p>
",GWLG.LatinAmerica,header-mega-menu,NULL,NULL,NULL,~/getmedia/0a0372b8-60e8-4f1b-ac47-6c100b5bd348/latin-america_desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/0e3fb1d2-8882-4251-b4d3-b44358543a13/latin-america_mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,c36a0bf5-318f-4d02-a8ed-479bad6a8469;d78233a4-45b3-42d2-97bc-0db06ee57cd2,NULL,0,NULL,NULL,NULL
56,/Global-Reach/Luxembourg,fr-CA,333E3D76-78BC-4AFA-8607-E3E97AD62A9A,Luxembourg,Luxembourg,Gowling WLG aide à coordonner la prestation de services juridiques aux clients à la recherche d'occasions d'affaires au Luxembourg. Nous travaillons aussi avec des clients qui y sont établis désirant faire des affaires à l'extérieur de la région.,NULL,NULL,"<p>Gowling WLG aide à coordonner la prestation de services juridiques aux clients à la recherche d&#39;occasions d&#39;affaires au Luxembourg. Nous travaillons aussi avec des clients qui y sont établis désirant faire des affaires à l&#39;extérieur de la région.</p>

<p>Pour découvrir comment nous pouvons contribuer à votre réussite, veuillez contacter <a href=""~/fr/people/sharon-ayres/"">Sharon Ayres</a> ou <a href=""~/fr/people/daniel-lacelle/"">Daniel Lacelle</a>.</p>
",GWLG.Luxembourg,header-mega-menu,NULL,NULL,NULL,~/getmedia/e0a477c0-b770-45fe-841d-1ef55d48876f/luxembourg_desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/4b2a5f8e-089b-48da-903c-673bb4cd7966/luxembourg_mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,NULL,NULL,0,NULL,NULL,NULL
58,/Global-Reach/Netherlands,fr-CA,94EC8471-3C42-4903-90B2-6B60EBEF1F7C,Pays-Bas,Pays-Bas,Les Pays-Bas figurent parmi les vingt premières économies mondiales. Il s'agit aussi d'une destination prisée en Europe pour les sièges sociaux d'entreprises qui s'y établissent en grand nombre.,NULL,NULL,"<p>Les Pays-Bas figurent parmi les vingt premières économies mondiales. Il s&#39;agit aussi d&#39;une destination prisée en Europe pour les sièges sociaux d&#39;entreprises qui s&#39;y établissent en grand nombre.</p>

<p>Le groupe Pays-Bas de Gowling WLG remplit un double rôle. À l&#39;international, nous aidons nos clients ayant des intérêts commerciaux dans les marchés des Pays-Bas à sélectionner les conseillers juridiques locaux les plus adéquats pour développer leurs affaires. Grâce à notre connaissance approfondie des cabinets d&#39;avocats et des marchés juridiques de la région, ils reçoivent des conseils qui sauront répondre à leurs besoins.</p>

<p>Au niveau national, nous tirons profit de notre riche expérience pour aider les clients dont le siège social est établi dans ce pays à lancer leurs activités commerciales à l&#39;internationale (au moyen d&#39;une acquisition ou d&#39;opérations entièrement nouvelles), et en nous occupant de leurs besoins juridiques courants.</p>

<p>Les membres de notre équipe des Pays-Bas visitent régulièrement les clients hollandais et les membres de leurs réseaux dans les grands centres d&#39;affaires du pays, dont Amsterdam, Rotterdam et La Haye.</p>

<p>Lorsqu&#39;ils sont sur la route, ils adoptent une approche pratique en visitant fréquemment les locaux des clients et en rencontrant la direction pour mieux comprendre leurs enjeux. Ces visites sont essentielles pour connaître les priorités de nos clients et leur fournir des conseils juridiques adaptés à leurs visées commerciales.</p>

<p>Si vous souhaitez savoir comment nous pouvons contribuer à la réussite de votre entreprise, veuillez communiquer avec <a href=""~/fr/people/julian-henwood/"">Julian Henwood</a> ou <a href=""~/fr/people/dom-glavota/"">Dom Glavota</a>.</p>
",GWLG.Netherlands,header-mega-menu,NULL,NULL,NULL,~/getmedia/effdd253-ae4b-46ae-9bab-ff46f73ac8c8/netherlands_desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/1c63fa0b-b1c8-4ea4-9adb-4db37b376209/netherlands_mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,NULL,NULL,0,NULL,NULL,NULL
59,/Global-Reach/Nordic-Region,fr-CA,986861C3-A3DB-48C0-BA58-4A64FACAA4A5,Pays nordiques,Pays nordiques,"Les affaires sont rentables et stimulantes dans les pays nordiques - le Danemark, la Finlande, l'Islande, la Norvège et la Suède. Gowling WLG y maintient une présence active depuis de nombreuses années.",NULL,NULL,"<p>Les pays nordiques -&nbsp;le Danemark, la Finlande, l&#39;Islande, la Norvège et la Suède constituent une région rentable et stimulante pour les affaires. Gowling WLG y maintient une présence active depuis de nombreuses années.</p>

<p>Chaque année, des études internationales confirment que les pays nordiques offrent aux entreprises d&#39;excellentes conditions dans lesquelles investir et faire des affaires en raison de leur longue tradition de recherche et d&#39;innovation, et de leurs infrastructures physiques et numériques bien développées.</p>

<p>L&#39;équipe de Gowling WLG dans les pays nordiques remplit un double rôle. Nous aidons les clients de l&#39;extérieur de la région à y sélectionner les conseillers juridiques les plus adéquats pour les assister dans leurs affaires, tout en leur donnant des conseils judicieux grâce à notre connaissance des cabinets et des marchés locaux.</p>

<p>Quant aux clients établis dans les pays nordiques, nous les aidons à lancer leurs opérations commerciales à l&#39;échelle internationale (grâce à une acquisition ou à de nouvelles opérations) et nous répondons à leurs besoins juridiques.</p>

<p>Les membres de notre équipe rendent visite régulièrement aux clients et contacts dans les grands centres d&#39;affaires des pays nordiques : Aarhus et Copenhague au Danemark, Helsinki et Tampere en Finlande, Reykjavik en Islande, Oslo en Norvège, et Göteborg, Malmö et Stockholm en Suède.</p>

<p>Nous adoptons aussi une approche concrète en visitant souvent les installations de nos clients et en rencontrant la direction pour mieux comprendre les enjeux auxquels ils font face. Ainsi, nous pouvons mieux cerner les priorités de nos clients et leur fournir des conseils juridiques adéquats à la hauteur de leurs objectifs.</p>

<p>Même si l&#39;anglais est une langue couramment parlée dans les pays nordiques, certains membres de l&#39;équipe maîtrisent le danois et le suédois. De plus, Charles Bond, associé en droit des entreprises chez Gowling WLG, est le consul honoraire royal de la Norvège à Birmingham.</p>

<p>Si vous souhaitez savoir comment nous pouvons aider votre entreprise à prospérer, veuillez contacter <a href=""~/fr/people/julian-henwood/"">Julian Henwood</a> ou <a href=""~/fr/people/guy-poitras/"">Guy Poitras</a>.</p>
",GWLG.NordicRegion,header-mega-menu,NULL,NULL,NULL,~/getmedia/dec4d850-c367-43d2-ad1f-2d6dbfc11f3b/nordic-region_desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/536ef007-b3e3-4ad6-a348-b5f7b78ef7ed/nordic-region_mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,NULL,NULL,0,NULL,NULL,NULL
60,/Global-Reach/Portugal,fr-CA,1BA01059-AEF5-42B0-9EB7-3F41A861C010,Portugal,Portugal,Gowling WLG aide à coordonner la prestation de services juridiques aux clients à la recherche d'occasions d'affaires au Portugal. Nous travaillons aussi avec des clients qui y sont établis désirant faire des affaires à l'extérieur du pays,NULL,NULL,"<p>Gowling WLG aide à coordonner la prestation de services juridiques aux clients à la recherche d&#39;occasions d&#39;affaires au Portugal. Nous travaillons aussi avec des clients qui y sont établis désirant faire des affaires à l&#39;extérieur du pays.</p>

<p>Pour découvrir comment nous pouvons contribuer à votre réussite, veuillez contacter <a href=""~/fr/people/christopher-n-alam/"">Chris Alam</a> ou <a href=""~/fr/people/sally-pinkerton/"">Sally Pinkerton</a>.</p>
",GWLG.Portugal,header-mega-menu,NULL,NULL,NULL,~/getmedia/034d56b9-d976-4b2c-b65a-fdbca7bd3f56/portugal_desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/a0bcb255-3ede-41ef-8611-a651ae36cfd3/portugal_mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,NULL,NULL,0,NULL,NULL,NULL
62,/Global-Reach/Singapore-ASEAN,fr-CA,0CCD30D9-4564-43F3-9241-0AF690CABD57,Singapour,Singapour,"Singapour est un centre important pour la gestion de patrimoine et notre présence signifie une expertise sur le terrain quand et où nos clients en ont besoin, via notre association exclusive avec JurisAsia LLC.",NULL,NULL,"<p>La croissance et les investissements accrus que connaît l&#39;Asie du Sud-Est incitent de nombreuses entreprises et particuliers fortunés à choisir Singapour comme base de leurs activités. Notre présence dans cet important centre de gestion de fortune se traduit par une expertise sur le terrain en temps et lieu opportuns pour nos clients.</p>

<p>En plus de veiller aux intérêts de nos clients en capital privé, nous offrons des services de droit des entreprises, de règlement de différends et liés aux marchés financiers.</p>

<p>Des clients de Singapour et de la région s&#39;adressent aussi à nous pour des conseils quant à leurs investissements immobiliers (directement ou par la création de fonds) au Royaume-Uni et ailleurs en Europe.</p>

<p>Nos services complémentent ceux fournis par JurisAsia LLC, cabinet avec lequel nous avons une association exclusive. JurisAsia dispose d&#39;une équipe de propriété intellectuelle (PI) chef de file qui fournit des conseils sur des questions de PI nationales et internationales, de même qu&#39;en ce qui a trait à la protection des données et de la confidentialité.</p>

<p>L&#39;équipe de droit des sociétés de JurisAsia donne des conseils sur les fusions et acquisitions transfrontalières et les marchés financiers pour les multinationales, les conglomérats régionaux, les fonds de placement privés et de capital de risque.</p>

<p><a href=""http://www.jurisasiallc.com/"" target=""_blank"">Cliquez ici pour obtenir plus d&#39;information sur JurisAsia.</a></p>

<p>Nommé &laquo; Cabinet juridique de l&#39;année à Singapour &raquo; dans le cadre des Citywealth International Financial Centre Awards 2017, le bureau de Gowling WLG à Singapour complète les services de droit des sociétés et de droit commercial fournis par notre bureau de Dubaï ainsi que le travail que nous accomplissons pour le compte de clients en Inde.</p>
",GWLG.Singapore,header-mega-menu,NULL,NULL,NULL,~/getmedia/1134d953-58af-44c5-b034-d3dd3c3281b3/singapore_desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/5a99db8e-fd93-4675-b64b-965cc7d632b2/singapore_mobile.jpg.xml?width=550&height=500&ext=.jpg,0,NULL,NULL,NULL,NULL,NULL,0,NULL,NULL,NULL
63,/Global-Reach/South-Korea,fr-CA,BCA9DAC1-9A39-451F-B916-326F4549F47D,Corée du Sud,Corée du Sud,Gowling WLG est le cabinet juridique privilégié par les entités sud-coréennes à la recherche de possibilités de commerce et de placement internationales et par les sociétés du monde entier qui souhaitent faire affaire en Corée du Sud.,NULL,NULL,"<p>La Corée du Sud abrite l&#39;une des équipes les plus importantes et expérimentées d&#39;avocats canadiens et britanniques dotés d&#39;une expertise de la région. En effet, Gowling WLG est le cabinet juridique privilégié par les entités sud-coréennes à la recherche de possibilités de commerce et de placement internationales et par les sociétés du monde entier qui souhaitent faire affaire en Corée du Sud.</p>

<h2>Compréhension et expérience approfondies</h2>

<p>Notre équipe d&#39;avocats&nbsp;possède une compréhension approfondie des pratiques juridiques, commerciales et culturelles uniques de la Corée du Sud. Nous collaborons étroitement avec nos clients du pays sur leurs projets et investissements au Canada, au Royaume-Uni et partout au monde en leur offrant&nbsp;des conseils juridiques prisés à chaque stade du processus. Pour faciliter les échanges, nos avocats sont également en mesure d&#39;offrir des services juridiques en coréen.</p>

<h2>Une gamme complète de services</h2>

<p>Gowling WLG est forte des connaissances pointues de plus de 1 400 professionnels du droit répartis dans 17&nbsp;villes au Canada et au Royaume-Uni, ailleurs en Europe, en Asie et au Moyen-Orient. Le cabinet offre une expertise juridique de premier plan dans une vaste gamme de secteurs susceptibles d&#39;avoir une incidence sur les activités que vous exercez en Corée du Sud, au Canada ou au Royaume-Uni : marchés financiers, les fusions et acquisitions, institutions financières et les services financiers, propriété intellectuelle, sciences de la vie, litige et résolution de différends, immobilier commercial, droit fiscal, travail et emploi, et plus encore.</p>

<h2>Chefs de file sectoriels</h2>

<p>Nous avons collaboré étroitement avec des sociétés d&#39;envergure, des sociétés d&#39;État et d&#39;autres participants au marché de la Corée du Sud dans le cadre d&#39;une longue liste de projets miniers et en matière d&#39;énergie et d&#39;infrastructures. Qu&#39;il s&#39;agisse de fusions ou d&#39;acquisitions, de coentreprises, d&#39;offres publiques de rachat ou de conventions entre actionnaires, de restructurations d&#39;entreprise ou de placements à l&#39;étranger, notre équipe peut vous aider à optimiser les possibilités offertes dans ces secteurs.</p>

<h2>Solutions efficientes et efficaces</h2>

<p>Nous sommes conscients des limites de votre budget et nous veillons à ce que vous tiriez un maximum de valeur des sommes que vous consacrez aux services juridiques. En effet, nous vous proposons diverses formules de facturation d&#39;honoraires, en vous offrant des tarifs concurrentiels et en cernant et en atténuant les risques auxquels vous êtes exposés. En ayant recours à notre plateforme interne de gestion de projets juridiques, GPJ Pratique par Gowling WLGMC, nous gérons de judicieusement la portée, les coûts, les tâches et les ressources associés à votre dossier afin de veiller à ce que votre mandat juridique reste sur la bonne voie et respecte les délais et votre budget.</p>

<h2>Ressources mondiales dédiées à des secteurs donnés</h2>

<p>En tant que cabinet d&#39;avocats international, Gowling WLG offre une expertise de premier ordre dans les secteurs qui revêtent la plus grande importance pour nos clients de la Corée du Sud : les sciences de la vie, l&#39;énergie, les services financiers, les projets et infrastructures, l&#39;immobilier, les ressources naturelles, les technologies et l&#39;industrie automobile, entre autres.</p>

<p>Pour en savoir davantage sur la manière dont nous pouvons vous aider à développer vos affaires en Corée du Sud, veuillez communiquer avec Benjamin Na ou Frank Sur.</p>
",GWLG.SouthKorea,header-mega-menu,NULL,NULL,NULL,~/getmedia/793484fe-e2b5-4987-95fa-3adcf3f55279/south-korea_desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/377f65f0-4bcc-41d6-bafe-3abde88ba5af/south-korea_mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,NULL,NULL,0,NULL,NULL,NULL
64,/Global-Reach/Spain,fr-CA,240BBEB3-8AFB-4A48-828A-BFBF216E4053,Espagne,Espagne,"L’Espagne est une économie européenne majeure offrant de grandes possibilités aux investisseurs, tant à l’intérieur qu’à l’étranger. Pour tirer le meilleur parti de ces opportunités, il faut des avocats intelligents, à l'esprit commercial, qui comprennent comment les affaires se font en Espagne.",NULL,NULL,"<p align=""left"">L&#39;Espagne est une puissance économique importante en Europe qui offre aux investisseurs de grandes possibilités tant au pays qu&#39;à l&#39;extérieur de celui-ci. Pour tirer parti au maximum de ces débouchés, vous devez être épaulés par des avocats ingénieux dont la vision est tournée vers le commerce et qui comprennent comment sont menées les affaires en Espagne.</p>

<p align=""left"">Notre équipe espagnole a une mission double. D&#39;abord, entretenir d&#39;excellentes relations avec les principaux cabinets d&#39;avocats en Espagne qui sont en mesure de faire le pont entre nous et nos clients, et une panoplie d&#39;entreprises et de secteurs.</p>

<p align=""left"">Nous aidons également nos clients espagnols à établir et à poursuivre leurs activités commerciales, que ce soit au moyen d&#39;une acquisition, de l&#39;implantation d&#39;une nouvelle entreprise ou de la prestation de services juridiques d&#39;ordre général.</p>

<p align=""left"">Nous avons une expérience avérée dans les secteurs suivants :</p>

<ul>
	<li>Aide aux grands promoteurs et groupes de construction et d&#39;ingénierie espagnols ayant des activités dans les secteurs des projets et des infrastructures à l&rsquo;échelle mondiale</li>
	<li>Représentation de sociétés des eaux et de l&rsquo;énergie espagnoles dans le cadre de projets partout en Afrique</li>
	<li>Assistance offerte à divers investisseurs espagnols dans le cadre d&#39;acquisitions immobilières réalisées au Royaume-Uni et au Canada</li>
	<li>Protection et défense de droits de propriété intellectuelle en Espagne : dépôt de brevets et de marques de commerce, coordination des oppositions et des litiges, et lutte contre la contrefaçon</li>
	<li>Assistance aux clients étrangers souhaitant réaliser des investissements et conclure des transactions en Espagne</li>
</ul>

<p align=""left"">Nous nous déplaçons régulièrement en Espagne afin de forger des relations avec des avocats et des entreprises. Vous pouvez donc tirer parti directement des contacts que nous avons établis et nous sommes en mesure de vous mettre en relation avec les personnes qui feront évoluer les choses pour votre entreprise.</p>

<p align=""left"">Pour en savoir davantage sur la façon dont nous pouvons vous aider à réussir vos projets en Espagne, veuillez communiquer avec&nbsp;<a href=""https://gowlingwlg.com/fr/people/luc-lissoir/"">Luc Lissoir</a>&nbsp;ou&nbsp;<a href=""https://gowlingwlg.com/fr/people/sally-pinkerton/"">Sally Pinkerton</a>.</p>
",GWLG.Spain,header-mega-menu,NULL,NULL,NULL,~/getmedia/acce0b7e-7324-4550-aed6-ce8c097ec446/spain_desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/fe3e5f21-351b-4943-841f-9efd5a087c56/spain_mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,464cd7c0-1e36-469e-bd96-72a18279e6a9;4a850b45-1170-4e82-b74a-02cc3ef81775,NULL,0,NULL,NULL,NULL
65,/Global-Reach/Switzerland,fr-CA,5074BB89-4EC2-46AC-B110-B8076B71CBE1,Suisse,Suisse,"Gowling WLG entretient des relations de longue date avec la plupart des cabinets juridiques, institutions financières et entreprises les plus réputés en Suisse. Nous connaissons les joueurs clés et sommes très bien placés pour donner les meilleurs conseils à nos clients. ",NULL,NULL,"<p>L&#39;économie suisse figure parmi les plus concurrentielles et les plus stables au monde. Plus du deux tiers du PIB est généré par le secteur des services, et moins de 30 % par le secteur industriel. Pourtant, de nombreuses entreprises de réputation mondiale y sont établies, notamment dans le secteur chimique et pharmaceutique. La Suisse est également réputée pour sa neutralité et stabilité monétaire, ce qui en fait un refuge sûr pour les investisseurs.</p>

<p>Gowling WLG entretient des relations de longue date avec la plupart des cabinets juridiques, institutions financières et entreprises les plus réputés en Suisse. Nous connaissons les joueurs clés et sommes très bien placés pour donner les meilleurs conseils à nos clients. Nous collaborons avec des avocats établis à Zurich, Genève, Bâle, et dans d&#39;autres villes, et nous savons tirer profit de leurs approches, expertises, et tarifications diversifiées.</p>

<p>Les membres de notre équipe parlent couramment l&#39;allemand ou le français, et pour certains, il s&#39;agit de leur langue maternelle.</p>

<p>Si vous souhaitez savoir comment nous pouvons contribuer à la réussite de votre entreprise, communiquez avec <a href=""~/fr/people/andreas-woelfle"">Andreas Woelfle</a> ou <a href=""~/fr/people/john-norman"">John Norman</a>.</p>
",GWLG.Switzerland,header-mega-menu,NULL,NULL,NULL,~/getmedia/8494b6ad-652b-4ecf-a0d0-63fabfa96256/switzerland_desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/c13abf66-b988-42ef-814f-e808639ef555/switzerland_mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,199becac-9a85-4082-aec2-fd0969f7da84;870774bf-534e-466c-be9a-e89fb3fb38bf,NULL,0,NULL,NULL,NULL
66,/Global-Reach/United-Arab-Emirates,fr-CA,D7BDDBCA-EAC1-4D90-8D11-7C5EC5F8D009,Émirats Arabes Unis,Émirats Arabes Unis,"Comptant plus de 30 ans d'expérience au Moyen-Orient, Gowling WLG connaît bien les enjeux dans la région et sait comment y conduire des affaires.",NULL,NULL,"<p>Comptant plus de 30 ans d&#39;expérience au Moyen-Orient, Gowling WLG connaît bien les enjeux dans la région et sait comment y conduire des affaires.</p>

<p>Les membres de notre équipe offrent une vaste gamme de services et sont des experts de renom dans leurs domaines, dont le droit des sociétés et le droit commercial, le droit de la construction, les litiges en construction, le droit du travail et de l&#39;emploi, le droit bancaire et finance, le droit immobilier, les projets et les infrastructures, ainsi que le capital privé.</p>

<p>Pour en savoir plus au sujet des services juridiques que nous offrons au Moyen-Orient et dans la région, veuillez contacter <a href=""~/fr/people/tim-casben"">Tim Casben</a>.</p>
",GWLG.UAEDubai,header-mega-menu,NULL,23ef7ff4-756b-454c-a477-8dfedb1af5bc,NULL,~/getmedia/227c856b-4b8d-45b6-964e-b254cf126fbd/uae-dubai_desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/30c8c4f1-0b02-417b-ae37-ca2f1481abb8/uae-dubai_mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,7574853e-b1e1-4eba-8604-1a01d0d0a056,NULL,0,NULL,NULL,NULL
67,/Global-Reach/United-Kingdom,fr-CA,4B8C1025-00AA-4E46-A691-92676D75F03C,Royaume-Uni,Royaume-Uni,Le Royaume-Uni est au cœur de l'économie mondiale. Le droit britannique forme le noyau du commerce international et Londres figure parmi les premiers centres financiers du monde.,NULL,NULL,"<p>Le Royaume-Uni est au cœur de l&#39;économie mondiale. Le droit britannique forme le noyau du commerce international et Londres figure parmi les premiers centres financiers du monde.</p>

<p>Important partenaire d&#39;affaires pour de nombreux pays, surtout pour les États-Unis, le Royaume-Uni est également une porte d&#39;entrée au plus grand marché unique au monde, soit l&#39;Europe et ses 500 millions de consommateurs.</p>

<p>Les avocats de Gowling WLG au Royaume-Uni sont dotés d&#39;une expertise juridique hors pair et surtout, de connaissances approfondies du marché dont nos clients ont besoin pour atteindre leurs objectifs.</p>

<p>Les perspectives dont vous bénéficiez sont étayées par des professionnels qui se concentrent résolument sur les résultats commerciaux. Notre modèle d&#39;affaires axé sur les deux plaques tournantes de Londres et de Birmingham, la deuxième ville en importance du Royaume-Uni, nous permet d&#39;offrir des conseils juridiques de premier ordre d&#39;une manière souple et rentable.</p>

<p>Nos clients de Londres, du Royaume-Uni et de partout au monde ont l&#39;assurance, peu importe l&#39;opération, le différend ou le projet en question, que nos avocats sont en parfaite mesure de les conseiller.</p>

<p>Gowling WLG a l&#39;une des pratiques en droit immobilier les plus importantes du Royaume-Uni, soit une pratique d&#39;envergure qui représente aussi bien les institutions que les investisseurs, les promoteurs et les locataires. Notre cabinet est le premier selon la capitalisation boursière des sociétés qu&#39;il représente sur le marché AIM et il se classe parmi les meilleurs pour ses mandats liés aux fonds d&#39;investissement, aux régimes de retraite et de pension et de capital-investissement.</p>

<p>En matière de règlement de différends, nos forces principales se trouvent dans les secteurs de la propriété intellectuelle, de la construction, du litige commercial et des litiges internationaux, en particulier dans les domaines de la fraude et de la récupération de biens, des fiducies contestées et de l&#39;assurance et de la réassurance.</p>

<p>Nous établissons des liens solides entre nos professionnels et nos clients. Grâce à notre approche innovante, et orientée vers les affaires, nous leur proposons des solutions juridiques qui les aideront à prospérer, peu importe l&#39;endroit au monde où ils se trouvent.</p>
",GWLG.UK,header-mega-menu,NULL,58076178-da60-4ab6-a07c-ef250971ebf7;9fbe191e-3bcf-45de-a2ba-338bb194fc9d,NULL,~/getmedia/801736e5-de40-4c3a-bdd6-bd2102234132/uk_desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/7941e79d-a1ff-4c88-b9e5-802f435fc597/uk_mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,d0124175-2f15-46b7-a81a-0af3177791df;c36a0bf5-318f-4d02-a8ed-479bad6a8469,NULL,0,NULL,NULL,NULL
68,/Global-Reach/United-States,fr-CA,D9566E50-E6DC-4E5A-A8C1-4C97599BAF15,États-Unis,États-Unis,"En tant que cabinet d'avocats mondial offrant une gamme complète de services, Gowling WLG peut répondre à vos besoins juridiques en se fiant à son vaste réseau de cabinets associés. ",NULL,NULL,"<p>De nombreuses sociétés des États-Unis souhaitent élargir leurs horizons au-delà des frontières de leur pays et faire leur entrée sur les marchés prometteurs du Canada, de l&#39;Europe et bien d&#39;autres.</p>

<p>Lorsqu&#39;elles entament ce parcours, elles doivent pouvoir compter sur un cabinet international en mesure de les orienter à l&#39;extérieur des États-Unis et sur des professionnels du droit qui peuvent les accompagner et leur offrir des conseils à chaque étape. Le cabinet juridique doit par conséquent avoir une vaste envergure géographique, il doit avoir la capacité d&#39;offrir les renseignements qui s&#39;imposent au bon moment et il doit être en mesure de répondre au degré élevé de service auquel s&#39;attendent les avocats généraux américains.</p>

<p>En tant que cabinet d&#39;avocats mondial offrant une gamme complète de services, Gowling WLG peut répondre à vos besoins juridiques en se fiant à son vaste réseau de cabinets associés. Nous sommes les partenaires de confiance des sociétés américaines depuis plus de cent ans. Les clients privilégient notre cabinet, car nous savons comment atténuer leurs préoccupations tout en les aidant à tirer parti de nouvelles occasions et à atteindre leurs objectifs ambitieux.</p>

<p>Nous mettons l&#39;accent sur la gestion des risques tout en apportant un éclaircissement sur les formalités administratives. Nous proposons toujours la meilleure équipe dans le cadre de nos mandats, afin de veiller à ce que vous puissiez profiter de notre démarche efficace sur le plan économique, de nos connaissances techniques de premier ordre et de notre expertise sectorielle approfondie. Grâce à notre équipe :</p>

<ul>
	<li>vous avez un accès privilégié aux marchés internationaux et à nos avocats sur place dans plusieurs des économies les plus importantes du monde, notamment au Canada, au Royaume-Uni, en France, en Allemagne, en Belgique, au Moyen-Orient, à Singapour et en Chine</li>
	<li>vous pouvez compter sur le développement efficace d&#39;activités à l&#39;étranger, qu&#39;il s&#39;agisse de créer une société ou de rédiger des conditions d&#39;utilisation de sites Internet axés sur les marchés internationaux</li>
	<li>vous pouvez structurer des opérations transfrontalières rentables</li>
	<li>vous bénéficiez d&#39;un encadrement dans le champ de mines que sont le droit du travail international et d&#39;autres réglementations complexes</li>
	<li>vous jouissez de la protection de vos droits de propriété intellectuelle (PI), y compris de la gestion de litiges simultanés survenus dans plusieurs territoires</li>
	<li>vous profitez de stratégies de monétisation de votre PI par l&#39;octroi de licences, le franchisage et la participation à des coentreprises</li>
	<li>vous tirez parti d&#39;un éventail complet de conseils dans des secteurs clés liés à votre entreprise, comme la fiscalité, l&#39;immobilier, la réglementation, le droit publicitaire, le règlement de différends et la protection des données</li>
</ul>

<p>Comptant plus de 1 400 professionnels du droit répartis dans 17&nbsp;villes au Canada, au Royaume-Uni, ailleurs en Europe, en Asie et au Moyen-Orient, Gowling WLG vous donne accès à des services de soutien juridique dans presque tous les marchés. Quoique nous n&#39;ayons pas de bureaux aux États-Unis (nous ne livrons pas concurrence aux cabinets américains, ce qui fait de notre cabinet le meilleur choix pour l&#39;attribution de mandats externes), nos avocats rendent régulièrement visite à nos clients et personnes-ressources dans chacun des 50 États.</p>

<p><a href=""~/getmedia/d90c32b8-aa37-4165-be92-1bd13e06e635/doing_business_in_the_uk.pdf.xml"" target=""_blank"">Lisez notre guide complet intitulé &laquo; Guide to Doing Business in the UK &raquo;</a>.</p>

<p><a href=""~/en/insights-resources/guides/2017/guide-to-doing-business-in-canada"">Lisez notre guide complet intitulé &laquo; Guide to Doing Business in Canada &raquo;</a>.</p>

<p>Élargissez vos horizons avec un cabinet d&#39;avocats qui comprend les besoins de clients américains. Nous sommes à votre disposition -&nbsp;veuillez communiquer avec <a href=""~/en/people/stephen-mckersie"">Stephen McKersie</a>, <a href=""~/en/people/chris-towle"">Chris Towle</a> ou <a href=""~/en/people/stuart-young"">Stuart Young</a> pour en savoir davantage.</p>
",GWLG.UnitedStates,header-mega-menu,NULL,NULL,NULL,~/getmedia/069c3232-1d76-4707-ba08-70914c057367/united-states_desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/e9c691c4-b30b-4654-9147-70c34d4e1540/united-states_mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,414ac382-6045-48c9-8797-b778fbe6164d;afc382e9-2b75-4a26-9e20-0a8c68694164,NULL,0,NULL,NULL,NULL
69,/Global-Reach/France,fr-CA,0798B70E-E3C7-45BE-812B-47459CBCDE4A,France,France,"La France regorge de grandes opportunités d’affaires. Pour en tirer parti, vous avez besoin de guides locaux qui connaissent les lois du pays et ses méthodes de travail uniques. En bref, des professionnels qui connaissent la culture et le métier en France.",~/getmedia/df7e259e-dedc-4c2a-a7c3-9f513cc39568/france_desktop.jpg.xml?width=1400&height=540&ext=.jpg,NULL,"<p>La France est l&rsquo;une des plus grandes économies en Europe et occupe un rôle clé au niveau mondial. Elle représente un marché majeur et se place en première destination européenne pour les investissements directs étrangers. Forts d&#39;une solide connaissance des marchés et des secteurs d&#39;activité français et européens, nos avocats s&#39;appuient sur une expertise technique pointue pour accompagner leurs clients sur leurs problématiques quotidiennes comme sur leurs projets de développement. Ils leur apportent des conseils pragmatiques et des solutions juridiques sur-mesure qu&#39;ils soient français ou internationaux, de taille importante ou intermédiaire, start-ups ou institutions bancaires, fonds d&#39;investissement ou établissements publics.</p>

<p>Nos équipes interviennent en conseil comme en contentieux sur les domaines suivants :</p>

<ul>
	<li><a href=""~/fr/services/banking-finance/#france"">Banque &amp; Finance</a></li>
	<li>Droit Commercial</li>
	<li><a href=""~/fr/services/commercial/#aperçu"">Contentieux Commercial</a></li>
	<li><a href=""~/fr/services/corporate-m-a-and-capital-markets/#aperçu"">Corporate : Fusions &amp; Acquisitions / Private Equity</a></li>
	<li><a href=""~/fr/services/tax/#france"">Fiscal</a></li>
	<li><a href=""~/fr/services/real-estate/#france"">Immobilier &amp; Construction</a></li>
	<li><a href=""~/fr/services/intellectual-property-law/#france"">Propriété Intellectuelle</a></li>
	<li>Public &amp; PPP</li>
	<li>Restructuring</li>
	<li><a href=""~/fr/services/employment-labour-equalities/#france"">Travail, emploi et droits de la personne</a></li>
</ul>

<p>Nos avocats parlent couramment anglais et sont pleinement intégrés à notre réseau international ce qui leur permet d&#39;intervenir sur les opérations transfrontalières les plus complexes et d&#39;avoir la force de frappe nécessaire pour assister leurs clients sur leurs opérations les plus innovantes.</p>

<p>Pour plus d&#39;informations, n&#39;hésitez pas à contacter&nbsp;<a href=""~/fr/people/celine-bey/"">Céline Bey</a> ou <a href=""~/fr/people/patrick-mousset"">Patrick Mousset</a>.</p>
",GWLG.France,header-mega-menu,NULL,c34b7263-2bcc-4186-8d40-42ba73a44a76,NULL,~/getmedia/df7e259e-dedc-4c2a-a7c3-9f513cc39568/france_desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/be29d31b-12e3-4a43-b343-388a6bc6cfb5/france_mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,ad4cc2a0-5825-4d92-930d-64226a7659b3;f2155dcb-a964-4080-b470-ef41ab438fbf,NULL,0,NULL,NULL,NULL
70,/Global-Reach/Australia-New-Zealand,fr-CA,4CFFEC03-EB27-4EC6-9340-3217D5718903,Australie et Nouvelle-Zélande,Australie et Nouvelle-Zélande,Gowling WLG aide à coordonner la prestation de services juridiques aux clients souhaitant tirer parti d'occasions d'affaires en Australie et en Nouvelle-Zélande et intervient également pour le compte de clients désirant faire des affaires à l'extérieur de ces pays.,NULL,NULL,"<p>Gowling WLG aide à coordonner la prestation de services juridiques aux clients souhaitant tirer parti d&#39;occasions d&#39;affaires en Australie et en Nouvelle-Zélande et intervient également pour le compte de clients désirant faire des affaires à l&#39;extérieur de ces pays.</p>

<p>De Perth à Sydney, en passant par Auckland et Christchurch, les membres de notre équipe se rendent souvent en Australie et en Nouvelle-Zélande, et ont forgé des liens étroits avec les plus éminents cabinets juridiques et autres prestataires de services clés de ces pays. Notre rôle est d&#39;aider les clients internationaux à sélectionner les cabinets locaux les plus appropriés pour les aider avec leurs transactions et leurs projets, et ce, dans un éventail de secteurs clés : la technologie et les sciences de la vie, les ressources naturelles, l&#39;énergie, les services financiers, et la fabrication.</p>

<p>Notre riche expérience nous permet également d&#39;aider les clients établis en Australie et en Nouvelle-Zélande à faire des affaires à l&#39;échelle internationale -&nbsp;soit par l&#39;intermédiaire d&#39;une acquisition ou le lancement de nouvelles opérations -&nbsp;et à répondre à leurs besoins juridiques continus.</p>

<p>Par ailleurs, Gowling WLG conseille depuis longtemps des sociétés minières australiennes cotées en bourse au Canada et au Royaume-Uni, et a agi dans le cadre de plusieurs transactions de fusion et acquisition liées à des sociétés australiennes du secteur des ressources naturelles. Voici d&#39;autres exemples de mandats réalisés à l&#39;international pour des sociétés australiennes et néo-zélandaises :</p>

<ul>
	<li>Nous avons œuvré avec plusieurs entreprises d&#39;infrastructures australiennes quant à l&#39;approvisionnement et l&#39;exécution de leurs projets au Canada</li>
	<li>Nous avons aidé des investisseurs australiens dans le cadre de leur acquisition d&#39;un exploitant canadien de casinos</li>
	<li>Nous avons représenté un important exploitant australien de casinos relativement à la protection et au respect de ses droits de propriété intellectuelle (PI) en Europe</li>
	<li>Nous avons participé à la fusion de deux sociétés canadienne et australienne pour former un chef de file mondial de services d&#39;experts-conseils en génie, en consultation environnementale, architecture et construction</li>
	<li>Nous avons aidé des détaillants et des franchisés australiens et néo-zélandais à établir leurs opérations dans plusieurs pays clés à l&#39;échelle mondiale</li>
</ul>

<p>Dans l&#39;ensemble des régions que nous desservons, nous avons représenté des sociétés chefs de file de la technologie et des sciences de la vie établies en Australie et en Nouvelle-Zélande relativement à la protection de leur propriété intellectuelle. En voici quelques exemples :</p>

<ul>
	<li>Poursuite de demandes et dépôts de marques de commerce et de dessins pour des clients australiens et néo-zélandais en Chine</li>
	<li>Organisation d&#39;une protection mondiale pour une technologie de moteur novatrice de la Nouvelle-Zélande</li>
	<li>Représentation de plusieurs sociétés chefs de file établies en Australie et en Nouvelle-Zélande quant à la protection de leurs droits de PI au Canada</li>
</ul>

<p>Si vous souhaitez savoir comment nous pouvons contribuer à la réussite de votre entreprise, veuillez communiquer avec <a href=""~/fr/people/gordon-harris/"">Gordon Harris</a>.</p>
",GWLG.AustraliaNewZealand,header-mega-menu,NULL,NULL,NULL,~/getmedia/3d8b2472-8e1a-44f7-9631-29d9b030cb09/australia_desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/7f54cb79-7885-43d6-ad07-fa759b6c4bb3/australia_mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,6767b2fc-7817-42ae-a54e-05595fe6c1cd;46b21a2f-6764-47aa-a5e4-93f7e0959916,NULL,0,NULL,NULL,NULL
71,/Global-Reach/Austria,fr-CA,03D82EBF-3E23-4BCC-B13C-F670A95C4B31,Autriche,Autriche,L'Autriche est l'un des États membres les plus prospères de l'UE offrant aux investisseurs des conditions idéales. Gowling WLG entretient d'excellentes relations de travail avec de nombreuses entreprises et cabinets juridiques autrichiens.,NULL,NULL,"<p>L&#39;Autriche est l&#39;un des États membres les plus prospères de l&#39;UE offrant aux investisseurs des conditions idéales. Gowling WLG entretient d&#39;excellentes relations de travail avec de nombreuses entreprises et cabinets juridiques autrichiens.</p>

<p>Les aliments, les biens de luxe, le génie mécanique, la sidérurgie, les produits chimiques et la fabrication automobile sont quelques-unes des industries qui caractérisent les secteurs économiques de l&#39;Autriche, tout autant que le secteur des services.</p>

<p>Gowling WLG aide ses clients internationaux à faire des affaires en Autriche, notamment, en ce qui a trait à la sélection des conseillers juridiques les plus appropriés. Notre connaissance du marché et des cabinets juridiques chefs de file vous garantit l&#39;obtention des conseils dont vous avez besoin.</p>

<p>Nous conseillons également des clients autrichiens dans plusieurs des pays où nous œuvrons.</p>

<p>Les membres de notre groupe Relations avec l&#39;Autriche rendent régulièrement visite à des cabinets à Vienne et autres grandes villes.</p>

<p>On retrouve au sein de notre équipe des membres dont la langue maternelle est l&#39;allemand et d&#39;autres qui le parlent couramment.</p>

<p>Si vous souhaitez savoir comment nous pouvons contribuer à la réussite de votre entreprise, communiquez avec <a href=""~/fr/people/andreas-woelfle"">Andreas Woelfle</a> ou <a href=""~/fr/people/jennifer-morton"">Jennifer Morton</a>.</p>
",GWLG.Austria,header-mega-menu,NULL,NULL,NULL,~/getmedia/11b2692f-1074-49e6-97c3-c37e6d328274/austria_desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/d29909c2-a45a-4b96-8b0c-a68cc6899ff9/austria_mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,199becac-9a85-4082-aec2-fd0969f7da84;5f99910a-0f55-443d-803f-ad13952b4946,NULL,0,NULL,NULL,NULL
111,/Global-Reach/Malta,en-GB,28979666-3938-4CDD-BFB5-C7F5EF3535E1,Malta,Malta,Malta's business climate and economy has been transformed since it voted to join the EU in 2004.,~/getmedia/0bb2900b-325e-406d-bb9f-1cfb1799f3a2/malta_desktop.jpg.xml?width=1400&height=540&ext=.jpg,NULL,"<p>Malta&#39;s business climate and economy has been transformed since it voted to join the EU in 2004. In recent years it has enjoyed one of the highest GDP growth rates in Europe. It is classified as an advanced economy by the International Monetary Fund, a high-income country by the World Bank and an innovation-driven economy by the World Economic Forum.</p>

<p>The strengths of the Maltese economy are (a) its strategic location, being situated in the middle of the Mediterranean Sea at a crossroads between Europe, North Africa and the Middle East, (b) its fully developed open market economy, (c) a multilingual population and (d) its low corporate tax rates. Industry sector strengths are in shipping, tourism, online financial services (especially banking and gaming) and electronics manufacturing.</p>

<p>The role of Gowling WLG&#39;s Malta team is two-fold. Outbound, our role is to assist our clients from outside Malta in selecting the most suitable legal advisers in the area to help them with their business on Malta. Our comprehensive knowledge of the region&#39;s law firms and legal market will ensure you get the advice you need.</p>

<p>Inbound, our role is to apply our extensive experience to assist clients headquartered in Malta with establishing their business operations internationally - whether through an acquisition or by establishing a greenfield operation - and looking after their ongoing legal needs.</p>

<p>Members of our Malta team regularly visit their clients and contacts in Valletta.</p>

<p>To learn more about how we can help your business succeed, please contact Julian Henwood.</p>
",GWLG.Malta,header-mega-menu,NULL,NULL,NULL,~/getmedia/0bb2900b-325e-406d-bb9f-1cfb1799f3a2/malta_desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/6af82f48-bbfa-4e4b-97ca-7239805549d7/malta_mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,0368d60b-27da-4355-a0a7-6b9b0cc01c28,Key contact,0,NULL,NULL,NULL
112,/Global-Reach/Malta,fr-CA,28979666-3938-4CDD-BFB5-C7F5EF3535E1,Malte,Malte,"Depuis son adhésion à l'Union européenne en 2004, le paysage économique et commercial de Malte s'est transformé. Au cours des dernières années, ce pays a enregistré l'un des plus importants taux de croissance du PIB de l'Europe.",~/getmedia/0bb2900b-325e-406d-bb9f-1cfb1799f3a2/malta_desktop.jpg.xml?width=1400&height=540&ext=.jpg,NULL,"<p>Depuis son adhésion à l&#39;Union européenne en 2004, le paysage économique et commercial de Malte s&#39;est transformé. Au cours des dernières années, ce pays a enregistré l&#39;un des plus importants taux de croissance du PIB de l&#39;Europe. De plus, le Fonds monétaire international le classe comme une &laquo;&nbsp;économie avancée &raquo;, la Banque mondiale comme &laquo; pays à revenu élevé &raquo;, et le Forum économique mondial lui confère le titre d&#39;&laquo;&nbsp;économie axée sur l&#39;innovation &raquo;.</p>

<p>Les forces de l&#39;économie maltaise découlent de a) son emplacement stratégique, au milieu de la mer Méditerranée, au carrefour de l&#39;Europe, de l&#39;Afrique du Nord et du Moyen-Orient, b) son économie de marché ouverte parfaitement développée, c) sa population plurilingue, et d) son taux d&#39;imposition peu élevé des sociétés. Les principaux secteurs de l&#39;industrie sont le transport maritime, le tourisme, les services financiers en ligne (surtout les services bancaires et les jeux en ligne) ainsi que la fabrication d&#39;appareils électroniques.</p>

<p>L&#39;équipe de Malte de Gowling WLG remplit un double rôle&nbsp;: à l&#39;international, nous aidons nos clients ayant des intérêts commerciaux dans les marchés de Malte à sélectionner les conseillers juridiques locaux les plus adéquats pour y développer leurs affaires. Grâce à notre connaissance approfondie des cabinets d&#39;avocats et des marchés juridiques de la région, ils reçoivent des conseils qui sauront répondre à leurs besoins.</p>

<p>Au niveau national, nous mettons notre expérience pointue au profit des entreprises clientes dont le siège social est établi à Malte afin qu&#39;elles puissent lancer leurs activités commerciales à l&#39;international (au moyen d&#39;acquisitions ou d&#39;opérations nouvelles), et nous nous occupons également de leurs besoins juridiques courants.</p>

<p>Les membres de notre équipe de Malte visitent régulièrement leurs clients et les membres de leurs réseaux à La Valette.</p>

<p>Si vous souhaitez savoir comment nous pouvons contribuer à la réussite de votre entreprise, veuillez communiquer avec Julian Henwood.</p>
",GWLG.Malta,header-mega-menu,NULL,NULL,NULL,~/getmedia/0bb2900b-325e-406d-bb9f-1cfb1799f3a2/malta_desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/6af82f48-bbfa-4e4b-97ca-7239805549d7/malta_mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,0368d60b-27da-4355-a0a7-6b9b0cc01c28,Personnes-ressources,0,NULL,NULL,NULL
113,/Global-Reach/Brazil,en-GB,0468C383-2A99-4BC6-949B-BF589B30ECF9,Brazil,Brazil,"The firm has also acted for a number of other high value fraud related matters and will be available to help service clients, and local law firms and their clients, outside of Brazil.",~/getmedia/f5bdc8bb-93ad-45c8-a8f5-5fdd2b5b1905/brazil_desktop.jpg.xml?width=1400&height=540&ext=.jpg,NULL,"<p>Brazil is the seventh largest global economy and the fourth largest country in the world, with its large territory and population, the country has some great opportunities for investment. Major industries include iron and steel production, automobile assembly, petroleum processing, chemicals production, and cement making. Technologically based industries have also seen rapid growth in the region over recent years.</p>

<p>São Paulo is its largest city and the main business and finance centre. Gowling WLG has established relationships with many of the major Brazilian law firms, and has acted for the Federal Republic of Brazil and the City of São Paulo since 2005 on the long running corruption and asset recovery case against the City of São Paulo&#39;s former Mayor, Paulo Maluf.</p>

<p>The firm has also acted for a number of other high value fraud related matters and will be available to help service clients, and local law firms and their clients, outside of Brazil.</p>

<p>Gowling WLG has an office presence in São Paulo in co-operation with local, independent law firm, <a href=""https://dfalaw.com.br/en/"" target=""_blank"">Duarte Forssell Advogados</a>. The firm specializes in highly complex litigation, international asset recovery and transnational insolvency.</p>

<p>Our professionals have over 15 years of experience in complex multi-jurisdictional litigation and transactions involving Brazil. To find out more, please contact <a href=""~/en/people/andrew-witts/"">Andrew Witts</a>.</p>
",GWLG.Brazil,header-mega-menu,NULL,NULL,NULL,~/getmedia/f5bdc8bb-93ad-45c8-a8f5-5fdd2b5b1905/brazil_desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/c802a6bd-9ca8-45ab-ba65-1a7f0665d1d6/brazil_mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,c36a0bf5-318f-4d02-a8ed-479bad6a8469,Key contacts,0,NULL,NULL,NULL
114,/Global-Reach/Israel,en-GB,D414BCBC-5986-4D08-B9D4-AA10FB934ED0,Israel,Israel,"Our firm has years of experience working in Israeli markets, and maintains deep relationships with law firms, venture capitalists, investment banks and other influencers throughout the country.",~/getmedia/202a5464-b65e-47b6-8cdd-0755a08bb3e6/israel-desktop.jpg.xml?width=1400&height=540&ext=.jpg,Jerusalem landscape,"<p>Gowling WLG has strong ties to Israel. Our firm has years of experience working in Israeli markets and maintains deep relationships with law firms, venture capitalists, investment banks and other influencers throughout the country.</p>

<h3>Serving the innovators</h3>

<p>Gowling WLG has a number of key offerings to meet shifting needs related to Israel, including: an award-winning blockchain team, a strong technology practice and a new unit devoted exclusively to startups.</p>

<p>These attributes give us a huge advantage when it comes to advising Israeli clients. The latter is critically important. In recent years, Israel has earned a global reputation for being a &quot;startup nation.&quot; What&#39;s more, the international Bloomberg Innovation Index of 2021 ranked it the world&#39;s seventh-most innovative country. Israel is truly making waves on the world stage.</p>

<h3>Leading the field in mergers and acquisitions</h3>

<p>We do more merger &amp; acquisition deals than any other firm, when it comes to Canadian M&amp;A transactions, and possess significant experience listing Israeli companies on the TSX, TSXV and Canadian Securities Exchange. In 2022, Refinitiv (formerly Thomson Reuters) credited us with 207 global mid-market M&amp;A transactions for a #20 ranking among all law firms worldwide. Furthermore, our global network creates opportunities for Israeli companies to succeed around the world. Notably, Bloomberg recently ranked Gowling WLG among the top 10 firms worldwide for both UK and global mid-market M&amp;A.</p>

<h3>Solutions for any situation</h3>

<p>We are uniquely familiar with the greatest challenges facing our Israeli clients - raising capital, navigating IPOs and seizing merger and acquisition opportunities. We also know there is a shortage of skilled engineers and programmers in the labour market, and that tech companies are facing increasingly tight restrictions when it comes to operating in Europe.</p>

<p>From our offices spanning Canada, the UK, Europe, the Middle East, and Asia, we are strongly positioned to advise Israeli clients on these &ndash; as well as a range of other -- issues from almost anywhere in the world. We also work closely with clients from other countries who are looking for new opportunities in Israel's growing market.</p>

<h3>Primary clients</h3>

<ul>
	<li>I.M.C. Agriculture 2010 Ltd.</li>
	<li>Moroccanoil</li>
	<li>Adcore Inc. (formerly Podium Advertising Technologies Ltd.)</li>
	<li>OurCrowd</li>
	<li>Water Ways Technologies Inc.</li>
	<li>Real Technology Broker Ltd.</li>
	<li>Epitomee Medical Ltd.</li>
	<li>Neurim Pharmaceuticals (1991) Limited</li>
	<li>Perrigo Israel Agencies Limited</li>
</ul>

<h3>Related sectors</h3>

<ul>
	<li><a href=""~/en/sectors/tech/global/"" target=""_blank"">High technology</a></li>
	<li><a href=""~/en/sectors/cannabis/global/"" target=""_blank"">Cannabis</a></li>
	<li><a href=""~/en/sectors/financial-institutions-services/global/"" target=""_blank"">Financial institutions and services</a></li>
	<li><a href=""~/en/sectors/food-beverage/"" target=""_blank"">Food and beverage</a></li>
	<li><a href=""~/en/sectors/life-sciences/global/"" target=""_blank"">Life sciences</a></li>
	<li>Medical technology</li>
	<li><a href=""~/en/sectors/energy/global/"" target=""_blank"">Energy</a> (Clean Technology, Water Technology, Renewable Energy and Green Buildings)</li>
	<li>Manufacturing</li>
	<li><a href=""~/en/services/private-client-services/#global"" target=""_blank"">Private client</a> and family offices</li>
	<li><a href=""~/en/sectors/aviation-aerospace-defence/global/"" target=""_blank"">Aviation, aerospace and defence</a></li>
	<li><a href=""~/en/sectors/automotive/global/"" target=""_blank"">Automotive</a></li>
	<li>eSports and <a href=""~/en/services/gaming/#canada"" target=""_blank"">gaming</a></li>
	<li><a href=""~/en/sectors/infrastructure/global/"" target=""_blank"">Infrastructure</a></li>
</ul>

<h3>Related services</h3>

<ul>
	<li><a href=""~/en/services/advertising-product-regulatory/#global"" target=""_blank"">Advertising and product regulatory</a></li>
	<li><a href=""~/en/services/capital-markets/#overview"">Capital markets</a></li>
	<li><a href=""~/en/services/commercial-litigation/#global"" target=""_blank"">Commercial litigation</a></li>
	<li><a href=""~/en/services/corporate/#overview"" target=""_blank"">Corporate</a></li>
	<li><a href=""~/en/services/cyber-security-data-protection-law/#global"" target=""_blank"">Cyber security and data protection law</a></li>
	<li><a href=""~/en/services/employment-labour-equalities/#overview"" target=""_blank"">Employment, Labour &amp; Equalities</a></li>
	<li><a href=""~/en/services/fintech-law/#overview"" target=""_blank"">FinTech</a> and <a href=""~/en/services/blockchain-smart-contracts/#canada"" target=""_blank"">blockchain</a></li>
	<li><a href=""~/en/services/international-arbitration/#global"" target=""_blank"">International arbitration</a></li>
	<li><a href=""~/en/services/ip-litigation-strategy/#global"" target=""_blank"">IP litigation</a></li>
	<li><a href=""~/en/services/mergers-acquisitions/#overview"">Mergers &amp; acquisitions</a></li>
	<li><a href=""~/en/services/patents/#global"" target=""_blank"">Patents</a></li>
	<li><a href=""~/en/services/private-equity/#canada"" target=""_blank"">Private equity</a> and venture capital</li>
	<li><a href=""~/en/services/projects/#global"" target=""_blank"">Projects</a></li>
	<li><a href=""~/en/services/real-estate/#global"" target=""_blank"">Real estate</a></li>
	<li><a href=""~/en/services/tax/#global"" target=""_blank"">Taxation</a></li>
	<li><a href=""~/en/services/trademarks-brands-designs/#global"" target=""_blank"">Trademarks, Brands &amp; Designs</a></li>
</ul>

<h3>Get in touch</h3>

<p>To learn how Gowling WLG can help meet your legal needs, both inside and outside Israel, please contact <a href=""~/en/people/susannah-fink/"" target=""_blank"">Susannah Fink</a> or <a href=""~/en/people/jason-a-saltzman/"" target=""_blank"">Jason Saltzman</a>.</p>
",GWLG.Israel,header-mega-menu,NULL,NULL,NULL,~/getmedia/202a5464-b65e-47b6-8cdd-0755a08bb3e6/israel-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/03690bef-8719-4f78-9576-0467af99ece7/israel-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,cd66250a-bbb0-4c94-ab3a-bcfb7db1114f;9c1e5d85-61f3-41ce-821b-f68dd18ccbb1,NULL,0,NULL,NULL,NULL
115,/Global-Reach/Israel,fr-CA,D414BCBC-5986-4D08-B9D4-AA10FB934ED0,Israël,Israël,"Gowling WLG entretient de solides liens avec Israël. Notre cabinet compte en effet de multiples années d'expérience dans les marchés israéliens et a forgé de fructueuses relations avec des cabinets juridiques, des investisseurs en capital de risque, des banques d'investissement et autres influenceurs à l'échelle de ce pays.",~/getmedia/202a5464-b65e-47b6-8cdd-0755a08bb3e6/israel-desktop.jpg.xml?width=1400&height=540&ext=.jpg,Vue de Jerusalem,"<p>Gowling WLG entretient de solides liens avec Israël. Notre cabinet compte en effet de multiples années d&#39;expérience dans les marchés israéliens et a forgé de fructueuses relations avec des cabinets juridiques, des investisseurs en capital de risque, des banques d&#39;investissement et autres influenceurs à l&#39;échelle de ce pays.</p>

<h3>Au service des innovateurs</h3>

<p>Gowling WLG propose aussi un éventail de services clés tout désignés pour répondre aux besoins évolutifs d&#39;Israël, notamment : une équipe primée spécialisée en technologie de la chaîne de blocs (blockchain), un groupe chevronné en technologie, et une nouvelle équipe consacrée exclusivement aux entreprises en démarrage.</p>

<p>Ces atouts nous assurent un avantage indéniable en ce qui a trait à la prestation de conseils à des clients israéliens, surtout en matière d&#39;entreprises émergentes. En effet, depuis quelques années, Israël est reconnu à l&#39;échelle mondiale comme le &laquo; pays des entreprises en démarrage &raquo;. Qui plus est, la publication internationale <em>Bloomberg Innovation Index</em> de 2017 classait Israël comme le pays figurant en dixième position en matière d&#39;innovation. Bref, ce pays a clairement la cote sur la scène mondiale.</p>

<h3>Chef de file des fusions et acquisitions</h3>

<p>Nous réalisons plus de transactions de fusions et acquisitions que tout autre cabinet en matière de F&amp;A canadiennes, et nous possédons une riche expérience d&#39;inscription de sociétés israéliennes à la Bourse de Toronto, à la Bourse de croissance TSX ainsi qu&#39;à la Bourse des valeurs canadiennes. Pour 2019, Refinitiv (anciennement Thomson Reuters) rapporte que le cabinet comptait à son actif 235 transactions à l&#39;échelle mondiale, soit une hausse de 20 % par rapport aux 196 transactions rapportées en 2018.</p>

<p>De plus, notre réseau international crée des occasions de succès à l&#39;échelle mondiale pour les sociétés israéliennes et Bloomberg a récemment classé le cabinet parmi les 10 meilleurs du monde quant aux transactions de F&amp;A du marché intermédiaire au Royaume-Uni et à l&#39;échelle mondiale.</p>

<h3>Expertise polyvalente</h3>

<p>Nous sommes particulièrement familiers avec les plus importants défis auxquels font face nos clients israéliens : la sollicitation de capitaux, l&#39;introduction en bourse (PAPE) et la saisie d&#39;occasions de F&amp;A. Nous savons également qu&#39;il y a pénurie d&#39;ingénieurs et de programmeurs qualifiés sur le marché du travail, et que les sociétés de technologie sont aux prises avec des restrictions de plus en plus sévères en ce qui a trait aux activités commerciales en Europe.</p>

<p>Bien que ces enjeux soient propres à la région, conseiller des clients israéliens à l&#39;étranger ne pose aucun problème pour Gowling WLG, car notre cabinet a une présence mondiale depuis 2016 et offre une gamme complète de services juridiques à partir de ses bureaux au Canada, au Royaume-Uni, ailleurs en Europe, au Moyen-Orient et en Asie. Que des clients souhaitent pénétrer le marché israélien ou que des entreprises israéliennes cherchent à saisir des occasions à l&#39;étranger, nous les aidons à surmonter tous les obstacles.</p>

<h3>Clients principaux</h3>

<ul>
	<li>Adcore Inc. (anciennement Podium Advertising Technologies Ltd.)</li>
	<li>Epitomee Medical Ltd.</li>
	<li>I.M.C. Agriculture 2010 Ltd.</li>
	<li>Moroccanoil</li>
	<li>OurCrowd</li>
	<li>Perrigo Israel Agencies Limited</li>
	<li>Real Technology Broker Ltd.</li>
	<li>Water Ways Technologies Inc.</li>
</ul>

<h3>Secteurs connexes</h3>

<ul>
	<li><a href=""~/fr/sectors/tech/global/"" target=""_blank"">Haute technologie</a></li>
	<li><a href=""~/fr/sectors/food-beverage/global/"" target=""_blank"">Aliments et boissons</a></li>
	<li><a href=""~/fr/sectors/aviation-aerospace-defence/global/"" target=""_blank"">Aviation, aéronautique et défense</a></li>
	<li><a href=""~/fr/services/cannabis/#global"" target=""_blank"">Cannabis</a></li>
	<li><a href=""~/fr/sectors/energy/global/"" target=""_blank"">Énergie (technologies propres, technologies de l&#39;eau, énergie renouvelable et construction durable)</a></li>
	<li>Fabrication</li>
	<li><a href=""~/fr/services/private-client-services/#global"" target=""_blank"">Gestionnaires de succession et de patrimoine</a></li>
	<li><a href=""~/fr/sectors/automotive/global/"" target=""_blank"">Industrie automobile</a></li>
	<li><a href=""~/fr/sectors/financial-institutions-services/global/"" target=""_blank"">Institutions financières et services financiers</a></li>
	<li><a href=""~/fr/sectors/life-sciences/global/"" target=""_blank"">Sciences de la vie</a></li>
	<li><a href=""~/fr/services/gaming/#canada"" target=""_blank"">Sports électroniques et jeux</a></li>
	<li>Technologie médicale</li>
</ul>

<h3>Services connexes</h3>

<ul>
	<li><a href=""~/fr/services/international-arbitration/#global"" target=""_blank"">Arbitrage international</a></li>
	<li><a href=""~/fr/services/patents/#global"" target=""_blank"">Brevets</a></li>
	<li><a href=""~/fr/services/private-equity/#canada"" target=""_blank"">Capital d&#39;investissement et capital de risque</a></li>
	<li><a href=""~/fr/services/corporate-m-a-and-capital-markets/#global"" target=""_blank"">Droit des entreprises, fusions et acquisitions et marchés des capitaux</a></li>
	<li><a href=""~/fr/services/fintech/"" target=""_blank"">Technologie financière (FinTech)</a> et <a href=""~/fr/services/blockchain-smart-contracts/"" target=""_blank"">technologie blockchain</a></li>
	<li><a href=""~/fr/services/tax/#global"" target=""_blank"">Fiscalité</a></li>
	<li><a href=""~/fr/services/real-estate/#global"" target=""_blank"">Immobilier</a></li>
	<li><a href=""~/fr/services/commercial-litigation/#global"" target=""_blank"">Litige commercial</a></li>
	<li><a href=""~/fr/services/ip-litigation-strategy/#global"" target=""_blank"">Litige en PI</a></li>
	<li><a href=""~/fr/services/trademarks-brands-designs/#global"" target=""_blank"">Marques de commerce</a></li>
	<li><a href=""~/fr/services/projects/#global"" target=""_blank"">Projets</a></li>
	<li><a href=""~/fr/services/cyber-security-data-protection-law/#global"" target=""_blank"">Protection des renseignements personnels et des données</a></li>
	<li><a href=""~/fr/services/advertising-product-regulatory/#global"" target=""_blank"">Publicité et réglementation de produits</a></li>
</ul>

<h3>Communiquez avec nous</h3>

<p>Pour savoir comment Gowling WLG peut répondre à vos besoins juridiques en Israël et ailleurs, veuillez communiquer avec <a href=""~/fr/people/susannah-fink/"" target=""_blank"">Susannah Fink</a> ou <a href=""~/fr/people/jason-a-saltzman/"" target=""_blank"">Jason Saltzman</a>.</p>
",GWLG.Israel,header-mega-menu,NULL,NULL,NULL,~/getmedia/202a5464-b65e-47b6-8cdd-0755a08bb3e6/israel-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/03690bef-8719-4f78-9576-0467af99ece7/israel-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,NULL,NULL,0,NULL,NULL,NULL
119,/Global-Reach/Turkey,en-GB,8C5E846D-A196-499B-A3DF-E3739594AF59,Turkey,Turkey,"Turkey is a land of contrasts - historical, cultural, and economical. As such, it takes an experienced law firm with a broad global footprint to serve the legal needs of such a dynamic economy.",~/getmedia/afa9c4f1-8e4b-4c2f-b633-c8f668c27b25/turkey_desktop.jpg.xml?width=1400&height=540&ext=.jpg,Ankara landscape,"<p>Turkey is a land of contrasts - historical, cultural, and economical. As such, it takes an experienced law firm with a broad global footprint to serve the legal needs of such a dynamic economy.</p>

<p>Gowling WLG has a dedicated Turkish Country Desk operating out of Canada, Europe, the Middle East, and Asia. Our lawyers regularly liaise with a wide variety of Turkish and international clients spanning numerous industries, and we frequently co-counsel or lend support to Turkish law firms representing clients abroad.</p>

<p>The Firm is also committed to conducting business in the most efficient, effective way possible. Our aim is to ensure clients get the maximum value out of their legal spend. No matter the objective, let Gowling WLG navigate the complex legal issues involving your next Turkish business endeavour.</p>

<h2>Serving clients with a global focus</h2>

<p>Gowling WLG is guided by the belief that the best way to serve our clients is to be in tune with their world, aligned with their opportunity, and ambitious for their success. With more than 1,500 legal professionals in 19 offices across Canada, the UK, Europe, the Middle East, Asia and South America, we can also leverage the strength of our international firm to handle any complex matter.</p>

<p>One of the key benefits the Firm provides clients - in Turkey and around the world - is bridging gaps in business, culture, and legal systems. Gowling WLG&#39;s Turkish Country Desk is home to several linguistically and culturally capable professionals, who maintain strong connections in Turkey in both private and public institutions.</p>

<p>While our primary focus remains assisting Turkish clients in Canada and the UK on a wide variety of matters, we also have proven experience to support Turkish companies investing in Africa, Eastern Europe, and Southeast Asia. This includes assisting Turkish companies in litigation and arbitration in state courts and before arbitral tribunals.</p>

<h2>Extensive client work and capabilities</h2>

<p>Lawyers working on the Turkish Country Desk regularly support projects in the infrastructure, construction, energy, and natural resources sectors. Clients also turn to the Firm for advisement in areas such as mergers &amp; acquisitions, dispute resolution, fast-moving consumer goods, hospitality, telecommunications, technology, IP, and energy.</p>

<p>From an IP perspective, the Firm is well-equipped to handle enforcement and protection matters related to Turkey&#39;s growing manufacturing and tech presence. Looking to expand? Gowling WLG lawyers can help Turkish clients who wish to grow their businesses in Canada and the UK, as well as refer international clients to Turkish firms that are best-suited to assist in transactions and projects across a range of sectors.</p>

<p>At the same time, companies in Southeast Asia, in particular, may be looking to establish a presence in Turkey in the years ahead. This is in no small part due to the country&#39;s growing middle-class and increased economic prosperity in the surrounding region. Our lawyers are ready and willing to assist in this space, too.</p>

<h2>Some of our recent client work highlights include:</h2>

<ul>
	<li>Assisting a client with obtaining ministerial consent and other regulatory matters for the establishment of the first private university in Ontario, Canada</li>
	<li>Advising a client with a software development agreement and IP for web-based services in relation to the online gaming industry</li>
	<li>Advising a Turkish construction company with regards to civil engineering work for the Akkuyu Nuclear Power Plant</li>
	<li>Assisting a Turkish investor in relation to a Canadian company shareholder dispute</li>
	<li>Advising the project company for the Sinop Nuclear Power Plant with regards to Turkish law and government relations</li>
	<li>Advising a Canadian seafood importer regarding a commercial dispute with its Turkish supplier</li>
	<li>Counseling a Turkish investor in relation to its share acquisition at a Canadian IT company</li>
	<li>Advising a Middle Eastern client in connection with its investments into several US and Turkey-based IT companies.</li>
	<li>Assisting a Canadian mining company in relation to Turkish due diligence processes, with regards to its acquisition of another Canadian mining company with a Turkish subsidiary</li>
	<li>Assisting a Canadian client in relation to legal, regulatory, and financing issues with its energy investments in Turkey</li>
	<li>Counseling a Turkish construction company in relation to its bid for a development project in downtown Toronto</li>
	<li>Assisting Canada-based Turkish clients in relation to Canadian tax and estate planning matters</li>
	<li>Guiding Turkish clients with business immigration applications</li>
	<li>Assisting an Asian manufacturing client with a multi-matter and multi-country trademark dispute, in which we are cancelling a Turkish company&#39;s trademark registration before the Turkish courts, as well as handling oppositions against more recent filings of the same party before the Turkish Trademarks Office</li>
	<li>Assisting an ecommerce client with a multi matter and multi-country trademark dispute, in which we are successfully defending incoming actions before the Turkish Trademarks Office and the Turkish Courts filed by a Saudi competitor, but also successfully challenging that entity&#39;s trademark applications before the Turkish Trademarks Office and appeal tribunal</li>
	<li>Assisting a MENA based broadcasting client in protecting a range of trademarks in Turkey</li>
	<li>Assisting a UAE based group of companies in protecting a variety of trademarks in Turkey, which included successfully overcoming issues raised on appeal during the course of the registration process</li>
	<li>Assisting an Asian FMCG client in protecting a range of new trademarks in Turkey, but also managing existing registrations such as renewals, assignments and changes of details on the official records</li>
	<li>Assisting a US FMCG group in the protection, enforcement and litigation of its intellectual property rights in Turkey, which included successful actions before the courts, as well as successful raids and actions with the enforcement bodies, against entities dealing in infringing and counterfeit products manufactured and/or on sale in Turkey</li>
	<li>Assisting an international cosmetics company with its registration and licensing of cosmetic products for distribution and sale in Turkey, including obtaining consents from the Turkish Ministry of Health</li>
</ul>

<h2>Sectors</h2>

<ul>
	<li><a href=""~/en/sectors/construction-engineering/"" target=""_blank"">Construction &amp; Engineering</a></li>
	<li><a href=""~/en/sectors/energy/"" target=""_blank"">Energy</a></li>
	<li><a href=""~/en/sectors/financial-institutions-services/"" target=""_blank"">Financial Institutions and Services</a></li>
	<li><a href=""~/en/sectors/food-beverage/"" target=""_blank"">Food and Beverage</a></li>
	<li><a href=""~/en/sectors/government-contracting-public-sector/"" target=""_blank"">Government Contracting &amp; Public Sector</a></li>
	<li><a href=""~/en/sectors/infrastructure/"" target=""_blank"">Infrastructure</a></li>
	<li><a href=""~/en/sectors/life-sciences/"" target=""_blank"">Life Sciences</a></li>
	<li><a href=""~/en/sectors/mining/global/"" target=""_blank"">Natural Resources</a></li>
	<li><a href=""~/en/sectors/nuclear/"" target=""_blank"">Nuclear</a></li>
	<li><a href=""~/en/sectors/real-estate/"" target=""_blank"">Real Estate</a></li>
	<li><a href=""~/en/sectors/retail-leisure-hotels/"" target=""_blank"">Retail, Leisure &amp; Hotel</a></li>
	<li><a href=""~/en/sectors/tech/"" target=""_blank"">Tech</a></li>
	<li>Telecommunications</li>
</ul>

<h2>Services</h2>

<ul>
	<li><a href=""~/en/services/advertising-product-regulatory/#global"" target=""_blank"">Advertising and Product Regulatory</a></li>
	<li><a href=""~/en/services/capital-markets/#overview"">Capital Markets</a></li>
	<li><a href=""~/en/services/commercial/#global"" target=""_blank"">Commercial</a></li>
	<li><a href=""~/en/services/commercial-litigation/#global"" target=""_blank"">Commercial Litigation</a></li>
	<li><a href=""~/en/services/corporate/#global"" target=""_blank"">Corporate</a></li>
	<li><a href=""~/en/services/corporate/#global"" target=""_blank"">Corporate</a></li>
	<li><a href=""~/en/services/intellectual-property-law/#global"" target=""_blank"">Intellectual Property</a></li>
	<li><a href=""~/en/services/international-arbitration/#global"" target=""_blank"">International Arbitration</a></li>
	<li><a href=""~/en/services/ip-litigation-strategy/#global"" target=""_blank"">IP Litigation &amp; Strategy</a></li>
	<li><a href=""~/en/services/litigation-dispute-resolution/#global"" target=""_blank"">Litigation &amp; Dispute Resolution</a></li>
	<li><a href=""~/en/services/mergers-acquisitions/#overview"" target=""_blank"">Mergers &amp; Acquisitions</a></li>
	<li><a href=""~/en/services/patents/#global"" target=""_blank"">Patents</a></li>
	<li><a href=""~/en/services/private-client-services/#global"" target=""_blank"">Private Client Services</a></li>
	<li><a href=""~/en/services/projects/#global"" target=""_blank"">Projects</a></li>
	<li><a href=""~/en/services/real-estate/#global"" target=""_blank"">Real Estate</a></li>
	<li><a href=""~/en/services/restructuring-insolvency/#global"" target=""_blank"">Restructuring &amp; Insolvency</a></li>
	<li><a href=""~/en/services/tax/#global"" target=""_blank"">Tax</a></li>
	<li><a href=""~/en/services/trademarks-brands-designs/#global"" target=""_blank"">Trademarks, Brands &amp; Designs</a></li>
</ul>

<h2>Get in touch</h2>

<p>To learn more about how Gowling WLG can address your legal needs, both inside and outside Turkey, please contact <a href=""~/en/people/gordon-bell/"" target=""_blank"">Gordon Bell</a>.</p>
",NULL,header-mega-menu,NULL,NULL,NULL,~/getmedia/afa9c4f1-8e4b-4c2f-b633-c8f668c27b25/turkey_desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/efe5ed0b-958e-4fd0-a809-35bd505e868b/turkey_mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,4abe6d56-7b8f-463c-95b7-801fbc7e63da,NULL,0,NULL,NULL,NULL
121,/Global-Reach/Turkey,fr-CA,8C5E846D-A196-499B-A3DF-E3739594AF59,Turquie,Turquie,"La Turquie est riche d'une histoire, d'une culture et d'une économie diversifiées. Dans un contexte économique aussi dynamique, il est donc essentiel de s'adjoindre un cabinet juridique d'expérience doté d'une présence active à l'échelle mondiale.",~/getmedia/afa9c4f1-8e4b-4c2f-b633-c8f668c27b25/201001-Turkey-desktop.jpg.xml?width=1400&height=540&ext=.jpg,Vue du point Bosphorus d'Istanbul ,"<p align=""left"">La Turquie est riche d&#39;une histoire, d&#39;une culture et d&#39;une économie diversifiées. Dans un contexte économique aussi dynamique, il est donc essentiel de s&#39;adjoindre un cabinet juridique d&#39;expérience doté d&#39;une présence active à l&#39;échelle mondiale.</p>

<p align=""left"">Gowling&nbsp;WLG dispose d&#39;un groupe de relations internationales consacré à la Turquie qui œuvre depuis le Canada, l&#39;Europe, le Moyen-Orient et l&#39;Asie. Nos avocats collaborent régulièrement avec une vaste clientèle turque et internationale, et ce, dans un large éventail de secteurs. En outre, nous intervenons fréquemment en tant que co-conseillers et prêtons main-forte à des cabinets juridiques turcs dans la représentation de clients à l&#39;étranger.</p>

<p align=""left"">Notre cabinet s&#39;engage aussi à exercer ses activités de la façon la plus efficace et la plus économique qu&#39;il soit, afin de permettre aux clients de tirer la valeur maximale de leurs dépenses juridiques. Quel que soit l&#39;objectif visé, laissez à Gowling&nbsp;WLG le soin de traiter les enjeux juridiques complexes entourant votre prochain projet d&#39;affaires en Turquie.</p>

<h3 align=""left"">Au service de nos clients dans leurs visées mondiales</h3>

<p align=""left"">Pour Gowling&nbsp;WLG, la meilleure façon de servir nos clients est d&#39;être axés sur leur monde, partenaires de leurs ambitions et investis dans leurs succès. Forts de plus de 1&nbsp;400 professionnels juridiques œuvrant dans 19&nbsp;bureaux au Canada, au Royaume-Uni, ailleurs en Europe, au Moyen-Orient, en Asie et en Amérique du Sud, nous sommes à même de traiter les dossiers les plus complexes.</p>

<p align=""left"">En Turquie comme à l&#39;échelle mondiale, notre cabinet offre un avantage clé aux clients&nbsp;: la capacité de combler les écarts sur le plan commercial, culturel et juridique. Le groupe de relations internationales avec la Turquie de Gowling&nbsp;WLG est composé de professionnels dotés de connaissances linguistiques et culturelles pointues, qui entretiennent de solides liens avec des institutions privées et publiques en Turquie.</p>

<p align=""left"">Prioritairement, notre objectif est d&#39;aider les clients turcs au Canada et au Royaume-Uni dans une variété de domaines, mais nous soutenons aussi les entreprises turques qui investissent en Afrique, en Europe de l&#39;Est et en Asie du Sud-Est. Nous possédons également une expérience éprouvée à ce chapitre, et nous assistons notamment des entreprises turques dans le cadre de dossiers de litige et d&#39;arbitrage devant les tribunaux d&#39;État ainsi que devant les tribunaux d&#39;arbitrage.</p>

<h3 align=""left"">Nos mandats clients&nbsp;dans divers secteurs</h3>

<p align=""left"">Les avocats du groupe de relations internationales avec la Turquie apportent régulièrement leur appui à la réalisation de projets dans les secteurs de l&#39;infrastructure, de la construction, de l&#39;énergie et des ressources naturelles. En outre, les clients font appel à nos conseils dans les domaines des fusions et acquisitions, de la résolution de différends, des produits de grande consommation, du tourisme d&#39;accueil, des télécommunications, de la technologie, de la propriété intellectuelle (PI) et de l&#39;énergie.</p>

<p align=""left"">En matière de PI, le cabinet est à même de traiter les questions d&#39;application et de protection des droits qui surviennent en raison de la présence accrue de la Turquie dans les secteurs de la fabrication et de la technologie. Vous désirez élargir votre champ d&#39;activité? Les avocats de Gowling&nbsp;WLG aident les clients turcs désirant s&#39;implanter au Canada et au Royaume-Uni, et peuvent également aiguiller les clients internationaux en leur recommandant les cabinets turcs les mieux désignés pour les aider à réaliser leurs transactions et projets dans tout un éventail de secteurs.</p>

<p align=""left"">Par ailleurs, au cours des prochaines années, on s&#39;attend à ce que bon nombre d&#39;entreprises de l&#39;Asie du Sud-Est cherchent à s&#39;établir en Turquie. Cette prévision est largement attribuable à la croissance de la classe moyenne du pays ainsi qu&#39;à la prospérité économique accrue constatée dans la région environnante. Sachez que nos avocats sont prêts et disposés à vous aider à ce chapitre également.</p>

<h3 align=""left"">Voici quelques mandats que nous avons récemment traités pour nos clients&nbsp;:&nbsp;</h3>

<ul>
	<li align=""left"">Prestation d&#39;aide à un client quant à l&#39;obtention du consentement ministériel et à d&#39;autres questions réglementaires en lien avec l&#39;établissement de la première université privée de l&#39;Ontario, au Canada</li>
	<li align=""left"">Prestation de conseils à un client quant à un accord de développement logiciel et la PI relative à des services offerts sur le Web dans le secteur des jeux vidéo en ligne</li>
	<li align=""left"">Prestation de conseils à une entreprise de construction turque relativement à des travaux de génie civil visant la centrale nucléaire Akkuyu</li>
	<li align=""left"">Prestation d&#39;aide à un investisseur turc en lien avec un différend entre les actionnaires d&#39;une société canadienne</li>
	<li align=""left"">Prestation de conseils à la société responsable du projet d&#39;énergie nucléaire de Sinop relativement à la loi turque et aux relations gouvernementales</li>
	<li align=""left"">Prestation de conseils à un importateur canadien de fruits de mer en lien avec un litige commercial l&#39;opposant à son fournisseur turc</li>
	<li align=""left"">Prestation de conseils à un investisseur turc en lien avec l&#39;acquisition d&#39;actions d&#39;une société canadienne du secteur des TI</li>
	<li align=""left"">Prestation de conseils à un client du Moyen-Orient relativement à ses investissements dans plusieurs entreprises de TI établies aux États-Unis et en Turquie.</li>
	<li align=""left"">Prestation d&#39;aide à une société minière canadienne quant au processus de diligence raisonnable en Turquie, dans le cadre de l&#39;acquisition d&#39;une autre société minière canadienne possédant une filiale turque</li>
	<li align=""left"">Prestation d&#39;aide à un client canadien en lien avec des questions juridiques, réglementaires et financières touchant ses placements dans le secteur de l&#39;énergie en Turquie</li>
	<li align=""left"">Prestation de conseils à une entreprise de construction turque relativement à sa soumission visant un projet d&#39;aménagement dans le centre-ville de Toronto</li>
	<li align=""left"">Prestation d&#39;aide à des clients turcs établis au Canada relativement à des questions liées à la fiscalité et à la planification successorale canadiennes</li>
	<li align=""left"">Prestation d&#39;aide à des clients turcs quant à des demandes d&#39;immigration d&#39;affaires</li>
	<li align=""left"">Prestation d&#39;aide à un client asiatique du secteur manufacturier quant à un différend complexe en matière de marques de commerce impliquant plusieurs pays, dans le cadre duquel nous traitons l&#39;annulation de l&#39;enregistrement de la marque de commerce d&#39;une société turque devant les tribunaux turcs, ainsi que des oppositions signifiées à l&#39;encontre de la même partie en lien avec des demandes déposées plus récemment devant l&#39;office des marques de commerce de la Turquie</li>
	<li align=""left"">Prestation d&#39;aide à un client du secteur du commerce électronique quant à un différend complexe en matière de marques de commerce impliquant plusieurs pays, dans le cadre duquel nous défendons avec succès des actions déposées devant l&#39;office des marques de commerce de la Turquie et les tribunaux turcs par un compétiteur saoudien, en plus de contester efficacement les demandes d&#39;enregistrement de marques de commerce de ce dernier devant l&#39;office des marques de commerce et le tribunal d&#39;appel de la Turquie</li>
	<li align=""left"">Prestation d&#39;aide à un client du MENA œuvrant dans le secteur de la radiodiffusion quant à la protection de diverses marques de commerce en Turquie</li>
	<li align=""left"">Prestation d&#39;aide à un groupe d&#39;entreprises des Émirats arabes unis quant à la protection d&#39;une variété de marques de commerce en Turquie, que nous avons notamment aidé à résoudre des difficultés ayant fait l&#39;objet d&#39;un appel durant le processus d&#39;enregistrement</li>
	<li align=""left"">Prestation d&#39;aide à un client asiatique du secteur des produits de grande consommation quant à la protection de diverses nouvelles marques de commerce en Turquie, ainsi que pour la gestion d&#39;enregistrements existants, notamment des renouvellements et cessions et la modification de renseignements sur les documents officiels</li>
	<li align=""left"">Prestation d&#39;aide à un groupe d&#39;entreprises américaines du secteur des produits de grande consommation quant à l&#39;application de ses droits de PI en Turquie et aux litiges y afférents; nous avons notamment obtenu gain de cause devant les tribunaux ainsi qu&#39;auprès des organismes d&#39;application de la loi, dans le cadre de perquisitions et d&#39;actions intentées contre des entités impliquées dans le commerce de produits contrefaits fabriqués et/ou vendus en Turquie</li>
	<li align=""left"">Prestation d&#39;aide à une société internationale de produits cosmétiques quant à l&#39;enregistrement de celle-ci et à l&#39;obtention d&#39;une licence pour la distribution et la vente en Turquie, y compris l&#39;obtention des consentements requis auprès du ministère de la Santé de la Turquie</li>
</ul>

<h3 align=""left"">Secteurs</h3>

<ul>
	<li align=""left""><a href=""~/fr/sectors/food-beverage/"" target=""_blank"">Aliments et boissons</a></li>
	<li align=""left""><a href=""~/fr/sectors/construction-engineering/"" target=""_blank"">Construction et génie</a></li>
	<li align=""left""><a href=""~/fr/sectors/energy/"" target=""_blank"">Énergie</a></li>
	<li align=""left""><a href=""~/fr/sectors/real-estate/"" target=""_blank"">Immobilier</a></li>
	<li align=""left""><a href=""~/fr/sectors/infrastructure/"" target=""_blank"">Infrastructures</a></li>
	<li align=""left""><a href=""~/fr/sectors/financial-institutions-services/"" target=""_blank"">Institutions financières et services financiers</a></li>
	<li align=""left""><a href=""~/fr/sectors/nuclear/"" target=""_blank"">Nucléaire</a></li>
	<li align=""left""><a href=""~/fr/sectors/government-contracting-public-sector/"" target=""_blank"">Relations gouvernementales et secteur public</a></li>
	<li align=""left""><a href=""~/fr/sectors/natural-resources/"" target=""_blank"">Ressources naturelles</a></li>
	<li align=""left""><a href=""~/fr/sectors/life-sciences/"" target=""_blank"">Sciences de la vie</a></li>
	<li align=""left""><a href=""~/fr/sectors/retail-leisure-hotels/"" target=""_blank"">Secteur du détail, des loisirs et de l&#39;hôtellerie</a></li>
	<li align=""left""><a href=""~/fr/sectors/tech/"" target=""_blank"">Technologie</a></li>
	<li align=""left"">Télécommunications</li>
</ul>

<h3 align=""left"">Services</h3>

<ul>
	<li align=""left""><a href=""~/fr/services/international-arbitration/#global"" target=""_blank"">Arbitrage international</a></li>
	<li align=""left""><a href=""~/fr/services/patents/#global"" target=""_blank"">Brevets</a></li>
	<li align=""left""><a href=""~/fr/services/commercial/#global"" target=""_blank"">Droit commercial</a></li>
	<li align=""left""><a href=""~/fr/services/corporate/#global"" target=""_blank"">Droit des entreprises</a></li>
	<li align=""left""><a href=""~/fr/services/corporate-m-a-and-capital-markets/#global"" target=""_blank"">Droit des entreprises, F&amp;A, et marchés financiers</a></li>
	<li align=""left""><a href=""~/fr/services/tax/#global"" target=""_blank"">Droit fiscal</a></li>
	<li align=""left""><a href=""~/fr/services/private-client-services/#global"" target=""_blank"">Droit successoral</a></li>
	<li align=""left""><a href=""~/fr/services/mergers-acquisitions/#global"" target=""_blank"">Fusions et acquisitions</a></li>
	<li align=""left""><a href=""~/fr/services/real-estate/#global"" target=""_blank"">Immobilier</a></li>
	<li align=""left""><a href=""~/fr/services/commercial-litigation/#global"" target=""_blank"">Litige commercial</a></li>
	<li align=""left""><a href=""~/fr/services/ip-litigation-strategy/#global"" target=""_blank"">Litige en droit de la PI et stratégie</a></li>
	<li align=""left""><a href=""~/fr/services/litigation-dispute-resolution/#global"" target=""_blank"">Litige et règlement de différends</a></li>
	<li align=""left""><a href=""~/fr/services/trademarks-brands-designs/#global"" target=""_blank"">Marques de commerce, marques et dessins</a></li>
	<li align=""left""><a href=""~/fr/services/projects/#global"" target=""_blank"">Projets</a></li>
	<li align=""left""><a href=""~/fr/services/intellectual-property/#global"" target=""_blank"">Propriété&nbsp;Intellectuelle</a></li>
	<li align=""left""><a href=""~/fr/services/advertising-product-regulatory/#global"" target=""_blank"">Publicité et réglementation des produits</a></li>
	<li align=""left""><a href=""~/fr/services/restructuring-insolvency/#global"" target=""_blank"">Réorganisation et insolvabilité</a></li>
</ul>

<h3 align=""left""><br />
Communiquez avec nous</h3>

<p align=""left"">Pour en savoir davantage sur les façons dont Gowling&nbsp;WLG peut répondre à vos besoins juridiques, en Turquie comme ailleurs dans le monde, veuillez contacter <a href=""~/fr/people/gordon-bell/#panel-button1"" target=""_blank"">Gordon Bell</a>.</p>
",NULL,header-mega-menu,NULL,NULL,NULL,~/getmedia/afa9c4f1-8e4b-4c2f-b633-c8f668c27b25/201001-Turkey-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/efe5ed0b-958e-4fd0-a809-35bd505e868b/201001-Turkey-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,7d72ebbf-c95f-4237-a6d4-56c843f56518;4abe6d56-7b8f-463c-95b7-801fbc7e63da;52cfeee8-3a31-4049-a315-db5ef0c65610,NULL,0,NULL,NULL,NULL
122,/Global-Reach/Middle-East,en-GB,A9894A8B-86F7-4E58-930F-014094D0D65F,Middle East,Middle East,"With over 30 years' experience in the region, Gowling WLG understands the Middle East's economy, mission and culture.",~/getmedia/ba338b65-c729-4871-981b-82d1e6d28f54/middle-east-desktop.jpg.xml?width=1400&height=540&ext=.jpg,NULL,"<p>With a young and fast-growing population, the Middle East looks to diversify its economy beyond its dependency on oil and gas, and seeks further economic prosperity and job creation through entrepreneurship, innovation, regional economic integration, educational transformation, and women&#39;s economic participation.</p>

<p>With over 30 years&#39; experience in the region, Gowling WLG understands the Middle East&#39;s economy, mission and culture. With a strong footprint in the region and an extended network, our team of legal experts is ready to support clients wishing to benefit from a wide range of commercial opportunities in the Middle East. Our team&#39;s strengths include advising on intellectual property, technology media and telecoms, corporate and mergers and acquisitions, energy and infrastructure, project development and finance, construction disputes and international arbitration, as well as government advisory work.</p>

<p>For clients seeking to enter the Saudi Arabian market - Gowling WLG (UK) LLP is in a cooperation agreement with Saudi Arabian law firm AlGhazzawi &amp; Partners. This allows clients to access AlGhazzawi &amp; Partners&#39; broad suite of legal services. In turn, the agreement allows AlGhazzawi &amp; Partners to support its domestic clients looking to expand beyond Saudi Arabia&#39;s borders and to afford them the benefit of Gowling WLG&#39;s international platform.</p>

<p>Find out more about <a href=""https://www.ghazzawilawfirm.com/"" target=""_blank"">AlGhazzawi &amp; Partners</a>.</p>
",GWLG.MiddleEast,header-mega-menu,NULL,NULL,NULL,~/getmedia/ba338b65-c729-4871-981b-82d1e6d28f54/middle-east-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/8b6a1030-6727-498b-8a8d-549a71f6fc07/middle-east-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,612ac63e-b8e8-4615-beb9-be3097aed2cf;e21a01a4-efc1-409c-b08c-4859c79fe643;7574853e-b1e1-4eba-8604-1a01d0d0a056,Key contacts,0,NULL,NULL,NULL
123,/Global-Reach/Middle-East,fr-CA,A9894A8B-86F7-4E58-930F-014094D0D65F,Middle East,Middle East,"Comptant plus de 30 ans d’expérience dans cette région, Gowling WLG connaît bien les enjeux économiques, la mission et la culture du Moyen-Orient.",~/getmedia/ba338b65-c729-4871-981b-82d1e6d28f54/middle-east-desktop.jpg.xml?width=1400&height=540&ext=.jpg,NULL,"<p>Fort d&#39;une population jeune et à croissance rapide, le Moyen-Orient cherche à diversifier son économie au-delà de sa dépendance au pétrole et au gaz naturel et à accroître sa prospérité économique ainsi qu&#39;à stimuler la création d&#39;emplois grâce à l&#39;entreprenariat, l&#39;innovation, l&#39;intégration économique régionale, la transformation de l&#39;éducation et la participation économique des femmes.</p>

<p>Comptant plus de 30 ans d&#39;expérience dans cette région, Gowling WLG connaît bien les enjeux économiques, la mission et la culture du Moyen-Orient. Fortement implantée dans la région et dotée d&#39;un réseau étendu, notre équipe de professionnels juridiques au savoir-faire éprouvé est prête à soutenir les clients qui souhaitent tirer parti d&#39;un large éventail d&#39;opportunités commerciales au Moyen-Orient. Parmi les points forts de notre équipe : les conseils en matière de propriété intellectuelle, de technologie, de médias et de télécommunications, de fusions et acquisitions d&#39;entreprises, d&#39;énergie et d&#39;infrastructures, de développement et de financement de projets, de différends en matière de construction, d&#39;arbitrage international, ainsi que les services consultatifs gouvernementaux.</p>

<p>Gowling WLG (UK) LLP a conclu, à l&#39;intention des clients qui cherchent à pénétrer le marché d&#39;Arabie saoudite, une entente de coopération avec le cabinet d&#39;avocats saoudien Al Ghazzawi Professional Association (GPA). Les clients peuvent ainsi accéder à la vaste gamme de services juridiques offerts par GPA. En retour, l&#39;entente permet à GPA de soutenir ses clients nationaux dans leur expansion au‑delà des frontières de l&#39;Arabie saoudite et de leur faire bénéficier de la plateforme internationale de Gowling WLG.</p>

<p>Vous trouverez plus d&#39;information sur le cabinet Al Ghazzawi Professional Association sur <a href=""http://www.ghazzawilawfirm.com/"" target=""_blank"">le site Web de GPA</a>.</p>
",GWLG.MiddleEast,header-mega-menu,NULL,NULL,NULL,~/getmedia/ba338b65-c729-4871-981b-82d1e6d28f54/middle-east-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/8b6a1030-6727-498b-8a8d-549a71f6fc07/middle-east-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,612ac63e-b8e8-4615-beb9-be3097aed2cf;e21a01a4-efc1-409c-b08c-4859c79fe643;7574853e-b1e1-4eba-8604-1a01d0d0a056,Key contacts,0,NULL,NULL,NULL

- ID: "6954b7c7-2487-423f-8600-436cb3b6dc0e"
  Hint: Size
  Value: 254588
- ID: "6f47a0a5-9c94-4b48-abeb-42d38def6054"
  Hint: Mime Type
  Value: text/csv
- ID: "c06867fe-9a43-4c7d-b739-48780492d06f"
  Hint: Extension
  Value: csv
Languages:
- Language: en
  Versions:
  - Version: 1
    Fields:
    - ID: "25bed78c-4957-4165-998a-ca1b52f67497"
      Hint: __Created
      Value: 20230828T124100Z
    - ID: "52807595-0f8f-4b20-8d2a-cb71d28c6103"
      Hint: __Owner
      Value: |
        sitecore\sanjeevi.ram@altudo.co
    - ID: "5dd74568-4d4b-44c1-b513-0af5f4cda34f"
      Hint: __Created by
      Value: |
        sitecore\sanjeevi.ram@altudo.co
    - ID: "8cdc337e-a112-42fb-bbb4-4143751e123f"
      Hint: __Revision
      Value: "ffbd5304-62ea-4db6-a288-8175f0aef475"
    - ID: "badd9cf9-53e0-4d0c-bcc0-2d784c282f6a"
      Hint: __Updated by
      Value: |
        sitecore\sanjeevi.ram@altudo.co
    - ID: "d9cf14b1-fa16-4ba6-9288-e8a174d4d522"
      Hint: __Updated
      Value: 20230828T124100Z
