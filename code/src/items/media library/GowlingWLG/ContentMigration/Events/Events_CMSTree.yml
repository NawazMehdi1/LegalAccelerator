---
ID: "8b07aa35-3364-4f84-b207-53d38ea7c34b"
Parent: "5ba607e6-65e4-43f8-81b8-57ac61e0d82b"
Template: "962b53c4-f93b-4df9-9821-415c867b8903"
Path: /sitecore/media library/Project/GowlingWLG/GowlingWLG/ContentMigration/Events/Events_CMSTree
SharedFields:
- ID: "06d5295c-ed2f-4a54-9bf2-26228d113318"
  Hint: __Icon
  Value: "-/media/8B07AA3533644F84B20753D38EA7C34B.ashx?h=16&thn=1&w=16"
- ID: "40e50ed9-ba07-4702-992e-a912738d32dc"
  Hint: Blob
  BlobID: "b00a4f19-df3d-4769-9c58-3303f94d7142"
  Value: ﻿EventID,NodeAliasPath,DocumentCulture,TreeNodeGUID,PageName,Title,Summary,Image,ImageAltText,EventType,EventStartDate,EventEndDate,StartDateTime,EndDateTime,TimeZone,IsCPD_CLE,CPD_CLEPoints,Content,Disclaimer,RegistrationStartDate,RegistrationEndDate,RegistrationLink,RegistrationEmailAddress,RegistrationLinkText,EventLocation,RelatedSectors,RelatedServices,RelatedTopics,Speakers,RelatedEvents,EventTypeText,PeopleText,EventLocationText,EventLocationId,ResourceType,BannerContent,ImageUrl,MobileImageUrl,IsLargeBanner,ImageAlignment,LinkUrl,LinkText,Locations,Evergreen,EventContact,SpeakerHeading,PageBackgroundColour,Offices,SectorsText,ServicesText,TopicsText,OfficeText,ImageSocialMedia,IntroContent,OpenIn
8,/Events/2018/Stepping-into-Cybersecurity,en-GB,F14A1394-D7CC-4F5C-A310-D6A2F6791418,Stepping into Cybersecurity,"New Year, New Data Concerns: Stepping into Cybersecurity",Start the year off right by stepping up your cybersecurity savvy!,NULL,NULL,GWLG.Seminar,06-02-2018 08:00,NULL,08:00,10:00,Local time,0,NULL,"<p>Everyone who uses technology at home or at work is vulnerable to a cyber attack.</p>

<p>Join us on Tuesday, Feb.&nbsp;6 to learn about cybersecurity certification designed specifically for small and medium businesses and how it helps your business reduce the risk of a breach. This event features&nbsp;Al Dillon, VP of Cyber Essentials Canada.&nbsp;Guests will learn how Cyber Essentials Canada certification provides five security controls that can help prevent up to 80% of common internet threats.</p>

<p>Last but not least, you&#39;ll&nbsp;hear a&nbsp;legal update from Gowling WLG lawyer Paul Armitage, who is&nbsp;at the forefront of privacy and cybersecurity.&nbsp;He will share&nbsp;his knowledge of this cutting-edge program and how it addresses legal vulnerabilities.</p>

<p>Start the year off right by stepping up your cybersecurity savvy!</p>
",NULL,NULL,06-02-2018 15:34,https://sites-gowlingwlg.vuturevx.com/95/3489/landing-pages/stepping-into-cybersecurity-2018-02-06-event-registration-(blank-form).asp,NULL,Register for this event,8BF72D3F-E216-4FDD-B0BE-52D41A644293,NULL,NULL,NULL,537ca4c8-995c-4dd1-86e3-d32115e70c0f,NULL,Seminar,NULL,Calgary,64,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,NULL,0,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
9,/Events/2018/Ireland-Can-Growing-Trade-Investment-Opportunities,en-GB,A55F2A69-DA5F-46CB-9419-9369842E1C82,Ireland Can Growing Trade Investment Opportunities,Ireland & Canada: Growing Trade and Investment Opportunities,,NULL,NULL,GWLG.Seminar,09-03-2018 07:30,NULL,07:30,10:00,EST,1,1.5 hours,"<p>Home to a&nbsp;huge&nbsp;talent pool&nbsp;&mdash; and one of Europe&#39;s lowest corporate tax rates &mdash; Ireland has caught the attention of many Canadian businesses as a country favourable to foreign expansion and growth.</p>

<p>Canada and Ireland are each significant trade partners and investors in each other&#39;s economies. In 2016,&nbsp;Canadian capital of C$3.7bn had been invested in Ireland, while Irish capital of C$7bn had been invested in Canada. These cross-border investments cover a variety of sectors including pharmaceuticals, real estate, technology and energy. Over the course of the past year a number of Canadian financial institutions have expanded their EU presences in Ireland, reflecting broader trends.</p>

<p>Gowling WLG and Mason Hayes &amp; Curran are pleased to host&nbsp;Minister Denis Naughten,&nbsp;Ambassador Jim Kelly&nbsp;and a panel of leading experts for&nbsp;a fascinating forum on how companies across diverse industries can benefit from investing in Ireland and&nbsp;its&nbsp;&quot;springboard&quot;&nbsp;effect into Europe.</p>

<p>Please join us for this engaging and interactive seminar. Space is limited, so be sure to RSVP as soon as possible.</p>

<p><a href=""https://sites-gowlingwlg.vuturevx.com/103/3507/landing-pages/keynote-speakers-website.asp"" target=""_blank"">Click here to view the&nbsp;list of speakers for this event.</a></p>

<p>*<em>This program will count for up to 1.5 hours of substantive credits toward the mandatory CPD requirements of the Law Society of Ontario.</em></p>
",NULL,NULL,08-03-2018 17:23,https://sites-gowlingwlg.vuturevx.com/103/3507/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,B2DC4461-DC66-4F96-9AE6-32BC2B14259D,NULL,NULL,NULL,NULL,NULL,Seminar,NULL,Toronto,63,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
10,/Events/2018/Doing-business-in-the-UAE,en-GB,09110EA9-CFA6-42B6-893D-0215079CC51A,Doing business in the UAE,Doing business in the UAE,"Trade and business between Canada and the United Arab Emirates (UAE) are growing strongly, with many exciting development and opportunities still to be explored.",NULL,NULL,GWLG.Seminar,22-02-2018 08:10,NULL,08:00,10:00,EST,1,1.5 hours,"<h2>CANADA-UAE NETWORKING BREAKFAST AND PANEL DISCUSSION</h2>

<p>Trade and business between Canada and the United Arab Emirates (UAE) are growing strongly, with many exciting development and opportunities still to be explored.</p>

<p>On&nbsp; Feb. 22, join us as our expert panelists discuss their practical experiences, the latest developments and considerations, as well as the mutual benefits of doing business between these two commercial hubs.</p>

<p><em>*This program will count for up to 1.5 hours of substantive credits toward the mandatory CPD requirements of the Law Society of Ontario.</em></p>

<h3>Panel experts</h3>

<ul>
	<li>Jody Becker, Chief Strategy Officer&nbsp;&amp; SVP, Emerging Markets | Ellis Don</li>
	<li>Ranjan Salis, Chief Executive Officer | Renarte</li>
	<li>Ara Sahakian, Managing Partner | Incubate Advisory &amp; CEO | PE GATE</li>
	<li>Craig Ceppetelli, Associate Director | Royal College of Physicians &amp; Surgeons of Canada</li>
</ul>

<h3>Panel moderator</h3>

<ul>
	<li>Ruba El-Sayegh, Associate | Gowling WLG</li>
</ul>
",NULL,NULL,22-02-2018 17:38,https://sites-gowlingwlg.vuturevx.com/103/3540/landing-pages/doing-business-in-the-uae-2018-02-22-event-registration-(blank-form).asp,NULL,Register for this event,B2DC4461-DC66-4F96-9AE6-32BC2B14259D,NULL,NULL,NULL,e21a01a4-efc1-409c-b08c-4859c79fe643,NULL,Seminar,NULL,Toronto,63,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,Panel moderator,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
11,/Events/2018/Hot-Topics-The-European-Unified-Patent-Court-and,en-GB,DFC5DFC6-0046-4C0A-BA06-046055418227,Hot Topics: The European Unified Patent Court and ,Hot Topics: The European Unified Patent Court and Unitary Patent System,"For many Canadians, Europe is a very important commercial market. The Unitary Patent (UP) and the Unified Patent Court (UPC) have been created to strengthen the existing centralized European patent-granting system, and will offer users of the system cost-effective options for both patent protection and dispute settlement in Europe. The UPC and UP are set to potentially become operational in 2018.",NULL,NULL,GWLG.Seminar,08-03-2018 08:00,08-03-2018 09:30,8:00am,9:30am,PST,0,NULL,"<p>For many Canadians, Europe is a very important commercial market. The Unitary Patent (UP) and the Unified Patent Court (UPC) have been created to strengthen the existing centralized European patent-granting system, and will offer users of the system cost-effective options for both patent protection and dispute settlement in Europe. The UPC and UP are set to potentially become operational in 2018.</p>

<p>Join Clare Salisbury and Anthony Dearden, who are both qualified European patent attorneys, for this informative presentation on the new UPC and UP system.&nbsp;They will discuss a variety of issues, including:</p>

<ul>
	<li>Latest timetable for ratification</li>
	<li>Structure of the UPC</li>
	<li>Action before the UPC</li>
	<li>The Unitary Patent and its relationship to the UPC</li>
	<li>What you need to consider and steps to be taken</li>
</ul>

<p>We look forward to having you join us! Breakfast will be provided.</p>

<h2>Event Partner</h2>

<p><img alt="""" src=""~/getmedia/33b06599-bc79-415b-931d-f91ca3ea110a/life-sciences-bc-1-1.png.xml"" /></p>
",NULL,NULL,07-03-2018 18:42,https://sites-gowlingwlg.vuturevx.com/104/3568/landing-pages/hot-topics---patenting-in-europe-2018-03-28-event-registration-(blank-form).asp,NULL,Register for this event,AFD10BE7-206C-4F2D-9094-257D6B5E7BCC,049c8249-7ff3-4ee3-a439-590f45fd5cff,NULL,NULL,ccab74f0-b4ce-40af-b108-9ed3e806b03d;44707dcb-ae1d-4675-9be0-5e69e4344ca7,NULL,Seminar,NULL,NULL,NULL,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml?width=1400&height=540&ext=.jpg,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/104/3568/landing-pages/hot-topics---patenting-in-europe-2018-03-28-event-registration-(blank-form).asp,Register ,GWLG.Canada,0,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
12,/Events/2018/Protection-donnees-Europe,fr-CA,2F3E8F75-2DAF-45DC-85BF-E5F9BE5EEBC5,Protection données Europe,Nouveau règlement général sur la protection des données en Europe,,NULL,NULL,GWLG.Conference,30:00.0,45:00.0,7 h 30,9 h 45,EST,1,1.5 heures,"<p data-mce-style=""text-align: left;"">Entrant en vigueur le 25 mai 2018, le&nbsp;<strong>Règlement Général Européen sur la Protection des Données</strong>&nbsp;(RGPD) remplacera, dans tous les pays de l&rsquo;Union Européenne (UE) et de l&rsquo;Espace économique européen (EEE), les lois nationales de ces pays prises en application de la directive européenne sur la protection des données personnelles du 24 octobre 1995. Ce règlement vise à renforcer les droits des personnes en matière de protection de données et à étendre les obligations auxquelles sont soumises les organisations établies dans l&rsquo;UE/EEE ainsi que celles qui, bien qu&rsquo;établies hors de l&#39;UE/EEE, traitent les données personnelles de résidents de l&rsquo;UE dans le cadre de leur offre de biens ou services ou du suivi de leur comportement. De lourdes amendes sont prévues en cas de non-conformité.</p>

<p data-mce-style=""text-align: left;"">Le RGPD affectera donc de très nombreuses entreprises canadiennes faisant des affaires avec l&rsquo;UE, qu&rsquo;elles y aient ou non une ou des filiales ou succursales.</p>

<p data-mce-style=""text-align: left;"">Afin de vous aider à y voir clair dans les démarches à entreprendre pour être en conformité, nous avons le plaisir de vous inviter à une conférence au cours de laquelle Danhoé Reddy-Girard, associé au sein de notre bureau de Paris, vous fournira des informations concrètes sur les étapes à suivre. Naïm Antaki, associé au bureau de Montréal vous fournira également une perspective canadienne.&nbsp;</p>

<p data-mce-style=""text-align: left;""><strong>Les inscriptions pour cette conférence sont maintenant fermées.<br />
Veuillez écrire à <a href=""mailto:julie-han.angers@gowlingwlg.com?subject=Conf%c3%a9rence%20RGDP%20-%2016%20mars%202018"">Julie-Han Angers</a> pour vous inscrire sur la liste d&#39;attente de l&#39;événement.</strong></p>
",NULL,NULL,19:26.0,https://sites-gowlingwlg.vuturevx.com/99/3563/landing-pages/event-registration-(blank-form).asp,NULL,Inscrivez-vous,4EEBBC16-5EC7-4186-B6BB-A7F0CF2F7CA4,NULL,5d5bf1f5-9750-4592-8ca8-7c4628c450ff;2b77428d-a062-4314-9fcb-f5ea9e62dfc8,f584fd26-381c-44ba-b5fe-14f659af0306,NULL,NULL,Conference,NULL,Montréal,66,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml?width=1400&height=540&ext=.jpg,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,NULL,0,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
13,/Events/2018/Protection-donnees-Europe,en-GB,2F3E8F75-2DAF-45DC-85BF-E5F9BE5EEBC5,Protection données Europe,Nouveau règlement général sur la protection des données en Europe,,NULL,NULL,GWLG.Conference,30:00.0,45:00.0,7 h 30,9 h 45,EST,1,1.5 h,"<p data-mce-style=""text-align: left;"">Entrant en vigueur le 25 mai 2018, le&nbsp;<strong>Règlement Général Européen sur la Protection des Données</strong>&nbsp;(RGPD) remplacera, dans tous les pays de l&rsquo;Union Européenne (UE) et de l&rsquo;Espace économique européen (EEE), les lois nationales de ces pays prises en application de la directive européenne sur la protection des données personnelles du 24 octobre 1995. Ce règlement vise à renforcer les droits des personnes en matière de protection de données et à étendre les obligations auxquelles sont soumises les organisations établies dans l&rsquo;UE/EEE ainsi que celles qui, bien qu&rsquo;établies hors de l&#39;UE/EEE, traitent les données personnelles de résidents de l&rsquo;UE dans le cadre de leur offre de biens ou services ou du suivi de leur comportement. De lourdes amendes sont prévues en cas de non-conformité.</p>

<p data-mce-style=""text-align: left;"">Le RGPD affectera donc de très nombreuses entreprises canadiennes faisant des affaires avec l&rsquo;UE, qu&rsquo;elles y aient ou non une ou des filiales ou succursales.</p>

<p data-mce-style=""text-align: left;"">Afin de vous aider à y voir clair dans les démarches à entreprendre pour être en conformité, nous avons le plaisir de vous inviter à une conférence au cours de laquelle Danhoé Reddy-Girard, associé au sein de notre bureau de Paris, vous fournira des informations concrètes sur les étapes à suivre. Naïm Antaki, associé au bureau de Montréal vous fournira également une perspective canadienne.&nbsp;</p>

<p data-mce-style=""text-align: left;"">Ne manquez pas cette occasion, les places étant limitées, inscrivez-vous sans tarder!</p>
",NULL,NULL,38:01.0,https://sites-gowlingwlg.vuturevx.com/99/3563/landing-pages/event-registration-(blank-form).asp,NULL,Inscrivez-vous,4EEBBC16-5EC7-4186-B6BB-A7F0CF2F7CA4,NULL,5d5bf1f5-9750-4592-8ca8-7c4628c450ff;2b77428d-a062-4314-9fcb-f5ea9e62dfc8,f584fd26-381c-44ba-b5fe-14f659af0306,7fb29160-44a7-4f27-b030-99ef5d9941cf;b0a7b3fc-4cb7-4be6-926c-4b5e385f1bb1,NULL,Conference,NULL,Montréal,66,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml?width=1400&height=540&ext=.jpg,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml?width=500&height=550&ext=.jpg,0,NULL,https://sites-gowlingwlg.vuturevx.com/99/3563/landing-pages/event-registration-(blank-form).asp,Inscrivez-vous,NULL,0,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
14,/Events/2018/Data-protection-EU-Canadian-businesses-need-know,en-GB,82FD1BBC-2E5E-4C27-80B1-9D9BCF0CEBB9,Data protection EU Canadian businesses need know,Data protection in the EU: What Canadian businesses need to know,"On May 25, 2018, the European Union General Data Protection Regulation (GDPR) will come into effect, replacing the national laws of every EU and European Economic Area (EEA) member country transposing the 1995 Data Protection Directive.",NULL,NULL,GWLG.Seminar,13-03-2018 07:30,13-03-2018 15:37,07:30,10:00,EST,1,1 hour,"<p>On May 25, 2018, the European Union General Data Protection Regulation (GDPR) will come into effect, replacing the national laws of every EU and European Economic Area (EEA) member country transposing the 1995 Data Protection Directive. The new regulation aims to strengthen individuals&rsquo; data protection rights. It will also saddle additional data privacy obligations on EU and EEA-based organizations, as well as to organizations outside the EU that process data of individuals in the EU in relation to the offering of goods and services to them or to the monitoring of their behaviour. Non-compliant organizations may face heavy fines.</p>

<p>The GDPR will therefore affect many Canadian companies doing business in the EU &mdash; whether or not they have subsidiaries or branches there. To help you better understand the implications of the regulation, we are pleased to invite you to an information seminar with Danhoé Reddy-Girard and Chris Oates, partners in Gowling WLG&rsquo;s Paris and Toronto offices respectively, who will detail the steps businesses must take to comply with the new laws.</p>

<p><em>*This program will count for up to 1 hour of substantive credits toward the mandatory CPD requirements of the Law Society of Ontario.</em>&nbsp;</p>

<h2>Event Partner</h2>

<p><img alt="""" src=""~/getmedia/3fbc400b-b861-4143-aa00-96161a96182e/fccco-logo.jpg.xml?width=399&amp;height=88"" style=""width: 399px; height: 88px;"" /></p>
",NULL,NULL,13-03-2018 15:36,https://sites-gowlingwlg.vuturevx.com/103/3575/landing-pages/eu-gdpr-seminar-2018-03-13-event-registration-(blank-form).asp,NULL,Register for this event,B2DC4461-DC66-4F96-9AE6-32BC2B14259D,cdfc9b50-74c2-4af5-9508-342935f81ccd,NULL,NULL,0855ebb5-545b-4029-9c8b-b4958ea8652b;b0a7b3fc-4cb7-4be6-926c-4b5e385f1bb1,NULL,Seminar,"Christopher Oates, Danhoé Reddy-Girard",Toronto,63,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,https://sites-gowlingwlg.vuturevx.com/103/3575/landing-pages/eu-gdpr-seminar-2018-03-13-event-registration-(blank-form).asp,Register for this event,GWLG.Canada,0,NULL,Speakers,NULL,NULL,Tech,NULL,NULL,NULL,NULL,NULL,NULL
15,/Events/2018/Canada-North-Launch-Reception,en-GB,9C35D44D-5E34-4FA1-BDB9-439089ED15B2,Canada North Launch Reception,Canada North Launch Reception,Please join us at Gowling WLG's Canada North launch reception to hear key insights from members of our Canada North group.,NULL,NULL,GWLG.Seminar,26-03-2018 23:16,26-03-2018 23:16,17:00,20:00,EST,0,NULL,"<p>With industry-leading expertise in a number of areas, our professionals have a long history of working in Nunavut, the Northwest Territories, Yukon, and the northern regions of many provinces on a range of diverse matters.</p>

<p>Please join us&nbsp;at Gowling WLG&#39;s Canada North launch&nbsp;reception to hear key insights from members of our Canada North group and Stephen Van Dine, Assistant Deputy Minister of the Northern Affairs Organization.</p>
",NULL,NULL,26-03-2018 23:17,https://sites-gowlingwlg.vuturevx.com/101/3584/landing-pages/canada-north-event-2018-03-26-event-registration-(blank-form).asp,NULL,Register for this event,CB61C4C1-D0CF-4AA1-BA0B-5DAB5DC99393,NULL,38faf9e6-254b-4500-90fc-8aa87c16e15b,NULL,4f7f399d-4924-4c9f-aa7c-2fdc3c2c77a3;a7af15f0-5293-4cf8-b5bf-27703feaf2aa;84d0a412-54d4-4142-97f1-b5a558602b8e;29d7e340-a6af-49b5-b223-993a69997a78;a7981dca-18b5-4064-b9ea-340d3fba1862,NULL,Seminar,NULL,Ottawa,67,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,NULL,NULL,NULL,NULL,Canada North,NULL,NULL,NULL,NULL,NULL
16,/Events/2018/Current-trends-in-Africa-s-mining-sector-Opportun,en-GB,CF549A42-8711-498C-8B7A-C62447785106,Current trends in Africa's mining sector: Opportun,Current trends in Africa's mining sector: Opportunities and challenges,Gowling WLG and Control Risks are pleased to invite you to participate in a conversation about recent developments in Africa's mining sector.,NULL,NULL,GWLG.Seminar,05-03-2018 08:35,05-03-2018 10:00,8:35 a.m.,10:00 a.m.,EST,0,NULL,"<h2>South Africa&nbsp;</h2>

<p>The recent change in leadership is heralding a promising new dawn for the mining industry in South Africa.&nbsp;&nbsp;<strong>The Honourable Godfrey Oliphant</strong>, Deputy Minister of Mineral Resources of the Republic of South Africa, will lead a discussion on the future of the mining industry under the new leadership in South Africa.&nbsp;</p>

<h2>Battery Minerals</h2>

<p>Heightened global demand for electric vehicles and developments in the energy storage sector have put Africa&#39;s bountiful deposits of &quot;battery minerals&quot; in the spotlight, attracting both interest and capital from investors around the world.&nbsp; But can the regulatory frameworks and supply chains in many African jurisdictions handle this revolution?&nbsp;</p>

<p>For a closer look at these, and other game-changing trends, join our panel of government officials, industry leaders and experts as they discuss this revolution and consider what the coming months and years have in store for the mining industry in Africa.</p>

<h2>Speakers:</h2>

<h4>Hon. Godfrey Oliphant, MP, Deputy Minister of Mineral Resources,<br />
Republic of South Africa</h4>

<h4>Hon. Francis Gatare, Cabinet Minister &amp;&nbsp;CEO,<br />
Rwanda&nbsp;Mines,&nbsp;Petroleum &amp; Gas&nbsp;Board</h4>

<h4>Nicholas Mather, Executive Chairperson,&nbsp;<br />
IronRidge Resources Limited</h4>

<h4>Lance Hooper, President &amp;&nbsp;COO,&nbsp;Director,<br />
Peat Resources Ltd.</h4>

<h4>Mahendra Naik, Director, IAMGold Corporation, and Chairman, Fortune Minerals Limited</h4>

<h4>Ian Mitchell, Partner, Gowling WLG</h4>

<h4>John Seddon, Principal, Control Risks</h4>

<p>&nbsp;</p>

<h2>Moderator</h2>

<h4>Avril Cole, Partner, Gowling WLG</h4>
","<p><em>Event in partnership with Control Risks.</em></p>
",NULL,05-03-2018 00:00,https://sites-gowlingwlg.vuturevx.com/103/3582/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,B2DC4461-DC66-4F96-9AE6-32BC2B14259D,f1e960f5-8231-4c56-b7bf-9898ebb538c5;c0b8c1a8-73eb-4122-972f-dc5df852f68d,NULL,NULL,NULL,NULL,Seminar,NULL,NULL,NULL,GWLG.Events,NULL,~/getmedia/470cc156-4ac6-4ef8-8316-4140b63097ac/aubergine-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/fbdc41c3-8354-46b7-9a58-744f2aea65dd/mobile-destop.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,https://sites-gowlingwlg.vuturevx.com/103/3582/landing-pages/event-registration-(blank-form).asp,Register for this event,GWLG.Canada,0,NULL,NULL,NULL,NULL,"Energy, Natural Resources",NULL,NULL,NULL,NULL,NULL,NULL
17,/Events/2018/Integrating-Innovation-How-Technology-is-Fragment,en-GB,D74DD6F9-DA2D-437F-A866-795DB67BFCE2,Integrating Innovation: How Technology is Fragment,Integrating Innovation: How Technology is Fragmenting the Energy Value Chain,Join experts from Gowling WLG and Cornwall Insight who will discuss their new report into how technology means that the energy market of tomorrow will look nothing like the energy market of today.,NULL,NULL,GWLG.Seminar,06-03-2018 08:37,NULL,09:30,13:30,Local time,1,2.5,"<p>Do you know what impact transformative technology is having on the energy value chain? With early stage tech companies looking to deliver new technology and software solutions to sector participants, what will the energy landscape look like in 2020 and beyond?</p>

<p>Join experts from Gowling WLG and Cornwall Insight who will discuss their new report into how technology means that the energy market of tomorrow will look nothing like the energy market of today.&nbsp;</p>

<p>There will also be a presentation from the National Grid on the role technology can play in meeting the long-term challenges of energy policy and Barclays will join us for a panel discussion on financing transitions.</p>

<h2>Speakers</h2>

<ul>
	<li>Derek Goodban, Gowling WLG</li>
	<li>Gareth Baker, Gowling WLG</li>
	<li>Graeme Cooper, National Grid</li>
	<li>Gareth Miller, Cornwall Insight</li>
	<li>Ed Reed, Cornwall Insight</li>
</ul>

<h2>Agenda</h2>

<table class=""format"">
	<thead>
		<tr>
			<th scope=""col"">Time</th>
			<th scope=""col"">Activity</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>09:00</td>
			<td>Registration</td>
		</tr>
		<tr>
			<td>09:30</td>
			<td>Welcome &amp; introduction</td>
		</tr>
		<tr>
			<td>09:40</td>
			<td>Generating Uncertainty</td>
		</tr>
		<tr>
			<td>10:10</td>
			<td>Future of Supply</td>
		</tr>
		<tr>
			<td>10:40</td>
			<td>Network Challenges&nbsp;</td>
		</tr>
		<tr>
			<td>11:10</td>
			<td>Tea &amp; Coffee break</td>
		</tr>
		<tr>
			<td>11:30</td>
			<td>Financing transitions - Q &amp; A review panel session</td>
		</tr>
		<tr>
			<td>12:15</td>
			<td>Lunch &amp; networking&nbsp;</td>
		</tr>
	</tbody>
</table>
","<p>This event is free of charge.</p>

<p>This event will run for 2.5 hours. Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession.</p>

<p>Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,06-03-2018 08:47,mailto:zan.hoang@gowlingwlg.com?subject=How innovative technologies are fragmenting the energy value chain,NULL,Register for this event,9FBE191E-3BCF-45DE-A2BA-338BB194FC9D,f1e960f5-8231-4c56-b7bf-9898ebb538c5;cdfc9b50-74c2-4af5-9508-342935f81ccd,NULL,NULL,d2b85d26-a24f-48df-9f15-57dcb5143e57;532e53ff-a7e9-451d-ad5d-5dfdfc681712,NULL,Seminar,Gareth Baker,London,71,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,1F5096ED-3545-49CD-91F1-B69F87479BC4,NULL,NULL,NULL,"Energy, Tech",NULL,NULL,NULL,NULL,NULL,NULL
18,/Events/2018/Cryptocurrency-Tax-and-Traps,en-GB,F8197B13-9DFC-4373-8F84-8264C58AB257,Cryptocurrency: Tax and Traps,Cryptocurrency: Tax and Traps,"Are you a cryptocurrency trader, miner or investor? Are you considering launching an ICO? If so, this is the time to carefully consider the income and sales tax implications of your activities.",NULL,NULL,GWLG.Conference,15:00.0,NULL,17:15,20:00,EST,1,1.5 hours,"<p align=""left"" style=""clear:both;"">Are you a&nbsp;cryptocurrency trader, miner or investor? Are you considering launching an ICO? If so, this is the time to carefully consider the income and sales tax implications of your activities.</p>

<p align=""left"" style=""clear:both;"">Come hear a panel of tax lawyers and accountants practising in the blockchain space discuss the key tax issues you should consider when acquiring, trading and using cryptocurrency&nbsp;&mdash; including those related to the taxation of ICOs for issuers and purchasers, and sales tax rules that apply when cryptocurrency is exchanged for goods and services, used to pay employees, donated or lent out and the taxation of ICOs for issuers and purchasers.</p>

<p><strong>Last minute addition! Jacob Nataf, Senior Tax Manager at MNP,&nbsp;<strong>will participate in our conference</strong>.</strong></p>
",NULL,NULL,00:00.0,https://sites-gowlingwlg.vuturevx.com/99/3596/landing-pages---english/la-cryptomonnaie-event-registration-(blank-form)---en.asp,NULL,Register for this event,93D96357-D023-48D9-82C7-784977F93D3E,NULL,5e7a4c28-1f41-45d6-9485-1a23041b34f6;20e41ca2-b15a-4815-bb5c-7cf60c18278f,NULL,NULL,NULL,Conference,NULL,NULL,NULL,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/99/3596/landing-pages---english/la-cryptomonnaie-event-registration-(blank-form)---en.asp,Register for this event,GWLG.Canada,0,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
19,/Events/2018/Cryptocurrency-Tax-and-Traps,fr-CA,F8197B13-9DFC-4373-8F84-8264C58AB257,La cryptomonnaie - fiscalite et pieges a eviter,La cryptomonnaie : fiscalité et pièges à éviter,"Êtes-vous un négociateur ou un mineur de cryptomonnaie? Peut-être êtes-vous un investisseur? Songez-vous à lancer une ICO? Si oui, il est temps d’examiner attentivement les incidences de vos activités sur l’impôt sur le revenu et la taxe de vente.",NULL,NULL,GWLG.Conference,15:00.0,NULL,17 h 15,20 h,EST,1,1.5 heures,"<p align=""left"">Êtes-vous un négociateur ou un mineur de cryptomonnaie? Peut-être êtes-vous un investisseur? Songez-vous à lancer une&nbsp;<em>ICO</em>? Si oui, il est temps d&rsquo;examiner attentivement les incidences de vos activités sur l&rsquo;impôt sur le revenu et la taxe de vente.</p>

<p align=""left"">Venez écouter un panel d&rsquo;avocats en droit fiscal et de comptables experts du domaine discuter des enjeux fiscaux clés à considérer lors de l&rsquo;acquisition, de la négociation et de l&rsquo;utilisation de cryptomonnaie (y compris les règles en matière de taxes de vente applicables lorsque la cryptomonnaie est échangée contre des biens et des services, utilisée pour rémunérer des employés, donnée ou prêtée), et de l&rsquo;imposition des PEC pour les émetteurs et les acheteurs.</p>

<p align=""left""><strong>Dernière minute! Jacob Nataf, directeur principal service de fiscalité chez MNP, se joint à notre conférence.</strong></p>
",NULL,NULL,00:00.0,https://sites-gowlingwlg.vuturevx.com/99/3596/landing-pages---french/la-cryptomonnaie-event-registration-(blank-form)---fr.asp,NULL,Inscrivez-vous,93D96357-D023-48D9-82C7-784977F93D3E,NULL,5e7a4c28-1f41-45d6-9485-1a23041b34f6;20e41ca2-b15a-4815-bb5c-7cf60c18278f,NULL,318ad67b-b673-41d5-a888-784ab5b9ea66,NULL,Conference,NULL,club Saint-James,33567,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/99/3596/landing-pages---french/la-cryptomonnaie-event-registration-(blank-form)---fr.asp,Inscrivez-vous,GWLG.Canada,0,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
20,/Events/2018/Recovery-Services-Seminar,en-GB,4B3C2B4C-4050-434A-B402-845A11B47158,Recovery Services Seminar,Recovery Services Seminar ,,NULL,NULL,GWLG.Seminar,16-04-2018 00:00,16-04-2018 00:00,8:00 AM,10:00 AM,EST,0,NULL,"<p>Gowling WLG&rsquo;s Recovery Services Practice Group invites you to a seminar on &nbsp;&quot;The Peter Pan Economy&quot; &mdash; the first in a series of breakfast talks on issues relevant to mortgage lenders.</p>

<p>Our guest speaker will be Benjamin Tal, Deputy Chief Economist of CIBC World Markets Inc.</p>

<p>Please RSVP above for what will be a very informative view of the current housing market.</p>

<h3>Speaker</h3>

<p><img alt="""" src=""~/getmedia/1ce69cc1-d933-49bc-a1f9-2b61de449384/benjamin-tal.jpg.xml?width=100&amp;height=150"" style=""width: 100px; height: 150px;"" /></p>

<h4>Benjamin Tal</h4>

<h4>Deputy Chief Economist, CIBC World Markets Inc.</h4>
",NULL,NULL,16-04-2018 00:00,https://sites-gowlingwlg.vuturevx.com/103/3649/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,B2DC4461-DC66-4F96-9AE6-32BC2B14259D,NULL,820c20e1-84d8-4b34-96cd-ea4e74310518,NULL,NULL,NULL,Seminar,NULL,Toronto,63,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/103/3649/landing-pages/event-registration-(blank-form).asp,Register ,GWLG.Canada,0,NULL,NULL,NULL,NULL,NULL,Recovery Services,NULL,NULL,NULL,NULL,NULL
23,/Events/2018/ThinkHouse-Spring-2018-Birmingham,en-GB,14277652-9532-4166-94DE-90C761A2BC0E,ThinkHouse Spring 2018 - Birmingham,ThinkHouse Spring 2018 - Birmingham,"For our Spring 2018 event our ThinkHouse team will be covering: GDPR, employment law and competition law.",NULL,NULL,GWLG.Seminar,26-04-2018 13:28,NULL,08:45,12:45,Local time,1,3,"<p>For our Spring 2018 event our ThinkHouse team will be covering:</p>

<ul>
	<li><strong>Living with GDPR</strong> - on 25 May 2018, the GDPR (the EU General Data Protection Regulation) will finally come into force. While the compliance road map has been discussed at length, what happens post-May? What if you missed the deadline? What will ongoing adherence mean? How can companies embrace the changes and make them work for business?<br />
	&nbsp;</li>
	<li><strong>Key employment law trends</strong> - the world of work is changing and the law is having to respond.&nbsp; Workers&#39; rights and the gig economy are very much in the news, equal pay claims and gender pay gap reporting are creating financial and reputational issues for business, and employment tribunal disputes are back in vogue. Our experts will provide an update on these market trends and how to weather the storm.<br />
	&nbsp;</li>
	<li><strong>Understanding the &#39;Boilerplate&#39;</strong> - often a poorly understood bedrock of our craft, here we examine: Do we need it - at all or in particular circumstances? Does it always deliver what we want or expect?&nbsp; Is our version up-to-date or still based on Magna Carta?! The ever-popular David Lowe will share his fascination and insight about this important topic.<br />
	&nbsp;</li>
	<li><strong>Competition law - mind the gap...</strong> - the UK&#39;s Competition and Markets Authority (CMA) has received a considerable increase in budget for its post-Brexit role. As the UK leaves the EU, the CMA recognises that this departure risks creating &#39;enforcement gaps&#39;, and has set out its stall for sectors it intends to target. We assess recent competition law and policy developments in the UK and the EU, and give our insights as to what this means in terms of risk management.</li>
</ul>

<p>&nbsp;</p>

<h2>Agenda</h2>

<table class=""format"">
	<thead>
		<tr>
			<th scope=""col"">Time</th>
			<th scope=""col"">Activity</th>
			<th scope=""col"">Speaker</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>08:45</td>
			<td>Registration</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>09:10</td>
			<td>Introduction</td>
			<td>Robert Breedon</td>
		</tr>
		<tr>
			<td>09:15</td>
			<td>Living with GDPR: is there life beyond May 2018?&nbsp;</td>
			<td>Sally Mewies</td>
		</tr>
		<tr>
			<td>10:00</td>
			<td>New world, new labour law</td>
			<td>Martin Chitty</td>
		</tr>
		<tr>
			<td>10:45</td>
			<td>Mid-morning break</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>11:15</td>
			<td>Boilerplate: Bedrock or background noise?</td>
			<td>David Lowe</td>
		</tr>
		<tr>
			<td>12:00</td>
			<td>Competition law - trends and updates in a moving landscape</td>
			<td>Sam Beighton</td>
		</tr>
		<tr>
			<td>12:45</td>
			<td>Lunch</td>
			<td>&nbsp;</td>
		</tr>
	</tbody>
</table>
","<p>This event is free of charge.</p>

<p>This event will run for 3 hours. Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession.</p>

<p>Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,25-04-2018 13:29,https://reaction.gowlingwlg.com/reaction/RSGenPage.asp?RSID=wUrh6fap8vfrfT-s8OI0uaaUgps3S0ZGJpnyppbPp2k,NULL,Register for this event,58076178-DA60-4AB6-A07C-EF250971EBF7,NULL,d8837737-40d2-4472-8a9e-ba4101ec2105;2e9a87e2-3d2e-4d69-ba9c-06b4b358ca0d;b3f9fce6-b77c-4e15-978e-eaa664c609dc,a143cbfd-d333-42a0-89a6-7287894464f1,1ca237c0-eb32-40df-ba06-268230275f34;9611c614-e71a-44d1-9a73-640917c51429;fb60329f-6333-4f7e-b26b-4f9b106a32e7;ad056fcd-7211-4da7-a9e2-30612d332954;f13a9240-2482-4077-be83-ebaa741dc3f0,NULL,Seminar,NULL,NULL,NULL,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,8A1C0ABA-2016-4331-83C6-C12C5213B2F9,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
24,/Events/2018/ThinkHouse-Spring-2018-London,en-GB,6988C4F9-6C2B-473E-ADD5-99460422889D,ThinkHouse Spring 2018 - London,ThinkHouse Spring 2018 - London,"For our Spring 2018 event our ThinkHouse team will be covering: GDPR, employment law and competition law.",NULL,NULL,GWLG.Seminar,03-05-2018 13:28,NULL,08:45,12:45,Local time,1,3,"<p>For our Spring 2018 event our ThinkHouse team will be covering:</p>

<ul>
	<li><strong>Living with GDPR</strong> - on 25 May 2018, the GDPR (the EU General Data Protection Regulation) will finally come into force. While the compliance road map has been discussed at length, what happens post-May? What if you missed the deadline? What will ongoing adherence mean? How can companies embrace the changes and make them work for business?<br />
	&nbsp;</li>
	<li><strong>Key employment law trends</strong> - the world of work is changing and the law is having to respond.&nbsp; Workers&#39; rights and the gig economy are very much in the news, equal pay claims and gender pay gap reporting are creating financial and reputational issues for business, and employment tribunal disputes are back in vogue. Our experts will provide an update on these market trends and how to weather the storm.<br />
	&nbsp;</li>
	<li><strong>Understanding the &#39;Boilerplate&#39;</strong> - often a poorly understood bedrock of our craft, here we examine: Do we need it - at all or in particular circumstances? Does it always deliver what we want or expect?&nbsp; Is our version up-to-date or still based on Magna Carta?! The ever-popular David Lowe will share his fascination and insight about this important topic.<br />
	&nbsp;</li>
	<li><strong>Competition law - mind the gap...</strong> - the UK&#39;s Competition and Markets Authority (CMA) has received a considerable increase in budget for its post-Brexit role. As the UK leaves the EU, the CMA recognises that this departure risks creating &#39;enforcement gaps&#39;, and has set out its stall for sectors it intends to target. We assess recent competition law and policy developments in the UK and the EU, and give our insights as to what this means in terms of risk management.</li>
</ul>

<p>&nbsp;</p>

<h2>Agenda</h2>

<table class=""format"">
	<thead>
		<tr>
			<th scope=""col"">Time</th>
			<th scope=""col"">Activity</th>
			<th scope=""col"">Speaker</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>08:45</td>
			<td>Registration</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>09:10</td>
			<td>Introduction</td>
			<td>Robert Breedon</td>
		</tr>
		<tr>
			<td>09:15</td>
			<td>Living with GDPR: is there life beyond May 2018?&nbsp;</td>
			<td>Sally Mewies</td>
		</tr>
		<tr>
			<td>10:00</td>
			<td>New world, new labour law</td>
			<td>Martin Chitty</td>
		</tr>
		<tr>
			<td>10:45</td>
			<td>Mid-morning break</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>11:15</td>
			<td>Boilerplate: Bedrock or background noise?</td>
			<td>David Lowe</td>
		</tr>
		<tr>
			<td>12:00</td>
			<td>Competition law - trends and updates in a moving landscape</td>
			<td>Sam Beighton</td>
		</tr>
		<tr>
			<td>12:45</td>
			<td>Lunch</td>
			<td>&nbsp;</td>
		</tr>
	</tbody>
</table>
","<p>This event is free of charge.</p>

<p>This event will run for 3 hours. Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession.</p>

<p>Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,02-05-2018 13:29,https://reaction.gowlingwlg.com/reaction/RSGenPage.asp?RSID=nbwEPVw9rCbv95DupLk4G7IIkvXkFjk7M9WHXIRp7oM,NULL,Register for this event,9FBE191E-3BCF-45DE-A2BA-338BB194FC9D,NULL,d8837737-40d2-4472-8a9e-ba4101ec2105;2e9a87e2-3d2e-4d69-ba9c-06b4b358ca0d;b3f9fce6-b77c-4e15-978e-eaa664c609dc,a143cbfd-d333-42a0-89a6-7287894464f1,1ca237c0-eb32-40df-ba06-268230275f34;9611c614-e71a-44d1-9a73-640917c51429;fb60329f-6333-4f7e-b26b-4f9b106a32e7;ad056fcd-7211-4da7-a9e2-30612d332954;f13a9240-2482-4077-be83-ebaa741dc3f0,NULL,Seminar,NULL,NULL,NULL,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,8A1C0ABA-2016-4331-83C6-C12C5213B2F9,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
25,/Events/2018/Droit-du-travail-developpements-recents,fr-CA,F2D925B5-CAEE-470B-8A53-4F5256CB92C0,Droit du travail : développements récents,Droit du travail : développements récents et outils pour une gestion harmonieuse des relations de travail,,NULL,NULL,GWLG.Conference,00:00.0,00:00.0,8 h,12 h,EST,1,3,"<p>À titre d&rsquo;employeur, votre gestion des ressources humaines est influencée par nombre de facteurs : l&rsquo;actualité, les nouveaux projets de loi ou encore les mouvements popularisés. La dernière année a été fertile en développements juridiques, législatifs ou encore sociaux. Ceux-ci obligent les employeurs à s&rsquo;adapter à cette évolution de la société qui touche les salariés et qui a un impact direct sur leur prestation de travail et sur les obligations que vous assumez à titre d&rsquo;employeur. Il n&rsquo;y a qu&rsquo;à penser à la légalisation prochaine du cannabis ou encore au mouvement #MoiAussi dont les conséquences en milieu de travail sont aussi variées que complexes.<br />
<br />
Comment y faire face? Quels sont les développements récents, les leçons à tirer de ceux-ci et les meilleurs outils pour l&rsquo;avenir? Quelles sont les mesures à adopter pour assurer une gestion harmonieuse des relations de travail?&nbsp;</p>

<p>À l&#39;occasion de notre colloque annuel en droit du travail et de l&#39;emploi, nos experts vous apporteront des réponses et des outils concrets en vous exposant des cas précis et applicables à votre réalité d&#39;employeur.</p>
",NULL,NULL,53:11.0,https://sites-gowlingwlg.vuturevx.com/99/3635/landing-pages/event-registration-(blank-form).asp,NULL,Inscrivez-vous,93D96357-D023-48D9-82C7-784977F93D3E,NULL,d8837737-40d2-4472-8a9e-ba4101ec2105,NULL,e72ca6ad-e2e0-446b-9914-9eb2ed87e5b9;40d2e703-8710-44d5-9b4a-6108d5734e98;c93dbb22-5ca0-4cfa-98f8-bc83ad2d3909;6afdd62d-3166-4623-98dc-e0cdea6d1b74;a11c6b0d-3b5f-4a23-bbfa-a49d9bf4226f;f1b045b4-4d6d-4eac-a80e-d705e6352efc,NULL,Conférence,NULL,NULL,NULL,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml?width=1400&height=540&ext=.jpg,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml?width=500&height=550&ext=.jpg,0,NULL,https://sites-gowlingwlg.vuturevx.com/99/3635/landing-pages/event-registration-(blank-form).asp,Inscrivez-vous,GWLG.Canada,0,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
26,/Events/2018/Conference-blockchain-et-propriete-intellectuelle,fr-CA,380ED1C6-6ED1-4743-BF00-0D48BFEA0264,Conférence blockchain et propriété intellectuelle,Blockchain et propriété intellectuelle,,NULL,NULL,GWLG.Conference,30:00.0,30:00.0,7 h 30,9 h 30,EST,1,1 h,"<p>Ne manquez pas cette présentation de notre associé Benoit Yelle qui se penchera sur les enjeux de propriété intellectuelle (PI) touchant l&rsquo;un des sujets de l&rsquo;heure&nbsp;: la technologie blockchain. Il abordera notamment&nbsp;:</p>

<ul>
	<li>
	<p>Les considérations clés quant à la décision de breveter ou non les applications de cette technologie</p>
	</li>
	<li>
	<p>Le rôle du droit de la PI relativement aux logiciels libres (open source)</p>
	</li>
	<li>
	<p>L&rsquo;évolution de l&rsquo;attitude de l&rsquo;industrie quant à la protection de la PI</p>
	</li>
</ul>

<p>L&rsquo;événement est gratuit et le petit-déjeuner sera servi; les places sont cependant limitées, réservez la vôtre sans tarder. Au plaisir de vous y voir!</p>
",NULL,NULL,56:21.0,https://sites-gowlingwlg.vuturevx.com/99/3658/landing-pages/blockchain-et-propriete-intellectuelle---18-avril-2018-event-registration-(blank-form).asp,NULL,Inscrivez-vous,AF65FCAA-97DD-42F4-9D5F-2801B9E0F9F3,NULL,08b9a44c-bb26-4255-9779-296a124fcbee;20e41ca2-b15a-4815-bb5c-7cf60c18278f,NULL,126a0d50-b911-4041-948f-0e213389179e,NULL,Conférence,NULL,Musée McCord,33867,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml?width=1400&height=540&ext=.jpg,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml?width=500&height=550&ext=.jpg,0,NULL,https://sites-gowlingwlg.vuturevx.com/99/3658/landing-pages/blockchain-et-propriete-intellectuelle---18-avril-2018-event-registration-(blank-form).asp,Inscrivez-vous,GWLG.Canada,0,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
27,/Events/2018/Diversity-and-Inclusion-Evening-with-Wade-Davis,en-GB,539E6AB7-B269-40D3-BA8F-AB74508B2BAD,Diversity and Inclusion - Evening with Wade Davis,Diversity and Inclusion - An evening with Wade Davis ,,NULL,NULL,GWLG.SpecialEvents,00:00.0,00:00.0,5:00 PM,8:00 PM,EST,0,NULL,"<p>On the heels of International Women&rsquo;s Day and in our continued commitment to press for progress, we invite you to join us on Apr. 5 for an eye-opening evening with former NFL player,&nbsp;<strong><u><a href=""https://urldefense.proofpoint.com/v2/url?u=https-3A__sites-2Dgowlingwlg.vuturevx.com_email-5Fhandler.aspx-3Fsid-3Dblankform-26redirect-3Dhttp-253a-252f-252fwww.wadeadavis.com-252f&amp;d=DwMFaQ&amp;c=d0WXBk_Z-g8VkGhzz_gPiQ&amp;r=mYBcUSyCKwojtRW6y7lPBngw9RWmzPfZRYmHL2BlsKk&amp;m=hlQUrAyzx_8Ldnly67_lnEpT21i1vvjCuo9zQpbWj7c&amp;s=I0Jsdyt0ocV3Ooo3W7SDYzEyr1cUWQAqjFBhbSQqgXI&amp;e="" target=""_blank""><u>Wade Davis</u></a></u>.</strong></p>

<p>Wade is a thought leader, public speaker, and the NFL&rsquo;s first LGBT inclusion consultant. He currently consults for numerous professional sports leagues, Google and other Fortune 500 companies &mdash; advising them on how to create inclusive cultures, especially as they pertain to the intersection of sexism, racism and homophobia.</p>

<p>Wade&rsquo;s widely viewed TEDx Talk &ldquo;<u><a href=""https://urldefense.proofpoint.com/v2/url?u=https-3A__sites-2Dgowlingwlg.vuturevx.com_email-5Fhandler.aspx-3Fsid-3Dblankform-26redirect-3Dhttps-253a-252f-252fwww.youtube.com-252fwatch-253fv-253dumKKrbmdHFM&amp;d=DwMFaQ&amp;c=d0WXBk_Z-g8VkGhzz_gPiQ&amp;r=mYBcUSyCKwojtRW6y7lPBngw9RWmzPfZRYmHL2BlsKk&amp;m=hlQUrAyzx_8Ldnly67_lnEpT21i1vvjCuo9zQpbWj7c&amp;s=l7oJ1sfBow7s9ktsx9pvjC_Ns4K4wHUT3ZcyuynCRsc&amp;e=""><u>The Mask of Masculinity</u></a></u>&rdquo;, discusses the impact of toxic masculinity on male identity.&nbsp;Wade was also recently appointed as a Champion for Innovation by UN Women on International Women&rsquo;s Day, to support the Global Innovation Coalition for Change, an initiative focused on women&#39;s economic empowerment and breaking the gender digital divide.</p>

<p>Moderated by<strong>&nbsp;<u><a href=""https://urldefense.proofpoint.com/v2/url?u=https-3A__sites-2Dgowlingwlg.vuturevx.com_email-5Fhandler.aspx-3Fsid-3Dblankform-26redirect-3Dhttps-253a-252f-252fgowlingwlg.com-252fen-252fpeople-252froberto-2Daburto-2523panel-2Dbutton1&amp;d=DwMFaQ&amp;c=d0WXBk_Z-g8VkGhzz_gPiQ&amp;r=mYBcUSyCKwojtRW6y7lPBngw9RWmzPfZRYmHL2BlsKk&amp;m=hlQUrAyzx_8Ldnly67_lnEpT21i1vvjCuo9zQpbWj7c&amp;s=yvGe5mRFPBECrZAJZ0-f-D3LNBznUnvsnT6elYWoa_w&amp;e=""><u>Roberto Aburto</u></a></u></strong>, co-chair of Gowling WLG&#39;s National Diversity and Inclusion Council, Wade&rsquo;s presentation will focus on gender equality and ways in which men can successfully become active advocates for gender parity and equality.</p>

<p>This promises to be an inspirational event and a networking opportunity not to be missed.</p>

<p style=""text-align: center;""><a class=""c-button-white"" href=""https://sites-gowlingwlg.vuturevx.com/101/3633/landing-pages/wade-davis-event---2018-04-05-event-registration-(blank-form).asp?sid=blankform"">Register for this event&nbsp;</a></p>

<h3 style=""text-align: center;"">&nbsp;</h3>
",NULL,NULL,03:50.0,https://sites-gowlingwlg.vuturevx.com/101/3633/landing-pages/wade-davis-event---2018-04-05-event-registration-(blank-form).asp?sid=blankform,NULL,Register for this event,CB61C4C1-D0CF-4AA1-BA0B-5DAB5DC99393,NULL,NULL,NULL,NULL,NULL,Special events,NULL,Ottawa,67,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/101/3633/landing-pages/wade-davis-event---2018-04-05-event-registration-(blank-form).asp?sid=blankform,Register for this event ,GWLG.Canada,0,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
28,/Events/2018/How-well-do-you-understand-BIM,en-GB,CFED7C19-A354-4286-BA9D-39EF2E69BF5C,How well do you understand BIM,How well do you understand the legal elements of BIM?,,NULL,NULL,GWLG.Seminar,26-04-2018 11:58,NULL,17:30,19:30,Local time,0,NULL,"<p>Join us for the&nbsp;launch of BIM4Legal: an exclusive group connecting professionals and lawyers that work in the construction industry to discuss Building Information Modelling (BIM).</p>

<p>BIM4Legal provides a platform to discuss all the issues and challenges you face and the support the industry needs.</p>

<p>The group is the next step in the launch of The Winfield Rock Report, produced in association with the UK BIM Alliance. At this event, <a href=""https://gowlingwlg.com/en/people/sarah-rock"">Sarah Rock</a> and <a href=""https://www.linkedin.com/in/maywinfield/"">May Winfield</a> will be discussing feedback from their ground-breaking report, as well as launching BIM4Legal.</p>

<p>We hope you can join us on Thursday 26 April for this special networking event for the legal and technical construction community.</p>

<h2>Agenda</h2>

<table class=""format"">
	<thead>
		<tr>
			<th scope=""col"">Time</th>
			<th scope=""col"">Activity</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>17:30</td>
			<td>Registration &amp; Refreshments</td>
		</tr>
		<tr>
			<td>18:00</td>
			<td>Talk with Sarah Rock and May Winfield followed by Q&amp;A session</td>
		</tr>
		<tr>
			<td>18:40</td>
			<td>Approximate finish followed by networking and drinks on the balcony</td>
		</tr>
	</tbody>
</table>
","<p>This event is free of charge.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,25-04-2018 11:59,https://reaction.gowlingwlg.com/reaction/RSGenPage.asp?RSID=ftRozHjh5R1-h-J233yHz8HqpUfIxtc_7v7k4_ybAWk,NULL,Register for this event,9FBE191E-3BCF-45DE-A2BA-338BB194FC9D,cdfc9b50-74c2-4af5-9508-342935f81ccd;3fc2ca8c-9d19-44ba-a3a9-ad1ecb11e900,NULL,NULL,f13efb7c-e7ca-4164-bf4d-0bbb74d01e0d,NULL,Seminar,Sarah Rock,London,71,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,40ECBAEA-9783-479A-8EB9-9D39F577C01D,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
29,/Events/2018/No-such-thing-as-a-silly-question-on-TUPE,en-GB,A5A1CB18-B5F2-41EF-827F-98B5DC30D3AC,No such thing as a silly question on TUPE,Webinar: No such thing as a silly question on TUPE,,NULL,NULL,GWLG.Webinar,32:03.0,NULL,13:00,13:45,BST,1,0.75,"<p>Join us for our next TUPE Club webinar where, by popular demand, we will be hosting a live Q&amp;A session on any TUPE topic.</p>

<p>Do you have a burning issue you need to know the answer to or is there something you have never quite understood about TUPE? If so, now is your chance to ask.&nbsp;</p>

<p>There really is no such thing as a silly question when it comes to TUPE and all questions will be answered on an anonymous basis. We hope you&#39;ll join us for what promises to be a lively and wide-ranging Q&amp;A session.</p>

<p>Our speakers, Jane Fielding, Louise Clifford, Hannah Swindle and Siobhan Bishop will answer as many of your questions as possible during the session.</p>
","<p>This event is free of charge.</p>

<p>This event will run for 0.75 hours. Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession.</p>

<p>Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,33:36.0,https://reaction.gowlingwlg.com/reaction/RSGenPage.asp?RSID=JZQEfA80Na6S4MwstmXpDTEj8q0Mr2Dk7QQpmwJGO8E,NULL,Register for this event,C41373B4-86B9-4F74-8894-0B0BB7DDBD18,NULL,d8837737-40d2-4472-8a9e-ba4101ec2105,a143cbfd-d333-42a0-89a6-7287894464f1,799cf040-59c7-4986-825a-e4b909364823;170d2758-3451-49b9-944e-147b508dbc01;5466df28-982a-4f78-92d0-6e464942cbc1;7e119a87-174d-49b2-9cc3-1270bd96a57e,NULL,Webinar,NULL,NULL,NULL,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,8A1C0ABA-2016-4331-83C6-C12C5213B2F9,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
30,/Events/2018/Employment-and-labour-law-seminar-Waterloo,en-GB,C2481F60-C3B5-45F4-BD24-6100C8E93683,Employment and labour law seminar Waterloo,Employment & Labour Law Seminar – Waterloo,Gowling WLG's popular Employment & Labour Law Seminar returns to Ontario in May giving you the opportunity to learn about the latest legal developments affecting your workplace.,NULL,NULL,GWLG.Seminar,01-05-2018 07:45,01-05-2018 13:00,07:45,13:00,EST,1,4 hours,"<div id=""txt_05"">
<p>Gowling WLG&#39;s popular <strong>Employment &amp; Labour Law Seminar</strong> returns to the Waterloo Region on Tuesday, May 1, giving you the opportunity to learn about the latest legal developments affecting your workplace.</p>

<p>Our leading professionals will guide you through these changes and offer practical insight and advice on what they mean for your organization.</p>

<p><strong>Benefits of attending</strong></p>

<p>This complimentary seminar provides an open and personal forum for the presentation and discussion of the latest case law, legislation and evolving employment issues. By attending, you&rsquo;ll have the chance to consider and discuss critical employment issues affecting your business with our panel of legal experts.</p>

<h2>Topics</h2>

<ul>
	<li>#Metoo</li>
	<li>Marijuana &ndash; Will our workplaces go up in smoke?</li>
	<li>Written employment agreements: Reason for optimism amid the despair?</li>
	<li>Labour and occupational health and safety update&nbsp;</li>
	<li>Travelling to the US for business in the Trump era</li>
</ul>
</div>

<p>&nbsp;</p>

<h2>Can&#39;t make it to the Waterloo seminar?&nbsp;</h2>

<p>We will also be hosting similar seminars in&nbsp;<a href=""~/en/insights-resources/events/2018/hot-button-employment-issues-of-2018-seminar"">Calgary</a>,&nbsp;<a href=""~/en/insights-resources/events/2018/employment-and-labour-law-seminar-hamilton"">Hamilton</a>,&nbsp;<a href=""~/en/insights-resources/events/2018/employment-and-labour-law-seminar-1"">Toronto</a>&nbsp;and&nbsp;<a href=""~/en/insights-resources/events/2018/employment-and-labour-law-seminar-2"">Ottawa</a>.&nbsp; Click the city that interests you to learn more.</p>

<h2>CPD Credits</h2>

<p style=""text-align: center;""><img alt=""ELE CPD Credits"" src=""~/getmedia/fbe9484c-5001-4ae4-a7df-a6354774cb6c/14-HRPA-CPD-Seal-RGB-300.jpg.xml?width=99&amp;height=92"" style=""width: 99px; height: 92px;"" /></p>

<p>This program has been pre-approved for 4 CPD hours under Section A of the CPD Log of the Human Resource Professionals Association (HRPA).</p>
",NULL,NULL,30-04-2018 16:39,https://sites-gowlingwlg.vuturevx.com/105/3502/landing-pages/employment-and-labour-law-seminar-event-registration-(blank-form).asp,NULL,Register for this event,C7F2B1A2-DB6D-4E6A-92BD-F3ECF8CCBC22,NULL,d8837737-40d2-4472-8a9e-ba4101ec2105,NULL,NULL,7cb333ed-c165-408c-bed6-9b9914571d2b;aa598f14-c406-4a0b-bf75-1e50eb033bfa;7eff5158-bbe5-43de-be0e-cc3a84d2ecfd;c2481f60-c3b5-45f4-bd24-6100c8e93683,Seminar,NULL,Holiday Inn,34462,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/105/3502/landing-pages/employment-and-labour-law-seminar-event-registration-(blank-form).asp,Register for this event,GWLG.Canada,0,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
31,/Events/2018/Employment-and-labour-law-seminar-Toronto,en-GB,7EFF5158-BBE5-43DE-BE0E-CC3A84D2ECFD,Employment and labour law seminar Toronto,Employment & Labour Law Seminar - Toronto,Gowling WLG's popular Employment & Labour Law Seminar returns to Toronto in May giving you the opportunity to learn about the latest legal developments affecting your workplace.,NULL,NULL,GWLG.Seminar,02-05-2018 08:30,02-05-2018 12:30,08:30,12:00,EST,1,4 hours,"<p>Gowling WLG&#39;s popular <strong>Employment &amp; Labour Law Seminar</strong> returns to Toronto on Wednesday, May 2 giving you the opportunity to learn about the latest legal developments affecting your workplace.</p>

<p>Our leading professionals will guide you through these changes and offer practical insight and advice on what they mean for your organization.</p>

<p><strong>Benefits of attending</strong></p>

<p>This complimentary seminar provides an open and personal forum for the presentation and discussion of the latest case law, legislation and evolving employment issues. By attending, you&#39;ll have the chance to consider and discuss critical employment issues affecting your business with our panel of legal experts.</p>

<p>You&#39;ll have the opportunity to consider and discuss critical employment issues affecting your business with our panel of legal experts. It is also eligible for CPD credits.</p>

<h2>Topics</h2>

<ul>
	<li>Marijuana - Will our workplaces go up in smoke?</li>
	<li>Recent changes to ESA</li>
	<li>Labour and occupational health and safety update</li>
	<li>Top 10 developments in employment, labour and human rights law</li>
	<li>#Metoo: Sexual harassment in the workplace</li>
</ul>

<h2>Can&#39;t make it to the Toronto seminar?</h2>

<p>We will also be hosting similar seminars in <a href=""~/en/events/2018/hot-button-employment-issues-of-2018-seminar/"">Calgary</a>, Hamilton, <a href=""~/en/events/2018/employment-and-labour-law-seminar-ottawa/"">Ottawa</a> and the Waterloo Region. Click the city that interests you to learn more.</p>

<h2>CPD Credits</h2>

<p style=""text-align: center;""><img alt=""ELE CPD Credits"" src=""~/getmedia/fbe9484c-5001-4ae4-a7df-a6354774cb6c/14-HRPA-CPD-Seal-RGB-300.jpg.xml?width=99&amp;height=92"" style=""width: 99px; height: 92px;"" /></p>

<p>This program has been pre-approved for 4 CPD hours under Section A of the CPD Log of the Human Resource Professionals Association (HRPA).</p>
",NULL,NULL,25-04-2018 16:39,https://sites-gowlingwlg.vuturevx.com/103/3636/landing-pages/employment-and-labour-law-seminar-event-registration-(blank-form).asp?sid=blankform,NULL,Register for this event,B2DC4461-DC66-4F96-9AE6-32BC2B14259D,NULL,d8837737-40d2-4472-8a9e-ba4101ec2105,NULL,78949d4e-8d4c-4e4d-ac5d-34559b54ad25;bbd690ea-a4bd-4cdf-85d3-ca0c7d862d99;39410df1-425d-4c6f-bea0-54d5e41e744a;c8e9a22f-d07c-429b-880f-01703fc82211;5e8d16d6-6d21-4f49-95a9-2c48c90ef951;799cf040-59c7-4986-825a-e4b909364823;79205c59-28cb-4630-bd62-bf070ba732b0,NULL,Seminar,NULL,Toronto,63,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,NULL,NULL,NULL,NULL,"Employment, Labour & Equalities",NULL,NULL,NULL,NULL,NULL
32,/Events/2018/Employment-and-labour-law-seminar-Hamilton,en-GB,7CB333ED-C165-408C-BED6-9B9914571D2B,Employment and labour law seminar Hamilton,Employment & Labour Law Seminar – Hamilton,Gowling WLG's popular Employment & Labour Law Seminar returns to Ontario in May giving you the opportunity to learn about the latest legal developments affecting your workplace.,NULL,NULL,GWLG.Seminar,09-05-2018 07:45,09-05-2018 13:00,07:45,13:00,EST,1,4 hours,"<div id=""txt_05"">
<p>Gowling WLG&#39;s popular <strong>Employment &amp; Labour Law Seminar</strong> returns to Hamilton/Burlington on Wednesday, May 9, giving you the opportunity to learn about the latest legal developments affecting your workplace.</p>

<p>Our leading professionals will guide you through these changes and offer practical insight and advice on what they mean for your organization.</p>

<p><strong>Benefits of attending</strong></p>

<p>This complimentary seminar provides an open and personal forum for the presentation and discussion of the latest case law, legislation and evolving employment issues. By attending, you&rsquo;ll have the chance to consider and discuss critical employment issues affecting your business with our panel of legal experts.</p>

<p>You&rsquo;ll have the opportunity to consider and discuss critical employment issues affecting your business with our panel of legal experts. It is also eligible for CPD credits.</p>

<h2>Topics</h2>

<ul>
	<li>Panel discussion - Our lawyers will discuss a variety of topics that most employers face and provide guidance on how to manage them. Topics will include:
	<ul>
		<li>Marijuana in the workplace</li>
		<li>Mental health and the WSIB</li>
		<li>Independent contractors v. dependent contractors v. employees</li>
		<li>Your obligations in the #MeToo environment</li>
		<li>Don&#39;t forget the AODA</li>
		<li>What have the courts done now?</li>
	</ul>
	</li>
	<li>Your employment offer needs a check-up!&nbsp;</li>
	<li>Bill 148 and how it impacts your workplace</li>
	<li>Travelling to the U.S. for business purposes in the Trump era</li>
</ul>
</div>

<p>&nbsp;</p>

<h2>Can&#39;t make it to the Hamilton&nbsp;seminar?&nbsp;</h2>

<p>We will also be hosting similar seminars in&nbsp;<a href=""~/en/insights-resources/events/2018/hot-button-employment-issues-of-2018-seminar"">Calgary</a>,&nbsp;<a href=""~/en/insights-resources/events/2018/employment-and-labour-law-seminar-toronto"">Toronto</a>,&nbsp;<a href=""~/en/insights-resources/events/2018/employment-and-labour-law-seminar-2"">Ottawa</a>&nbsp;and the <a href=""~/en/insights-resources/events/2018/employment-and-labour-law-seminar-waterloo"">Waterloo Region</a>.&nbsp;Click the city that interests you to learn more.</p>

<h2>CPD Credits</h2>

<p style=""text-align: center;""><img alt=""ELE CPD Credits"" src=""~/getmedia/fbe9484c-5001-4ae4-a7df-a6354774cb6c/14-HRPA-CPD-Seal-RGB-300.jpg.xml?width=99&amp;height=92"" style=""width: 99px; height: 92px;"" /></p>

<p>This program has been pre-approved for 4 CPD hours under Section A of the CPD Log of the Human Resource Professionals Association (HRPA).</p>
",NULL,NULL,01-05-2018 16:39,https://sites-gowlingwlg.vuturevx.com/96/3637/landing-pages/employment-and-labour-law-seminar-event-registration-(blank-form).asp?sid=blankform,NULL,Register for this event,868E644D-C7B5-4998-9A90-984C6FBE8651,NULL,d8837737-40d2-4472-8a9e-ba4101ec2105,NULL,NULL,aa598f14-c406-4a0b-bf75-1e50eb033bfa;c2481f60-c3b5-45f4-bd24-6100c8e93683;7eff5158-bbe5-43de-be0e-cc3a84d2ecfd,Seminar,NULL,Royal Botanical Gardens,34465,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
33,/Events/2018/Employment-and-labour-law-seminar-Ottawa,en-GB,AA598F14-C406-4A0B-BF75-1E50EB033BFA,Employment and labour law seminar Ottawa,Employment & Labour Law Seminar - Ottawa,"Our popular Employment & Labour Law Seminar returns to Ontario, offering the opportunity to learn about the latest legal developments affecting your workplace.",NULL,NULL,GWLG.Seminar,30-04-2018 08:00,30-04-2018 12:30,08:00,12:30,EST,1,4 hours,"<p>Gowling WLG&#39;s popular <strong>Employment &amp; Labour Law Seminar</strong> returns to our Ottawa office on Monday, April 30, providing you with the opportunity to learn about the latest legal developments affecting your workplace.</p>

<p>Our leading professionals will guide you through these key developments and offer practical insight and advice on what these changes mean for your organization.</p>

<p><strong>Benefits of attending</strong></p>

<p>This complimentary seminar provides an open and personal forum for the presentation and discussion of the latest case law, legislation and evolving employment issues. By attending, you&#39;ll have the chance to consider and discuss critical employment issues affecting your business with our panel of legal experts.</p>

<p>During our Q&amp;A session, you will have the opportunity to discuss critical employment issues affecting your business with our panel of legal experts.</p>

<p>To ensure your topics are addressed, please send us your questions in advance to <a href=""mailto:allison.gardner%40gowlingwlg.com?subject=RE%3A%20Question%20for%20ELE%20Seminar%2C%20April%2030"">allison.gardner@gowlingwlg.com</a>.</p>

<h2>Topics</h2>

<ul>
	<li>#LetsTalk: Mental health accommodation in the workplace</li>
	<li>Budding challenges: Marijuana, the workplace and employer responsibilities</li>
	<li>#MeToo: Managing challenging and sensitive workplace sexual harassment claims</li>
	<li>Top 10 developments in employment, labour and human rights law</li>
</ul>

<h2>Can&#39;t make it to the Ottawa seminar?</h2>

<p>We will also be hosting similar seminars in <a href=""~/en/events/2018/hot-button-employment-issues-of-2018-seminar/"">Calgary</a>, Hamilton, <a href=""~/en/events/2018/employment-and-labour-law-seminar-toronto/"">Toronto</a>, and the Waterloo Region. Click the city that interests you to learn more.</p>

<h2>CPD Credits</h2>

<p style=""text-align: center;""><img alt=""ELE CPD Credits"" src=""~/getmedia/fbe9484c-5001-4ae4-a7df-a6354774cb6c/14-HRPA-CPD-Seal-RGB-300.jpg.xml?width=99&amp;height=92"" style=""width: 99px; height: 92px;"" /></p>

<p>This program has been pre-approved for 4 CPD hours under Section A of the CPD Log of the Human Resource Professionals Association (HRPA).</p>
",NULL,NULL,25-04-2018 16:39,https://sites-gowlingwlg.vuturevx.com/101/3562/landing-pages/ele-seminar-2018-04-30-event-registration-(blank-form).asp,NULL,Register for this event,CB61C4C1-D0CF-4AA1-BA0B-5DAB5DC99393,NULL,d8837737-40d2-4472-8a9e-ba4101ec2105,NULL,79205c59-28cb-4630-bd62-bf070ba732b0;66a40e6b-2d18-4254-9585-8cc1f1dc597a;5031f3f0-f36d-44c6-84dc-c06341cc314a;5e8d16d6-6d21-4f49-95a9-2c48c90ef951;daf683f6-91c3-40f6-850c-ed7502e1e569;2733c3c9-43b4-45f1-a164-ffdc7556ef2e;a510a502-96d3-4ad6-b74c-b3fb1df466af,NULL,Seminar,NULL,Ottawa,67,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,NULL,NULL,NULL,NULL,"Employment, Labour & Equalities",NULL,NULL,NULL,NULL,NULL
34,/Events/2018/Hot-button-employment-issues-of-2018-seminar,en-GB,F3B2418C-17B7-4523-B9B3-6305310D2509,Hot button employment issues of 2018 seminar,Hot button employment issues of 2018 seminar,"Join Gowling WLG's Western Canada Employment, Labour and Equalities Group on Wednesday, May 16 for our third annual Hot Button Employment Issues seminar. This half day session will focus on a range of challenges that many workplaces face today.",NULL,NULL,GWLG.Seminar,16-05-2018 17:47,16-05-2018 17:47,07:30,12:00,Local time,1,3 hours,"<p>Join Gowling WLG&#39;s Western Canada&nbsp;<strong><a href=""~/en/services/employment-labour-equalities/#canada"" target=""_blank"">Employment, Labour and Equalities Group</a></strong> on Wednesday, May 16 for our third annual Hot Button Employment Issues seminar. This half day session will focus on a range of challenges that many workplaces face today.</p>

<p>Our professionals will guide you through key developments and offer practical insights and advice for your organization.</p>

<p><strong>CPD (CPHR) credits</strong> will be awarded to those eligible.</p>

<p>Breakfast and a mid-morning snack will be provided.</p>

<h2>TOPICS</h2>

<ul>
	<li>The times are changing: How does legal pot fit into your drug and alcohol policy?</li>
	<li>Freedom 85? Aging out in the workplace</li>
	<li>The &quot;Me Too&quot; movement and the impact on employers</li>
	<li>Case law update</li>
</ul>

<p>&nbsp;</p>

<h2>Can&#39;t make it to the Calgary seminar?</h2>

<p>We will also be hosting similar seminars in Hamilton, Toronto, Ottawa and the Waterloo Region. Click on the city that interests you to learn more.</p>
",NULL,NULL,07-05-2018 17:50,https://sites-gowlingwlg.vuturevx.com/95/3665/landing-pages/ele-seminar-2018-05-16-event-registration-(blank-form).asp,NULL,Register for this event,3C426BFB-9E67-4F77-AB6F-715278509DAC,NULL,d8837737-40d2-4472-8a9e-ba4101ec2105,NULL,26fb12df-b407-4553-9451-a9880a4c2e8b;d05a8142-f64d-4686-b20f-6ae0cbfa3e8a;53a32860-b6e9-431a-a79b-957e5ad8806b;edc10914-2fae-4dd0-b9c6-b377e8b7a68c;ddc317a8-0a23-4e9e-88d7-d56bdf68612d;b72394f5-7879-4769-8241-2f1a25e630a0,NULL,Seminar,NULL,Hotel Arts,34468,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,NULL,NULL,NULL,NULL,"Employment, Labour & Equalities",NULL,NULL,NULL,NULL,NULL
35,/Events/2018/International-Arbitration-Trade-Dispute-Resolution,en-GB,6F289C5B-CCC7-45DD-BA9D-38D7CAE81C50,International Arbitration Trade Dispute Resolution,International Arbitration & Trade Dispute Resolution,This seminar will address dispute resolution in an international context. It will also provide updates on the dispute resolution mechanisms available under the North American Free Trade Agreement and the Comprehensive Economic and Trade Agreement between Canada and the European Union.,~/getmedia/5d2c684e-88cd-4bce-ad12-8d78837b8e28/arbitration-trade-webinar-social.jpg.xml?width=1200&height=627&ext=.jpg,Gowling WLG Live Webinar May 31 - International arbitration and disupute resolution,GWLG.Webinar,00:00.0,00:00.0,12:00,13:00,EST,1,1 hour,"<p>Certainty is key to doing business internationally.&nbsp;Dispute resolution mechanisms offer comfort and a means of addressing conflict and commercial disagreements, whether in a private transaction or through a treaty.</p>

<p>This live webinar will address dispute resolution in an international context. It will also provide updates on the dispute resolution mechanisms available under the North American Free Trade Agreement and the Comprehensive Economic and Trade Agreement between Canada and the European Union.</p>

<p>Join our expert lawyers from Canada and the UK as they highlight the latest developments in international commercial arbitration and the resolution of disputes under international trade and investment treaties.</p>

<h2>CPD/CLE</h2>

<p>This webinar qualifies for up to one hour of substantive content toward the mandatory CPD requirements of the Law Society of Ontario. It will also count for up to one hour of CPD under the rules of the Law Society of British Columbia, and up to one hour of continuing education credit under the rules of the Barreau du Québec.</p>
",NULL,NULL,26:05.0,https://sites-gowlingwlg.vuturevx.com/106/3721/landing-pages/arbitration-webinar-20180530-event-registration-(blank-form).asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,cbacbac0-abb0-4b36-a8fc-3a060a5ef154;bac2f2f8-09c0-4d06-b0c8-98d9567adfc7,NULL,NULL,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/106/3721/landing-pages/arbitration-webinar-20180530-event-registration-(blank-form).asp,Register now,GWLG.Canada;GWLG.Global;GWLG.UnitedStates;GWLG.UK,0,NULL,NULL,NULL,NULL,NULL,"International Arbitration, International Trade and Customs",NULL,NULL,NULL,NULL,NULL
41,/Events/2018/ThinkHouse-Foundations-June-2018-Birmingham,en-GB,B64E4583-863B-46C1-8EAF-00614BE77B92,ThinkHouse Foundations June 2018 - Birmingham,ThinkHouse Foundations June 2018 - Birmingham,,NULL,NULL,GWLG.Seminar,06-06-2018 15:25,NULL,08:45,12:00,BST,1,2.5,"<p>Whether you are looking for insight into the latest legal developments and hot topics, training resources, or a chance to meet your peers and exchange ideas, Foundations has it covered.</p>

<p>Designed for the in-house lawyer our 2018 programme kicks off with a talk from Matt Owen, who will take a look at guarantees. Starting with a brief recap on the relevant case law, he will go on to highlight potential issues for beneficiaries and the reasons why various provisions are typically included in guarantee documents.</p>

<p>Alex Wrixon will then present a case-law update - a round-up of the latest notable, concerning and curious contract law decisions to emanate from the courts. Practical as ever, this will focus on what to note from a risk management and dispute resolution perspective.</p>

<p>Following a short coffee break, we will conclude with a talk from Tom Cox on the &#39;Shape of Litigation&#39;. Tom will consider the typical challenges experienced by in-house and private practice legal teams when working together, and how common issues can be avoided.</p>

<p>ThinkHouse Foundations is for in-house lawyers who are up to five years&#39; PQE. Our sessions provide CPD points and a means of evidencing competences, some practical and relevant training and an opportunity to network with peers of a similar level.</p>

<h2>Agenda</h2>

<table class=""format"">
	<thead>
		<tr>
			<th scope=""col"">Time</th>
			<th scope=""col"">Activity</th>
			<th scope=""col"">Speaker</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>08:45</td>
			<td>Registration&nbsp;and Breakfast</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>09:10</td>
			<td>Introduction</td>
			<td>Emma Bufton</td>
		</tr>
		<tr>
			<td>09:15</td>
			<td>Guarantees</td>
			<td>Matt Owen</td>
		</tr>
		<tr>
			<td>10:00</td>
			<td>Case Law Update</td>
			<td>Alex Wrixon</td>
		</tr>
		<tr>
			<td>10:45</td>
			<td>Tea &amp; coffee</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>11:10</td>
			<td>The Shape of Litigation</td>
			<td>Tom Cox</td>
		</tr>
		<tr>
			<td>11:55</td>
			<td>Round up / Q&amp;A</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>12:00</td>
			<td>Lunch</td>
			<td>&nbsp;</td>
		</tr>
	</tbody>
</table>
","<p>This event is free of charge.</p>

<p>This event will run for 2.5 hours. Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession.</p>

<p>Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,06-06-2018 15:27,https://reaction.gowlingwlg.com/reaction/RSGenPage.asp?RSID=Yd4t1K4SoeKGSTsmwZoEVXtmIuZvzs-tcWRPqlVDFo8,NULL,Register for this event,58076178-DA60-4AB6-A07C-EF250971EBF7,NULL,82475447-1cf2-4aa7-9a23-24e5b1a7b3bd,a143cbfd-d333-42a0-89a6-7287894464f1,6965a192-e42d-4e06-af1e-a4ebb072b416;2c681800-4156-4c80-b201-9846addf793c;73e21e2c-c353-4385-b087-4e589f60a3e4;ca67aa19-bd53-48e1-97b2-b3dec72a50c8,NULL,Seminar,NULL,Birmingham,70,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,8A1C0ABA-2016-4331-83C6-C12C5213B2F9,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
42,/Events/2018/ThinkHouse-Foundations-June-2018-London,en-GB,3A0CD82C-B27B-4781-BEDE-71B6EB4D219E,ThinkHouse Foundations June 2018 - London,ThinkHouse Foundations June 2018 - London,,NULL,NULL,GWLG.Seminar,07-06-2018 15:25,NULL,08:45,12:00,BST,1,2.5,"<p>Whether you are looking for insight into the latest legal developments and hot topics, training resources, or a chance to meet your peers and exchange ideas, Foundations has it covered.</p>

<p>Designed for the in-house lawyer our 2018 programme kicks off with a talk from Matt Owen, who will take a look at guarantees. Starting with a brief recap on the relevant case law, he will go on to highlight potential issues for beneficiaries and the reasons why various provisions are typically included in guarantee documents.</p>

<p>Alex Wrixon will then present a case-law update - a round-up of the latest notable, concerning and curious contract law decisions to emanate from the courts. Practical as ever, this will focus on what to note from a risk management and dispute resolution perspective.</p>

<p>Following a short coffee break, we will conclude with a talk from Tom Cox on the &#39;Shape of Litigation&#39;. Tom will consider the typical challenges experienced by in-house and private practice legal teams when working together, and how common issues can be avoided.</p>

<p>ThinkHouse Foundations is for in-house lawyers who are up to five years&#39; PQE. Our sessions provide CPD points and a means of evidencing competences, some practical and relevant training and an opportunity to network with peers of a similar level.</p>

<h2>Agenda</h2>

<table class=""format"">
	<thead>
		<tr>
			<th scope=""col"">Time</th>
			<th scope=""col"">Activity</th>
			<th scope=""col"">Speaker</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>08:45</td>
			<td>Registration&nbsp;and Breakfast</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>09:10</td>
			<td>Introduction</td>
			<td>Emma Bufton</td>
		</tr>
		<tr>
			<td>09:15</td>
			<td>Guarantees</td>
			<td>Matt Owen</td>
		</tr>
		<tr>
			<td>10:00</td>
			<td>Case Law Update</td>
			<td>Alex Wrixon</td>
		</tr>
		<tr>
			<td>10:45</td>
			<td>Tea &amp; coffee</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>11:10</td>
			<td>The Shape of Litigation</td>
			<td>Tom Cox</td>
		</tr>
		<tr>
			<td>11:55</td>
			<td>Round up / Q&amp;A</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>12:00</td>
			<td>Lunch</td>
			<td>&nbsp;</td>
		</tr>
	</tbody>
</table>
","<p>This event is free of charge.</p>

<p>This event will run for 2.5 hours. Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession.</p>

<p>Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,07-06-2018 15:27,https://reaction.gowlingwlg.com/reaction/RSGenPage.asp?RSID=Yd4t1K4SoeKGSTsmwZoEVXtmIuZvzs-tcWRPqlVDFo8,NULL,Register for this event,9FBE191E-3BCF-45DE-A2BA-338BB194FC9D,NULL,82475447-1cf2-4aa7-9a23-24e5b1a7b3bd,a143cbfd-d333-42a0-89a6-7287894464f1,6965a192-e42d-4e06-af1e-a4ebb072b416;2c681800-4156-4c80-b201-9846addf793c;73e21e2c-c353-4385-b087-4e589f60a3e4;ca67aa19-bd53-48e1-97b2-b3dec72a50c8,NULL,Seminar,NULL,NULL,NULL,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,8A1C0ABA-2016-4331-83C6-C12C5213B2F9,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
43,/Events/2018/Real-Estate-Next-Generation-Drinks-May-2018,en-GB,6E1F714C-94B9-4AC4-8CC7-0C6B47BB4E4E,Real Estate Next Generation Drinks - May 2018,Real Estate Next Generation Networking Drinks - May 2018,A real estate sector next generation networking event to provide the perfect opportunity to meet peers at a similar stage in your career in an informal and casual setting. ,NULL,NULL,GWLG.SpecialEvents,05:25.0,NULL,17:30,Late,BST,0,NULL,"<p>Are you looking to develop your career and network in real estate?</p>

<p>Gowling WLG&#39;s award-winning real estate team will be hosting this&nbsp;exclusive evening&nbsp;dedicated to the next generation of the industry. If you work in the real estate sector, we&#39;d like to invite you and your colleagues to our Real Estate Sector Next Generation networking drinks evening.</p>

<p>Hosted in Birmingham, you&#39;ll be joined by peers at a similar stage in their career as you, providing the opportunity to build a new network for your career. Whether you&#39;re starting out, or have been in the industry for over five years, this event is open to anyone working in a professional real estate environment.</p>

<p>The event&nbsp;will be hosted at Primitivo (Birmingham) providing the perfect backdrop to socialise in an informal setting. Whether you want to discuss common themes or share experiences of best practice, we hope that the evening will help you with your journey into developing a peer network and professional connections.</p>

<p>Drinks and canapés will be available from 17:30 onwards.</p>

<p>We hope you can join us.</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,52:39.0,mailto:zan.hoang@gowlingwlg.com?subject=Real Estate Next Generation Drinks - 17 May 2018,NULL,Register for this event,CEC824CC-71EF-4F67-BBB6-4402E9A544B7,59be9dcd-e5f0-43e4-9d50-442a658eda18,8f6a2b31-4a27-4128-9845-771f890961e0;679ed8d9-29fb-40af-9b27-98b2dd69e1e8;532b8867-e1ba-43da-9da7-d458c396e288;c27f9d3f-c358-48fb-b057-9a291fea02aa;36633566-9cd4-447d-8af3-b83da81ac361;44493789-557b-459e-ab0e-f46bf3eeb8c7,NULL,NULL,NULL,Special events,NULL,NULL,NULL,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,1F5096ED-3545-49CD-91F1-B69F87479BC4,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
44,/Events/2018/Real-Estate-Next-Generation-Drinks-June-2018,en-GB,A8E470FA-0BC9-4895-BCBA-A39C1D5CA16F,Real Estate Next Generation Drinks - June 2018,Real Estate Next Generation Networking Drinks - June 2018,A real estate sector next generation networking event to provide the perfect opportunity to meet peers at a similar stage in your career in an informal and casual setting. ,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.SpecialEvents,01:25.0,NULL,17:30,Late,BST,0,NULL,"<p>Are you looking to develop your career and network in real estate?</p>

<p>Gowling WLG&#39;s award-winning real estate team will be hosting this exclusive evening dedicated to the next generation of the industry. If you work in the real estate sector, we&#39;d like to invite you and your colleagues to our Real Estate Sector Next Generation networking drinks evening.</p>

<p>Hosted in London, you&#39;ll be joined by peers at a similar stage in their career as you, providing the opportunity to build a new network for your career. Whether you&#39;re starting out, or have been in the industry for over five years, this event is open to anyone working in a professional real estate environment.</p>

<p>The event will be hosted at the Ball Brothers in Hay&#39;s Galleria (London), providing the perfect backdrop to socialise in an informal setting. Whether you want to discuss common themes or share experiences of best practice, we hope that the evening will help you with your journey into developing a peer network and professional connections.</p>

<p>Drinks and canapés will be available from 17:30 onwards.</p>

<p>We hope you can join us.</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,07:01.0,mailto:zan.hoang@gowlingwlg.com?subject=Real Estate Next Generation Drinks - 7 June 2018,NULL,Register for this event,B22C9725-25F5-4A84-9000-8014E1083BC3,59be9dcd-e5f0-43e4-9d50-442a658eda18,8f6a2b31-4a27-4128-9845-771f890961e0;679ed8d9-29fb-40af-9b27-98b2dd69e1e8;36633566-9cd4-447d-8af3-b83da81ac361;c27f9d3f-c358-48fb-b057-9a291fea02aa;532b8867-e1ba-43da-9da7-d458c396e288;44493789-557b-459e-ab0e-f46bf3eeb8c7,NULL,NULL,NULL,Special events,NULL,NULL,NULL,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,1F5096ED-3545-49CD-91F1-B69F87479BC4,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
45,/Events/2018/Impact-of-Bill-142-on-Real-Estate-Development,en-GB,36ACB3D7-CBC5-48E9-83CA-C19304206D9F,Impact of Bill 142 on Real Estate & Development,Impact of Bill 142 on Real Estate & Development,What is the impact of Bill 142 on Real Estate & Development? Join us for this seminar to find out.,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,17-05-2018 00:00,17-05-2018 00:00,07:30,09:45,EST,0,NULL,"<p>Bill 142, <em>Construction Lien Amendment Act, 2017</em> is finally here and it will have a profound impact on the construction industry.</p>

<p>From liens to holdbacks, to payment timing, trust obligations and dispute resolution, the new Act will dramatically alter the act and the industry - so much so that it will virtually create a new Act all together. In fact, Bill 142 will also change the name of the <em>Construction Lien Act</em> to the <em>Construction Act</em>.</p>

<p>Our suggestion? Get ready now! The first &quot;Impact On&quot; program will consist of a panel of industry experts to discuss the impact of Bill 142 on the Real Estate &amp; Development Sector.</p>
",NULL,NULL,16-05-2018 15:31,https://sites-gowlingwlg.vuturevx.com/103/3734/landing-pages/bill-142-event-registration-(blank-form).asp?sid=5c32c612-bfac-40d2-97ff-381c465bb3cf,NULL,Register for this event,B2DC4461-DC66-4F96-9AE6-32BC2B14259D,NULL,NULL,19723ad7-81d9-4a40-a93b-96bd009dd149,dd6fafb1-ecf7-491d-ac34-0e0f405cea0d;0be2c139-c465-4e30-ab0d-82bb70c7dd5d;21b43a95-c33f-4ac5-8755-4a0799707d9a;8de9fbe6-53f4-4edf-916a-973cd916b47b,NULL,Seminar,NULL,Toronto,63,GWLG.Events,NULL,~/getmedia/8073a834-7c25-40e2-adb9-351f94bc5a8a/2018-05-08-Construction-Event.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/527612e2-a658-4828-8748-e9cb377bc73f/2018-05-08-construction-event-mobile.jpg.xml?width=500&height=500&ext=.jpg,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,Speakers,NULL,NULL,NULL,NULL,"Construction Law Reform: Prompt payment, adjudication, and modernization",NULL,NULL,NULL,NULL
46,/Events/2018/Impact-of-Bill-142-on-Municipalities-and-Public,en-GB,A9C157CB-7989-4392-A920-BCFC51BB35AC,Impact of Bill 142 on Municipalities and Public ,Impact of Bill 142 on Municipalities and Public Sector,What is the impact of Bill 142 on Municipalities and Public Sector. Join us for this seminar to find out.,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,31-05-2018 00:00,31-05-2018 00:00,07:30,09:45,EST,0,NULL,"<p>Bill 142, <em>Construction Lien Amendment Act, 2017</em> is finally here and it will have a profound impact on the construction industry.</p>

<p>From liens to holdbacks, to payment timing, trust obligations and dispute resolution, the new Act will dramatically alter the act and the industry - so much so that it will virtually create a new Act all together. In fact, Bill 142 will also change the name of the <em>Construction Lien Act</em> to the <em>Construction Act</em>.</p>

<p>Our suggestion? Get ready now!</p>
",NULL,NULL,31-05-2018 18:24,https://sites-gowlingwlg.vuturevx.com/103/3734/landing-pages/bill-142-event-registration-(blank-form).asp?sid=5c32c612-bfac-40d2-97ff-381c465bb3cf,NULL,Register for this event,B2DC4461-DC66-4F96-9AE6-32BC2B14259D,NULL,NULL,19723ad7-81d9-4a40-a93b-96bd009dd149,dd6fafb1-ecf7-491d-ac34-0e0f405cea0d;0be2c139-c465-4e30-ab0d-82bb70c7dd5d;21b43a95-c33f-4ac5-8755-4a0799707d9a;8de9fbe6-53f4-4edf-916a-973cd916b47b,NULL,Seminar,NULL,Toronto,63,GWLG.Events,NULL,~/getmedia/8073a834-7c25-40e2-adb9-351f94bc5a8a/2018-05-08-Construction-Event.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/527612e2-a658-4828-8748-e9cb377bc73f/2018-05-08-construction-event-mobile.jpg.xml?width=500&height=500&ext=.jpg,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,Speakers,NULL,NULL,NULL,NULL,"Construction Law Reform: Prompt payment, adjudication, and modernization",NULL,NULL,NULL,NULL
47,/Events/2018/Spring-Construction-Law-Forum,en-GB,CC6C160A-F38A-4D4A-AA3C-132D89BF0C66,Spring Construction Law Forum,Spring Construction Law Forum,"Join us for our Spring construction law forum to find out how Bill 142, Construction Lien Amendment Act, 2017 will impact on the construction industry. ",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,30-05-2018 00:00,30-05-2018 00:00,07:30,10:00,EST,0,NULL,"<p>Bill 142, <em>Construction Lien Amendment Act, 2017</em> is finally here and it will have a profound impact on the construction industry.</p>

<p>From liens to holdbacks, to payment timing, trust obligations and dispute resolution, the new Act will dramatically alter the act and the industry - so much so that it will virtually create a new Act all together. In fact, Bill 142 will also change the name of the <em>Construction Lien Act</em> to the <em>Construction Act</em>.</p>

<p>Our suggestion? Get ready now!</p>

<p>The Gowling WLG Construction &amp; Engineering Group invites you to breakfast on May 30 for the Spring Construction Law Forum.</p>

<p>Guests will hear from a panel of industry experts and will also be invited to participate in an interactive Q&amp;A session.We look forward to your attendance. RSVP today to reserve your spot!</p>
",NULL,NULL,29-05-2018 15:32,https://sites-gowlingwlg.vuturevx.com/103/3734/landing-pages/bill-142-event-registration-(blank-form).asp?sid=5c32c612-bfac-40d2-97ff-381c465bb3cf,NULL,Register for this event,B2DC4461-DC66-4F96-9AE6-32BC2B14259D,NULL,NULL,19723ad7-81d9-4a40-a93b-96bd009dd149,dd6fafb1-ecf7-491d-ac34-0e0f405cea0d;8de9fbe6-53f4-4edf-916a-973cd916b47b;4e17e1c2-ef2f-4e30-ac64-66ce9912d92a;21b43a95-c33f-4ac5-8755-4a0799707d9a;71cc52f2-e0c0-470a-a5a0-0726d832bc1e,NULL,Seminar,NULL,Toronto,63,GWLG.Events,NULL,~/getmedia/8073a834-7c25-40e2-adb9-351f94bc5a8a/2018-05-08-Construction-Event.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/527612e2-a658-4828-8748-e9cb377bc73f/2018-05-08-construction-event-mobile.jpg.xml?width=500&height=500&ext=.jpg,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,Speakers,NULL,NULL,NULL,NULL,"Construction Law Reform: Prompt payment, adjudication, and modernization",NULL,NULL,NULL,NULL
48,/Events/2018/Emerging-Legal-Risks-in-an-AI-World,en-GB,9B8CC6CA-627C-4475-AE3A-FB41B8151107,Emerging Legal Risks in an AI World,Emerging Legal Risks in an AI World,"From autonomous vehicles to board decision making, artificial intelligence has become ubiquitous, transforming business and the way we live. But how will the law respond to this new technological reality?",~/getmedia/7dc882eb-4307-4677-b761-a47716e82d70/risk-to-reward-ai-world.jpg.xml?width=1200&height=627&ext=.jpg,Emerging Legal Risks in an AI World,GWLG.Seminar,24-05-2018 07:30,24-05-2018 09:30,07:30,09:30,EST,1,1.5 hours,"<h2>Event details</h2>

<p>From autonomous vehicles to board decision making, artificial intelligence has become ubiquitous, transforming business and the way we live. But how will the law respond to this new technological reality? What are the emerging legal risks associated with an AI world and how will AI impact the concept of liability?</p>

<p>This presentation will assess the evolving AI landscape from the legal perspective, with an eye on how our legal system might respond to the risks inherent in this technological advancement.</p>

<h2>cpd</h2>

<p>This program contains up to 1.5 hours of Substantive credits toward the mandatory CPD requirements of the Law Society of Ontario, and up to 1.5 hours of Continuing Education credits toward the requirements of the Barreau du Québec.</p>

<h2>Risk to Reward Seminar Series</h2>

<p><a href=""https://sites-gowlingwlg.vuturevx.com/101/3256/risk-to-reward-home/home.asp?viewmode=0"" target=""_blank"">Gowling WLG&#39;s &quot;Risk to Reward&quot; series</a> is designed to address the most important legal, regulatory and corporate risks facing your organization. With 18 offices around the world, Gowling WLG is uniquely positioned to provide risk advisory services wherever your business takes you. Our legal teams are in tune with your world, your sector and your goals. Join us for one or all of the presentations in this series to transform the risks you face into rewards.</p>
",NULL,NULL,23-05-2018 20:22,https://sites-gowlingwlg.vuturevx.com/101/3763/landing-pages/risk-to-reward-registration-(blank-form).asp,NULL,Register for this seminar,CB61C4C1-D0CF-4AA1-BA0B-5DAB5DC99393,NULL,NULL,NULL,3ae82526-329e-41d7-8e7e-7b14a7af12bc,NULL,Seminar,NULL,Ottawa,67,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
49,/Events/2018/Workplace-Investigation-YouToo,en-GB,C980D459-D561-4DDE-A1C5-6AD97B1FB5EE,Workplace Investigation: #YouToo,Workplace Investigation: #YouToo,"On May 31, join us in Ottawa as our knowledgeable panel of experts walk you through the realities and ramifications of the #MeToo and #TimesUp movements, and what they mean for your organization.",~/getmedia/c2100298-e6dd-4b86-afe7-39fcd10dd5de/risk-to-reward-workplace-investigation.jpg.xml?width=1200&height=627&ext=.jpg,Workplace Investigation,GWLG.Seminar,31-05-2018 16:31,31-05-2018 16:31,16:00,18:30,EST,1,1.5 hours,"<h2>EVENT DETAILS</h2>

<p>On May 31, join us in Ottawa as our knowledgeable panel of experts walk you through the realities and ramifications of the #MeToo and #TimesUp movements, and what they mean for your organization.</p>

<p>This seminar is your opportunity to discover best practices for managing risks and how to avoid the pitfalls of a flawed workplace investigation.</p>

<h2>CPD</h2>

<p>This program contains up to 1.5 hours of Substantive credits toward the mandatory CPD requirements of the Law Society of Ontario, and up to&nbsp;1.5 hours of Continuing Education credits toward the requirements of the Barreau du Québec.</p>

<h2>RISK TO REWARD SEMINAR SERIES</h2>

<p><a href=""https://sites-gowlingwlg.vuturevx.com/101/3256/risk-to-reward-home/home.asp?viewmode=0"" target=""_blank"">Gowling WLG&#39;s &quot;Risk to Reward&quot; series</a>&nbsp;is designed to address the most important legal, regulatory and corporate risks facing your organization. With 18 offices around the world, Gowling WLG is uniquely positioned to provide risk advisory services wherever your business takes you. Our legal teams are in tune with your world, your sector and your goals. Join us for one or all of the presentations in this series to transform the risks you face into rewards.</p>
",NULL,NULL,30-05-2018 16:32,https://sites-gowlingwlg.vuturevx.com/101/3763/landing-pages/risk-to-reward-registration-(blank-form).asp,NULL,Register for this seminar,CB61C4C1-D0CF-4AA1-BA0B-5DAB5DC99393,NULL,NULL,NULL,NULL,NULL,Seminar,NULL,Ottawa,67,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/101/3763/landing-pages/risk-to-reward-registration-(blank-form).asp,Register for this seminar,GWLG.Canada,0,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
50,/Events/2018/Life-Sciences-Seminar-London,en-GB,9769454F-335A-41C5-ACE0-246C3B5337FF,Life Sciences Seminar - London,Life Sciences Seminar - London,This seminar will provide an update on the key developments in patent litigation in the UK life sciences sector from the last 12 months.,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,05-07-2018 14:32,NULL,08:45,13:30,BST,1,3,"<p>This seminar will provide an update on the key developments in patent litigation in the UK life sciences sector from the last 12 months.</p>

<p>We will also discuss the increasing trend of using arbitration to resolve contract disputes in the sector.</p>

<p>We are also delighted to be joined by&nbsp;Dale Raine from Lazard who will provide an overview of the sector on a global basis and the seismic changes it faces over the next few years.</p>

<h2>Agenda</h2>

<table class=""format"">
	<thead>
		<tr>
			<th scope=""col"">Time</th>
			<th scope=""col"">Activity</th>
			<th scope=""col"">Speaker</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>08:45</td>
			<td>Registration &amp; breakfast</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>09:15</td>
			<td>Welcome &amp; introduction</td>
			<td>Patrick Duxbury</td>
		</tr>
		<tr>
			<td>09:20</td>
			<td>Protection against patent applications: Arrow declarations a year on</td>
			<td>Jenny Davies</td>
		</tr>
		<tr>
			<td>10:00</td>
			<td>Life Sciences disputes: Is international arbitration the future?</td>
			<td>Michael Darowski</td>
		</tr>
		<tr>
			<td>10:40</td>
			<td>Refreshments</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>11:00</td>
			<td>A review of the key life sciences cases over the last 12 months</td>
			<td>Paul Inman</td>
		</tr>
		<tr>
			<td>11:50</td>
			<td>The global healthcare industry is in the midst of seismic shift: Implications for biopharma?</td>
			<td>Dale Raine, Lazard</td>
		</tr>
		<tr>
			<td>12:30</td>
			<td>Questions</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>12:40</td>
			<td>Lunch</td>
			<td>&nbsp;</td>
		</tr>
	</tbody>
</table>
","<p>This event is free of charge.</p>

<p>This event will run for 3 hours. Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession.</p>

<p>Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,04-07-2018 14:34,https://reaction.gowlingwlg.com/reaction/RSGenPage.asp?RSID=fT7H7dME8aIY_lpqXl7XEKUlez8vxSYB-IER4Kjy0Hg,NULL,Register for this event,9FBE191E-3BCF-45DE-A2BA-338BB194FC9D,049c8249-7ff3-4ee3-a439-590f45fd5cff;a929915c-1d1f-4e9c-8c8b-f34a30e2ab4e,cbacbac0-abb0-4b36-a8fc-3a060a5ef154;85764222-db69-43cf-af79-2c6fcbda9589;82475447-1cf2-4aa7-9a23-24e5b1a7b3bd,NULL,8e016382-a73f-4aba-8339-02f14b8a79bb;74b9d0c7-28ad-4afc-8e4c-194a33906a90;5a1d08c1-d6f1-46a7-8f11-b0a904a5bb3b;f3cd8bc4-37c5-4d8f-b2ff-eb4b97b8b140,NULL,Seminar,"Patrick Duxbury, Jenny Davies, Michael Darowski, Paul Inman",London,71,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,1F5096ED-3545-49CD-91F1-B69F87479BC4,Speaker(s),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
51,/Events/2018/Trusts-Litigation-Drinks-Reception,en-GB,012DE269-AD6C-40DC-82F3-DED8731BE40A,Trusts Litigation Drinks Reception,Trusts Litigation Drinks Reception,"Trusts litigation and offshore summer drinks reception on Thursday 28 June 2018. We are looking forward to hosting clients and contacts, including trustees, their advisers and other fiduciaries, for an evening of networking.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.SpecialEvents,11:23.0,NULL,18:30,NULL,BST,0,NULL,"<p>Please join us for our trusts litigation and offshore summer drinks reception on Thursday 28 June 2018. We are looking forward to hosting clients and contacts, including trustees, their advisers and other fiduciaries, for an evening of networking overlooking Tower Bridge and the River Thames.</p>

<p>Drinks and canapés will be available from 18:30 onwards.</p>

<p><a href=""https://reaction.gowlingwlg.com/reaction/RSGenPage.asp?RSID=q9GGsInUrfbd0GthE9jcUh8z_ui1o04ysYg-lHEJwRzRlHKk8u46ewApZF3f8kfb"">Please RSVP here</a>.</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,19:25.0,https://reaction.gowlingwlg.com/reaction/RSGenPage.asp?RSID=q9GGsInUrfbd0GthE9jcUh8z_ui1o04ysYg-lHEJwRzRlHKk8u46ewApZF3f8kfb,NULL,Register for this event,9FBE191E-3BCF-45DE-A2BA-338BB194FC9D,NULL,de4dd9ce-dd7a-4af6-ba25-80f400b250ed,NULL,NULL,NULL,Special events,NULL,London,71,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,40ECBAEA-9783-479A-8EB9-9D39F577C01D,Speaker(s),NULL,NULL,NULL,Trusts Litigation,NULL,NULL,NULL,NULL,NULL
52,/Events/2018/Open-house-in-Moscow,en-GB,FD1FCD34-96F0-4962-BF17-DBC1DDC35B6F,Open house in Moscow,GOAL! Gowling WLG open house in Moscow,The 2018 FIFA World Cup is just around the corner. The bustling city of Moscow is currently the world’s football capital. And what better way to show our pride than to open our doors to our friends from abroad?,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.SpecialEvents,41:48.0,41:53.0,10 a.m.,6 p.m.,Local time,0,NULL,"<p>The 2018 FIFA World Cup is just around the corner. The bustling city of Moscow is currently the world&rsquo;s football capital. And what better way to show our pride than to open our doors to our friends from abroad?</p>

<p>From June 14 to July 15, we are hosting an open house and opening our doors to all international friends travelling to Moscow for the FIFA World Cup. You are warmly invited to drop in and meet our Moscow team while you are here. Please come by and say hello!</p>

<p>Need help? We will also happily provide any assistance you may need during the World Cup. Whether you need directions to navigate the streets of Moscow, a list of our city&#39;s best hot spots, or have any questions pertaining to Russian IP law &mdash; we&rsquo;ve got you covered.</p>

<p>For more information, please contact&nbsp;<a href=""mailto:moscow@gowlingwlg.com"">moscow@gowlingwlg.com</a>&nbsp;or phone us at&nbsp;+7- 495- 787-20-70.</p>

<p>We look forward to seeing you in Moscow! &nbsp;&nbsp;&nbsp;</p>
",NULL,NULL,46:52.0,mailto:moscow@gowlingwlg.com,NULL,Contact moscow@gowlingwlg.com for more details,2858E49F-1AD1-4513-A3DE-97C99873912C,NULL,NULL,NULL,NULL,NULL,Special events,NULL,Moscow,673,GWLG.Events,"<p>June 14 - July 15, 2018</p>
",~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Global;GWLG.Canada;GWLG.Russia;GWLG.UK;GWLG.UnitedStates,0,NULL,Speaker(s),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
53,/Events/2017/International-Arbitration-for-Dispute-Resolution,en-GB,FA6899CD-97A1-4EDD-80D8-04F187CF2432,International Arbitration for Dispute Resolution,International & domestic arbitration: An effective option for dispute resolution,"Gowling WLG's expert arbitration lawyers from Canada and the U.K., along with a selection of industry leaders, discuss the latest developments and opportunities in the world of arbitration",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,20-09-2017 15:35,20-09-2017 15:35,07:30,09:00,EST,0,NULL,"<p>Don&#39;t miss the opportunity to hear from Gowling WLG&#39;s expert arbitration lawyers from Canada and the U.K., along with a selection of industry leaders, on the latest developments and opportunities in the world of arbitration. Topics will include:</p>

<ul>
	<li>Current trends in domestic and international arbitration</li>
	<li>The growth of investment treaties</li>
	<li>Third-party funding and costs associated with arbitration</li>
</ul>
",NULL,NULL,20-09-2017 15:36,NULL,NULL,Register for this event,CB61C4C1-D0CF-4AA1-BA0B-5DAB5DC99393,NULL,cbacbac0-abb0-4b36-a8fc-3a060a5ef154,NULL,NULL,NULL,Seminar,NULL,Ottawa,67,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,Speakers,NULL,NULL,NULL,International Arbitration,NULL,NULL,NULL,NULL,NULL
54,/Events/2016/Directors-and-officers-liability-and-insurance,en-GB,C150A63C-202F-4C4A-8007-A9017158B6B9,Directors and officers liability and insurance,Emerging trends in directors and officers liability and insurance,A panel of insurance experts moderated by a Gowling WLG partner will lead an interactive discussion on emerging trends in directors and officers liability and solutions available in the insurance market.,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,20-10-2016 15:43,20-10-2016 15:43,07:30,09:00,EST,0,NULL,"<p>A panel of&nbsp;insurance experts moderated by a Gowling WLG partner will lead an interactive discussion on emerging&nbsp;trends in directors and officers liability and solutions available in the insurance market.</p>

<p><em>This program counts for up to one hour of substantive credits towards the mandatory CPD requirements of the LSUC.</em></p>
",NULL,NULL,20-10-2016 15:43,NULL,NULL,Register for this event,CB61C4C1-D0CF-4AA1-BA0B-5DAB5DC99393,NULL,NULL,NULL,3ae82526-329e-41d7-8e7e-7b14a7af12bc,NULL,Seminar,NULL,Ottawa,67,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,Moderator,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
55,/Events/2016/Scandal-and-the-road-to-redemption,en-GB,F401DB28-BCB8-42F7-AE6C-7252F432FA89,Scandal and the road to redemption,Scandal and the road to redemption: How to prepare for and recover from a corporate crisis,How do you protect your organization's reputation before and after scandal strikes? ,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,08-09-2016 15:45,08-09-2016 15:45,07:30,09:00,EST,0,NULL,"<p>How do you protect your organization&#39;s reputation before and after scandal strikes? Using real-life examples, this session looks at the core elements of reputational protection from a legal and public relations perspective.</p>

<p>This seminar will cover the following topics: &nbsp;</p>

<ul>
	<li>The importance of reputation management</li>
	<li>Stakeholder management over the long term</li>
	<li>Communicating when crisis erupts</li>
	<li>Legal liability and public statements</li>
	<li>Legal mechanisms to protect reputation</li>
	<li>Brand management post crisis<br />
	&nbsp;</li>
</ul>

<p><em>This program counts for up to 1 hour of substantive credits towards the mandatory CPD requirements of the LSUC.</em></p>
",NULL,NULL,20-09-2016 15:45,NULL,NULL,Register for this event,CB61C4C1-D0CF-4AA1-BA0B-5DAB5DC99393,NULL,NULL,NULL,3ae82526-329e-41d7-8e7e-7b14a7af12bc,NULL,Seminar,NULL,Ottawa,67,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,Speaker,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
56,/Events/2018/Multigenerational-world-design-to-meet-the-challen,en-GB,CE5D87D0-9531-42F4-97E5-9D4036A71817,Multigenerational world design to meet the challen,Multigenerational world: design to meet the challenge,,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,17-09-2018 11:58,NULL,16:00,18:00,BST,0,NULL,"<p>An ageing population and a lack of affordable housing for young people mean that it&#39;s now not uncommon to find two or three generations living under the same roof or rubbing shoulders in the workplace.</p>

<p>As part of London Design Festival, we&#39;re hosting a Q&amp;A event with a panel of leading designers, exploring how great design can improve the lives of different generations whilst rewarding innovation. Held in conjunction with Design Council and tangerine, John Coldham&nbsp;will be joined by Martin Darbyshire (tangerine), Matt Dyson (Rockit), kitchen designer Johnny Grey and accessible design expert Adam Thomas to talk about their experience of designing innovative products and protecting their ideas.</p>

<p>The Q&amp;A will be followed by drinks with the speakers overlooking the Thames.</p>

<p><a href=""https://reaction.gowlingwlg.com/reaction/RSGenPage.asp?RSID=36W4NSVM0PAHylbNEq_71yeiG_-StZVbjAJyoVRsSnw""><strong>Register for this event</strong></a>.</p>

<h2>Agenda</h2>

<table class=""format"">
	<thead>
		<tr>
			<th scope=""col"">Time</th>
			<th scope=""col"">Activity</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>16:00</td>
			<td>Registration</td>
		</tr>
		<tr>
			<td>16:30</td>
			<td>Talk and Q&amp;A</td>
		</tr>
		<tr>
			<td>18:00</td>
			<td>Drinks &amp; Networking</td>
		</tr>
	</tbody>
</table>
","<p>This event is free of charge.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,16-09-2018 12:00,https://reaction.gowlingwlg.com/reaction/RSGenPage.asp?RSID=36W4NSVM0PAHylbNEq_71yeiG_-StZVbjAJyoVRsSnw,NULL,Register for this event,9FBE191E-3BCF-45DE-A2BA-338BB194FC9D,NULL,aa72ea93-20f8-455a-8e77-6f6cea510684;08b9a44c-bb26-4255-9779-296a124fcbee;85764222-db69-43cf-af79-2c6fcbda9589,NULL,9ff8fd1a-c2f5-4084-b72e-4aa02fdf3312,NULL,Seminar,NULL,London,71,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,40ECBAEA-9783-479A-8EB9-9D39F577C01D,NULL,NULL,NULL,NULL,"Trademarks, Brands & Designs, Intellectual Property, Patents",NULL,NULL,NULL,NULL,NULL
57,/Events/2018/ThinkHouse-Autumn-2018-Birmingham,en-GB,4EE8381C-6ECD-49CF-82EF-A70F96ED920E,ThinkHouse Autumn 2018 - Birmingham,ThinkHouse Autumn 2018 - Birmingham,"With the two-year Brexit anniversary, speculation around trade wars and the World Cup all dominating headlines, international news is front of mind for us all. ",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,13-09-2018 09:52,NULL,08:45,12:45,BST,1,3,"<p>With the two-year Brexit anniversary, speculation around trade wars and the World Cup all dominating headlines, international news is front of mind for us all. The ThinkHouse team has been pouring over the latest trends, cases and economic developments to give you an Autumn programme of training that will help ensure you are ready for whatever 2019 may bring.<br />
<br />
We&#39;ll be taking a closer look at:<br />
<br />
<strong>Brexit and international trade - Bernardine Adkins</strong><br />
<br />
The future of UK&#39;s trading relations with its former EU partner states, and the rest of the world, is uncertain. Talk of &#39;redlines&#39;, regulatory alignment, max fac, Customs Partnership, and the Jersey Option abound, and confusion continues.&nbsp; In this session we will strip back the debate to identify the challenges business will face as we work out our future within Europe and the global market. Our focus will be on providing practical and timely guidance to meet current concerns.<br />
<br />
<strong>Blockchain - The ultimate disruptor - David Brennan and Jody Jansen</strong><br />
<br />
Blockchain technology is changing the landscape in a major way. However, this innovative technology comes with highly complex laws and processes that require sophisticated legal and technical expertise, and an insider&#39;s understanding of the ever-evolving regulatory space. Here, our experts will provide an introduction to Blockchain and its use across a wide variety of scenarios and sectors. They will also provide practical tips on overcoming the challenges and taking advantage of the opportunities that it presents.<br />
<br />
<strong>Drafting dispute clauses in international contracts - getting it right for your contracts and your business - Gordon Bell and Tom Price</strong><br />
<br />
It is important when drafting international contracts to include express reference to the forum for resolving disputes. This session will weigh up the advantages and disadvantages of litigation before national courts, as opposed to international arbitration. It will also consider the use of &quot;tiered&quot; dispute clauses which might include requirements to negotiate disputes in good faith, references to expert determination and compulsory mediation before litigation or arbitration can be commenced.<br />
<br />
<strong>Understanding electronic signatures - David Lowe</strong><br />
<br />
What are E-signatures, how do they work and what does best practice look like? I will share my insight into this important topic and provide practical guidance on using E-signatures to manage your day-to-day commercial contracts.</p>

<h2>Agenda</h2>

<table class=""format"">
	<thead>
		<tr>
			<th scope=""col"">Time</th>
			<th scope=""col"">Activity</th>
			<th scope=""col"">Speaker</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>08:45</td>
			<td>Registration</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>09:10</td>
			<td>Welcome &amp; introduction</td>
			<td>Michael Luckman</td>
		</tr>
		<tr>
			<td>09:15</td>
			<td>Brexit and international trade</td>
			<td>Bernardine Adkins</td>
		</tr>
		<tr>
			<td>10:00</td>
			<td>Blockchain - The ultimate disruptor</td>
			<td>David Brennan &amp; Jody Jansen</td>
		</tr>
		<tr>
			<td>10:45</td>
			<td>Mid-morning break</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>11:15</td>
			<td>Drafting dispute clauses in international contracts</td>
			<td>Gordon Bell &amp; Tom Price</td>
		</tr>
		<tr>
			<td>12:00</td>
			<td>Understanding electronic signatures</td>
			<td>David Lowe</td>
		</tr>
		<tr>
			<td>12:45</td>
			<td>Lunch</td>
			<td>&nbsp;</td>
		</tr>
	</tbody>
</table>
","<p>This event is free of charge.</p>

<p>This event will run for 3 hours. Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession.</p>

<p>Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,12-09-2018 09:58,https://reaction.gowlingwlg.com/reaction/RSGenPage.asp?RSID=i84A6l-7WfPuI1qaXgfA9imXilM5Kx7tjK2t8FY2tPk,NULL,Register for this event,58076178-DA60-4AB6-A07C-EF250971EBF7,NULL,b0c8c82f-1451-44da-afb4-d9bb649c6d42;5027bdff-5a12-4e06-a0ca-809c3002882c;82475447-1cf2-4aa7-9a23-24e5b1a7b3bd;bac2f2f8-09c0-4d06-b0c8-98d9567adfc7;9847316e-d705-4e8e-91fb-88df430a5dfc;cbacbac0-abb0-4b36-a8fc-3a060a5ef154;549cbe28-f188-44cd-85c0-0f4e23a23817,a143cbfd-d333-42a0-89a6-7287894464f1;603d9889-cb72-431a-8d55-60d68706837b;db65f669-80d2-45f3-9161-2c00aa6f157e,a9daf1f3-b2ff-43d9-b76e-b815bb73aace;2563a6d6-5f45-46c5-8698-e572a35f100b;3eea8a58-b3f2-4e3c-87f4-8853720e2a67;4abe6d56-7b8f-463c-95b7-801fbc7e63da;d860ac5f-06d9-4ddb-ab3a-fe70cc71745e;ad056fcd-7211-4da7-a9e2-30612d332954,NULL,Seminar,NULL,Birmingham,70,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,1F5096ED-3545-49CD-91F1-B69F87479BC4,Speaker(s),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
58,/Events/2018/ThinkHouse-Autumn-2018-London,en-GB,A199E22F-25A6-4D2D-A114-C280D97F2862,ThinkHouse Autumn 2018 - London,ThinkHouse Autumn 2018 - London,"With the two-year Brexit anniversary, speculation around trade wars and the World Cup all dominating headlines, international news is front of mind for us all.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,27-09-2018 09:52,NULL,08:45,12:45,BST,1,3,"<p>With the two-year Brexit anniversary, speculation around trade wars and the World Cup all dominating headlines, international news is front of mind for us all. The ThinkHouse team has been pouring over the latest trends, cases and economic developments to give you an Autumn programme of training that will help ensure you are ready for whatever 2019 may bring.<br />
<br />
We&#39;ll be taking a closer look at:<br />
<br />
<strong>Brexit and international trade - Ursula Johnston</strong><br />
<br />
The future of UK&#39;s trading relations with its former EU partner states, and the rest of the world, is uncertain. Talk of &#39;redlines&#39;, regulatory alignment, max fac, Customs Partnership, and the Jersey Option abound, and confusion continues.&nbsp; In this session we will strip back the debate to identify the challenges business will face as we work out our future within Europe and the global market. Our focus will be on providing practical and timely guidance to meet current concerns.<br />
<br />
<strong>Blockchain - The ultimate disruptor - David Brennan and Jody Jansen</strong><br />
<br />
Blockchain technology is changing the landscape in a major way. However, this innovative technology comes with highly complex laws and processes that require sophisticated legal and technical expertise, and an insider&#39;s understanding of the ever-evolving regulatory space. Here, our experts will provide an introduction to Blockchain and its use across a wide variety of scenarios and sectors. They will also provide practical tips on overcoming the challenges and taking advantage of the opportunities that it presents.<br />
<br />
<strong>Drafting dispute clauses in international contracts - getting it right for your contracts and your business - Gordon Bell and Tom Price</strong><br />
<br />
It is important when drafting international contracts to include express reference to the forum for resolving disputes. This session will weigh up the advantages and disadvantages of litigation before national courts, as opposed to international arbitration. It will also consider the use of &quot;tiered&quot; dispute clauses which might include requirements to negotiate disputes in good faith, references to expert determination and compulsory mediation before litigation or arbitration can be commenced.<br />
<br />
<strong>Understanding electronic signatures - David Lowe</strong><br />
<br />
What are E-signatures, how do they work and what does best practice look like? I will share my insight into this important topic and provide practical guidance on using E-signatures to manage your day-to-day commercial contracts.</p>

<h2>Agenda</h2>

<table class=""format"">
	<thead>
		<tr>
			<th scope=""col"">Time</th>
			<th scope=""col"">Activity</th>
			<th scope=""col"">Speaker</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>08:45</td>
			<td>Registration</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>09:10</td>
			<td>Welcome &amp; introduction</td>
			<td>Robert Breedon</td>
		</tr>
		<tr>
			<td>09:15</td>
			<td>Brexit and international trade</td>
			<td>Ursula Johnston</td>
		</tr>
		<tr>
			<td>10:00</td>
			<td>Blockchain - The ultimate disruptor</td>
			<td>David Brennan &amp; Jody Jansen</td>
		</tr>
		<tr>
			<td>10:45</td>
			<td>Mid-morning break</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>11:15</td>
			<td>Drafting dispute clauses in international contracts</td>
			<td>Gordon Bell &amp; Tom Price</td>
		</tr>
		<tr>
			<td>12:00</td>
			<td>Understanding electronic signatures</td>
			<td>David Lowe</td>
		</tr>
		<tr>
			<td>12:45</td>
			<td>Lunch</td>
			<td>&nbsp;</td>
		</tr>
	</tbody>
</table>
","<p>This event is free of charge.</p>

<p>This event will run for 3 hours. Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession.</p>

<p>Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,26-09-2018 09:58,https://reaction.gowlingwlg.com/reaction/RSGenPage.asp?RSID=i84A6l-7WfPuI1qaXgfA9imXilM5Kx7tjK2t8FY2tPk,NULL,Register for this event,9FBE191E-3BCF-45DE-A2BA-338BB194FC9D,NULL,b0c8c82f-1451-44da-afb4-d9bb649c6d42;5027bdff-5a12-4e06-a0ca-809c3002882c;82475447-1cf2-4aa7-9a23-24e5b1a7b3bd;bac2f2f8-09c0-4d06-b0c8-98d9567adfc7;9847316e-d705-4e8e-91fb-88df430a5dfc;cbacbac0-abb0-4b36-a8fc-3a060a5ef154;549cbe28-f188-44cd-85c0-0f4e23a23817,a143cbfd-d333-42a0-89a6-7287894464f1;603d9889-cb72-431a-8d55-60d68706837b;db65f669-80d2-45f3-9161-2c00aa6f157e,1ca237c0-eb32-40df-ba06-268230275f34;e33531f3-9132-4365-bdfc-fe6df95bab54;3eea8a58-b3f2-4e3c-87f4-8853720e2a67;4abe6d56-7b8f-463c-95b7-801fbc7e63da;d860ac5f-06d9-4ddb-ab3a-fe70cc71745e;ad056fcd-7211-4da7-a9e2-30612d332954,NULL,Seminar,NULL,London,71,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,1F5096ED-3545-49CD-91F1-B69F87479BC4,Speaker(s),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
59,/Events/2018/Immigration-after-Brexit,en-GB,238BBE72-0A9F-4C42-B28E-140D32BBB77D,Immigration after Brexit,Immigration after Brexit: what employers need to know,"In June, the government's Brexit bill passed through after Peers accepted the amendment to the EU (Withdrawal) Bill. With Brexit now on the horizon, employers will need to understand how it will affect them and their non-UK workers.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,19-09-2018 09:15,NULL,16:00,19:30,BST,1,2,"<p>In June, the government&#39;s Brexit bill passed through after Peers accepted the amendment to the EU (Withdrawal) Bill. With Brexit now on the horizon, employers will need to understand how it will affect them and their non-UK workers.<br />
<br />
This&nbsp;event will be hosted by our employment experts and will cover Brexit and Immigration in Canada, giving you access to specialist industry speakers.<br />
<br />
<strong>Brexit and employment</strong><br />
<br />
Topics that will be discussed include clarifying who has <strong>European Free Movement</strong>; how to exercise <strong>Treaty Rights</strong> in the UK; the application processes of <strong>EEA documentation</strong>; and how you qualify for <strong>British citizenship</strong>. You will also have the opportunity to ask our experts your questions on how to manage Brexit in your business.<br />
<br />
<strong>Immigration in Canada</strong><br />
<br />
In the second session, we will discuss all aspects of Canadian business immigration and assisting companies on how to do business in Canada. Here, we will be explaining everything you need to know about <strong>work permits</strong>, how to <strong>transition employees to</strong> <strong>permanent residency</strong> and the <strong>Global Skills Strategy</strong>.</p>

<h2>Agenda</h2>

<table class=""format"">
	<thead>
		<tr>
			<th scope=""col"">Time</th>
			<th scope=""col"">Activity</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>16:00</td>
			<td>Registration &amp; refreshments</td>
		</tr>
		<tr>
			<td>16:30</td>
			<td>Welcome &amp; introduction</td>
		</tr>
		<tr>
			<td>16:35</td>
			<td>Brexit</td>
		</tr>
		<tr>
			<td>17:30</td>
			<td>Immigration in Canada</td>
		</tr>
		<tr>
			<td>18:30</td>
			<td>Drinks &amp; networking&nbsp;</td>
		</tr>
	</tbody>
</table>
","<p>This event is free of charge.</p>

<p>This event will run for 2 hours. Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession.</p>

<p>Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,18-09-2018 09:28,https://reaction.gowlingwlg.com/reaction/RSGenPage.asp?RSID=5hl0BZnz0vmpN2MlNYNc4-LphMprLd9bi1aPpGYvgUo,NULL,Register for this event,9FBE191E-3BCF-45DE-A2BA-338BB194FC9D,NULL,d8837737-40d2-4472-8a9e-ba4101ec2105;c88eece6-41b1-4db2-a8fb-58d8e5eeb453,603d9889-cb72-431a-8d55-60d68706837b,799cf040-59c7-4986-825a-e4b909364823,NULL,Seminar,NULL,London,71,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK;GWLG.Canada,0,40ECBAEA-9783-479A-8EB9-9D39F577C01D,Speaker(s),NULL,NULL,NULL,"Employment, Labour & Equalities, Immigration",How will Brexit affect your business?,NULL,NULL,NULL,NULL
60,/Events/2018/Restructuring-and-Insolvency-Conference-2018-Bir,en-GB,09E71254-523A-4E4A-A26A-EA611A15C13E,Restructuring and Insolvency Conference 2018 - Bir,Restructuring and Insolvency Conference 2018 - Birmingham,,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Conference,32:36.0,NULL,08:30,13:20,BST,1,3,"<p>We are pleased to announce that registration for our 19th Annual Restructuring &amp; Insolvency Conference is now open.<br />
<br />
As you will see from the programme below, our own restructuring &amp; insolvency experts will be again providing an insight into a variety of topics.<br />
<br />
Registration and breakfast will be available from 08:30, and the event will start at 09:00. There will be a mid-morning networking break at 11:00 and we&#39;ll aim to finish at 13:20, after which you are invited to join us for a networking lunch.<br />
<br />
Due to the high demand for this event however, we must unfortunately limit spaces to five per firm/company.</p>

<h2>Agenda</h2>

<table class=""format"">
	<thead>
		<tr>
			<th scope=""col"">Time</th>
			<th scope=""col"">Activity</th>
			<th scope=""col"">Speaker</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>08:30</td>
			<td>Registration &amp; breakfast</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>09:00</td>
			<td>Welcome &amp; introduction</td>
			<td>Ian Weatherall/Julian Pallett</td>
		</tr>
		<tr>
			<td>09:15</td>
			<td>Legal Update: Developments from the courts including developments on enforcement, injunctions and trusts</td>
			<td>Alex Jay</td>
		</tr>
		<tr>
			<td>09:50</td>
			<td>Insolvency in the construction sector</td>
			<td>Sue Ryan / Pippa Hill</td>
		</tr>
		<tr>
			<td>10:25</td>
			<td>Legal Update: Avoiding the pitfalls of invalid appointments and conflicts</td>
			<td>Kanika Kitchlu-Connolly/ Turon Miah</td>
		</tr>
		<tr>
			<td>11:00</td>
			<td>Refreshment break</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>11:20</td>
			<td>Box Clever - more holes in the corporate veil for pensions?</td>
			<td>Julian Pallett</td>
		</tr>
		<tr>
			<td>12:00</td>
			<td>CVAs: The ongoing issues</td>
			<td>Jasvir Jootla/Clive Chalkley</td>
		</tr>
		<tr>
			<td>12:45</td>
			<td>The administration regime for registered providers of social housing: What you need to know!</td>
			<td>Tom Stockley</td>
		</tr>
		<tr>
			<td>13:15</td>
			<td>Closing remarks</td>
			<td>Ian Weatherall/Julian Pallett</td>
		</tr>
		<tr>
			<td>13:20</td>
			<td>Lunch &amp; Networking</td>
			<td>&nbsp;</td>
		</tr>
	</tbody>
</table>
","<p>This event is free of charge.</p>

<p>This event will run for 3 hours. Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession.</p>

<p>Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,36:30.0,https://reaction.gowlingwlg.com/reaction/RSGenPage.asp?RSID=0_gyenZ1otPlv8hbfqPT3Qts8vQYfkWCuoLjms5791E,NULL,Register for this event,58076178-DA60-4AB6-A07C-EF250971EBF7,NULL,cb3477a6-c725-4d55-8fa9-194abc3a4ec4;153dc4b1-a86f-45ab-b010-bef82a13326b,NULL,065c1c3b-9b04-4841-b8b3-0a5b8ad07b59;cb21bbea-e21c-41ad-9aa3-f9a9d0497fe9;7c91aabd-360a-4f49-b094-7f9f51c78092;8083261b-2f86-402b-a96e-962dad99df7b;0b66a63a-6eab-4dbc-8396-238faca4204b;83e1738d-93f2-4f07-a729-669a41ec4416;cdce1957-fad2-457b-96ff-a0da5af4fe72;c87f99c4-6d5c-4e17-8e93-2a857c86682a;b7890916-3b8b-4d64-82cc-40655a7c1fe2;8be02c19-9b96-4e51-a0b5-961edfa74066,NULL,Conference,NULL,Birmingham,70,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,1F5096ED-3545-49CD-91F1-B69F87479BC4,Speaker(s),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
61,/Events/2018/Restructuring-and-Insolvency-Conference-2018-Lon,en-GB,A0AF22FA-7FA9-4B6F-ADFE-3FF17D84D7D5,Restructuring and Insolvency Conference 2018 - Lon,Restructuring and Insolvency Conference 2018 - London,,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Conference,32:36.0,NULL,08:30,13:20,BST,1,3,"<p>We are pleased to announce that registration for our 19th Annual Restructuring &amp; Insolvency Conference is now open.<br />
<br />
As you will see from the programme below, our own restructuring &amp; insolvency experts will be again providing an insight into a variety of topics.<br />
<br />
Registration and breakfast will be available from 08:30, and the event will start at 09:00. There will be a mid-morning networking break at 11:00 and we&#39;ll aim to finish at 13:20, after which you are invited to join us for a networking lunch.<br />
<br />
Due to the high demand for this event however, we must unfortunately limit spaces to five per firm/company.</p>

<h2>Agenda</h2>

<table class=""format"">
	<thead>
		<tr>
			<th scope=""col"">Time</th>
			<th scope=""col"">Activity</th>
			<th scope=""col"">Speaker</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>08:30</td>
			<td>Registration &amp; breakfast</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>09:00</td>
			<td>Welcome &amp; introduction</td>
			<td>Ian Weatherall/Julian Pallett</td>
		</tr>
		<tr>
			<td>09:15</td>
			<td>Legal Update: Developments from the courts including developments on enforcement, injunctions and trusts</td>
			<td>Alex Jay</td>
		</tr>
		<tr>
			<td>09:50</td>
			<td>Insolvency in the construction sector</td>
			<td>Sue Ryan / Pippa Hill</td>
		</tr>
		<tr>
			<td>10:25</td>
			<td>Legal Update: Avoiding the pitfalls of invalid appointments and conflicts</td>
			<td>Kanika Kitchlu-Connolly/ Turon Miah</td>
		</tr>
		<tr>
			<td>11:00</td>
			<td>Refreshment break</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>11:20</td>
			<td>Box Clever - more holes in the corporate veil for pensions?</td>
			<td>Julian Pallett</td>
		</tr>
		<tr>
			<td>12:00</td>
			<td>CVAs: The ongoing issues</td>
			<td>Jasvir Jootla/Clive Chalkley</td>
		</tr>
		<tr>
			<td>12:45</td>
			<td>The administration regime for registered providers of social housing: What you need to know!</td>
			<td>Tom Stockley</td>
		</tr>
		<tr>
			<td>13:15</td>
			<td>Closing remarks</td>
			<td>Ian Weatherall/Julian Pallett</td>
		</tr>
		<tr>
			<td>13:20</td>
			<td>Lunch &amp; Networking</td>
			<td>&nbsp;</td>
		</tr>
	</tbody>
</table>
","<p>This event is free of charge.</p>

<p>This event will run for 3 hours. Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession.</p>

<p>Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,51:53.0,https://reaction.gowlingwlg.com/reaction/RSGenPage.asp?RSID=0_gyenZ1otPlv8hbfqPT3Qts8vQYfkWCuoLjms5791E,NULL,Register for this event,9FBE191E-3BCF-45DE-A2BA-338BB194FC9D,NULL,cb3477a6-c725-4d55-8fa9-194abc3a4ec4;153dc4b1-a86f-45ab-b010-bef82a13326b,NULL,065c1c3b-9b04-4841-b8b3-0a5b8ad07b59;cb21bbea-e21c-41ad-9aa3-f9a9d0497fe9;7c91aabd-360a-4f49-b094-7f9f51c78092;8083261b-2f86-402b-a96e-962dad99df7b;0b66a63a-6eab-4dbc-8396-238faca4204b;83e1738d-93f2-4f07-a729-669a41ec4416;cdce1957-fad2-457b-96ff-a0da5af4fe72;c87f99c4-6d5c-4e17-8e93-2a857c86682a;b7890916-3b8b-4d64-82cc-40655a7c1fe2;8be02c19-9b96-4e51-a0b5-961edfa74066,NULL,Conference,NULL,NULL,NULL,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,1F5096ED-3545-49CD-91F1-B69F87479BC4,Speaker(s),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
62,/Events/2018/Senior-Managers-and-Certification-Regime,en-GB,3FB8AD5F-2AD6-45C4-AF5E-E2F92B1DEE7C,Senior Managers and Certification Regime,Senior Managers and Certification Regime: What you need to know,,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,13-09-2018 10:48,NULL,08:30,10:15,BST,1,1,"<p>In July 2018, the FCA published its near-final rules on extending the senior managers and certification regime (SMCR) to all firms regulated by the FCA. With SMCR now on the horizon, both employers and employees within regulated firms will need to understand how it will affect them.<br />
<br />
Hosted by our financial services and employment experts, this&nbsp;inaugural SMCR event&nbsp;will give&nbsp;you access to specialist industry speakers.<br />
<br />
<strong>SMCR</strong><br />
<br />
Topics that will be discussed include clarifying how the SMCR applies to <strong>different tiers of firms</strong>; the new <strong>categories of senior management functions</strong>; the new requirements relating to <strong>statement of responsibilities</strong>, the <strong>responsibilities map</strong>, the <strong>certification regime</strong>, the <strong>conduct rules</strong> and the <strong>prescribed responsibilities</strong>; the new <strong>training requirements</strong>; and the <strong>transitional provisions</strong>.<br />
<br />
<strong>People issues</strong><br />
<br />
We will discuss employment-related issues in the context of the SMCR and <strong>aligning human resource processes</strong> with the SMCR. This includes <strong>reviewing and updating employment contracts</strong> and <strong>employee handbooks</strong> and incorporating <strong>fitness and propriety assessments</strong> into <strong>annual employee reviews</strong>.<br />
<br />
<strong>Who should attend?</strong><br />
<br />
Compliance officers, in-house lawyers and human resource professionals at FCA regulated firms. This event will also be of interest to approved persons (including non-executive directors), secondees and contractors at FCA regulated firms.<br />
<br />
<strong>What will delegates take away?</strong><br />
<br />
An overview of the practical steps your organisation has to take and by when to establish and maintain compliance with these demanding new regimes.</p>

<h2>Agenda</h2>

<table class=""format"">
	<thead>
		<tr>
			<th scope=""col"">Time</th>
			<th scope=""col"">Activity</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>08:30</td>
			<td>Registration &amp; refreshments</td>
		</tr>
		<tr>
			<td>09:00</td>
			<td>Welcome &amp; introduction</td>
		</tr>
		<tr>
			<td>09:05</td>
			<td>Overview of SMCR</td>
		</tr>
		<tr>
			<td>09:20</td>
			<td>People issues</td>
		</tr>
		<tr>
			<td>09:35</td>
			<td>SMCR in practice: case study</td>
		</tr>
		<tr>
			<td>09:50</td>
			<td>Key actions for all firms</td>
		</tr>
		<tr>
			<td>10:00</td>
			<td>Q&amp;As</td>
		</tr>
		<tr>
			<td>10:15</td>
			<td>Finish</td>
		</tr>
	</tbody>
</table>
","<p>This event is free of charge.</p>

<p>This event will run for one hour. Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession.</p>

<p>Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,12-09-2018 12:30,https://reaction.gowlingwlg.com/reaction/RSGenPage.asp?RSID=530Ul9FdXYwsRt2gaTPh-NDOmzCNzeU2GJyOWzTFMQc,NULL,Register for this event,9FBE191E-3BCF-45DE-A2BA-338BB194FC9D,06cecb4c-c959-4674-9047-d5d8ee8c673c,6ecd1574-34c3-42ca-a28b-70a10b61221e;aa5dcce5-fbe3-48b0-8a5c-b653c134f240;d8837737-40d2-4472-8a9e-ba4101ec2105,NULL,af5005a2-4ec9-49ba-b7bd-262bb191b111;79205c59-28cb-4630-bd62-bf070ba732b0,NULL,Seminar,"Ian Mason, Jonathan Chamberlain",London,71,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,95EC9477-4594-4332-A463-E612BD16CA0C,Speaker(s),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
63,/Events/2018/Hamilton-Steel-Summit,en-GB,FA19C096-4248-46F6-A3FF-7D0DD5551A95,Hamilton Steel Summit,Hamilton Steel Summit,Gowling WLG and the City of Hamilton are pleased to invite you to a public summit exploring the key challenges facing Hamilton's steel industry.,~/getmedia/00f2c3d3-b346-4bf1-b46b-01b1a2aad956/hamilton_steel_summit.png.xml?width=576&height=278&ext=.png,NULL,GWLG.Seminar,07-09-2018 08:30,07-09-2018 13:00,08:30,13:00,EST,0,NULL,"<p>Gowling WLG and the City of Hamilton are pleased to invite you to a public summit exploring the key challenges facing Hamilton's steel industry - with an emphasis on current obstacles posed by new international tariffs.</p>

<p>In addition to insights from a number of industry, government and community leaders, the summit will feature a keynote address from accomplished international trade lawyer <a href=""~/en/people/richard-dearden/"" target=""_blank"">Richard Dearden</a>.</p>

<p>A partner at Gowling WLG, Dearden served as external counsel to the Government of Mexico during the NAFTA negotiations and acted for the U.S. Department of Commerce during the Chapter 19 negotiation of the Canada-US Free Trade Agreement. The talk will leverage his vast experience to provide important context to the current trade issues impacting Canada&#39;s steel industry and economy at large.</p>
<h2>AGENDA</h2>

<p>08:30 - Networking &amp; Refreshment</p>

<p>09:00 - Opening remarks from Mayor Fred Eisenberger</p>

<ul>
	<li>Keynote Speaker, Richard Dearden, Gowling WLG</li>
	<li>Expert Panel on Hamilton&#39;s Steel Industry</li>
	<li>Break (15 minutes)</li>
	<li>Speakers (Steel Industry, Council, MPs, MPPs)</li>
	<li>Delegations from the Public</li>
	<li>Open Public Comment</li>
</ul>

<p>13:00 - Wrap-up, Media Interviews</p>

<hr />
<h2>Gowling WLG and the City of Hamilton | Partners in Innovation</h2>

<p>Gowling WLG and the City of Hamilton recently forged an exciting partnership that demonstrates our common goal and commitment to boosting commercial activity, fostering groundbreaking innovation and competing in the global marketplace.</p>

<p>Harnessing the strength of our industry insight, worldwide platform and strategic relationships with stakeholders throughout the region, Gowling WLG is proud to work with Hamilton to unlock the city's vast economic potential.</p>

<p>For more information regarding this unique partnership and to learn how you or your company may benefit, contact <a href=""mailto:louis.frapporti@gowlingwlg.com?subject=Gowling%20WLG%27s%20partnership%20with%20the%20City%20of%20Hamilton"">Louis Frapporti</a>, managing partner of Gowling WLG's Hamilton office.</p>

<p><img alt=""City of Hamilton Logo"" src=""~/getmedia/aea60cbb-3b93-4ab5-bdc9-0869d2c67952/city-of-hamilton.jpg.xml"" /></p>
",NULL,NULL,05-09-2018 17:16,mailto:elizabeth.konca@hamilton.ca?subject=RSVP %7C Hamilton Steel Summit%2C Sept. 7,NULL,Register for this event,33EBE28E-86A2-4D26-BBBF-634DD084D1D2,NULL,NULL,NULL,104b250f-b3c2-47df-9df6-1f1c11cf8908,NULL,Seminar,NULL,"Hamilton City Hall, Council Chambers",36288,GWLG.Events,NULL,~/getmedia/8db9ea35-96d7-4e42-8d89-9d6ed2da192f/180815-Hamilton-Steel-Summit-Banner.jpg.xml?width=1400&height=540&ext=.jpg,NULL,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,Keynote speaker,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
64,/Events/2018/Raising-equity-capital,en-GB,50BAFA4A-7117-475F-BB9A-A214E30C8D66,Raising equity capital,Raising equity capital - what's the latest from the public markets in London?,,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,06-09-2018 15:00,NULL,15:00,17:30,BST,0,NULL,"<p>Come join us for an afternoon session on the 6th of September where our speakers, who are all expert IPO advisers, will update you on the recent trends and highlights that they are seeing in sectors such as technology and natural resources. Our speakers will also explain the various routes to market in London and the key legal, tax and financial issues involved.</p>

<h2>Agenda</h2>

<table class=""format"">
	<thead>
		<tr>
			<th scope=""col"">Time</th>
			<th scope=""col"">Activity</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>15:00</td>
			<td>Registration</td>
		</tr>
		<tr>
			<td>15:15</td>
			<td>Welcome and introductory remarks - Tan Choon Leng (Head of Corporate, JurisAsia LLC)</td>
		</tr>
		<tr>
			<td>15:20</td>
			<td>Recent trends and highlights in IPOs in London - Hugh Maule (Partner, Gowling WLG)</td>
		</tr>
		<tr>
			<td>15:45</td>
			<td>Listing in the UK: options for overseas companies - Charles Bond (Partner, Gowling WLG)</td>
		</tr>
		<tr>
			<td>16:10</td>
			<td>Coffee break</td>
		</tr>
		<tr>
			<td>16:30</td>
			<td>Pre-IPO planning, tax and accounting issues - Robin Stevens (Partner, Crowe UK)</td>
		</tr>
		<tr>
			<td>17:00</td>
			<td>Discussion and Q&amp;A</td>
		</tr>
		<tr>
			<td>17:10</td>
			<td>Closing and concluding remarks - Tan Choon Leng (Head of Corporate, JurisAsia LLC)</td>
		</tr>
		<tr>
			<td>17:30</td>
			<td>Drinks and networking</td>
		</tr>
	</tbody>
</table>
","<p>This event is free of charge. Gowling WLG and JurisAsia LLC are committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,04-09-2018 13:31,mailto:events@jurisasiallc.com?subject=Raising equity capital - what's the latest from the public markets in London?,NULL,Register for this event,28BD7EBC-41F9-422C-BC60-85424638D10A,c0b8c1a8-73eb-4122-972f-dc5df852f68d;cdfc9b50-74c2-4af5-9508-342935f81ccd,ccb3b009-ba81-4ff5-8e8a-9200813a2a54,NULL,f89a86e5-3692-4b8b-bd85-218e13eee56f;6535cd7a-0e8e-447a-bc96-cec1df267dfe,NULL,Seminar,"Hugh Maule, Charles Bond",Pickering Ballroom,36384,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,mailto:events@jurisasiallc.com,Register for event,GWLG.Singapore,0,NULL,Speaker(s),NULL,NULL,"Natural Resources, Tech",Banking & Finance,NULL,NULL,NULL,NULL,NULL
65,/Events/2018/Patents-Top-10-questions-answered,en-GB,2A33C707-9CF3-4D0F-9F0A-EDCCD3E6F0FF,Patents: Top 10 questions answered,Patents: Top 10 questions answered,Join Gowling WLG intellectual property lawyers Lisa Thorne and Mark Wilke as they answer some of the most common questions asked by patent applicants during the early stages of the patenting process.,~/getmedia/e570bd5d-d032-4b3c-94a6-0286d4f4cd98/180821-vancouver-patents-event-sept-13.jpg.xml?width=1200&height=627&ext=.jpg,NULL,GWLG.Seminar,13-09-2018 08:00,13-09-2018 09:30,08:00,09:30,PST,1,1 hour,"<p>Join Gowling WLG intellectual property lawyers <a href=""~/en/people/lisa-thorne/"" target=""_blank"">Lisa Thorne</a> and <a href=""~/en/people/mark-wilke/"" target=""_blank"">Mark Wilke</a> as they answer some of the most common questions asked by patent applicants during the early stages of the patenting process. Have a patent question of your own? Come along and ask our experts.</p>

<p>The morning seminar is tailored to CEOs, patent managers and in-house counsel who already possess a rudimentary understanding of the patenting process.</p>

<p>Featured questions include:</p>

<ul>
	<li>Who qualifies as an inventor and what are the legal consequences of getting this wrong?</li>
	<li>Who owns an invention and what steps should be taken to ensure proper chain of title?</li>
	<li>What should be included in a patent application?</li>
	<li>What can be safely disclosed to the public during the patenting process?</li>
</ul>

<p>We look forward to having you join us! Breakfast will be provided.</p>

<p><em>This program will count for up to one hour of CPD credit toward the CPD requirements of the Law Society of British Columbia.</em></p>

<h2>Agenda</h2>

<p>08:00 - Breakfast and registration</p>

<p>08:30 - Presentation</p>

<h2>Event contact</h2>

<p>If you have any questions or concerns please reach out to <a href=""mailto:narissa.zhao@gowlingwlg.com?subject=Patents:%20Top%2010%20questions%20answered%20event"">Narissa Zhao</a>.</p>
",NULL,NULL,12-09-2018 20:54,https://sites-gowlingwlg.vuturevx.com/104/3920/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,AFD10BE7-206C-4F2D-9094-257D6B5E7BCC,NULL,08b9a44c-bb26-4255-9779-296a124fcbee;85764222-db69-43cf-af79-2c6fcbda9589,NULL,d9a834e2-7b85-4089-b241-ed2e95e1b3d6;afb0aeb9-6399-4d76-ac46-5bff1bebc521,NULL,Seminar,NULL,Vancouver,68,GWLG.Events,NULL,~/getmedia/5d8683df-4405-4992-8a81-548186610b84/180821-vancouver-patents-event-sept-13-banner.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,Speakers,NULL,NULL,NULL,"Intellectual Property, Patents",NULL,NULL,NULL,NULL,NULL
66,/Events/2018/Stonewall-Gowling-WLG-LGBT-event,en-GB,9A6E65FD-A8F0-4A69-9D1C-FCE09A9011AC,Stonewall & Gowling WLG LGBT event,Stonewall & Gowling WLG end of summer LGBT networking event,Sign up for OpenHouse's Stonewall Summer Party.,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.SpecialEvents,30:00.0,NULL,17:30,20:30,BST,0,NULL,"<p>OpenHouse, Gowling WLG&#39;s LGBT &amp; Allies network, invites you to join us at our annual networking event with Stonewall for LGBT+ networks around the Midlands. This is your opportunity to socialise and celebrate with LGBT+ colleagues from networks in the public, private and voluntary sectors.</p>

<p>Drinks and canapés will be available for everyone.</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,36:37.0,https://reaction.gowlingwlg.com/reaction/RSGenPage.asp?RSID=R8HPewsAUr3PN37WtqrdygnHYeJdWn5OC1eRDYl-15w,NULL,Register for this event,58076178-DA60-4AB6-A07C-EF250971EBF7,NULL,NULL,NULL,NULL,NULL,Special events,NULL,Birmingham,70,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,NULL,Speaker(s),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
67,/Events/2018/Protecting-and-Financing-Your-China-Market-Growth,en-GB,53B3025B-EF67-44A2-BA80-B3861464440D,Protecting and Financing Your China Market Growth,Protecting and Financing Your China Market Growth,CCBC is presenting a full-morning workshop that will focus on how Canadian SMEs operating in China can protect their IP and the many financing opportunities that are available to them.,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,NULL,27-09-2018 16:06,08:30,13:00 * start time varies by location - ,Local time,0,NULL,"<p>CCBC is presenting a full-morning workshop that will focus on how Canadian SMEs operating in China can protect their IP and the many financing opportunities that are available to them in Gowling WLG&#39;s&nbsp;<a href=""https://www.picatic.com/CCBCCalgaryOutreach25092018"" target=""_blank"">Calgary</a>, <a href=""https://www.picatic.com/event15349664117857"" target=""_blank"">Waterloo</a> and <a href=""https://www.picatic.com/event15349565826171"" target=""_blank"">Toronto</a>. Click on the city you&#39;re interested in&nbsp;to register!<br />
<br />
Keynote speakers and panelists will address the following questions:</p>

<ul>
	<li>What is the right deal structure to protect your IP?</li>
	<li>How can Chinese capital be incorporated into your business?</li>
	<li>What are Chinese investors looking for when making investment decisions?</li>
	<li>How can you best present your business&#39; strategies to secure Chinese financing?</li>
	<li>What other financing options are available to you?</li>
</ul>

<p><i>The Canadian Intellectual Property Office will present <strong><i>China IP Protection Strategies</i></strong><em> a</em>nd Gowling WLG will share <em><strong>Case Studies on IP Protection in China. </strong></em>Panel discussions with industry experts will follow and address <em><strong>How Chinese Capital Helps Canadian SMEs Expand in China </strong></em>and<em> </em><strong><i>Investigating Additional Financing Options</i></strong><em>. </em></i><br />
<br />
This workshop is designed for companies who are pursuing China as a market for their product, technology, or service. Food and beverage, clean technology, and life science companies are particularly encouraged. Similar workshops will take place in Waterloo, Toronto, and Calgary.</p>

<article>
<section>
<p><strong>Tickets: </strong>$25 (CCBC members and non-members)</p>

<p>Limited seating. CCBC will confirm your registration as this workshop is designed for companies and entrepreneurs with designated products, sponsors, and investors/mentors.</p>

<p>For more information on the event, please contact Wayne Thai at <a href=""mailto:wayne@ccbc.com"">wayne</a><a href=""mailto:Quebec@ccbc.com"">@ccbc.com</a> or call (403) 973-3818.</p>
</section>
</article>
",NULL,NULL,20-09-2018 16:13,https://www.picatic.com/u/534420/events,NULL,"Register for the Calgary, Waterloo or Toronto session now!",E8272393-4F8A-4854-984C-933EC3CA4694,NULL,08b9a44c-bb26-4255-9779-296a124fcbee,NULL,NULL,NULL,Seminar,NULL,CCBC Luncheon,36693,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://www.picatic.com/u/534420/events,"Register for the Calgary, Waterloo or Toronto session now",GWLG.Canada,0,NULL,Speaker(s),NULL,NULL,NULL,Intellectual Property,NULL,NULL,NULL,NULL,NULL
68,/Events/2018/Protecting-and-enforcing-your-IP-in-China,en-GB,9927FF53-DB96-4E51-BF5A-18AD8C91ABA0,Protecting and enforcing your IP in China,Protecting and enforcing your IP in China,Join us at our Vancouver office to learn how to protect your IP assets in China by examining case studies.,~/getmedia/f11679e5-6782-4e50-b304-9902a9f1244c/180830-protecting-ip-china-event.jpg.xml?width=576&height=278&ext=.jpg,NULL,GWLG.Seminar,24-09-2018 08:00,24-09-2018 09:30,08:00,09:30,PST,1,1 hour,"<p>Join us at our Vancouver office to learn how to protect your IP assets in China by examining case studies. At our seminar on Monday, Sept. 24, we will discuss the challenges faced by various local and international companies doing business in China.</p>

<p>The case studies will cover topics including:</p>

<ul>
	<li>IP registration</li>
	<li>Contracts to protect your IP</li>
	<li>Strategies to enforce your IP rights in China</li>
</ul>

<p><a href=""~/en/people/jamie-rowlands/"">Jamie Rowlands</a> from our Guangzhou office and <a href=""~/en/people/brian-y-lee/"">Brian Lee</a> from our Vancouver office will share their experiences with helping their clients protect their IP.</p>

<p>We look forward to seeing you there! Breakfast will be provided.</p>

<p><em>*This program will count for up to one (1) hour of CPD credit toward the mandatory CPD requirements of the Law society of British Columbia.</em></p>
",NULL,NULL,19-09-2018 14:55,https://sites-gowlingwlg.vuturevx.com/104/3931/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,AFD10BE7-206C-4F2D-9094-257D6B5E7BCC,NULL,08b9a44c-bb26-4255-9779-296a124fcbee,NULL,324b94dc-effd-40f6-9b4b-de402aa7d013;9a7a979c-500a-45ae-b4fd-1fed3f6bd376,NULL,Seminar,NULL,Vancouver,68,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada;GWLG.China,0,NULL,Speakers,NULL,NULL,NULL,Intellectual Property Law,NULL,NULL,NULL,NULL,NULL
69,/Events/2018/Adjudication-Program-2018,en-GB,C250C822-EC8E-4FA7-8DAB-06CAC5435C3D,Adjudication Program 2018,Adjudication Program: What you need to know,"Gowling WLG and leading global consultancy HKA are pleased to invite you to join us in Toronto and Ottawa, where we'll be hosting a session in each city relating to Adjudication and what you need to know.",~/getmedia/d5dd1167-5023-4d93-94b1-91117c7c706f/adjudication_program_social.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Seminar,25-09-2018 20:00,26-09-2018 19:00,"Sept. 25, 15:00 - 18:30","Sept 26, 11:30 - 14:00",EST,0,NULL,"<h2>Are you ready for Adjudication?</h2>

<p>Gowling WLG and leading global consultancy HKA are pleased to invite you to join us in Toronto&nbsp;and&nbsp;Ottawa, where we&#39;ll be hosting a session in each city&nbsp;relating to&nbsp;Adjudication and what you need to know.</p>

<h3>This session will cover:</h3>

<ul>
	<li>The mechanics of an Adjudication as set out in the <em>Construction Act</em></li>
	<li>How to prepare for Adjudication</li>
	<li>Different tools to assist corporations in preparing for Adjudication</li>
	<li>A panel discussion focusing on the UK experience&nbsp;with Adjudication</li>
</ul>

<p><br />
<a class=""c-button"" href=""https://sites-gowlingwlg.vuturevx.com/15/3891/landing-pages/adjudication-program-2018-09-25and26-landing-blank-form.asp"" target=""_blank"">Learn&nbsp;more about each session in your preferred location</a></p>
",NULL,NULL,26-09-2018 13:34,https://sites-gowlingwlg.vuturevx.com/15/3891/landing-pages/adjudication-program-2018-09-25and26-landing-blank-form.asp,NULL,Register for this event,NULL,3fc2ca8c-9d19-44ba-a3a9-ad1ecb11e900,NULL,NULL,NULL,NULL,Seminar,"Neil S. Abbott, Edward (Ted) G. Betts, Natasha Carew, Mark W. Crane, Sue Ryan",NULL,NULL,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/15/3891/landing-pages/adjudication-program-2018-09-25and26-landing-blank-form.asp,More information & registration,GWLG.Canada,0,NULL,Speakers,NULL,NULL,Construction & Engineering,NULL,NULL,NULL,NULL,NULL,NULL
70,/Events/2018/TUPE-Pensions-the-tricky-issues-2018,en-GB,9EFDBDCD-8BAC-4AD9-80D9-73A163442C20,TUPE & Pensions - the tricky issues 2018,TUPE & Pensions - the tricky issues 2018,"Join us for our next TUPE Club webinar, where we will be answering five pension related questions which often cause headaches on transactions and outsourcings.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,00:00.0,45:00.0,13:00,13:45,GMT,1,0.75,"<p>Join us for our next TUPE Club webinar, where we will be answering five pension related questions which often cause headaches on transactions and outsourcings:</p>

<ol>
	<li>Pensions don&#39;t generally transfer under TUPE, so what do you have to do about them?</li>
	<li>What&#39;s the difference between an occupational and a personal pension scheme and why does it matter on a transfer?</li>
	<li>When might the 60 day pensions consultation obligations apply to post-transfer pension changes?</li>
	<li>What are the issues with &quot;buying-out&quot; (settling) Beckmann rights or other tricky pension benefits?</li>
	<li>What is protected person status and when do you need to worry about it?</li>
</ol>

<p>Our speakers, Liz Wood and Hannah Beacham, will also give you practical tips on dealing with the tricky issues that can arise.</p>

<p>During this live webinar you will have the opportunity to ask questions and we will answer as many as we can in the time available.</p>
","<p>This event is free of charge.</p>

<p>This event will run for 0.75 hours. Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession.</p>

<p>Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,59:59.0,https://reaction.gowlingwlg.com/reaction/RSGenPage.asp?RSID=ueHzfsKSEAqNQMjEpB2N4UuuTKHn6Wxt7gcEN36doKQ,NULL,Register for this event,C41373B4-86B9-4F74-8894-0B0BB7DDBD18,NULL,d8837737-40d2-4472-8a9e-ba4101ec2105;a19c4c5e-c05a-4fa5-95aa-c5a274279d8c,a143cbfd-d333-42a0-89a6-7287894464f1,7e119a87-174d-49b2-9cc3-1270bd96a57e;78b949bf-8838-4a2c-aa74-aa3ad35e87e3;006abb1e-ab84-4482-91ac-e305dd19cf7f,NULL,Webinar,NULL,NULL,NULL,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
71,/Events/2018/Utility-2050-Electricity-Futures,en-GB,2D36B6B8-BC8E-4CD8-9E3B-EA5C10BD10A9,Utility 2050 Electricity Futures,Utility 2050 Electricity Futures: Insights into investment opportunities and risk in the UK electricity system,"The Utility 2050 project assesses the possible UK electricity system between 2035 and 2050, reviewing the changing energy sector and the significant economic opportunities and risk this is creating for investors and innovators alike.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,16-10-2018 08:15,16-10-2018 12:30,08:15,12:30,BST,1,4,"<p>The Utility 2050 project assesses the possible UK electricity system between 2035 and 2050, reviewing the changing energy sector and the significant economic opportunities and risk this is creating for investors and innovators alike.</p>

<p>It explores the impacts of decarbonisation, identifying likely system challenges, as well as the implications for innovation and deployment, and how futures can be used to inform policy design whilst accommodating deep uncertainty.</p>

<p>As this latest phase of the Utility 2050 project nears completion, Catapult&#39;s Utility 2050 team, in partnership with Gowling WLG, invites you to our exclusive roundtable event.</p>

<p>This interactive discussion will explore the potential alternative paths for energy sector investment and the risks and opportunities that are likely to result from this, with sessions covering:</p>

<ul>
	<li>Alternative revenue streams</li>
	<li>Evolving regulatory models and the changes required</li>
	<li>The impact of technology</li>
	<li>How the different outcomes may be perceived by consumers of all types</li>
	<li>Risk levels resulting from possible future business models operating in the future</li>
</ul>

<h2>Want to know more?</h2>

<p>Drawing on a wealth of UK economic and energy data, Energy Systems Catapult&#39;s Utility 2050 team has modelled new commercial electricity market opportunities for multiple UK futures, with detailed assessment of their investment characteristics, risk levels and consumer impact.</p>

<p>The project has a longer time horizon than most recent research and therefore gives an important outlook for investors seeking to optimise long-term investment strategies. It also considers the different perspectives of incumbents, new entrant players and disruptive technology providers, and the investment opportunities - and risks - which they may offer.</p>

<h2>Agenda</h2>

<table>
	<tbody>
		<tr>
			<td>08:15</td>
			<td>Registration and Breakfast</td>
		</tr>
		<tr>
			<td>09:00</td>
			<td>Introductions from Gowling WLG, Energy Systems Catapult and Utility 2050 Team</td>
		</tr>
		<tr>
			<td>09:10</td>
			<td>Introduction to Utility 2050</td>
		</tr>
		<tr>
			<td>09:40</td>
			<td>Interactive Sessions on:
			<ul>
				<li>The future financial opportunities at stake;</li>
				<li>The business models compatible with capturing those financial opportunities;</li>
				<li>The impact of technology;</li>
				<li>How consumers respond to those business models; and</li>
				<li>Present Utilities, Regulatory and Policy perspectives as to &#39;what needs to change in the energy system&#39;.</li>
			</ul>
			</td>
		</tr>
		<tr>
			<td>12:10</td>
			<td>Plenary Session: Summary<br />
			Andrew Buglass</td>
		</tr>
		<tr>
			<td>12:30</td>
			<td>Lunch</td>
		</tr>
	</tbody>
</table>
","<p>This event is free of charge.</p>

<p>This event will run for four hours. Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession.</p>

<p>Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,15-10-2018 13:00,https://reaction.gowlingwlg.com/reaction/RSGenPage.asp?RSID=_q11HoB9X6gs3YheA9xF-q9VIC4hw8hgAKhhGfnySEQ,NULL,Register for this event,9FBE191E-3BCF-45DE-A2BA-338BB194FC9D,f1e960f5-8231-4c56-b7bf-9898ebb538c5,NULL,NULL,NULL,NULL,Seminar,NULL,NULL,NULL,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,95EC9477-4594-4332-A463-E612BD16CA0C,Speaker(s),NULL,NULL,Energy,NULL,NULL,NULL,NULL,NULL,NULL
72,/Events/2018/Upcoming-changes-to-OHS-and-WC-legislation,en-GB,019FD9FE-45E7-4EA8-982A-CBC9EC9C66B2,Upcoming changes to OHS and WC legislation,Upcoming changes to the Occupational Health and Safety and Workers Compensation legislation,Join us for the latest and upcoming changes to the Occupational Health and Safety and Workers Compensation legislation.,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,11-10-2018 08:30,11-10-2018 10:00,08:30,10:00,Local time,0,NULL,"<p>Join Gowling WLG partners Max Brunette, Will Cascadden and Alison Gray for an informative session on the latest and upcoming changes to the Occupational Health and Safety and Workers Compensation legislation.</p>
",NULL,NULL,09-10-2018 21:26,https://sites-gowlingwlg.vuturevx.com/95/3949/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,8BF72D3F-E216-4FDD-B0BE-52D41A644293,NULL,d8837737-40d2-4472-8a9e-ba4101ec2105,NULL,26fb12df-b407-4553-9451-a9880a4c2e8b;3f7c519a-6612-414e-a791-aec1e9ed60b1;9e1d72cc-4bfa-433a-ab12-01ecd560cc72,NULL,Seminar,NULL,Calgary,64,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,Speakers,NULL,NULL,NULL,"Employment, Labour & Equalities",NULL,NULL,NULL,NULL,NULL
73,/Events/2018/ThinkHouse-Foundations-Birmingham,en-GB,34AB2D8C-502E-4263-9655-00DA2FAC51C0,ThinkHouse Foundations - Birmingham,ThinkHouse Foundations - Birmingham,"Whether you are looking for insight into the latest legal developments and hot topics, training resources, or a chance to meet your peers and exchange ideas, ThinkHouse Foundations has it covered.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,31-10-2018 09:00,31-10-2018 13:00,09:00,13:00,GMT,1,3,"<p>Whether you are looking for insight into the latest legal developments and hot topics, training resources, or a chance to meet your peers and exchange ideas, ThinkHouse Foundations has it covered.</p>

<p>Following a number of requests for a &#39;soft-skills&#39; session our autumn event will primarily focus on mindfulness, there will also be an ever-popular contact law update.</p>

<p>Ruth Ormston, from <a href=""https://www.calmcitymind.com/workplace"" target=""_blank"">Calm City Mind</a>, will introduce us to mindfulness. Ruth is a practicing pensions solicitor at Gowling WLG so understands first-hand the challenges and stresses that lawyers can face. In this introductory mindfulness session she will explore ways in which you can practice mindfulness and how this can be used effectively in your every day and work lives.</p>

<p>Then, following a short coffee break, Elsie Blackshaw-Crosby will provide attendees with a contract law update, looking at recent cases that are likely to be of relevance to the ThinkHouse Foundations audience.</p>

<p>We hope you can join us, and please do extend the invite to your colleagues.</p>

<p><em>ThinkHouse Foundations is for in-house lawyers who are up to five years&#39; PQE. Our sessions provide CPD points and a means of evidencing competences, some practical and relevant training and an opportunity to network with peers of a similar level.</em></p>

<h2>Agenda</h2>

<table>
	<thead>
		<tr>
			<th scope=""col"">Time</th>
			<th scope=""col"">Activity</th>
			<th scope=""col"">Speaker</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>09:00</td>
			<td>Registration</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>09:30</td>
			<td>Chair opening</td>
			<td>Emma Bufton / Tom Cox</td>
		</tr>
		<tr>
			<td>09:35</td>
			<td>Mindfulness session</td>
			<td>Ruth Ormston</td>
		</tr>
		<tr>
			<td>11:05</td>
			<td>Coffee break</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>11:15</td>
			<td>Contract Law update</td>
			<td>Elsie Blackshaw-Crosby</td>
		</tr>
		<tr>
			<td>12:00</td>
			<td>Lunch</td>
			<td>&nbsp;</td>
		</tr>
	</tbody>
</table>
","<p>This event is free of charge.</p>

<p>This event will run for three hours. Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession.</p>

<p>Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,30-10-2018 15:07,https://reaction.gowlingwlg.com/reaction/RSGenPage.asp?RSID=0_oTijpzDi0S-N1ki4pM4JcDynWk91_PGXz4dNXf7-U,NULL,Register for this event,58076178-DA60-4AB6-A07C-EF250971EBF7,NULL,NULL,a143cbfd-d333-42a0-89a6-7287894464f1,ecba5daa-088a-4103-823a-0a9370b4bf18;ca67aa19-bd53-48e1-97b2-b3dec72a50c8;6965a192-e42d-4e06-af1e-a4ebb072b416;e2821f18-a02b-4857-b87f-cda1d9c39957,NULL,Seminar,NULL,Birmingham,70,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
74,/Events/2018/ThinkHouse-Foundations-London,en-GB,5A5AA8A4-0537-4FFC-B6B8-9DA1180FCBCA,ThinkHouse Foundations - London,ThinkHouse Foundations - London,"Whether you are looking for insight into the latest legal developments and hot topics, training resources, or a chance to meet your peers and exchange ideas, ThinkHouse Foundations has it covered.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,01-11-2018 09:00,01-11-2018 13:00,09:00,13:00,GMT,1,3,"<p>Whether you are looking for insight into the latest legal developments and hot topics, training resources, or a chance to meet your peers and exchange ideas, ThinkHouse Foundations has it covered.</p>

<p>Following a number of requests for a &#39;soft-skills&#39; session our autumn event will primarily focus on mindfulness, there will also be an ever-popular contact law update.</p>

<p>Ruth Ormston, from <a href=""https://www.calmcitymind.com/workplace"" target=""_blank"">Calm City Mind</a>, will introduce us to mindfulness. Ruth is a practicing pensions solicitor at Gowling WLG so understands first-hand the challenges and stresses that lawyers can face. In this introductory mindfulness session she will explore ways in which you can practice mindfulness and how this can be used effectively in your every day and work lives.</p>

<p>Then, following a short coffee break, Elsie Blackshaw-Crosby will provide attendees with a contract law update, looking at recent cases that are likely to be of relevance to the ThinkHouse Foundations audience.</p>

<p>We hope you can join us, and please do extend the invite to your colleagues.</p>

<p><em>ThinkHouse Foundations is for in-house lawyers who are up to five years&#39; PQE. Our sessions provide CPD points and a means of evidencing competences, some practical and relevant training and an opportunity to network with peers of a similar level.</em></p>

<h2>Agenda</h2>

<table>
	<thead>
		<tr>
			<th scope=""col"">Time</th>
			<th scope=""col"">Activity</th>
			<th scope=""col"">Speaker</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>09:00</td>
			<td>Registration</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>09:30</td>
			<td>Chair opening</td>
			<td>Emma Bufton / Tom Cox</td>
		</tr>
		<tr>
			<td>09:35</td>
			<td>Mindfulness session</td>
			<td>Ruth Ormston</td>
		</tr>
		<tr>
			<td>11:05</td>
			<td>Coffee break</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>11:15</td>
			<td>Contract Law update</td>
			<td>Elsie Blackshaw-Crosby</td>
		</tr>
		<tr>
			<td>12:00</td>
			<td>Lunch</td>
			<td>&nbsp;</td>
		</tr>
	</tbody>
</table>
","<p>This event is free of charge.</p>

<p>This event will run for three hours. Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession.</p>

<p>Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,31-10-2018 15:07,https://reaction.gowlingwlg.com/reaction/RSGenPage.asp?RSID=0_oTijpzDi0S-N1ki4pM4JcDynWk91_PGXz4dNXf7-U,NULL,Register for this event,9FBE191E-3BCF-45DE-A2BA-338BB194FC9D,NULL,NULL,a143cbfd-d333-42a0-89a6-7287894464f1,ca67aa19-bd53-48e1-97b2-b3dec72a50c8;6965a192-e42d-4e06-af1e-a4ebb072b416,NULL,Seminar,NULL,London,71,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,NULL,NULL,NULL,ThinkHouse,NULL,NULL,NULL,NULL
75,/Events/2018/Working-with-and-in-China,en-GB,07BAB874-42B0-4317-A1C2-3D217D150383,Working with and in China,Working with and in China,Please join us for an engaging and informative session on working with and in China. ,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,26-09-2018 22:00,27-09-2018 03:00,03:00,05:00,EST,0,NULL,"<p>Please join us on September 26&nbsp;for an engaging and informative session on working <em>with</em> and <em>in</em> China.&nbsp;</p>

<p>The speakers will be <a href=""~/people/jamie-rowlands"" target=""_blank"">Jamie Rowlands</a>, a Gowling WLG partner leading our office in Guangzhou, China, and <a href=""~/people/peter-zhang"" target=""_blank"">Peter Zhang</a>, who leads the firm&#39;s China initiative in Toronto. Prior to his work at Gowling WLG, Peter spent several yers working as an investment banker at one of China&#39;s larget investment bandkin and research institutions, and spent several years as a partner at an international law firm based in Asia.</p>

<p>Jamie and Peter will share their knowledge, insights and experiences working with and in China. It will be an opportunity to learn more about doing business in China as well as Chinese government and private company interests in the Hamilton Region.</p>

<p>Please RSVP to Chantal Chaves at <strong><a href=""mailto:chantal.chaves@gowlingwlg.com"">chantal.chaves@gowlingwlg.com</a></strong>.</p>
",NULL,NULL,26-09-2018 20:00,mailto:chantal.chaves@gowlingwlg.com,NULL,Register for this event,B48AC72F-E32D-457F-84B5-FE7E6DE7C86C,NULL,NULL,NULL,324b94dc-effd-40f6-9b4b-de402aa7d013;5863153f-60a6-45f7-8a17-4d476c619aa8,NULL,Seminar,NULL,Mohawk College,37048,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,mailto:chantal.chaves@gowlingwlg.com,Register Now,GWLG.Canada;GWLG.China,0,NULL,Speakers,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
76,/Events/2018/ConnectAbility-Network-Launch,en-GB,3ED3F20F-E45F-4123-82BD-A01A09DE13DB,ConnectAbility Network Launch,ConnectAbility Network Launch,"We're delighted to announce the launch of ConnectAbility, a cross-organisational disability network connecting individuals across the City, to share experiences and hints and tips, and learn from others.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,NULL,NULL,NULL,NULL,CST,0,NULL,"<p style=""margin: 0cm 0cm 0pt;""><span style=""font-family: &quot;Arial&quot;,&quot;sans-serif&quot;; font-size: 10pt;""><font color=""#000000"">We&#39;re delighted to announce the launch of ConnectAbility, a cross-organisational disability network connecting individuals across the City, to share experiences and hints and tips, and learn from others. </font></span></p>

<p style=""margin: 0cm 0cm 0pt;""><span style=""font-family: &quot;Arial&quot;,&quot;sans-serif&quot;; font-size: 10pt;""><font color=""#000000"">&nbsp;</font></span></p>

<p style=""margin: 0cm 0cm 0pt;""><span style=""font-family: &quot;Arial&quot;,&quot;sans-serif&quot;; font-size: 10pt;""><font color=""#000000"">ConnectAbility has been set up by Gowling WLG and four other founding organisations: The Bank of England, Bryan Cave Leighton Paisner, Ernst &amp; Young and Norton Rose Fulbright. </font></span></p>

<p style=""margin: 0cm 0cm 0pt;""><span style=""font-family: &quot;Arial&quot;,&quot;sans-serif&quot;; font-size: 10pt;""><font color=""#000000"">&nbsp;</font></span></p>

<p style=""margin: 0cm 0cm 0pt;""><span style=""font-family: &quot;Arial&quot;,&quot;sans-serif&quot;; font-size: 10pt;""><font color=""#000000"">The network will be formally launched on Tuesday 23 October, at Bryan Cave Leighton Paisner&rsquo;s Adelaide House offices. Kate Nash from&nbsp;PurpleSpace will lead an exciting and informative panel discussion, exploring disability in the workplace with Anna Fletcher, chair of Enable. This will be live streamed into our offices in Birmingham.</font></span><br />
&nbsp;</p>

<p style=""margin: 0cm 0cm 0pt;""><span style=""font-family: &quot;Arial&quot;,&quot;sans-serif&quot;; font-size: 10pt;""><font color=""#000000"">The format of the launch is as follows:</font></span><br />
&nbsp;</p>
",NULL,NULL,NULL,NULL,NULL,Register for this event,NULL,NULL,NULL,NULL,NULL,NULL,Seminar,NULL,NULL,NULL,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,NULL,0,NULL,Speaker(s),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
77,/Events/2018/Vancouver-Cannabis-Workshop,en-GB,8C655452-A18D-405C-BCC3-E3F3C9919C18,Vancouver Cannabis Workshop,Cannabis workshop: Taking your cannabis company public and preparing for legalization,"Join us at the Terminal City Club for a cannabis workshop that will provide you with the information you need to take your Canadian cannabis company public, and to prepare for the upcoming era of legalization.",~/getmedia/b91b2aed-75e8-4b54-b044-43ea846d9970/180926-cannabis-essentials.jpg.xml?width=929&height=486&ext=.jpg,NULL,GWLG.Seminar,16-10-2018 12:30,16-10-2018 15:00,07:30,10:00,PST,1,2 hours,"<p>Join us at the Terminal City Club for a cannabis workshop that will provide you with the information you need to take your Canadian cannabis company public, and to prepare for the upcoming era of legalization.</p>

<p>The first part of the workshop will offer an overview of how to go public in Canada with your cannabis assets.&nbsp;The second part of the workshop, Gowling WLG professionals will provide you with short, practical tips that are relevant to the era of legalization.</p>

<h2>Part 1: Taking your cannabis company public</h2>

<ul>
	<li>Overview of various structures for going public and Canadian considerations for going public&nbsp;</li>
	<li>CSE listing requirements and other CSE listing trends&nbsp;</li>
</ul>

<h2>Part 2: Preparing for the new era of legalization</h2>

<ul>
	<li>Intellectual property basics for the cannabis industry</li>
	<li>Overview of cannabis branding, advertising and packaging requirements&nbsp;</li>
	<li>The impact of legal cannabis on drug &amp; alcohol employee policy&nbsp;</li>
</ul>

<p><em>This program will count for up to&nbsp;two hours of CPD credit toward the CPD requirements of the Law Society of British Columbia.</em></p>
",NULL,NULL,16-10-2018 12:49,https://sites-gowlingwlg.vuturevx.com/104/3981/landing-pages/event-registration-(blank-form).asp?sid=blankform,NULL,Register for this event,80ABD2F7-6096-4692-B499-4567161326FB,NULL,255bcb12-7168-4281-9d52-a56233e8ae69,NULL,NULL,NULL,Seminar,NULL,Terminal City Club,37162,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/104/3981/landing-pages/event-registration-(blank-form).asp?sid=blankform,Register for this workshop,GWLG.Canada,0,NULL,NULL,NULL,NULL,NULL,Cannabis,NULL,NULL,NULL,NULL,NULL
78,/Events/2018/Women-in-Aviation-and-Aerospace,en-GB,F45285EC-2D87-4CB1-96A2-A75264D9F674,Women in Aviation and Aerospace,Women in Aviation and Aerospace - Dinner and Discussion,Join Gowling WLG for an evening of networking and discussion with a dinner co-hosted with International Aviation Womens Association (IAWA).,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.SpecialEvents,30:40.0,30:47.0,18:30,22:00,GMT,0,NULL,"<p>International law firm Gowling WLG (UK) LLP is proud to announce that it is the first law firm to sign up to the UK Government&#39;s Women in Aviation and Aerospace Charter as part of its commitment to support a more balanced and fair industry for women.</p>

<p>In order to celebrate this milestone, the International Aviation Womens Association (IAWA) and Gowling WLG are co-hosting a dinner in London during which we will hear from senior figures in the industry about their experiences and thoughts about&nbsp;the future of aviation and aerospace. We are pleased to announce that the confirmed speakers for the evening will include <strong>Katherine Bennett, Senior Vice President at Airbus UK, Charlotte Pedersen, CEO of Luxaviation Helicopters and Hannah Foster, Director of People at Flybe</strong>.</p>

<p>Please join us and colleagues in your sector for an evening of networking and discussion at Gowling WLG&#39;s offices overlooking London&#39;s Tower Bridge.</p>

<p>Dress Code: Business attire</p>

<table>
	<thead>
		<tr>
			<th scope=""col"">Time</th>
			<th scope=""col"">Activity</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>18:30</td>
			<td>Drinks on arrival on the balcony</td>
		</tr>
		<tr>
			<td>19:30</td>
			<td>Guests to take their seats for the three course fine dining meal</td>
		</tr>
		<tr>
			<td>22:00</td>
			<td>Carriages home</td>
		</tr>
	</tbody>
</table>
","<p>This event is free of charge.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,09:20.0,https://reaction.gowlingwlg.com/reaction/RSGenPage.asp?RSID=Fvq5J11VCR5j85-3zNZEHF3icpOVuKD6p7V_CHqYbT8,NULL,Register for this event,9FBE191E-3BCF-45DE-A2BA-338BB194FC9D,cbbbf9eb-a169-4053-8043-7085cfb8fd4a;de517572-4373-4b36-844b-18be93f6f9bc,NULL,NULL,NULL,NULL,Special events,Matthew Harvey,London,71,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,40ECBAEA-9783-479A-8EB9-9D39F577C01D,Speaker(s),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
79,/Events/2018/Senior-Managers-and-Certification-Regime-1,en-GB,A2A776D1-44C2-403C-8204-C8502F1D27D8,Senior Managers and Certification Regime,Senior Managers and Certification Regime: What you need to know,,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,13-09-2018 10:48,NULL,08:30,10:15,BST,1,1,"<p>In July 2018, the FCA published its near-final rules on extending the senior managers and certification regime (SMCR) to all firms regulated by the FCA. With SMCR now on the horizon, both employers and employees within regulated firms will need to understand how it will affect them.<br />
<br />
Hosted by our financial services and employment experts, this&nbsp;inaugural SMCR event&nbsp;will give&nbsp;you access to specialist industry speakers.<br />
<br />
<strong>SMCR</strong><br />
<br />
Topics that will be discussed include clarifying how the SMCR applies to <strong>different tiers of firms</strong>; the new <strong>categories of senior management functions</strong>; the new requirements relating to <strong>statement of responsibilities</strong>, the <strong>responsibilities map</strong>, the <strong>certification regime</strong>, the <strong>conduct rules</strong> and the <strong>prescribed responsibilities</strong>; the new <strong>training requirements</strong>; and the <strong>transitional provisions</strong>.<br />
<br />
<strong>People issues</strong><br />
<br />
We will discuss employment-related issues in the context of the SMCR and <strong>aligning human resource processes</strong> with the SMCR. This includes <strong>reviewing and updating employment contracts</strong> and <strong>employee handbooks</strong> and incorporating <strong>fitness and propriety assessments</strong> into <strong>annual employee reviews</strong>.<br />
<br />
<strong>Who should attend?</strong><br />
<br />
Compliance officers, in-house lawyers and human resource professionals at FCA regulated firms. This event will also be of interest to approved persons (including non-executive directors), secondees and contractors at FCA regulated firms.<br />
<br />
<strong>What will delegates take away?</strong><br />
<br />
An overview of the practical steps your organisation has to take and by when to establish and maintain compliance with these demanding new regimes.</p>

<h2>Agenda</h2>

<table class=""format"">
	<thead>
		<tr>
			<th scope=""col"">Time</th>
			<th scope=""col"">Activity</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>08:30</td>
			<td>Registration &amp; refreshments</td>
		</tr>
		<tr>
			<td>09:00</td>
			<td>Welcome &amp; introduction</td>
		</tr>
		<tr>
			<td>09:05</td>
			<td>Overview of SMCR</td>
		</tr>
		<tr>
			<td>09:20</td>
			<td>People issues</td>
		</tr>
		<tr>
			<td>09:35</td>
			<td>SMCR in practice: case study</td>
		</tr>
		<tr>
			<td>09:50</td>
			<td>Key actions for all firms</td>
		</tr>
		<tr>
			<td>10:00</td>
			<td>Q&amp;As</td>
		</tr>
		<tr>
			<td>10:15</td>
			<td>Finish</td>
		</tr>
	</tbody>
</table>
","<p>This event is free of charge.</p>

<p>This event will run for one hour. Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession.</p>

<p>Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,12-09-2018 12:30,https://reaction.gowlingwlg.com/reaction/RSGenPage.asp?RSID=530Ul9FdXYwsRt2gaTPh-NDOmzCNzeU2GJyOWzTFMQc,NULL,Register for this event,9FBE191E-3BCF-45DE-A2BA-338BB194FC9D,06cecb4c-c959-4674-9047-d5d8ee8c673c,6ecd1574-34c3-42ca-a28b-70a10b61221e;aa5dcce5-fbe3-48b0-8a5c-b653c134f240;d8837737-40d2-4472-8a9e-ba4101ec2105,NULL,af5005a2-4ec9-49ba-b7bd-262bb191b111;79205c59-28cb-4630-bd62-bf070ba732b0,NULL,Seminar,"Ian Mason, Jonathan Chamberlain",London,71,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,95EC9477-4594-4332-A463-E612BD16CA0C,Speaker(s),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
80,/Events/2018/ThinkHouse-Procurement-Workshop-Birmingham,en-GB,A89E4365-A92D-4267-87B5-BAEC7031C7F8,ThinkHouse Procurement Workshop - Birmingham,ThinkHouse Procurement Workshop - Birmingham,"The ThinkHouse procurement workshop will cover recent case law, explore issues and challenges that have arisen in the sector and provide an interactive forum to discuss handling challenging practical issues.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,21-11-2018 09:00,21-11-2018 13:45,09:00,13:45,GMT,1,3,"<p>We will start the morning looking at recent case law on evaluation of tenders, including <em>EnergySolutions EU Ltd v Nuclear Decommissioning Authority</em> and <em>Lancashire Care NHS Foundation Trust v Lancashire CC</em>. We will cover some of the key themes and issues which have arisen in these cases including use of threshold criteria/minimum scores; evaluation documentation; transparency of award criteria; and managing the moderation process.</p>

<p>Next we will explore the impact of some of the issues and changes that have arisen in the procurement world in the last 12-18 months, including considering the &#39;Carillion effect&#39; and recent Procurement Policy Notes, and we will consider &#39;what next?&#39; for procurement in the UK following Brexit.</p>

<p>We will finish with an interactive workshop in which we will invite attendees to consider and discuss how to address practical issues which arise during the lifecycle of a procurement exercise. Using a fictional procurement scenario, we will draw on experience from within the room to identify pragmatic solutions to what can be very difficult situations.</p>

<h2>Agenda</h2>

<table>
	<thead>
		<tr>
			<th scope=""col"">Time</th>
			<th scope=""col"">Activity</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>09:00</td>
			<td>Registration</td>
		</tr>
		<tr>
			<td>09:25</td>
			<td>Welcome &amp; introduction</td>
		</tr>
		<tr>
			<td>09:30</td>
			<td>Evaluation and moderation &ndash; lessons learned</td>
		</tr>
		<tr>
			<td>10:15</td>
			<td>Recent developments &ndash; and what next?</td>
		</tr>
		<tr>
			<td>11:00</td>
			<td>Mid-morning break</td>
		</tr>
		<tr>
			<td>11:30</td>
			<td>Workshop on procurement scenarios</td>
		</tr>
		<tr>
			<td>12:45</td>
			<td>Lunch</td>
		</tr>
	</tbody>
</table>
","<p>This event is free of charge.</p>

<p>This event will run for three hours. Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession.</p>

<p>Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,20-11-2018 23:59,https://reaction.gowlingwlg.com/reaction/RSGenPage.asp?RSID=mIssP3f5d71Cwth0G-wxMlsz0PKhknm2SVrva13ZqQg,NULL,Register for this event,58076178-DA60-4AB6-A07C-EF250971EBF7,5ad41b49-d460-489a-95b9-84c854eda6f1;df411e0b-2c62-4a68-8456-2c7c1dd0b4da;a929915c-1d1f-4e9c-8c8b-f34a30e2ab4e,NULL,a143cbfd-d333-42a0-89a6-7287894464f1,4cff9d8a-aa65-4eee-91f1-bfb81156c383;d3439935-7893-4a93-b3aa-d3169bfd758f;fdb31259-dc1d-4722-ad16-6401036a1ddb,NULL,Seminar,"Alison Richards, Sarah Sasse, Patrick Arben",Birmingham,70,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
81,/Events/2018/ThinkHouse-Procurement-Workshop-London,en-GB,47B594AA-BE9C-4AFB-9F4D-94F2C882EB5D,ThinkHouse Procurement Workshop - London,ThinkHouse Procurement Workshop - London,"The ThinkHouse procurement workshop will cover recent case law, explore issues and challenges that have arisen in the sector and provide an interactive forum to discuss handling challenging practical issues",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,28-11-2018 09:00,28-11-2018 13:45,09:00,13:45,GMT,1,3,"<p>We will start the morning looking at recent case law on evaluation of tenders, including <em>EnergySolutions EU Ltd v Nuclear Decommissioning Authority</em> and <em>Lancashire Care NHS Foundation Trust v Lancashire CC</em>. We will cover some of the key themes and issues which have arisen in these cases including use of threshold criteria/minimum scores; evaluation documentation; transparency of award criteria; and managing the moderation process.</p>

<p>Next we will explore the impact of some of the issues and changes that have arisen in the procurement world in the last 12-18 months, including considering the &#39;Carillion effect&#39; and recent Procurement Policy Notes, and we will consider &#39;what next?&#39; for procurement in the UK following Brexit.</p>

<p>We will finish with an interactive workshop in which we will invite attendees to consider and discuss how to address practical issues which arise during the lifecycle of a procurement exercise. Using a fictional procurement scenario, we will draw on experience from within the room to identify pragmatic solutions to what can be very difficult situations.</p>

<h2>Agenda</h2>

<table>
	<thead>
		<tr>
			<th scope=""col"">Time</th>
			<th scope=""col"">Activity</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>09:00</td>
			<td>Registration</td>
		</tr>
		<tr>
			<td>09:25</td>
			<td>Welcome &amp; introduction</td>
		</tr>
		<tr>
			<td>09:30</td>
			<td>Evaluation and moderation &ndash; lessons learned</td>
		</tr>
		<tr>
			<td>10:15</td>
			<td>Recent developments &ndash; and what next?</td>
		</tr>
		<tr>
			<td>11:00</td>
			<td>Mid-morning break</td>
		</tr>
		<tr>
			<td>11:30</td>
			<td>Workshop on procurement scenarios</td>
		</tr>
		<tr>
			<td>12:45</td>
			<td>Lunch</td>
		</tr>
	</tbody>
</table>
","<p>This event is free of charge.</p>
<p>  This event will run for three hours. Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession.</p>
<p>  Please do get in touch if you have any further queries about this event and CPD.</p>
<p> Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>",NULL,27-11-2018 23:59,https://reaction.gowlingwlg.com/reaction/RSGenPage.asp?RSID=mIssP3f5d71Cwth0G-wxMlsz0PKhknm2SVrva13ZqQg,NULL,Register for this event,9FBE191E-3BCF-45DE-A2BA-338BB194FC9D,5ad41b49-d460-489a-95b9-84c854eda6f1;df411e0b-2c62-4a68-8456-2c7c1dd0b4da;a929915c-1d1f-4e9c-8c8b-f34a30e2ab4e,NULL,a143cbfd-d333-42a0-89a6-7287894464f1,4cff9d8a-aa65-4eee-91f1-bfb81156c383;d3439935-7893-4a93-b3aa-d3169bfd758f;fdb31259-dc1d-4722-ad16-6401036a1ddb,NULL,Seminar,"Alison Richards, Sarah Sasse, Patrick Arben",London,71,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
82,/Events/2018/Propel-your-startup-to-success,en-GB,DBD573FB-1463-45D2-8BF2-F84DE3E0C348,Propel your startup to success,Launch Seminar Series: Propel your startup to success,"You have a great idea. You have the courage to bring it to market. Now, what about the legal components?",~/getmedia/2b079b80-f17c-446f-874f-17a7a4633939/181005-TIG-launch-seminar-series-social.jpg.xml?width=1200&height=630&ext=.jpg,NULL,GWLG.Seminar,01-11-2018 11:00,01-11-2018 13:00,11:00,13:00,Local time,0,NULL,"<p><strong>You have a great idea. You have the courage to bring it to market. Now, what about the legal components?</strong></p>

<p>Join Gowling WLG for a complimentary seminar and discover how to launch your startup the right way.</p>

<p>Our knowledgeable legal professionals and guest speaker will share the tips, tricks, best practices and legal basics you need to make smart business decisions.</p>

<p>Learn more about our Startup Package, which provides the foundational documents and advice to help your business grow in a strategic manner.</p>

<p>Whether you're in the early stages or looking for investors, this session will provide you with the tools to help take your startup to the next level!</p>

<p>Lunch and refreshments will be provided.</p>
",NULL,NULL,31-10-2018 15:13,https://sites-gowlingwlg.vuturevx.com/95/3901/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,8BF72D3F-E216-4FDD-B0BE-52D41A644293,NULL,NULL,NULL,ab7d14f6-a5a2-458c-9b55-85c54ce4436f;53a32860-b6e9-431a-a79b-957e5ad8806b;5025797d-216e-46d0-868d-0b8b0afac339,NULL,Seminar,NULL,Calgary,64,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,Speakers,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
83,/Events/2018/REG-Next-Generation-Event-London,en-GB,947B4300-6AC3-40C7-B7A8-FA6C1198E882,REG Next Generation Event - London,Real Estate Sector Next Generation network evening - London,This event is an opportunity to meet peers at a similar stage in their career and networking.,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.SpecialEvents,45:00.0,30:00.0,17:45,21:30,GMT,0,NULL,"<p align=""left"">If you are in the early stages of your career within real estate, join us at our Next Generation network evening.</p>

<p align=""left"">The event will begin with an interactive session by guest speaker Rachel Halsall on Natural Networking and how it can help you in your career development. You also will be able to test your newly learnt skills after the session in small groups.</p>

<p align=""left"">We hope that the evening will provide the opportunity to meet with peers at a similar stage in your career and develop lasting professional connections.</p>

<h2>Agenda</h2>

<table class=""format"">
	<thead>
		<tr>
			<th scope=""col"">Time</th>
			<th scope=""col"">Activity</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>17:45</td>
			<td>Registration &amp; Welcome drinks</td>
		</tr>
		<tr>
			<td>18:15</td>
			<td>Natural Networking</td>
		</tr>
		<tr>
			<td>19:15</td>
			<td>Close</td>
		</tr>
		<tr>
			<td>19:20</td>
			<td>Drinks &amp; Networking</td>
		</tr>
	</tbody>
</table>
","<p>This event is free of charge.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,59:59.0,https://reaction.gowlingwlg.com/reaction/RSGenPage.asp?RSID=rgkDrOJScqeR3GnHEnVoZZUc35B9C1NPcknh3j6_jms,NULL,Register for this event,9FBE191E-3BCF-45DE-A2BA-338BB194FC9D,59be9dcd-e5f0-43e4-9d50-442a658eda18,c27f9d3f-c358-48fb-b057-9a291fea02aa,NULL,NULL,NULL,Special events,NULL,NULL,NULL,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,1F5096ED-3545-49CD-91F1-B69F87479BC4,Speaker(s),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
84,/Events/2018/REG-Next-Generation-Event-Birmingham,en-GB,BE5BCB0F-2BEB-456E-AC78-197F5006CBAC,REG Next Generation Event - Birmingham,Real Estate Sector Next Generation network evening - Birmingham,This event is an opportunity to meet peers at a similar stage in their career and networking.,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.SpecialEvents,45:00.0,30:00.0,17:45,21:30,GMT,0,NULL,"<p>If you are in the early stages of your career within real estate, join us at our Next Generation network evening.</p>

<p>The event will begin with an interactive session by guest speaker Rachel Halsall on Natural Networking and how it can help you in your career development. You also will be able to test your newly learnt skills after the session in small groups.</p>

<p>We hope that the evening will provide the opportunity to meet with peers at a similar stage in your career and develop lasting professional connections.</p>

<h2>Agenda</h2>

<table>
	<thead>
		<tr>
			<th scope=""col"">Time</th>
			<th scope=""col"">Activity</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>17:45</td>
			<td>Registration &amp; Welcome drinks</td>
		</tr>
		<tr>
			<td>18:15</td>
			<td>Natural Networking</td>
		</tr>
		<tr>
			<td>19:15</td>
			<td>Close</td>
		</tr>
		<tr>
			<td>19:20</td>
			<td>Drinks &amp; Networking</td>
		</tr>
	</tbody>
</table>
","<p>This event is free of charge.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,59:59.0,https://reaction.gowlingwlg.com/reaction/RSGenPage.asp?RSID=rgkDrOJScqeR3GnHEnVoZZUc35B9C1NPcknh3j6_jms,NULL,Register for this event,58076178-DA60-4AB6-A07C-EF250971EBF7,59be9dcd-e5f0-43e4-9d50-442a658eda18,c27f9d3f-c358-48fb-b057-9a291fea02aa,NULL,NULL,NULL,Special events,NULL,NULL,NULL,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,1F5096ED-3545-49CD-91F1-B69F87479BC4,Speaker(s),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
85,/Events/2018/Celebration-of-Arab-Women-Leaders,en-GB,F2B004FE-7105-43CF-89B5-1E3A68F1EE4E,Celebration of Arab Women Leaders,Risk to Reward Seminar Series: Celebration of Arab Women Leaders,"Gowling WLG, together with the National Council on Canada-Arab Relations, invite you to celebrate the achievement of Arab women all over the world who have excelled in their field of choice.",~/getmedia/54b99b81-a6ba-4775-b9f8-4af2bae62c95/Celebration-of-Arab-Women-Leaders.png.xml?width=528&height=275&ext=.png,NULL,GWLG.Seminar,30-10-2018 22:00,31-10-2018 00:00,6:00 PM,8:00 PM,EST,0,NULL,"<p>Gowling WLG, together with the National Council on Canada-Arab Relations,&nbsp;invite you to celebrate the achievement of Arab women all over the world who have excelled in their field of choice.</p>

<p>It is with great honour that we present to you our guest speakers, <strong>Her Excellency Rima A. Alaadeen, Ambassador of the Hashemite&nbsp;Kingdom of Jordan to Canada</strong> and <strong>Her Excellency Souriya Otmani, Ambassador of the Kingdom of Morocco to Canada</strong>. Our guests will speak to their experience and efforts towards the promotion and&nbsp;advancement of women of Arab origin.</p>

<p>Please join us for the celebration and light refreshments.</p>

<h2>AGENDA</h2>

<ul>
	<li>6 p.m. Registration</li>
	<li>6:30 p.m. Introduction</li>
	<li>6:45 p.m. Her Excellency Rima A. Alaadeen, Ambassador of the Hashemite Kingdom of Jordan to Canada and Her Excellency Souriya Otmani, Ambassador of the Kingdom of Morocco to Canada</li>
	<li>7:30 p.m. Q&amp;A</li>
	<li>7:45 p.m. Networking</li>
</ul>

<h2>EVENT PARTNER</h2>

<p><img alt="""" src=""~/getmedia/1b0170a5-9b11-4b02-8be7-17d9faad03fc/nccar.jpg.xml"" /></p>
",NULL,NULL,30-10-2018 22:00,https://sites-gowlingwlg.vuturevx.com/101/3980/landing-pages/event-registration-(blank-form).asp?sid=blankform,NULL,Register for this event,CB61C4C1-D0CF-4AA1-BA0B-5DAB5DC99393,NULL,NULL,NULL,NULL,NULL,Seminar,NULL,Ottawa,67,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/101/3980/landing-pages/event-registration-(blank-form).asp?sid=blankform,Register Now,GWLG.Canada,0,NULL,Speaker(s),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
86,/Events/2018/Thinkhouse-Autumn-Dubai,en-GB,8355C251-D63A-4A33-94E5-E95EC7D92FD0,Thinkhouse Autumn - Dubai ,ThinkHouse - Training and Networking for In-House Lawyers,,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,06-11-2018 08:00,06-11-2018 10:00,08:00,10:00,Local time,1,2,"<p>Gowling WLG is pleased to host a special edition ThinkHouse, Brexit Untangled: A practical guide to the impact on cross border trade.&nbsp;</p>

<p>We will be hosted by Ursula Johnston, Director, Customs &amp; Trade from our London office who has more than 10 years international experience in navigating the complex and ever changing trade environment.&nbsp;</p>

<p>As In-House Council have you considered:</p>

<ul>
	<li>How you can assess the measures required to ensure frictionless trade as of 1 April 2019.</li>
	<li>The significant amount of planning required around the customs and trade requirements to file import and export declarations for the first time.</li>
	<li>What strategies you can put into place to prepare you for the possible outcomes.</li>
</ul>

<p><br />
Ursula will be discussing the potential challenges for trade post Brexit and the mitigating strategies that businesses with cross border trade are seeking to adopt. She will share her experience of helping many global corporations of navigating the uncertainty and provide insights on the broader challenges for trading globally. She will also be able to provide analysis on any proposed deal that arises from the EU Brexit Summit in October and what challenges it may pose from a practical perspective.&nbsp;</p>

<p>Ursula will be in Dubai from 4 November to 7 November and we will happily set up an individual meeting on request.&nbsp;</p>
","<p>This event is free of charge.</p>

<p>This event will run for 2 hours. Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession.</p>

<p>Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,05-11-2018 09:00,https://reaction.gowlingwlg.com/reaction/RSGenPage.asp?RSID=wEIfqq8q-oq4f0hoFFk5hDbRRM72AxgcMmv1i-ik3g8,NULL,Register for this event,2D388260-6B09-4610-9C1D-852369DE565C,NULL,NULL,a143cbfd-d333-42a0-89a6-7287894464f1,e33531f3-9132-4365-bdfc-fe6df95bab54,NULL,Seminar,NULL,Capital Club Dubai,37415,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UAEDubai,0,B58CF9C3-DC86-4783-834F-1954E7C865B5,Speaker,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
87,/Events/2018/La-publicite-et-le-cannabis,fr-CA,74DFA758-C61C-4904-9B4F-63C2B4197FE7,La publicité et le cannabis,La publicité et le cannabis,Joignez-vous à nous pour une conférence d’information sur la réglementation de la publicité en matière de cannabis le 24 octobre prochain.,~/getmedia/44e32c90-ca43-4071-a816-1163458788d1/Pub-et-Cannabis.jpg.xml?width=1200&height=630&ext=.jpg,NULL,GWLG.Seminar,24-10-2018 08:30,24-10-2018 11:00,8 h 30,10 h 30,EST,1,1 h 45,"<p>Gowling&nbsp;WLG et Les Normes de la publicité&nbsp;ont le plaisir de vous inviter à cette conférence destinée aux futurs annonceurs et à tous ceux intéressés par l&rsquo;industrie du cannabis. Les experts de la Direction générale de la légalisation et de la réglementation du cannabis de Santé Canada apporteront un éclairage certain sur les exigences concernant la promotion du cannabis.</p>

<p><strong>Heure :</strong></p>

<p>8 h 30 - Accueil et petit déjeuner continental</p>

<p>9 h 00 - Introduction : Jani Yates, présidente et chef de la direction des Normes de la publicité</p>

<p>9 h 15 à 10 h 00 - Présentation de Corinne Guénette et Marie-Claude Vachon de Santé Canada, Direction générale de la légalisation et de la réglementation du cannabis</p>

<p>10 h 00 à 10 h 30 - Panel de discussion et questions</p>

<p><strong>Modérateur :</strong>&nbsp;Sébastien Gardère, Gowling WLG</p>

<p><strong>Participants au panel de discussion :</strong></p>

<ul>
	<li>
	<p>Nicole Bellam, Normes de la publicité</p>
	</li>
	<li>
	<p>René Bissonette, Gowling WLG</p>
	</li>
	<li>
	<p>Lewis Retik, Gowling WLG</p>
	</li>
	<li>
	<p>Corinne Guénette, Santé Canada</p>
	</li>
	<li>
	<p>Marie-Claude Vachon, Santé Canada</p>
	</li>
</ul>

<p>&nbsp;</p>

<p><strong>Inscrivez-vous sans tarder! Les places sont limitées.&nbsp;</strong><br />
Certaines parties de cette conférence seront présentées en anglais.</p>
",NULL,NULL,24-10-2018 10:00,https://www.eventbrite.ca/e/inscription-la-publicite-sur-le-cannabis-51272759203,NULL,Inscrivez-vous,479ED1BE-FC0C-4A41-BA96-5800289D1E6F,NULL,255bcb12-7168-4281-9d52-a56233e8ae69,NULL,0c7af324-c07a-48df-8ee2-d2bdc711bcbc;9b9ae971-5e77-434c-ab69-7192c6cb65b6;b57f236a-ccfd-4a95-bc8a-efaeb1deea0d,NULL,Séminaire,NULL,Hôtel Place d’Armes - Salle Opéra,37422,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://www.eventbrite.ca/e/inscription-la-publicite-sur-le-cannabis-51272759203,Réservez votre place,GWLG.Canada,0,D4175C8F-4D3F-4641-A45F-20EC57DC60F9,Conférenciers,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
88,/Events/2018/Emerging-Markets-for-Infra-Investors-Africa,en-GB,9FDD0893-61C0-4283-9038-5B68DDDEFAA6,Emerging Markets for Infra Investors: Africa,Emerging Markets for Infra Investors: Africa Project Investment Opportunities and Structures,"International law firm Gowling WLG have partnered with the infrastructure finance (INFIN) networking club to host a breakfast briefing and panel session for leading infrastructure investors, project sponsors, government, and debt & equity infrastructure fund managers.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.SpecialEvents,00:00.0,00:00.0,08:00,10:00,GMT,0,NULL,"<p>International law firm Gowling WLG have partnered with the infrastructure finance (INFIN) networking club to host a breakfast briefing and panel session for leading infrastructure investors, project sponsors, government, and debt &amp; equity infrastructure fund managers.</p>

<p>Join Gowling WLG and INFIN for an exclusive insight into Emerging Markets for Infra Investors, focussing on Africa project investment opportunities and structures.</p>

<p>This exclusive invite-only event brings together experts in their respective fields to elaborate on emerging market opportunities in Africa, with a focus on renewables, P3/PPP, transportation, infrastructure M&amp;A, and utilities in the region.</p>

<p>Attendees will have the opportunity to network with key infrastructure finance personnel, and gain insight from, question and challenge an expert panel from market-leading international infra businesses and funds.</p>

<h3>Please note that this event is now over-subscribed and registrations will be added to a reserve list.</h3>

<h2>Agenda</h2>

<table>
	<thead>
		<tr>
			<th scope=""col"">Time</th>
			<th scope=""col"">Activity</th>
			<th scope=""col"">Speaker</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>08:00</td>
			<td>Registration &amp; Breakfast</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>08:30</td>
			<td>Welcome &amp; introduction</td>
			<td>Paul Haley &amp; Jonathan Brufal</td>
		</tr>
		<tr>
			<td>08:45</td>
			<td>Panel Session: Africa Project Investment Opportunities and Structures</td>
			<td>Jonathan Brufal, William Barry, Roland Janssens, Julia Prescot, Lasitha Perera &amp; Emillio Cattaneo</td>
		</tr>
		<tr>
			<td>09:25</td>
			<td>Close</td>
			<td>Jonathan Brufal</td>
		</tr>
		<tr>
			<td>09:30</td>
			<td>Refreshments &amp; Networking</td>
			<td>&nbsp;</td>
		</tr>
	</tbody>
</table>
","<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,59:59.0,https://reaction.gowlingwlg.com/reaction/RSGenPage.asp?RSID=ITxMmmn7LGGsDXMt8moxdGGTJMDXT9Ju-UxLUPFJeIc,NULL,Register for this event,9FBE191E-3BCF-45DE-A2BA-338BB194FC9D,df411e0b-2c62-4a68-8456-2c7c1dd0b4da,96fb7e9f-2d22-40a2-b6f6-5122615347a6,NULL,NULL,NULL,Seminar,NULL,NULL,NULL,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK;GWLG.Africa,0,1F5096ED-3545-49CD-91F1-B69F87479BC4,Speaker(s),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
89,/Events/2018/EVs-meet-the-electricity-market,en-GB,D7CE4FD0-4A7C-4866-B463-9B8CABA38F55,EVs meet the electricity market,EVs meet the electricity market: Clear road or bumps ahead?,International law firm Gowling WLG have partnered with leading energy market experts Cornwall Insight to jointly organise this half-day seminar to inform the developing debate on electric vehicle (EV) and electricity market synergies.,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,13-11-2018 08:30,13-11-2018 14:00,08:30,14:00,GMT,1,4,"<p>International law firm Gowling WLG have partnered with leading energy market experts Cornwall Insight to jointly organise this half-day seminar to inform the developing debate on electric vehicle (EV) and electricity market synergies.</p>

<p>The automotive sector has committed significant investment to develop <abbr title=""electric vehicle"">EV</abbr>s, with government low-carbon policies increasingly supporting the transition away from conventional fossil fuel powered vehicles. The GB electricity sector is also undergoing a once in a generation change as market rules and the physical system evolves to accommodate &#39;smarter&#39;&nbsp;technologies and outcomes.</p>

<p>Both of these transitions have the potential to deliver large carbon emission reductions, lower end user costs, and new opportunities for investment in novel business models as the sectors increasingly coalesce.</p>

<p>Join Gowling WLG and Cornwall Insight for an exclusive insight into GB electricity market developments and the future of <abbr title=""electric vehicle"">EV</abbr> infrastructure.</p>

<p>This event brings together experts in their respective fields to elaborate on real-world experience and examples where electricity retailers, distribution network operators and advisors are offering consumers <abbr title=""electric vehicle"">EV</abbr> related electricity tariffs and products or trialling innovative projects to assess how best to accommodate the expected rise in electrification of transport.</p>

<p>Attendees will have the opportunity to network with key personnel from the <abbr title=""electric vehicle"">EV</abbr> and electricity sectors, and question and challenge the experts. Presenters will set out the commercial opportunities and challenges across the <abbr title=""electric vehicle"">EV</abbr> and electricity space and how policy and regulatory frameworks are evolving to enable the uptake of electric vehicles at scale in the 2020s and beyond.</p>

<p>The event is a fantastic opportunity to build contacts and knowledge as both sectors have much to learn from each other, and the pace of cross-industry work quickens.</p>

<h2>Agenda</h2>

<table class=""format"">
	<thead>
		<tr>
			<th scope=""col"">Time</th>
			<th scope=""col"">Activity</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>08:30</td>
			<td>Breakfast and registration</td>
		</tr>
		<tr>
			<td>09:00</td>
			<td>Welcome &amp; introduction</td>
		</tr>
		<tr>
			<td>09:10</td>
			<td>Business models for EV charging infrastructure</td>
		</tr>
		<tr>
			<td>09:35</td>
			<td>Innovation, EVs and local networks</td>
		</tr>
		<tr>
			<td>10:00</td>
			<td>Break</td>
		</tr>
		<tr>
			<td>10:25</td>
			<td>The view from a new entrant electricity supplier</td>
		</tr>
		<tr>
			<td>11:50</td>
			<td>Creating an end to end proposition</td>
		</tr>
		<tr>
			<td>12:15</td>
			<td>The changing policy and regulatory framework for EVs</td>
		</tr>
		<tr>
			<td>12:40</td>
			<td>Panel Session - Chair: Professor Bailey</td>
		</tr>
		<tr>
			<td>13:00</td>
			<td>Lunch</td>
		</tr>
	</tbody>
</table>
","<p>This event is free of charge.</p>

<p>This event will run for 4 hours. Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession.</p>

<p>Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,12-11-2018 11:59,https://reaction.gowlingwlg.com/reaction/RSGenPage.asp?RSID=nsQmTwBooVp6EyrgFTiU9N_tkDmWlr5KwPcYLThGrS4,NULL,Register for this event,9FBE191E-3BCF-45DE-A2BA-338BB194FC9D,de517572-4373-4b36-844b-18be93f6f9bc;f1e960f5-8231-4c56-b7bf-9898ebb538c5,NULL,1d757c00-ae1f-493b-a7e9-7d8801fa7457,NULL,NULL,Seminar,NULL,NULL,NULL,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,95EC9477-4594-4332-A463-E612BD16CA0C,Speaker(s),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
90,/Events/2018/Creating-an-inclusive-workplace,en-GB,C22825E2-B829-47BA-9006-B62624940BDF,Creating an inclusive workplace,Risk to Reward Seminar Series: Creating an inclusive workplace,"How does one create an inclusive workplace? Join us for a breakfast seminar on Nov. 15, as the diversity and inclusion (D&I) leaders of three different organizations share their respective D&I experience in the workplace.",~/getmedia/2fec260e-4119-45c1-b6f6-d377725526fe/181022-risk-to-reward-inclusive-workplace.jpg.xml?width=1200&height=627&ext=.jpg,NULL,GWLG.Seminar,15-11-2018 07:30,15-11-2018 09:30,07:30,09:30,EST,1,1.5 hours of EDI Professionalism content,"<p>How does one create an inclusive workplace? Join us for a breakfast seminar on Nov. 15, as the diversity and inclusion (D&amp;I) leaders of three different organizations share their respective D&amp;I experience in the workplace.</p>

<p><strong>Lina Nadar </strong>from Gowling WLG, <strong>Jessica Brcko</strong> from the Ontario Lottery and Gaming Corporation, and <strong>Jeremy Dias</strong> from the Centre for Gender and Sexual Diversity, will participate in a panel discussion chaired by <strong>Roberto Aburto</strong>, a Gowling WLG partner and co-chair of firm&#39;s National Diversity and Inclusion Council.</p>

<p>Discussion topics will include:</p>

<ul>
	<li>How to create an inclusive workplace
	<ul>
		<li>Tips for making the LGBTQ2+ feel more included</li>
		<li>Best practices on creating an inclusive workplace</li>
	</ul>
	</li>
	<li>How to consider race in the context of an inclusive workplace</li>
</ul>

<p><a href=""https://www.lsuc.on.ca/EDI/"" target=""_blank""><img alt=""Accredited EDI Logo"" src=""~/getmedia/abc03f09-5df7-45f5-a4a0-02a77057932f/EDI-logo.png.xml"" style=""border-width: 0px; border-style: solid; float: right;"" title=""AccredCPD-BW.jpg"" /></a>This program contains <strong>1 hour and 30 minutes</strong> of <strong>Equality &amp; Inclusion Professionalism (EDI) credit</strong> toward the mandatory<br />
CPD requirements of the Law Society of Ontario.</p>

<p>This organization has been approved as an Accredited Provider of Professionalism Content by the Law Society of Ontario.</p>
",NULL,NULL,14-11-2018 15:00,https://sites-gowlingwlg.vuturevx.com/101/3907/landing-pages/event-registration-(blank-form).asp?sid=blankform,NULL,Register for this event,CB61C4C1-D0CF-4AA1-BA0B-5DAB5DC99393,NULL,NULL,NULL,55398393-306d-4c8d-8b10-048503c07707;4bc2960f-770d-4c1d-af78-cee221b0b00b,NULL,Seminar,NULL,Ottawa,67,GWLG.Events,NULL,~/getmedia/297448f2-93b7-4522-aeb1-83dd832628f7/2018-Risk2Reward-web.jpg.xml?width=1400&height=700&ext=.jpg,~/getmedia/297448f2-93b7-4522-aeb1-83dd832628f7/2018-Risk2Reward-web.jpg.xml?width=500&height=250&ext=.jpg,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,Internal speakers,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
91,/Events/2018/90-minutes-3-crises,en-GB,C31EEFF4-5422-45FD-B5A6-777FD4AF9F38,90 minutes 3 crises,"Risk to Reward Seminar Series: <br>90 minutes, 3 crises",Our panel of subject matter experts will examine three crisis scenarios and offer a blueprint on the steps that must be taken when trouble arises.,~/getmedia/b62111e5-ffba-4c2f-80af-772cfb79de03/181022-risk-to-reward-90-3.jpg.xml?width=1200&height=627&ext=.jpg,NULL,GWLG.Seminar,22-11-2018 07:30,22-11-2018 09:30,07:30,09:30,EST,1,1.5 hours,"<p>Join us for an informative and practical session on what to do when crisis befalls your organization. Our panel of subject matter experts will examine three crisis scenarios and offer a blueprint on the steps that must be taken when trouble arises.</p>

<p>The session will focus on data breaches, kidnap/ransom and sexual harassment. Using these three situations, we will examine crisis management techniques as well as the substantive legal issues presented by these respective scenarios.</p>

<p><em>This program contains up to 1.5 hours of Substantive credits toward the mandatory CPD requirements of the Law Society of Ontario, and up to 1.5 hours of Continuing Education credits toward the requirements of the Barreau du Québec.</em></p>
",NULL,NULL,21-11-2018 15:41,https://sites-gowlingwlg.vuturevx.com/101/3909/landing-pages/risk-to-reward-registration-(blank-form).asp?sid=blankform,NULL,Register for this event,CB61C4C1-D0CF-4AA1-BA0B-5DAB5DC99393,NULL,NULL,NULL,45d428c7-9d45-468f-8091-9523238f1cf4;afc382e9-2b75-4a26-9e20-0a8c68694164;5031f3f0-f36d-44c6-84dc-c06341cc314a,NULL,Seminar,NULL,Ottawa,67,GWLG.Events,NULL,~/getmedia/297448f2-93b7-4522-aeb1-83dd832628f7/2018-Risk2Reward-web.jpg.xml?width=1400&height=700&ext=.jpg,~/getmedia/297448f2-93b7-4522-aeb1-83dd832628f7/2018-Risk2Reward-web.jpg.xml?width=550&height=275&ext=.jpg,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
92,/Events/2018/Brexit-and-the-impact-on-cross-border-trade,en-GB,DEEC18F4-16DA-430D-863B-B04A9989B871,Brexit and the impact on cross border trade,Brexit untangled: a practical guide to the impact on cross border trade,"Ursula Johnston, Director, Customs & Trade will be in conversation with Anthony Harris, a former British Ambassador to the UAE. The hosts will present an in depth discussion on the potential challenges for trade post Brexit and the mitigating strategies that businesses are seeking to adopt.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,04-11-2018 18:30,04-11-2018 20:30,18:30,20:30,Local time,1,2,"<p>Do you understand the impact of Brexit on your business?</p>

<p>Does your business move goods between the UK and Mainland Europe?</p>

<p>Is your business reliant on supply chain partners that have cross border trade between the two territories?</p>

<p>Gowling WLG is pleased to host Brexit untangled: a practical guide to the impact on cross border trade.</p>

<p><strong>Ursula Johnston, Director, Customs &amp; Trade </strong>will be in conversation with <strong>Anthony Harris, a former British Ambassador to the UAE</strong>. The hosts will present an in depth discussion on the potential challenges for trade post Brexit and the mitigating strategies that businesses are seeking to adopt. Throughout the discussion Ursula will share her experience of helping global corporations to navigate the uncertainty and provide insights on the broader challenges for trading globally.</p>

<p>Ursula will be in Dubai from 4 November to 7 November and we will happily set up an individual meeting on request.</p>


<h2>Agenda</h2>

<table>
	<thead>
		<tr>
			<th scope=""col"">Time</th>
			<th scope=""col"">Activity</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>18:30</td>
			<td>Arrival and networking</td>
		</tr>
		<tr>
			<td>19:00</td>
			<td>Brexit untangled: a practical guide to the impact on cross border trade</td>
		</tr>
		<tr>
			<td>20:00</td>
			<td>Questions for Ursula Johnston and networking</td>
		</tr>
		<tr>
			<td>20:30</td>
			<td>Close</td>
		</tr>
	</tbody>
</table>
","<p>This event is free of charge.</p>

<p>This event will run for two hours. Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession.</p>

<p>Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,04-11-2018 00:00,https://reaction.gowlingwlg.com/reaction/RSGenPage.asp?RSID=I7_jJpbfKTT-gA9Q7O9aNtUAtp4XumVl1Kz3PpdOsGQMkkNmOfkxdko6biFgmeLm,NULL,Register for this event,2D388260-6B09-4610-9C1D-852369DE565C,NULL,9847316e-d705-4e8e-91fb-88df430a5dfc;bac2f2f8-09c0-4d06-b0c8-98d9567adfc7,603d9889-cb72-431a-8d55-60d68706837b,e33531f3-9132-4365-bdfc-fe6df95bab54,8355c251-d63a-4a33-94e5-e95ec7d92fd0,Seminar,NULL,Capital Club Dubai,37415,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UAEDubai,0,B58CF9C3-DC86-4783-834F-1954E7C865B5,Speaker(s),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
93,/Events/2018/The-Day-After-Navigating-Brazil-s-Business,en-GB,183D08FB-688F-4835-802D-E00932CA75F8,The Day After: Navigating Brazil's Business,The Day After: Navigating Brazil's Business Landscape,,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,06-11-2018 08:30,06-11-2018 10:30,8:30 a.m.,10:30 a.m.,EST,0,NULL,"<p>The Brazil general elections have been the most polarized in recent history, and the need to combat corruption has featured prominently in the political campaigns. Serious issues concerning deep-rooted corruption and how to manage corruption risks through effective compliance continue to lead investors around the world to ask tough questions.</p>

<p>For an in-depth analysis on how these issues could impact your business, please join Gowling WLG and Control Risks for a timely and insightful breakfast seminar. Our panel of experts will provide a forecast of Brazil&#39;s economic scenario in the forthcoming year within the context of leadership change, political turbulence and changes in U.S. monetary policy.&nbsp;</p>

<h2>SPEAKERS</h2>

<p><img alt="""" src=""~/getmedia/1e2cea60-9d75-43b6-b489-7ae86db4e1d0/geert-aalbers-640x640.jpg.xml?width=100&amp;height=100"" style=""width: 100px; height: 100px;"" /></p>

<h3>Geert Albers</h3>

<p>Senior Partner, Control Risks</p>

<p><img alt="""" src=""~/getmedia/f807489a-8a0b-4081-8efb-906d48519ff5/medium-pablo-breard-perfil.jpg.xml?width=100&amp;height=100"" style=""width: 100px; height: 100px;"" /></p>

<h3>Pablo Breard</h3>

<p>Founder, Latin Context; Former Head of International Economics, Scotiabank</p>
",NULL,NULL,NULL,https://sites-gowlingwlg.vuturevx.com/103/4077/landing-pages/brazil-general-election-2018-11-06-event-registration-(blank-form).asp?sid=blankform,NULL,Register for this event,B2DC4461-DC66-4F96-9AE6-32BC2B14259D,NULL,NULL,NULL,d78233a4-45b3-42d2-97bc-0db06ee57cd2,NULL,Seminar,NULL,Toronto,63,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/103/4077/landing-pages/brazil-general-election-2018-11-06-event-registration-(blank-form).asp?sid=blankform,Register for this event ,GWLG.Canada,0,NULL,Moderator,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
94,/Events/2018/China-International-Import-Expo,en-GB,C8D5AEC1-CED0-4B7C-9854-11CD2125F4C4,China International Import Expo,China International Import Expo,"In May 2017, Chinese President Xi Jinping announced at the Belt and Road Forum for International Cooperation that China will hold China International Import Expo (CIIE) starting from 2018.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Conference,31:56.0,32:01.0,NULL,NULL,Local time,0,NULL,"<p>From November 5 &ndash; 10, our counsel <a href=""~/people/peter-zhang"">Peter Zhang</a> and partner&nbsp;<a href=""~/people/stephen-pike"">Stephen Pike</a> will be in Shanghai for the <a href=""http://english.mofcom.gov.cn/article/zt_englishimport/"" target=""_blank"">China International Import Expo</a>. Government officials, businesses, exhibitors and professional purchasers from all over the world are invited to explore the Chinese market. Enterprises from over 100 countries and regions are expected to participate, supporting activities such as supply-demand matchmaking meetings, seminars and product releases.</p>

<h2>About the expo</h2>

<p>In May 2017, Chinese President Xi Jinping announced at the Belt and Road Forum for International Cooperation that China will hold China International Import Expo (CIIE) starting from 2018.</p>

<p>It is a significant move for the Chinese Government to hold CIIE with a view of firmly supporting trade liberalization and economic globalization and actively opening the market to the world. It facilitates countries and regions all over the world to strengthen economic and trade cooperation, and to promote global trade and world economic growth in order to advance the development of an open world economy.</p>

<p>The China International Import Expo (the &quot;Expo&quot;) is not only an open international cooperation platform built by China for presenting national development achievements to all other countries in the world and conducting foreign trade, but also an international public product provided by China for all the countries in the world discussing about major issues of foreign trade and world economy and improving global economic governance. The Chinese Government sincerely welcomes politicians, business people, exhibitors and professional purchasers from all countries (regions) to join the Expo, discuss about cooperation and expand trade. We are willing to, in conjunction with all other countries (regions) in the world and international organizations, endeavor to build the Expo into a world-class one so as to promote the development of world economy and global trade and achieve common prosperity.</p>
",NULL,NULL,32:49.0,http://english.mofcom.gov.cn/article/zt_englishimport/index.shtml,NULL,More information,D3601F4D-388C-44D6-954A-72A07D46EDB3,NULL,NULL,NULL,5863153f-60a6-45f7-8a17-4d476c619aa8;03d6dce1-2df8-4f24-8e6b-d7bcda0b6509,NULL,Conference,NULL,Shanghai Convention Centre,37550,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada;GWLG.China,0,NULL,GOWLING WLG PROFESSIONALS ATTENDING,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
95,/Events/2018/CCPPP-National-Conference,en-GB,F961971D-7E57-48A9-9FD3-4E82BFE841E4,CCPPP National Conference,The 26th Annual CCPPP National Conference on Public-Private Partnerships,"If your company is considering expanding into international markets that may offer P3 opportunities now or in the future, meet with the people on the ground who can assist you in taking your P3 expertise global.",~/getmedia/4d03c4f4-74d6-4515-8ca3-899e03f7909b/181029-toronto-ccppp-conference.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Conference,48:08.0,48:12.0,NULL,NULL,EST,0,NULL,"<p>Following the <a href=""http://www.pppcouncil.ca/web/Events/Annual_Conference/web/Events/Annual_Conference.aspx"" target=""_blank"">26<sup>th</sup> Annual CCPPP National Conference on Public-Private Partnerships</a> (&ldquo;P3 2018&rdquo;) taking place November 5 &ndash; 6, 2018, Gowling WLG is pleased to be hosting the Chinese delegation from Peking University, Public Private Partnerships Research Center, China Public-Private Partnerships Fund Management Co., Ltd., and the China Ministry of Finance, Public Private Partnerships Center to our Toronto offices on November 7.</p>

<p>Our guests will be welcomed by our partner&nbsp;<a href=""~/en/people/thomas-timmins/"">Thomas Timmins</a>, leader of Gowling WLG&#39;s China Initiative and chair of the firm&rsquo;s Global Renewable Energy Practice Group. This will be a great opportunity to recap the takeaways from the P3 2018 conference, while networking with a number of industry experts.</p>

<h2>About the conference</h2>

<p><strong>The Annual CCPPP National Conference is now recognized as the premier event on public-private partnerships (P3) in the world. It began in 1993 and has since grown to include 1,200 senior public and private sector participants, making it the largest annual gathering of P3 decision-makers.</strong></p>

<p>Keynote speakers at the CCPPP Annual Conference are at the forefront of thought leadership. Luis Alberto Moreno, President, Inter-American Development Bank joined us last year to offer his insights on the emerging P3 opportunities in Latin America and the Caribbean. Tom Ridge, former Governor of Pennsylvania and the first US Secretary of Homeland Security, shed a light on the very real threat of cyber-attacks. Our sessions are always interactive discussions, targeting everything from the prospects of the pipeline to the reality of risks. It is advanced content intended to help delegates think &#39;big and beyond&#39; about the challenges and opportunities facing the P3 industry.</p>
",NULL,NULL,51:05.0,http://www.p3-2018.ca/About-the-Conference,NULL,More information,913A34D3-0C55-43E7-A4AD-64E9DB5773AE,NULL,NULL,NULL,4c3c2534-e644-427f-9b61-e7cd1aec53cf,NULL,Conference,NULL,Sheraton Centre Toronto,37552,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada;GWLG.China,0,NULL,GOWLING WLG PROFESSIONALS ATTENDING,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
96,/Events/2018/Protectionism-Webinar,en-GB,BB786329-988A-4283-9AA6-353EC0BE8604,Protectionism Webinar,What effect is fast-paced political and economic change having on the legal sector?,Join us for our webinar where we will discuss how Brexit and wider economic forces have the power to change the face of British industry forever - as well as the legal providers that service it.,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,15:02.0,35:18.0,15:00,16:00,GMT,0,NULL,"<p>Join us for our webinar where we will discuss how Brexit and wider economic forces have the power to change the face of British industry forever - as well as the legal providers that service it.</p>

<p>In our recent report <a href=""~/en/insights-resources/topics/protectionism/overview/"" target=""_blank""><em>Protectionism 2.0: Digital forces driving the new protectionist agenda</em></a> we demonstrated how protectionist measures are driving an era of change on a global scale.</p>

<p>In this session, we will discuss the effect that fast-paced political and economic change is having on the legal sector and how it will need to respond and re-align itself to meet the needs of businesses.</p>

<p>Our speakers will explore:</p>

<ul>
	<li>The forces that have collectively changed the face of British industry</li>
	<li>How the inherent agility that the legal services sector has will help in ensuring it properly adapts its delivery to meet the needs of an altered global business landscape</li>
	<li>The need for legal experts to incorporate more direct relevant knowledge and insight than ever before</li>
</ul>

<p>We hope you can join us.</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,35:39.0,https://reaction.gowlingwlg.com/reaction/RSGenPage.asp?RSID=-Z40Lgorh2ECefnSWEFJWTzFyyVPZui2n06Fec-OrF0,NULL,Register for this event,C41373B4-86B9-4F74-8894-0B0BB7DDBD18,NULL,9847316e-d705-4e8e-91fb-88df430a5dfc;39ca3d7e-072f-42c5-ad32-ee659513b4b3;bac2f2f8-09c0-4d06-b0c8-98d9567adfc7,603d9889-cb72-431a-8d55-60d68706837b;72c95123-eb16-459b-95dd-c0bf3fcda075,NULL,NULL,Webinar,NULL,Online event,694,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,NULL,0,E0D7690F-457C-46F9-8490-D33B4B483448,Speaker(s),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
97,/Events/2018/Blockchain-2-0-Mandates,en-GB,B28E21A0-25E8-498B-A8D5-877DF7682A0C,Blockchain 2.0. Mandates,Blockchain 2.0. Mandates: How to employ blockchain technology within your business or industry,"On November 26, join Gowling WLG's Blockchain & Smart Contracts Group for a seminar on Blockchain 2.0 Mandates: How to employ blockchain technology within your business or your industry to learn about key strategic, legal and accounting issues to consider, among other useful tips.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Conference,30:00.0,00:00.0,07:30,13:00,EST,1,3.5 hours,"<p>On November 26, join Gowling WLG&#39;s Blockchain &amp; Smart Contracts Group for a seminar on <strong><em>Blockchain 2.0 Mandates: How to employ blockchain technology within your business or your industry</em></strong> to learn about key strategic, legal and accounting issues to consider, among other useful tips.</p>

<p>The seminar will begin by covering what business leaders should know about the nature of blockchain technology and key developments in the market. Experts in the blockchain space will then take a deeper dive into lessons learned when operationalizing applications of blockchain in enterprise, and what legal and accounting issues business leaders should be keeping top of mind.</p>

<p>Registration and breakfast will run from 7:30-8:30 a.m. Following the morning seminar, we invite you to join us from 12:00 p.m.-1:00 p.m. for lunch and networking.</p>

<h2>Speakers</h2>

<p>Hilary Carter Managing Director, Blockchain Research Institute</p>

<p>Paritosh Gambhir, Partner, Financial Services and Head of Blockchain, KPMG</p>

<p>Karim Hamasni, Development Lead, Crypto Asset Innovation for RBC Global Asset Management</p>

<p>Mark Hines, Senior Counsel, RBC</p>

<p>Ryan Leopold, Parnter, National Banking &amp; Capital Markets Assurance Leader, PwC</p>

<p>Mark Lijour, Solutions Delivery, Consen Sys</p>

<p>James Longwell, Partner, Gowling WLG</p>

<p>Mark Morency, Senior Vice President, Financial Institutions Practise Leader, Arthur J. Gallagher Canada</p>

<p>Ian Palm, Partner, Gowling WLG</p>

<p>Kathleen Ritchie, Partner, Gowling WLG</p>

<p>Patricia Romanovici, Assistant Vice President &amp; Senior Counsel, Sun Life Financial</p>

<p>Parna Sabet-Stephenson, Partner, Gowling WLG</p>

<h2>Agenda</h2>

<table>
	<tbody>
		<tr>
			<td>7:30 a.m.</td>
			<td>Registration &amp; Breakfast</td>
		</tr>
		<tr>
			<td>8:30 a.m.</td>
			<td>Blockchain overview</td>
		</tr>
		<tr>
			<td>9:15 a.m.</td>
			<td>Identifying use cases</td>
		</tr>
		<tr>
			<td>10:15 a.m.</td>
			<td>Break</td>
		</tr>
		<tr>
			<td>10:30 a.m.</td>
			<td>Legal Issues</td>
		</tr>
		<tr>
			<td>11:30 a.m.</td>
			<td>Accounting and other issues</td>
		</tr>
		<tr>
			<td>12:00 p.m.</td>
			<td>Lunch</td>
		</tr>
		<tr>
			<td>1:00 p.m.</td>
			<td>Event concludes</td>
		</tr>
	</tbody>
</table>
","<p><strong><em>*This program will count for up to 3.5 hours of Substantive credits toward the mandatory annual CPD requirement of the Law Society of Ontario.</em></strong></p>
",NULL,05:06.0,https://sites-gowlingwlg.vuturevx.com/103/4037/landing-pages/event-registration-(blank-form).asp?sid=blankform,NULL,Register for this event,B2DC4461-DC66-4F96-9AE6-32BC2B14259D,cdfc9b50-74c2-4af5-9508-342935f81ccd;06cecb4c-c959-4674-9047-d5d8ee8c673c,NULL,NULL,300e471b-5cfe-45e3-bb75-6cc00bbdf27b,NULL,Conference,Usman M. Sheikh,Toronto,63,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,CHAIR,NULL,NULL,"Tech, Financial Institutions & Services",NULL,NULL,NULL,NULL,NULL,NULL
98,/Events/2018/Opportunities-in-Cuba,en-GB,BFFCDCD7-09DE-47C2-84F5-2BCBB8A114BD,Opportunities in Cuba,"Opportunities for business, trade and investment in Cuba","You are invited to a timely seminar featuring a talk by Rodrigo Malmierca, Cuba's Minister of Foreign Trade and Investment.",~/getmedia/ab9b3cb8-de79-41ad-b89b-56f6bdf3b502/181107-cuba-opportunities-social.jpg.xml?width=576&height=278&ext=.jpg,NULL,GWLG.Seminar,19-11-2018 06:56,19-11-2018 06:56,08:30,10:00,EST,0,NULL,"<p><strong>You are invited to a timely seminar featuring a talk by Rodrigo Malmierca, Cuba's Minister of Foreign Trade and Investment.</strong></p>

<p>This informative and engaging presentation marks the 20th anniversary of Canada's participation in the Havana International Trade Fair, one of the largest of its kind in Latin America.</p>

<p>Our firm's dedicated Cuba practice can help you glean key insights into the challenges and opportunities of doing business in Cuba. They will explore the laws, trade policies and strategies that can help you to avoid pitfalls and find opportunities on the island known as the Pearl of the Antilles.</p>

<p>The Minister will discuss:</p>

<ul>
	<li>Updates to Cuba&#39;s economic and social model with a focus on external relations</li>
	<li>Policies to attract foreign investment to Cuba</li>
	<li>Economic ties between Canada and Cuba</li>
</ul>

<p>Please join Gowling WLG partner France Tenaille, co-leader for our Latin America and Cuba teams, Gregory Biniowsky, our firm&#39;s consultant in Havana, and members of our Cuba team, at this unique seminar.</p>

<h2>Guest speaker</h2>

<h3>Rodrigo Malmierca</h3>

<p>Cuban Minister of Foreign Trade and Investment</p>
",NULL,NULL,19-11-2018 06:56,https://sites-gowlingwlg.vuturevx.com/103/4054/landing-pages/event-registration-(blank-form).asp?sid=blankform,NULL,Register for this event,B2DC4461-DC66-4F96-9AE6-32BC2B14259D,NULL,NULL,NULL,d78233a4-45b3-42d2-97bc-0db06ee57cd2;212c3002-b886-4871-a32d-fff0b120b92d;c2707153-6c2a-40cf-b26a-c92ea4cf53be,NULL,Seminar,NULL,Toronto,63,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada;GWLG.LatinAmerica,0,NULL,Hosts,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
99,/Events/2018/ThinkHouse-IT-Masterclass-Webinar,en-GB,150A9B84-6B76-48E2-98D6-496D86BFBE06,ThinkHouse IT Masterclass Webinar,ThinkHouse IT Masterclass Webinar,Join us for our first IT Masterclass live webinar in which we will be reflecting on the past six months since the General Data Protection Regulation (GDPR) has been in force.,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,00:00.0,45:00.0,13:00,13:45,GMT,1,0.75,"<p>Join us for our first IT Masterclass <strong>live webinar</strong> in which we will be reflecting on the past six months since the General Data Protection Regulation (GDPR) has been in force, looking specifically at:</p>

<ul>
	<li>common <abbr title=""General Data Protection Regulation"">GDPR</abbr> implementation issues;</li>
	<li>dealing with breaches post <abbr title=""General Data Protection Regulation"">GDPR</abbr>;</li>
	<li>the impact of the Data Protection Act 2018; and</li>
	<li>what Brexit means for data protection in the UK.</li>
</ul>

<p>Our speakers Jocelyn Paulley, Helen Davenport and Rocio De la Cruz will also offer practical tips on dealing with tricky issues that can arise.</p>

<p>During this live webinar you will have the opportunity to ask questions and we will answer as many as we can in the time available.</p>
","<p>This event is free of charge. This event will run for 0.75 hours.</p>

<p>Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession.</p>

<p>Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,00:00.0,https://reaction.gowlingwlg.com/reaction/RSGenPage.asp?RSID=xhD_ksuRXNtEuI4CZ5uxY7gy3GP3UVv1IWgfnB7Hwvg,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,NULL,a143cbfd-d333-42a0-89a6-7287894464f1,75a219e7-ea84-4ba2-9990-61b83de62877;d3e0fa3e-1011-4fe0-b62a-88c920f62d49;a1fc3780-83d6-4133-9ed0-6fa6f7fffbd2,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speakers,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
101,/Events/2018/The-Osgoode-Certificate-in-Blockchains-Smart-Cont,en-GB,10133E2B-1801-4E89-803A-3C21694767AA,"The Osgoode Certificate in Blockchains, Smart Cont","The Osgoode Certificate in Blockchains, Smart Contracts and the Law","Interpret and plan for global market change through this educational course developed for lawyers, business leaders, managers and influencers with an interest in blockchain.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,28-11-2018 00:00,24-01-2018 00:00,8:30 a.m.,5:00 p.m.,EST,1,25,"<p>Interpret and plan for global market change through this educational course developed for lawyers, business leaders, managers and influencers with an interest in blockchain.</p>

<p>The Osgoode Certificate on Blockchains, Smart Contracts and the Law is designed to cohesively integrate relevant information on governance, regulation, policy, law and distributed ledger systems in a way that is tailored to help you to understand the implications how blockchain works, and its potential impact. Please <a href=""https://www.osgoodepd.ca/"" target=""_blank"">visit the Osgoode Professional Development website</a> for more details and to register.</p>

<p><a class=""c-button"" href=""http://www.osgoodepd.ca/wp-content/uploads/2018/10/The-Osgoode-Certificate-in-Blockchains-Smart-Contracts-and-the-Law_Oct-12.pdf?utm_medium=partner&amp;utm_source=gowling+wlg&amp;utm_campaign=certificate+blockchain"" target=""_blank"">See agenda</a></p>
",NULL,NULL,28-11-2018 20:48,http://www.osgoodepd.ca/upcoming_programs/osgoode-certificate-blockchain/?utm_medium=partner&utm_source=gowling+wlg&utm_campaign=certificate+blockchain,NULL,Register for this event,NULL,NULL,NULL,NULL,300e471b-5cfe-45e3-bb75-6cc00bbdf27b;3cb7b903-24be-4d44-b671-e9e9bb0f7efd,NULL,Seminar,NULL,NULL,NULL,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,Speakers,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
102,/Events/2018/Canadian-Mortgage-Arrears-and-Economic-Fundamental,en-GB,38520146-7A66-4813-9C8F-D3918D54E83C,Canadian Mortgage Arrears and Economic Fundamental,Canadian Mortgage Arrears and Economic Fundamentals: Evidence & Outlook,"The Recovery Services Practice Group at Gowling WLG invites you to a seminar on Thursday, Nov. 29 on the topic of Canadian Mortgage Arrears and Economic Fundamentals: Evidence and Outlook.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,29-11-2018 21:30,29-11-2018 21:30,8:00 AM,10:00 AM,EST,1,1.5 hours ,"<p>The Recovery Services Practice Group at Gowling WLG invites you to a seminar on Thursday, Nov. 29 on the topic of&nbsp;<strong>Canadian Mortgage Arrears and Economic Fundamentals: Evidence and Outlook</strong>.</p>

<p>Our guest speaker is Gregory Klump, Chief Economist at the Canadian Real Estate Association (CREA). He will discuss the current state of resale housing markets on a regional basis, their underlying economic fundamentals and what&rsquo;s expected in the year ahead.</p>

<h2>SPEAKER</h2>

<p><img alt="""" src=""~/getmedia/42e2ba9e-1d65-493c-98fa-f6ab4a532f61/medium_Gregory-Klump-headshot.jpg.xml"" /></p>

<h2>Gregory Klump</h2>

<h4>Chief Economist, Canadian Real Estate Association</h4>
","<p><em>This program will count for up to 1.5 hours of Substantive credits toward the mandatory annual CPD requirement of the Law Society of Ontario.</em></p>
",NULL,29-11-2018 21:31,https://sites-gowlingwlg.vuturevx.com/103/4105/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,B2DC4461-DC66-4F96-9AE6-32BC2B14259D,NULL,820c20e1-84d8-4b34-96cd-ea4e74310518,NULL,NULL,NULL,Seminar,NULL,Toronto,63,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/103/4105/landing-pages/event-registration-(blank-form).asp,Register for this event ,GWLG.Canada,0,NULL,NULL,NULL,NULL,NULL,Recovery Services,NULL,NULL,NULL,NULL,NULL
103,/Events/2018/Crowdsourcing,en-GB,5B462E32-ED89-4C75-A294-3F0FB70E3225,Crowdsourcing,Crowdsourcing: Tapping into the wisdom of the crowd,"Business leaders are trying to figure out what crowdsourcing really is, the benefits it can offer, and the processes they should follow to engage a crowd.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,27-11-2018 20:03,27-11-2018 20:03,07:30,09:30,EST,1,Up to 1.5 hours of Substantive credits for the LSO and up to 1.5 hours of Continuing Education credits for the Barreau du Québec,"<p>The proliferation of the internet, mobile technologies and social media makes it possible for organizations to engage distributed crowds of individuals for their innovation and problem-solving needs. As a result, business leaders are trying to figure out what crowdsourcing really is, the benefits it can offer, and the processes they should follow to engage a crowd.</p>

<p>Join our panel of experts who are actively &ldquo;engaging the crowd&rdquo; in their work and discover how to effectively leverage crowdsourcing to support your business objectives.</p>

<p>(Registration &amp; breakfast 7:30 a.m. - 8 a.m. EST)</p>

<h2>SPEAKERS</h2>

<ul>
	<li>Lorraine Mastersmith, Partner, Gowling WLG&nbsp;&nbsp; &nbsp;&nbsp;</li>
	<li>John Stroud, Founder &amp; CEO of Crowdbridge</li>
	<li>Steve Cody, Founder / CEO of Ruckify and The Better Software Company</li>
	<li>Jordan St. Jacques, Founder &amp; CEO Crowdfluence</li>
</ul>

<p><a href=""https://www.lsuc.on.ca/EDI/"" target=""_blank""><img alt=""Accredited EDI Logo"" src=""~/getmedia/abc03f09-5df7-45f5-a4a0-02a77057932f/EDI-logo.png.xml"" title=""AccredCPD-BW.jpg"" /></a></p>

<p>This organization has been approved as an Accredited Provider of Professionalism Content by the Law Society of Ontario.</p>
","<p>This program contains up to <strong>1.5 hours of Substantive credits</strong> toward the mandatory CPD requirements of the Law Society of Ontario, and up to&nbsp;<strong>1.5 hours of Continuing Education credits </strong>toward the requirements of the Barreau du Québec.</p>
",NULL,26-11-2018 20:00,https://sites-gowlingwlg.vuturevx.com/101/3803/landing-pages/event-registration-(blank-form).asp?sid=blankform,NULL,Register for this event,CB61C4C1-D0CF-4AA1-BA0B-5DAB5DC99393,NULL,NULL,NULL,NULL,NULL,Seminar,NULL,Ottawa,67,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/101/3803/landing-pages/event-registration-(blank-form).asp?sid=blankform,Register Now,GWLG.Canada,0,NULL,Speaker(s),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
104,/Events/2018/Fireside-Chat-with-Coca-Cola-Salesforce,en-GB,D2B866BC-44F6-4CE9-9CF8-305623D46FC4, Fireside Chat with Coca Cola + Salesforce,Networking & Fireside chat with Coca-Cola Ltd & Salesforce,"Please join us as we celebrate the passing year and look to the year ahead.

Over the evening, we will also pause to reflect on how we might better foster a culture of inclusion in the coming year in our respective organizations, and joining us for an informal fireside chat will be Scott Kirkpatrick of Coca-Cola Ltd and Adrian Ishak of Salesforce, both of whom care deeply about Diversity & Inclusion.

Looking forward to seeing you for an evening of holiday fun and a little learning! Please RSVP so we can reserve you a spot.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,04-12-2018 21:49,04-12-2018 21:49,5:00 P.M.,7:30 P.M.,EST,0,NULL,"<p>Please join us as we celebrate the passing year and look to the year ahead.</p>

<p>Over the evening of December 4, we will also pause to reflect on how we might better foster a culture of inclusion in the coming year in our respective organizations.</p>

<p>Joining us for an informal fireside chat will be&nbsp;<strong>Scott Kirkpatrick</strong>&nbsp;of Coca-Cola Ltd and&nbsp;<strong>Adrian Ishak</strong>&nbsp;of Salesforce &mdash; both of whom care deeply about diversity &amp; inclusion.</p>

<p>Looking forward to seeing you for an evening of holiday fun and a little learning!&nbsp;</p>
",NULL,NULL,04-12-2018 00:00,https://sites-gowlingwlg.vuturevx.com/103/4106/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,B2DC4461-DC66-4F96-9AE6-32BC2B14259D,NULL,NULL,NULL,NULL,NULL,Seminar,NULL,Toronto,63,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/103/4106/landing-pages/event-registration-(blank-form).asp,Register for this event,NULL,0,NULL,Speaker(s),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
105,/Events/2019/In-house-disruptors-challenges-opportunities,en-GB,9DA57539-D3C1-4185-9023-4375BF50B11E,In-house disruptors - challenges & opportunities,In-house disruptors - challenges & opportunities,Our upcoming ThinkHouse training and networking session for in-house lawyers will focus on the making and breaking of contracts from a local and international perspective.,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,15-01-2019 14:33,15-01-2019 14:33,17:00,20:00,Local time,1,Two,"<p>Our upcoming ThinkHouse training and networking session for in-house lawyers will focus on the challenges and opportunities facing in-house lawyers in the region, as well as some horizon watching. What is happening on the international stage which may assist in-house teams in the region? What disruptors are providing new opportunities for in-house teams, to create efficiencies, cost savings or help in providing legal support to your businesses?</p>

<p>This session will be an interactive panel session led by senior in-house counsel from within the region, presenting alongside Gowling WLG&#39;s joint CEOs from Canada and the UK.</p>

<p>The discussion will explore issues GCs and in-house teams are currently facing in the region, as well as abroad and how these challenges are being overcome whether through tech or other means.</p>

<p>These are issues you may well be facing, so it is an opportunity to talk through the challenges and opportunities, and brainstorm some of the future challenges on the horizon with fellow in-house counsel.</p>

<p>We will start with refreshments and registration at 17:00, the session will begin at 17:30 and we will end at 18:30. We also invite you to join us after the session for drinks and networking on the Capital Club terrace until 20:00.</p>

<h2>Agenda</h2>

<table>
	<thead>
		<tr>
			<th>Time</th>
			<th>Activity</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>17:00</td>
			<td>Refreshments and Networking</td>
		</tr>
		<tr>
			<td>17:30</td>
			<td>Session begins</td>
		</tr>
		<tr>
			<td>18:30</td>
			<td>Session ends, Networking and drinks on the terrace</td>
		</tr>
		<tr>
			<td>20:00</td>
			<td>Ends</td>
		</tr>
	</tbody>
</table>
","<p>This event is free of charge.</p>

<p>This event will run for two hours. Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession.</p>

<p>Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,NULL,dubai.thinkhouse@gowlingwlg.com?subject=ThinkHouse - 15 January 2019,NULL,Register for this event,2D388260-6B09-4610-9C1D-852369DE565C,NULL,549cbe28-f188-44cd-85c0-0f4e23a23817,NULL,a382790c-4718-4e75-a6f5-05c801aee1ad;d0124175-2f15-46b7-a81a-0af3177791df;7574853e-b1e1-4eba-8604-1a01d0d0a056,NULL,Seminar,NULL,Capital Club Dubai,37415,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UAEDubai,0,B58CF9C3-DC86-4783-834F-1954E7C865B5,Speaker(s),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
106,/Events/2019/International-Data-Protection-Birmingham,en-GB,4AA8C381-4672-490C-B5FC-473128F19034,International Data Protection - Birmingham,IT Masterclass: International Data Protection - Birmingham,"With the GDPR well and truly on everyone's radar, it is important not to lose sight of international data protection requirements that fall outside these regulations.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,29-01-2019 11:00,NULL,08:30,14:00,Local time,1,4.5,"<p>With the GDPR well and truly on everyone&#39;s radar, it is important not to lose sight of international data protection requirements that fall outside these regulations.</p>

<p>At our next IT Masterclass seminar the UK team will be joined by colleagues from some of our international offices to provide global insight on data protection regulations. We&#39;ll be taking a closer look at:</p>

<h2>International data breaches</h2>

<p>Managing a data breach can be a complex task when the breach occurs in one country, but even more so if the breach affects individuals in different countries. Organisations need to know whether, and if so how quickly, notification of that breach must be given, to whom, and what the likely penalties for failure to notify correctly might be. During this session we will discuss requirements of data breach reporting across a range of international jurisdictions, comparing and contrasting the key elements you should be aware of to avoid any unexpected difficulties.</p>

<h3>Other common international issues</h3>

<p>Data protection regulation varies across global jurisdictions, but issues such as the requirements for a DPO, data sovereignty, regulators&#39; enforcement powers and extra-territorial effect are common across all. Our speakers will provide guidance on how to avoid the various pitfalls of dealing with these issues across a range of international jurisdictions.</p>

<p>Our speakers include, <a href=""~/en/people/helen-davenport/"">Helen Davenport</a>, <a href=""~/en/people/rocio-de-la-cruz/"">Rocio de la Cruz</a>, <a href=""http://www.jurisasiallc.com/sheena-jacob.html"" target=""_blank"">Sheena Jacob</a>, <a href=""~/en/people/tony-fielding/"">Tony Fielding</a>, <a href=""~/en/people/jocelyn-paulley/"">Jocelyn Paulley</a>, and <a href=""~/en/people/wendy-wagner/"">Wendy Wagner</a></p>
","<p>This event is free of charge.</p>

<p>This event will run for four hours and a half. Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession.</p>

<p>Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,27-01-2019 23:59,https://reaction.gowlingwlg.com/reaction/RSGenPage.asp?RSID=_HYDihuKaQfSLUj4l-bqs_0ZjUIYSIAW-gvvbcma0sY,NULL,Register for this event,58076178-DA60-4AB6-A07C-EF250971EBF7,NULL,2e9a87e2-3d2e-4d69-ba9c-06b4b358ca0d,a143cbfd-d333-42a0-89a6-7287894464f1,d3e0fa3e-1011-4fe0-b62a-88c920f62d49;a1fc3780-83d6-4133-9ed0-6fa6f7fffbd2;34e4f40d-a7d6-4a3c-80e5-a3aa69943fa7;75a219e7-ea84-4ba2-9990-61b83de62877;afc382e9-2b75-4a26-9e20-0a8c68694164,NULL,Seminar,NULL,Birmingham,70,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speakers,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
107,/Events/2019/International-Data-Protection-London,en-GB,E0E09B1A-3DA7-4FA9-866D-2CFF6AD6804B,International Data Protection - London,IT Masterclass: International Data Protection - London,"With the GDPR well and truly on everyone's radar, it is important not to lose sight of international data protection requirements that fall outside these regulations.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,31-01-2019 11:00,NULL,08:30,14:00,Local time,1,4.5,"<p>With the GDPR well and truly on everyone&#39;s radar, it is important not to lose sight of international data protection requirements that fall outside these regulations.</p>

<p>At our next IT Masterclass seminar the UK team will be joined by colleagues from some of our international offices to provide global insight on data protection regulations. We&#39;ll be taking a closer look at:</p>

<h2>International data breaches</h2>

<p>Managing a data breach can be a complex task when the breach occurs in one country, but even more so if the breach affects individuals in different countries. Organisations need to know whether, and if so how quickly, notification of that breach must be given, to whom, and what the likely penalties for failure to notify correctly might be. During this session we will discuss requirements of data breach reporting across a range of international jurisdictions, comparing and contrasting the key elements you should be aware of to avoid any unexpected difficulties.</p>

<h3>Other common international issues</h3>

<p>Data protection regulation varies across global jurisdictions, but issues such as the requirements for a DPO, data sovereignty, regulators&#39; enforcement powers and extra-territorial effect are common across all. Our speakers will provide guidance on how to avoid the various pitfalls of dealing with these issues across a range of international jurisdictions.</p>

<p>Our speakers include, <a href=""~/en/people/helen-davenport/"">Helen Davenport</a>, <a href=""~/en/people/rocio-de-la-cruz/"">Rocio de la Cruz</a>, <a href=""http://www.jurisasiallc.com/sheena-jacob.html"" target=""_blank"">Sheena Jacob</a>, <a href=""~/en/people/tony-fielding/"">Tony Fielding</a>, <a href=""~/en/people/jocelyn-paulley/"">Jocelyn Paulley</a>, and <a href=""~/en/people/wendy-wagner/"">Wendy Wagner</a></p>
","<p>This event is free of charge.</p>

<p>This event will run for four hours and a half. Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession.</p>

<p>Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,29-01-2019 23:59,https://reaction.gowlingwlg.com/reaction/RSGenPage.asp?RSID=_HYDihuKaQfSLUj4l-bqs_0ZjUIYSIAW-gvvbcma0sY,NULL,Register for this event,9FBE191E-3BCF-45DE-A2BA-338BB194FC9D,NULL,2e9a87e2-3d2e-4d69-ba9c-06b4b358ca0d,NULL,d3e0fa3e-1011-4fe0-b62a-88c920f62d49;a1fc3780-83d6-4133-9ed0-6fa6f7fffbd2;34e4f40d-a7d6-4a3c-80e5-a3aa69943fa7;75a219e7-ea84-4ba2-9990-61b83de62877;afc382e9-2b75-4a26-9e20-0a8c68694164,NULL,Seminar,NULL,London,71,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speakers,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
108,/Events/2019/Yordas-Group-Hamilton-launch-celebration,en-GB,1586113D-EAA4-4E47-97E9-E0A6A8B6DD6C,Yordas Group Hamilton launch celebration,Yordas Group Hamilton launch celebration,"Save-the-date: As part of a global expansion program, Yordas is opening an office in Canada.",~/getmedia/633f3640-48fe-4dc4-b23c-c33f91457c4b/181218-yordas-launch_1.jpg.xml?width=1200&height=627&ext=.jpg,NULL,GWLG.SpecialEvents,51:38.0,51:49.0,NULL,NULL,EST,0,NULL,"<h2>Please join us</h2>

<p>Join us on February 7, 2019 as Yordas Group &mdash; one of the UK&#39;s leading scientific and regulatory consultancies &mdash; celebrates the opening of its first Canadian office in Hamilton, Ontario.</p>

<p>As Yordas continues to expand globally, its decision to locate at McMaster Innovation Park will allow it to contribute to an innovative manufacturing ecosystem in one of North America&#39;s largest regional economies &mdash; all while continuing to engage in cutting-edge research.</p>

<p>Gowling WLG is proud to have <a href=""https://www.youtube.com/watch?v=PZ8uo8BP73E&amp;pbjreload=10"" target=""_blank"">played a key role</a> in bringing Yordas to Hamilton, and we are delighted to be a partner of this event.</p>

<p><a class=""c-button"" href=""https://r1.dotmailer-surveys.com/m/6c4qbqaf-df3iad26-D0RR3GVCB?utm_campaign=138414_Canada%20Event%20Invite&amp;utm_medium=email&amp;utm_source=Yordas%20Limited&amp;AprilCA=1&amp;dm_i=4QBQ,2YSU,RR3GV,9EUA,1"" target=""_blank"">Registration for the launch event can be found here</a></p>

<p>For more information, please contact Giselle Vincett: <a href=""mailto:g.vincett@yordasgroup.com"">g.vincett@yordasgroup.com</a>, +001 289 975 9005.</p>
",NULL,NULL,50:42.0,"https://r1.dotmailer-surveys.com/m/6c4qbqaf-df3iad26-D0RR3GVCB?utm_campaign=138414_Canada%20Event%20Invite&utm_medium=email&utm_source=Yordas%20Limited&AprilCA=1&dm_i=4QBQ,2YSU,RR3GV,9EUA,1",NULL,Register for this event,78BD34D0-6E09-420D-8820-ADA5E9B4F33D,NULL,NULL,NULL,NULL,NULL,Special events,NULL,McMaster Innovation Park,38307,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,"https://r1.dotmailer-surveys.com/m/6c4qbqaf-df3iad26-D0RR3GVCB?utm_campaign=138414_Canada%20Event%20Invite&utm_medium=email&utm_source=Yordas%20Limited&AprilCA=1&dm_i=4QBQ,2YSU,RR3GV,9EUA,1",Register for this event,GWLG.Canada,0,NULL,Speaker(s),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
109,/Events/2019/Chinese-New-Year-Celebration,en-GB,8B9A470B-DD25-4A4F-886C-5BFC16B9448A,Chinese New Year Celebration, Chinese New Year Celebration,"Please join us on Thursday, Jan. 24, for a special reception to celebrate the Year of the Pig with cocktails, hors d'oeuvres and great company.",~/getmedia/029ce5a8-f9fe-4ae5-a7b9-d55cb4888c6a/190108-chinese-new-year-event.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.SpecialEvents,00:00.0,30:00.0,5 p.m.,7:30 p.m.,EST,0,NULL,"<p>Please join us on Thursday, Jan. 24, for a special reception to celebrate the Year of the Pig with cocktails, hors d&#39;oeuvres and great company.*</p>

<p>With the Year of the Pig comes not only an opportunity to attract good fortune, but also the chance to cultivate longstanding friendships.</p>

<p>Please RSVP&nbsp;to confirm your attendance. We look forward to celebrating with you!</p>

<p><a href=""https://sites-gowlingwlg.vuturevx.com/103/4173/compose-email/chinese-new-year-reception-2019-01-24-oft.asp#chineseversion"" target=""_blank"">*View Chinese invitation here</a></p>
",NULL,NULL,20:39.0,https://sites-gowlingwlg.vuturevx.com/103/4173/landing-pages---en/event-registration-(blank-form)---en.asp,NULL,Register for this event,B2DC4461-DC66-4F96-9AE6-32BC2B14259D,NULL,NULL,NULL,NULL,NULL,Special events,NULL,Toronto,63,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/103/4173/landing-pages---en/event-registration-(blank-form)---en.asp,Register now,GWLG.Canada,0,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
110,/Events/2019/Beer-tasting-with-the-Technology-industry-group,en-GB,33BC265D-1904-4E0B-8C73-6C1BF7C2921E,Beer tasting with the Technology industry group,Gowling WLG hops into the new year: Beer tasting with the Technology industry group,"We're turning our office into a pub for the night! Connect with members of Gowling WLG's Technology Industry Group in a fun, casual atmosphere while sampling new brews from local craft brewery 88 Brewing.",~/getmedia/5e48702e-05b8-4591-8895-ce4c55b5a800/190108-beer-tasting-calgary-events-tile.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.SpecialEvents,00:00.0,00:00.0,5 p.m.,8 p.m.,Local time,0,NULL,"<p>We&#39;re turning our office into a pub for the night! Connect with members of Gowling WLG&#39;s <a href=""~/en/sectors/tech/canada/"">Technology Industry Group</a> in a fun, casual atmosphere while sampling new brews from local craft brewery 88 Brewing. Snacks and taxi chits will be provided.&nbsp;</p>

<p>RSVP by Jan. 15 to reserve your spot. We can&#39;t wait to see you there!</p>
",NULL,NULL,00:00.0,https://sites-gowlingwlg.vuturevx.com/95/4162/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,8BF72D3F-E216-4FDD-B0BE-52D41A644293,cdfc9b50-74c2-4af5-9508-342935f81ccd,NULL,NULL,NULL,NULL,Special events,NULL,NULL,NULL,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/95/4162/landing-pages/event-registration-(blank-form).asp,Register now,GWLG.Canada,0,NULL,Speaker(s),NULL,NULL,Tech,NULL,NULL,NULL,NULL,NULL,NULL
111,/Events/2019/Riskmap-2019-Toronto,en-GB,1832BD4C-EFAA-4EC3-8C8F-8EE355444A57,Riskmap 2019: Toronto,Riskmap 2019: Toronto,"Gowling WLG is proud to host Control Risks' RiskMap 2019, where we will present our business outlook for the year ahead.",~/getmedia/fad24aa3-726e-4b15-a826-ff5ebebc294f/180109-riskmap-2019-tile.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Seminar,22-01-2019 08:30,22-01-2019 11:00,08:30,11:00,EST,0,NULL,"<p>Gowling WLG is proud to host Control Risks&#39; RiskMap 2019, where we will present our business outlook for the year ahead. 2018 has certainly presented new challenges with increasing threats from cyber-attacks, protectionism and global trade tension. So, what will 2019 bring?</p>

<p>Expert analysts from Control Risks&#39; global teams will discuss their list of the top five risks for 2019 and how organizations can develop a new resilience to survive the current transition towards a new world order. This will be followed by a panel discussion including Gowling WLG&#39;s own Thomas Timmins and Paul Murphy. The panel will explore the risk landscape across major markets around the globe.</p>
",NULL,NULL,21-01-2019 16:06,https://sites-gowlingwlg.vuturevx.com/103/4215/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,B2DC4461-DC66-4F96-9AE6-32BC2B14259D,NULL,NULL,NULL,d78233a4-45b3-42d2-97bc-0db06ee57cd2;1306a2b0-6e66-4e76-b253-7b3c3ade2914;4c3c2534-e644-427f-9b61-e7cd1aec53cf,NULL,Seminar,NULL,Toronto,63,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,Gowling WLG professionals,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
112,/Events/2019/Roundtable-Clean-Tech-Opportunities-in-China,en-GB,73659F17-1F7C-463F-BBBB-5BE3DFC16A5C,Roundtable: Clean Tech Opportunities in China,Roundtable: Clean Tech in China,"Is your company interested in pursuing opportunities created by China's transition in the ""green growth"" economy?",~/getmedia/24065e12-818d-43e8-960a-55210bdf7f7a/190111-clean-tech-china-gowling-wlg.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Seminar,01-02-2019 09:00,01-02-2019 12:00,9 a.m.,12 p.m.,EST,0,NULL,"<p><em>[<a href=""https://ccbc.com/fr/event/toronto-02012019/"" target=""_blank"">View this invitation in French</a>]</em></p>

<p>Is your company interested in pursuing opportunities created by China&#39;s transition in the &quot;green growth&quot; economy?</p>

<p><strong>The Asia Pacific Foundation of Canada</strong> and <strong>CCBC</strong> are organizing a roundtable discussion, <em>Clean Tech&nbsp;in China</em>, which will focus on China&#39;s &quot;green growth&quot; economy and the possibilities for Canadian companies in this market. Participants will learn about APF Canada&#39;s China Eco-City Tracker and the role of APF Canada in providing policy research in support of clean tech business development in China.</p>

<p>In addition, participating companies will have the opportunity to provide APF Canada with their perspectives on China&#39;s growing clean technology market. Insights from company representatives should address the questions below, based on their current or planned business in China.</p>

<ol>
	<li>What are the key business development issues your company faces with respect to opportunities in the clean tech market in China?</li>
	<li>China&#39;s economic and environmental objectives still require further alignment and consolidation. What information issues does your company face with respect to clean tech development in China? How would your business model change with more information and at what level (city, provincial)?</li>
	<li>What do you see are potential avenues for Canadian business expansion in China in the clean tech areas of air, water, and solid waste, including in which geographical areas?</li>
	<li>How can policy research institutions like APF Canada, as well as other intermediaries such as CCBC and Canada&#39;s trade missions, better aid in your company&#39;s market decisions and risk assessments? Is the China Eco-City Tracker of particular interest? What information could be provided to aid in your business?</li>
</ol>

<p>The roundtables will be facilitated by <strong>Evan Due</strong>, a consultant to APF Canada and an advisor to the China Development Research Foundation, an institution initiated by the Development Research Centre of the State Council of China.</p>

<p>For more information on how to register, please <a href=""https://ccbc.com/event/toronto-02012019/?instance_id=273"" target=""_blank"">visit CCBC&#39;s website here</a>.</p>
",NULL,NULL,31-01-2019 20:53,https://ccbc.com/event/toronto-02012019/?instance_id=273,NULL,For more information on how to register click here,B2DC4461-DC66-4F96-9AE6-32BC2B14259D,NULL,NULL,NULL,NULL,NULL,Seminar,NULL,Toronto,63,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,Speaker(s),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
113,/Events/2019/The-Role-of-the-Board-in-M-A-transactions,en-GB,05EB090F-7FA5-43DE-BBFD-2B24C4E2E9B2,The Role of the Board in M&A transactions,The Role of the Board in M&A transactions: Creating Value and Minimizing Risk on Wednesday,"The role of the board in the M&A process is critical to ensure the transaction contributes to value creation for the company and the risk of failure is minimized. Whether the process begins with a friendly offer or a hostile ambush, the steps directors follow and their ultimate decision may be the biggest, most scrutinized action of their service. In the context of both public and private companies, we will explore the following board strategies for success.",~/getmedia/ccb213a8-4927-45e2-8fb6-b9f891c4db79/190114-WGOB-m-a-event-feb-2019.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Seminar,06-02-2019 08:30,06-02-2019 10:00,8:30 a.m.,10 a.m.,EST,0,NULL,"<p>The role of the board in the M&amp;A process is critical to ensure the transaction contributes to value creation for the company and the risk of failure is minimized. Whether the process begins with a friendly offer or a hostile ambush, the steps directors follow and their ultimate decision may be the biggest, most scrutinized action of their service. In the context of both public and private companies, we will explore the following board strategies for success:</p>

<ul>
	<li>Is the board M&amp;A ready? Building a diverse board with varied roles, perspectives and experience.</li>
	<li>Determining whether a special committee should be formed and whether or not external advice should be sought.</li>
	<li>Ensuring the company has a rigorous M&amp;A process and the right M&amp;A leadership.</li>
	<li>Reviewing the proposed deal in the context of the company&rsquo;s strategic plan, and challenging the value creation potential of the transaction.</li>
	<li>Maintaining objectivity and sensitivity to possible management bias -&nbsp;don&rsquo;t fall in love with the deal.</li>
	<li>Monitoring critical aspects of the due diligence process before approving the transaction.</li>
	<li>Examining the post-merger integration plan in detail, and tracking performance against the plan.</li>
</ul>

<p>Complimentary tickets available for Gowling WLG guests with code GWLG100.&nbsp;Please RSVP or book your ticket by Feb. 4, 2019&nbsp;</p>
",NULL,NULL,04-02-2019 17:35,https://www.eventbrite.ca/e/toronto-event-the-role-of-the-board-in-ma-transactions-creating-value-and-minimizing-risk-on-tickets-52413917438,NULL,Register for this event,B2DC4461-DC66-4F96-9AE6-32BC2B14259D,NULL,NULL,NULL,NULL,NULL,Seminar,NULL,Toronto,63,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://www.eventbrite.ca/e/toronto-event-the-role-of-the-board-in-ma-transactions-creating-value-and-minimizing-risk-on-tickets-52413917438,RSVP using code GWLG100 for your complimentary ticket,GWLG.Canada,0,NULL,Gowling WLG Panelist,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
114,/Events/2019/All-About-Age-Webinar,en-GB,5A81B916-A091-4505-AF4B-859EACF4585C,All About Age Webinar,All About Age Webinar,"In this ALL ABOUT AGE webinar, Gowling WLG's HR law experts will look at the issue of age discrimination and benefits.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,00:21.0,NULL,12:00,12:45,GMT,0,NULL,"<p>In this ALL ABOUT AGE webinar, our HR law experts will look at the issue of age discrimination and benefits, with a particular focus on:</p>

<ul>
	<li><strong>The risks of introducing tapering or transitional arrangements when making pension scheme changes; these are often intended to cushion the blow of the changes but can risk age discrimination claims</strong>. This has been thrown into stark relief by the recent (December 2018) Court of Appeal decision which found that the Government&#39;s transitional pensions arrangements put in place to protect older Judges and Firefighters constituted unlawful age discrimination because of the impact on younger scheme members;</li>
	<li><strong>How best to structure share schemes&#39; good leaver/bad leaver provisions to minimise the risk of successful age discrimination claims; and</strong></li>
	<li><strong>A reminder on how insured benefits can be provided to employees in a way that doesn&#39;t fall foul of the age discrimination legislation</strong>.</li>
</ul>

<p>During the webinar, we will help you to identify the actions you need to take as an employer in light of recent case law decisions, issues to watch out for when pension scheme changes are made, top tips on getting it right when providing benefits and how to mitigate risk in this area for your business.</p>

<p>The webinar will be presented by Ruth Ormston and Liz Wood who are both senior members of Gowling WLG&#39;s Combined Human Resources Solutions (CHRS) team, which specialises in the interaction between pensions and employment law. The speakers have extensive experience advising on HR, employment and discrimination law issues.</p>

<p>You will also get the opportunity to ask questions during the webinar and we will answer as many as we can in the time available.</p>
","<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,00:03.0,https://reaction.gowlingwlg.com/reaction/RSGenPage.asp?RSID=l0rE8CTqXLOLDN8CfZMKHXdImnMjokgJJOVJR-LC5YW3hqaCvDJzG0h4oFQVAcNy,NULL,Register for this event,C41373B4-86B9-4F74-8894-0B0BB7DDBD18,NULL,d8837737-40d2-4472-8a9e-ba4101ec2105;a19c4c5e-c05a-4fa5-95aa-c5a274279d8c,NULL,ecba5daa-088a-4103-823a-0a9370b4bf18;78b949bf-8838-4a2c-aa74-aa3ad35e87e3,NULL,Webinar,NULL,Online event,694,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,40ECBAEA-9783-479A-8EB9-9D39F577C01D,Speakers,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
115,/Events/2019/International-IP-Masterclass,en-GB,03F8BA9B-999F-470A-BA6A-DFFE3DDED3EC,International IP Masterclass,International IP Masterclass,"Our renowned global Intellectual Property team will be in Dubai next month. Join us for an International IP Masterclass that will offer you guidance on protecting your intellectual property rights internationally, with a particular focus on China and the Russian Federation.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,18-02-2019 08:00,18-02-2019 11:00,08:00,11:00,Local time,0,2,"<p>Are you doing business with China and concerned about protecting your intellectual property rights? How about Russia? Are you looking to expand to Europe or North America? If so, then please join members of Gowling WLG&#39;s renowned global Intellectual Property team who will be visiting the UAE next month.</p>

<p>Join us for an International IP Masterclass that will offer you guidance on protecting your intellectual property rights internationally, with a particular focus on China and the Russian Federation, but also Europe, ASEAN and North America. In attending this event you will leave with knowledge as to what you can do to protect these important commercial assets when looking to do business in key overseas markets for entities based in this region.</p>

<p>This is a unique opportunity for you to gain insight from IP experts from Gowling WLG&#39;s global IP team in relation to the issues you are or may face in these markets, and network with other companies facing similar issues.</p>

<p>Registration and Breakfast opens at 8:00, the sessions will start at 8.30 and we will end with networking at 10:30.</p>

<table>
	<thead>
		<tr>
			<th>
			Time
			</th>
			<th>
			Activity
			</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>
			08:00
			</td>
			<td>
			Breakfast and registration
			</td>
		</tr>
		<tr>
			<td>
			08:30
			</td>
			<td>
			Session begins:

			<ol>
				<li>
				Doing business/IP in &amp; with China
				</li>
				<li>
				Doing business/IP in &amp; with Russia
				</li>
				<li>
				Patents 101
				</li>
				<li>
				International IP panel discussion (UK, Germany, EU, Canada, Singapore &amp; China)
				</li>
				<li>
				Q&amp;A
				</li>
			</ol>
			</td>
		</tr>
		<tr>
			<td>
			10:30
			</td>
			<td>
			Networking
			</td>
		</tr>
		<tr>
			<td>
			11:00
			</td>
			<td>
			Ends
			</td>
		</tr>
	</tbody>
</table>
","<p>This event is free of charge.</p>

<p>This event will run for three hours. Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession.</p>

<p>Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,16-02-2019 10:29,https://reaction.gowlingwlg.com/reaction/RSGenPage.asp?RSID=SC9pq_Vs90Yn4TAvMfvcKCFG3j8jc2YM9rgghOfLFq4,NULL,Register for this event,2D388260-6B09-4610-9C1D-852369DE565C,NULL,08b9a44c-bb26-4255-9779-296a124fcbee,NULL,3fd4913d-3096-46ba-93b4-f365a5b14944;324b94dc-effd-40f6-9b4b-de402aa7d013;bb6e4e98-2d11-42a4-a949-3c3e7a8225f0;4bcdddc1-a500-4dd4-ac52-fd05abee5ef7;9a7a979c-500a-45ae-b4fd-1fed3f6bd376;573d1455-ea45-45db-a443-9b45707a1db2;a7b766bf-7e7c-4961-887d-1acbebd19ed4;cba60c6d-eb6d-4fa1-b4b4-a4b8c0d0c080;6767b2fc-7817-42ae-a54e-05595fe6c1cd,NULL,Seminar,NULL,Capital Club Dubai,37415,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UAEDubai,0,NULL,Speaker(s),NULL,NULL,NULL,Intellectual Property,NULL,NULL,NULL,NULL,NULL
116,/Events/2019/ThinkHouse-Spring-2019-Birmingham,en-GB,558F9E0B-87CE-4BC2-B6FC-A19ED0A7A9E7,ThinkHouse Spring 2019 - Birmingham,ThinkHouse Spring 2019 - Birmingham,"Our Spring ThinkHouse event is fast approaching and our team has been pouring over the latest trends, cases and global developments to provide a programme of training that will help ensure you are ready for the year ahead.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,14-03-2019 08:45,14-03-2019 13:45,08:45,13:45,Local time,1,3,"<p>Our Spring ThinkHouse event is fast approaching and our team has been pouring over the latest trends, cases and global developments to provide a programme of training that will help ensure you are ready for the year ahead. We will take a closer look at:</p>

<h2>IP update for the commercial lawyer - Kate Swaine</h2>

<p>Changes to the UK Trade Marks Act, a new unitary patent, the potential implications of Brexit - we will consider the latest changes in the world of IP and what they mean for business.</p>

<h2>Brexit clarity - John Cooper and Kieran Laird</h2>

<p>With the original deadline for Brexit only weeks away, a definitive answer on what the world will look like on 30 March seems as elusive as ever. Our experts cut through the tangle of Withdrawal Agreements, Plan Bs, no-deals (chaotic and managed), second referendums and rebellions over arcane Parliamentary process to provide a clear-sighted overview of exactly what is happening in the Brexit process.</p>

<h2>Free Trade Agreements - What do they mean for corporates? - Ursula Johnston</h2>

<p>Businesses that can successfully leverage the global network of trade agreements can unlock lower landed cost for their products, market access for their services and fewer barriers to trade. In a world where a handful of major trading nations are taking a more protectionist outlook there is still a growing number of trade agreements which have been negotiated or are in the process of being negotiated which will potentially negate the broader economic effect. We will examine the current trade agreement landscape in the UK and what a business should do to maximise the potential opportunities thereunder.</p>

<h2>Commercial contract law update - David Lowe</h2>

<p>We will finish with our ever popular roundup of commercial contract law, reviewing the developments of the last 12 months and highlighting cases which should be at the top of your reference list.</p>

<h2>Agenda</h2>

<table>
	<thead>
		<tr>
			<th scope=""col"">Time</th>
			<th scope=""col"">Activity</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>08:45</td>
			<td>Registration</td>
		</tr>
		<tr>
			<td>09:10</td>
			<td>Welcome &amp; Introduction</td>
		</tr>
		<tr>
			<td>09:15</td>
			<td>IP update for the commercial lawyer</td>
		</tr>
		<tr>
			<td>10:00</td>
			<td>Brexit clarity</td>
		</tr>
		<tr>
			<td>10:45</td>
			<td>Mid-morning break</td>
		</tr>
		<tr>
			<td>11:15</td>
			<td>Free trade agreements - what do they mean for corporates?</td>
		</tr>
		<tr>
			<td>12:00</td>
			<td>Commercial contracts update</td>
		</tr>
		<tr>
			<td>12:45</td>
			<td>Lunch</td>
		</tr>
	</tbody>
</table>
","<p>This event is free of charge.</p>

<p>This event will run for three hours. Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession.</p>

<p>Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,08-03-2019 08:53,https://reaction.gowlingwlg.com/reaction/RSGenPage.asp?RSID=GTPGCH2XqJgOLmuzCB7DAw_pSgH4qpLK7QeHDyI1BKM,NULL,Register for this event,58076178-DA60-4AB6-A07C-EF250971EBF7,NULL,08b9a44c-bb26-4255-9779-296a124fcbee;549cbe28-f188-44cd-85c0-0f4e23a23817,603d9889-cb72-431a-8d55-60d68706837b;a143cbfd-d333-42a0-89a6-7287894464f1,a9daf1f3-b2ff-43d9-b76e-b815bb73aace;ad056fcd-7211-4da7-a9e2-30612d332954;5f39b2b0-1232-4c03-abce-300149d85f9b;e33531f3-9132-4365-bdfc-fe6df95bab54;93b5e080-2149-4ac7-8aa4-d1358ee79d55;a1a4c901-7400-490f-8357-9db439f7dfee,NULL,Seminar,NULL,NULL,NULL,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
117,/Events/2019/Revue-jurisprudentielle-droit-de-la-construction,fr-CA,3186D65D-B149-4AE2-88A4-77C2EBB71675,Revue jurisprudentielle : droit de la construction,Revue jurisprudentielle : les décisions marquantes en droit de la construction,"L’année 2018 n’a pas été de tout repos dans le domaine du droit de la construction. Qu’il s’agisse d’enjeux liés aux appels d’offres, de gestion des différends contractuels entre donneurs d’ouvrage, entrepreneurs et sous-traitants ou d’hypothèques légales de la construction, beaucoup de décisions marquantes ont été rendues.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Conference,00:00.0,45:00.0,8 h,9 h 45,EST,1,1 h 15,"<p>L&rsquo;année 2018 n&rsquo;a pas été de tout repos dans le domaine du droit de la construction. Qu&rsquo;il s&rsquo;agisse d&rsquo;enjeux liés aux appels d&rsquo;offres, de gestion des différends contractuels entre donneurs d&rsquo;ouvrage, entrepreneurs et sous-traitants ou d&rsquo;hypothèques légales de la construction, beaucoup de décisions marquantes ont été rendues. Nos conférenciers en feront un survol avant de répondre à vos questions sur les enjeux du domaine qui, année après année, sont source de nombreux soucis souvent judiciarisés.</p>

<p>Joignez-vous à nous pour ce petit-déjeuner à thème juridique, où une grande place sera accordée aux applications pratiques des leçons tirées des décisions présentées.</p>
","<p>Cette conférence comptera pour un maximum d&#39;une heure et quart&nbsp;de formation continue conformément aux exigences du Barreau du Québec.</p>
",NULL,00:00.0,https://sites-gowlingwlg.vuturevx.com/99/4248/landing-pages---french/event-registration-(blank-form).asp,NULL,Inscrivez-vous,93D96357-D023-48D9-82C7-784977F93D3E,3fc2ca8c-9d19-44ba-a3a9-ad1ecb11e900,NULL,NULL,72577eef-0b0e-4623-8171-b90cc03322d2;29484b67-b170-4eee-801d-e640f8f881ae,NULL,Conférence,"Alexandre Sami, Alexandre Forest",club Saint-James,33567,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada,0,D4175C8F-4D3F-4641-A45F-20EC57DC60F9,Conférenciers,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
118,/Events/2019/Brexit-Impact-on-UK-Canada-trade,fr-CA,04B6A083-571C-4EE6-8BF8-A8538E44D2F3,Brexit : Futur de la relation Canada R-U,Brexit : futur de la relation commerciale entre le Royaume-Uni et le Canada,"L’actualité autour du Brexit est teintée d’incertitudes et de changements quotidiens. Après le rejet de l’accord négocié avec l’Union européenne par le parlement britannique, et à quelques semaines de la date officielle de sortie, le Royaume-Uni et ses partenaires commerciaux naviguent en territoire inconnu. Les issues possibles n’apaisent pas les inquiétudes, et il semble de plus en plus évident que le Canada devra se préparer pour un Brexit « dur ». L’enjeu est de taille, car le Royaume-Uni représente l’un des plus importants marchés d’exportation du Canada et une plaque tournante financière.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Conference,00:00.0,30:00.0,8 h,9 h 30,EST,1,1 h,"<p>L&rsquo;actualité autour du Brexit est teintée d&rsquo;incertitudes et de changements quotidiens. Après le rejet de l&rsquo;accord négocié avec l&rsquo;Union européenne par le parlement britannique, et à quelques semaines de la date officielle de sortie, le Royaume-Uni et ses partenaires commerciaux naviguent en territoire inconnu. Les issues possibles n&rsquo;apaisent pas les inquiétudes, et il semble de plus en plus évident que le Canada devra se préparer pour un Brexit &laquo;&nbsp;dur &raquo;. L&rsquo;enjeu est de taille, car le Royaume-Uni représente l&rsquo;un des plus importants marchés d&rsquo;exportation du Canada et une plaque tournante financière.</p>

<p>En tant que cabinet juridique international, nous gardons l&rsquo;œil sur les enjeux mondiaux susceptibles d&rsquo;affecter nos clients. À ce titre, nous avons le plaisir de vous inviter à un déjeuner-conférence exclusif sur ce sujet en la présence de Mme&nbsp;<strong>Chloë Adams</strong>, consule générale de la Grande-Bretagne à Montréal et M.&nbsp;<strong>Antony Phillipson</strong>,&nbsp;haut-commissaire britannique chargé du commerce pour l&rsquo;Amérique du Nord. Ils aborderont entre autres le futur de la relation commerciale entre le Royaume-Uni et le Canada et apporteront un éclairage sur les derniers développements.</p>

<p>Ne manquez pas cette occasion d&rsquo;échanger avec des acteurs œuvrant au cœur de l&rsquo;actualité!</p>
","<p>Cette conférence comptera pour un maximum d&#39;une heure de formation continue conformément aux exigences du Barreau du Québec.</p>
",NULL,00:00.0,mailto:julie-han.angers@gowlingwlg.com,NULL,Inscrivez-vous,93D96357-D023-48D9-82C7-784977F93D3E,NULL,NULL,NULL,NULL,NULL,Conférence,NULL,club Saint-James,33567,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada,0,D4175C8F-4D3F-4641-A45F-20EC57DC60F9,Conférenciers,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
119,/Events/2019/Brexit-Impact-on-UK-Canada-trade,en-GB,04B6A083-571C-4EE6-8BF8-A8538E44D2F3,Brexit: Impact on UK-Canada trade,Brexit: The impact on UK-Canada trade relations,"The current situation surrounding Brexit is fraught with uncertainties and constant changes. Following the British Parliament’s rejection of the agreement negotiated with the European Union, and with only a few weeks to go before the official exit date, the United Kingdom (UK) and its trading partners are navigating uncharted waters. The possible outcomes are not easing any concerns, and it is becoming increasingly apparent that Canada will have to prepare for a “difficult” Brexit. Given that the UK is one of Canada’s largest export markets and a financial hub, there is a lot at stake.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Conference,00:00.0,30:00.0,8:00 AM,9:30 AM,EST,1,1 hour,"<p>The current situation surrounding Brexit is fraught with uncertainties and constant changes. Following the British Parliament&rsquo;s rejection of the agreement negotiated with the European Union, and with only a few weeks to go before the official exit date, the United Kingdom (UK) and its trading partners are navigating uncharted waters. The possible outcomes are not easing any concerns, and it is becoming increasingly apparent that Canada will have to prepare for a &ldquo;difficult&rdquo; Brexit. Given that the UK is one of Canada&rsquo;s largest export markets and a financial hub, there is a lot at stake.</p>

<p>As an international law firm, we are constantly keeping an eye on global issues that have the potential to affect our clients. As such, we are pleased to invite you to an exclusive &ldquo;Brexit&rdquo; breakfast seminar, featuring Ms.&nbsp;<strong>Chloë Adams</strong>, British Consul General in Montreal, and Mr.&nbsp;<strong>Antony Phillipson</strong>, Trade Commissioner for North America. They will discuss, among other things, the future of the commercial relationship between the United Kingdom and Canada and shed light on the latest developments.</p>

<p>This opportunity to interact with some of the key players working at the forefront of the issue is not to be missed!</p>
","<p>This program will count for up to 1 hour of continuing education under the rules of the Barreau du Québec.</p>
",NULL,00:00.0,mailto:julie-han.angers@gowlingwlg.com,NULL,Register for this event,93D96357-D023-48D9-82C7-784977F93D3E,NULL,NULL,NULL,NULL,NULL,Conference,NULL,club Saint-James,33567,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada,0,D4175C8F-4D3F-4641-A45F-20EC57DC60F9,Speakers,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
121,/Events/2019/ThinkHouse-Spring-2019-London,en-GB,BFA7E0FE-DA18-4186-A210-196F86D88793,ThinkHouse Spring 2019 - London,ThinkHouse Spring 2019 - London,"Our Spring ThinkHouse event is fast approaching and our team has been pouring over the latest trends, cases and global developments to provide a programme of training that will help ensure you are ready for the year ahead.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,21-03-2019 08:45,21-03-2019 13:45,08:45,13:45,Local time,1,3,"<p>Our Spring ThinkHouse event is fast approaching and our team has been pouring over the latest trends, cases and global developments to provide a programme of training that will help ensure you are ready for the year ahead.</p>

<p>We will take a closer look at:</p>

<h2>IP update for the commercial lawyer - Kate Swaine</h2>

<p>Changes to the UK Trade Marks Act, a new unitary patent, the potential implications of Brexit - we will consider the latest changes in the world of IP and what they mean for business.</p>

<h2>Brexit clarity - John Cooper and Kieran Laird</h2>

<p>With the original deadline for Brexit only weeks away, a definitive answer on what the world will look like on 30 March seems as elusive as ever. Our experts cut through the tangle of Withdrawal Agreements, Plan Bs, no-deals (chaotic and managed), second referendums and rebellions over arcane Parliamentary process to provide a clear-sighted overview of exactly what is happening in the Brexit process.&nbsp;</p>

<h2>Free Trade Agreements - What do they mean for corporates? - Ursula Johnston</h2>

<p>Businesses that can successfully leverage the global network of trade agreements can unlock lower landed cost for their products, market access for their services and fewer barriers to trade. In a world where a handful of major trading nations are taking a more protectionist outlook there is still a growing number of trade agreements which have been negotiated or are in the process of being negotiated which will potentially negate the broader economic effect. We will examine the current trade agreement landscape in the UK and what a business should do to maximise the potential opportunities thereunder.</p>

<h2>Commercial contract law update - David Lowe</h2>

<p>We will finish with our ever popular roundup of commercial contract law, reviewing the developments of the last 12 months and highlighting cases which should be at the top of your reference list.</p>

<h2>Agenda</h2>

<table>
	<thead>
		<tr>
			<th scope=""col"">Time</th>
			<th scope=""col"">Activity</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>08:45</td>
			<td>Registration</td>
		</tr>
		<tr>
			<td>09:10</td>
			<td>Welcome &amp; Introduction</td>
		</tr>
		<tr>
			<td>09:15</td>
			<td>IP update for the commercial lawyer</td>
		</tr>
		<tr>
			<td>10:00</td>
			<td>Brexit clarity</td>
		</tr>
		<tr>
			<td>10:45</td>
			<td>Mid-morning break</td>
		</tr>
		<tr>
			<td>11:15</td>
			<td>Free trade agreements - what do they mean for corporates?</td>
		</tr>
		<tr>
			<td>12:00</td>
			<td>Commercial contracts update</td>
		</tr>
		<tr>
			<td>12:45</td>
			<td>Lunch</td>
		</tr>
	</tbody>
</table>
","<p>This event is free of charge.</p>

<p>This event will run for three hours. Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession.</p>

<p>Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,28-02-2019 09:54,https://reaction.gowlingwlg.com/reaction/RSGenPage.asp?RSID=GTPGCH2XqJgOLmuzCB7DAw_pSgH4qpLK7QeHDyI1BKM,NULL,Register for this event,9FBE191E-3BCF-45DE-A2BA-338BB194FC9D,NULL,08b9a44c-bb26-4255-9779-296a124fcbee;549cbe28-f188-44cd-85c0-0f4e23a23817,a143cbfd-d333-42a0-89a6-7287894464f1;603d9889-cb72-431a-8d55-60d68706837b,a9daf1f3-b2ff-43d9-b76e-b815bb73aace;ad056fcd-7211-4da7-a9e2-30612d332954;5f39b2b0-1232-4c03-abce-300149d85f9b;e33531f3-9132-4365-bdfc-fe6df95bab54;93b5e080-2149-4ac7-8aa4-d1358ee79d55;a1a4c901-7400-490f-8357-9db439f7dfee,NULL,Seminar,NULL,NULL,NULL,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
122,/Events/2019/Cuba-Policy-under-the-Trump-Administration,en-GB,4EF99B22-ECF5-4498-9E8C-524970353864,Cuba Policy under the Trump Administration,Cuba Policy under the Trump Administration: Extraterritorial Implications,The Cuban Liberty and Democratic Solidarity (Libertad) Act of 1996 strengthens & continues the U.S. embargo against Cuba.,~/getmedia/0d3fa4b6-1ca7-4668-9986-032b1f5fa084/190205-cuba-policy-trump.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Webinar,00:00.0,00:00.0,12:00,13:00,EST,1,1 hour,"<p>The <em>Cuban Liberty and Democratic Solidarity (Libertad) Act</em> of 1996 strengthens and continues the United States embargo against Cuba. Title III of the Act (also known as &quot;Helms-Burton&quot;) authorizes U.S. nationals with claims to confiscated property in Cuba to file suit in U.S. courts against persons that may be &quot;trafficking&quot; in that property.</p>

<p>Gowling WLG and Akerman will provide a status report of the Trump Administration&#39;s Cuba policy and the extraterritorial implications to companies and individuals if Title III of Helms-Burton is implemented.</p>

<h2>Agenda</h2>

<table>
	<thead>
		<tr>
			<th scope=""col"">Time</th>
			<th scope=""col"">Activity</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>12:00</td>
			<td>Opening remarks (France Tenaille, Gowling WLG)</td>
		</tr>
		<tr>
			<td>12:05</td>
			<td>Cuba policy-making and the interplay between the key players (Matthew Aho, Akerman)</td>
		</tr>
		<tr>
			<td>12:20</td>
			<td>Perspective from Havana (Gregory Biniowsky, Gowling WLG)</td>
		</tr>
		<tr>
			<td>12:25</td>
			<td>Analysis of Title III (Pedro A. Freyre, Akerman)</td>
		</tr>
		<tr>
			<td>12:45</td>
			<td>Canada&#39;s <em>Foreign Extraterritorial Measures Act</em> (Richard Dearden, Gowling WLG)</td>
		</tr>
		<tr>
			<td>12:55</td>
			<td>Q&amp;A (France Tenaille, Gowling WLG)</td>
		</tr>
	</tbody>
</table>
",NULL,NULL,00:00.0,https://sites-gowlingwlg.vuturevx.com/103/4259/landing-pages/event-registration-(blank-form).asp,NULL,Register for this webinar,C41373B4-86B9-4F74-8894-0B0BB7DDBD18,NULL,c774be76-80ec-4195-83a3-5850b5e2a4a2;bac2f2f8-09c0-4d06-b0c8-98d9567adfc7,NULL,212c3002-b886-4871-a32d-fff0b120b92d;104b250f-b3c2-47df-9df6-1f1c11cf8908;d78233a4-45b3-42d2-97bc-0db06ee57cd2,NULL,Webinar,NULL,Online event,694,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada;GWLG.Cuba;GWLG.Global;GWLG.UnitedStates,0,NULL,Gowling WLG Speakers,NULL,NULL,NULL,"Commercial Litigation, International Trade and Customs",NULL,NULL,NULL,NULL,NULL
123,/Events/2019/Growing-trade-and-investment-opportunities,en-GB,27A0FC1D-1C94-4A52-AE11-811398EAB034,Growing trade and investment opportunities,Ireland & Canada: Growing trade and investment opportunities,"With Mason Hayes & Curran we are pleased to host the Irish Minister for Communications, Climate Action and Environment Richard Bruton, Ambassador Jim Kelly and a panel of experts for a forum on how companies can benefit from investing in Ireland and its ""springboard"" effect into Europe.",~/getmedia/63ebd6fe-ac29-4aff-b650-b83d67aea636/190213-Ireland-Canada-event-tile.jpg.xml?width=930&height=450&ext=.jpg,Ireland & Canada: Growing trade and investment opportunities,GWLG.Seminar,08-03-2019 07:30,08-03-2019 10:00,07:30,10:00,EST,1,1.5 hours,"<p>Home to a huge talent pool -&nbsp;and one of Europe&#39;s lowest corporate tax rates -&nbsp;Ireland has caught the attention of many Canadian businesses as a country favourable to foreign expansion and growth.</p>

<p>Canada and Ireland are each significant trade partners and investors in each other&#39;s economies. This trade and investment covers a variety of sectors including renewable energy, real estate and technology.</p>

<p>Gowling WLG and Mason Hayes &amp; Curran are pleased to host the Irish Minister for Communications, Climate Action and Environment Richard Bruton, Ambassador Jim Kelly and a panel of businesspeople and experts for a fascinating forum on how companies across diverse industries can benefit from investing in Ireland and its &quot;springboard&quot; effect into Europe.</p>

<p>Please join us for this engaging and interactive seminar. Space is limited, so be sure to RSVP as soon as possible.</p>

<p>*<em>This program will count for up to 1.5 hours of substantive credits toward the mandatory CPD requirements of the Law Society of Ontario.</em></p>

<h2><strong>Agenda</strong></h2>

<table class=""format"">
	<thead>
		<tr>
			<th scope=""col"">Time</th>
			<th scope=""col"">&nbsp;</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>07:30</td>
			<td>Registration and breakfast</td>
		</tr>
		<tr>
			<td>08:00</td>
			<td>Opening remarks &amp; keynote</td>
		</tr>
		<tr>
			<td>08:30</td>
			<td>Panel discussion</td>
		</tr>
		<tr>
			<td>09:30</td>
			<td>Q&amp;A</td>
		</tr>
	</tbody>
</table>

<h2>Event partners</h2>

<p><img alt="""" src=""~/getmedia/082aa1e6-00a6-497c-9933-cf3c3cf87131/190213-mason-hayes-curran-logo.png.xml?width=100&amp;height=100"" style=""width: 100px; height: 100px;"" /> <img alt="""" src=""~/getmedia/dea5bb21-c406-4fbd-88f8-63e4f5ca8bf0/190213-icba-logo.jpg.xml"" style=""float: centre;"" /> <img alt="""" src=""~/getmedia/eecf0521-b00a-477d-990a-9651b8be41c3/190213-icccto-logo.png.xml"" style=""float: centre;"" /> <img alt="""" src=""~/getmedia/6e4ec9f4-b063-4b83-8f54-c0c5d903721c/190213-ida-ireland-logo.png.xml"" style=""float: centre;"" /></p>

<h2>Speakers</h2>

<p><strong>Keynote speakers</strong></p>

<ul>
	<li>Ambassador Jim Kelly - Ambassador of Ireland to Canada</li>
	<li>Minister Richard Bruton - Irish Minister for Communications, Climate Action and Environment</li>
</ul>

<p><strong>Speakers</strong></p>

<ul>
	<li>Mike Dufton - Managing Director, Volaris Group</li>
	<li>Paul Finkbeiner - Executive Vice-President Global Head of Real Estate, Great-West Lifeco</li>
	<li>Deirdre Moran - Country Manager, Canada, IDA Ireland</li>
	<li>Àine Cadogan - Senior Associate, Technology &amp; Privacy, Mason Hayes &amp; Curran</li>
	<li>Jamie Fitzmaurice - Partner, Institutional Real Estate, Mason Hayes &amp; Curran</li>
	<li>David Mangan - Partner, Equity Capital Markets &amp; Securities, Mason Hayes &amp; Curran</li>
</ul>
",NULL,NULL,06-03-2019 15:57,https://sites-gowlingwlg.vuturevx.com/103/4264/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,B2DC4461-DC66-4F96-9AE6-32BC2B14259D,NULL,NULL,NULL,7e822e16-356b-4251-84ae-83b9293fa418;5612ce16-ad92-48b7-99fb-efd91734f211,NULL,Seminar,NULL,Toronto,63,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada,0,E6178A44-15B9-46D0-9626-ABF4FB44B555,Gowling WLG Speakers,t-white,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
124,/Events/2019/Nuclear-Power-for-Mining-Operations-Role-of-SMRs,en-GB,5796D208-BACD-4805-948A-251A92954575,Nuclear Power for Mining Operations: Role of SMRs,Nuclear power for mining operations: The future role of SMRs,"In conjunction with the ever-popular annual PDAC Convention, please join us on March 4th for a morning seminar on the application of small modular reactors (SMRs) in the mining sector.",~/getmedia/9775360b-9307-4848-afef-b26a182b1fb4/190215-Mining-Event-Toronto.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Seminar,04-03-2019 07:30,04-03-2019 22:15,7:30 AM,10:15 AM,EST,1,2 hours of substantive credit,"<p>In conjunction with the ever-popular annual PDAC Convention, please join us on March 4th for a morning seminar on the application of small modular reactors (SMRs) in the mining sector.</p>

<p>Over breakfast, you will hear an update on the Canadian government&#39;s SMR Roadmap which was released in the fall of 2018. You will also gain insight into the Canadian mining industry&#39;s perspective and hear from reactor developers about their views of the application of SMRs to mining operations.</p>

<p>We hope to see you at this informative discussion to kick off a successful week at PDAC 2019!</p>

<h2>Speakers</h2>

<table background=""transparent"" border=""1"" bordercolor=""transparent"" cellpadding=""1"" cellspacing=""1"" style=""width:600px;"" valign=""top"" width=""500"">
	<tbody>
		<tr valign=""top"">
			<td width=""131"">
			<p><img alt="""" src=""~/getmedia/fb0d724f-bac0-49ba-8c83-51257399317c/Diane-Cameron.jpg.xml"" /></p>

			<p><strong>Diane Cameron</strong></p>

			<p>Director of Nuclear Energy, Natural Resources Canada</p>
			</td>
			<td width=""131"">
			<p><img alt="""" src=""~/getmedia/fdc80cc5-c2ac-488f-ad73-f2a0cc66927a/Neil-Alexander.jpg.xml"" /></p>

			<p><strong>Neil Alexander</strong></p>

			<p>Principal, Bucephalus Consulting</p>
			</td>
			<td width=""131"">
			<p><img alt="""" src=""~/getmedia/af42cf07-a20c-4f90-a257-4b6673e3a445/Anurag-Gupta.jpg.xml"" /></p>

			<p><strong>Anurag Gupta</strong></p>

			<p>Partner and Global Lead for Power &amp; Infrastructure, KPMG</p>
			</td>
			<td width=""131"">
			<p><img alt="""" src=""~/getmedia/423866bb-bc78-4012-ae15-534b7a0df384/Brendan-Marshall.jpg.xml"" /></p>

			<p><strong>Brendan Marshall</strong></p>

			<p>Vice President of Economic and Northern Affairs, Mining Association of Canada.</p>
			</td>
		</tr>
	</tbody>
</table>

<table background=""transparent"" border=""1"" bordercolor=""transparent"" cellpadding=""1"" cellspacing=""1"" style=""width:450px;"" valign=""top"" width=""540"">
	<tbody>
		<tr valign=""top"">
			<td width=""144"">
			<p><img alt="""" src=""~/getmedia/1451a69e-49b9-4ed8-9cce-91aaf1bfb54d/Simon-Irish.jpg.xml"" /></p>

			<p><b>Simon Irish</b></p>

			<p>CEO, Terrestrial Energy</p>
			</td>
			<td width=""144"">
			<p><img alt="""" src=""~/getmedia/8ad7b878-3f02-4837-b3b8-f45adc0ca388/Sean-Donnelly.jpg.xml"" /></p>

			<p><strong>Sean Donnelly</strong></p>

			<p>Team Lead - Canada, U-Battery</p>
			</td>
			<td width=""144"">
			<p><img alt="""" src=""~/getmedia/eb40149c-06ac-4553-b582-fe1fdc27f4c1/Bob-Walker.jpg.xml"" /></p>

			<p><b>Bob Walker</b></p>

			<p>Retired, Former President and CEO of AECL</p>
			</td>
		</tr>
	</tbody>
</table>

<h3>Additional Speakers:</h3>

<p><strong>Tim Peterson, President, Global First Power</strong></p>

<h2>Agenda</h2>

<table border=""1"" cellpadding=""1"" cellspacing=""1"" style=""width:600px;"">
	<tbody>
		<tr>
			<td width=""64"">7:30 a.m</td>
			<td width=""423"">
			<p><strong>Registration and Breakfast</strong></p>
			</td>
		</tr>
		<tr>
			<td>8:00 a.m.</td>
			<td>
			<p><strong>Welcome and Introductions</strong></p>

			<p>Paul Murphy, Special Advisor, Gowling WLG</p>
			</td>
		</tr>
		<tr>
			<td>8:05 a.m.</td>
			<td>
			<p><strong>Update on the Canadian Government&#39;s SMR Roadmap</strong></p>

			<p>Diane Cameron, Vice President of Economic and Northern Affairs,<br />
			Mining Association of Canada</p>
			</td>
		</tr>
		<tr>
			<td>8:25 a.m.</td>
			<td>
			<p><strong>Canadian Mining Industry&#39;s perspective on SMR roadmap</strong></p>

			<p>Brendan Marshall, Vice President of Economic and Northern Affairs,<br />
			Mining Association of Canada</p>
			</td>
		</tr>
		<tr>
			<td>8:45 a.m.</td>
			<td>
			<p><strong>Panel Discussion # 1 and Q&amp;A</strong></p>

			<p><em>Moderator:</em> Paul Murphy &ndash; Special Adviser, Gowling WLG<br />
			<em>Panelists: </em><br />
			Neil Alexander &ndash; Principal, Bucephalus Consulting<br />
			Diane Cameron &ndash; Director of Nuclear Energy, Natural Resources Canada<br />
			Anurag Gupta &ndash; Partner and Global Lead for Power &amp; Infrastructure, KPMG<br />
			Brendan Marshall &ndash; Vice President of Economic &amp; Northern Affairs, Mining Association of Canada</p>
			</td>
		</tr>
		<tr>
			<td>9:30 a.m.</td>
			<td>
			<p><strong>Panel Discussion #2 and Q&amp;A - SMR Vendors&nbsp;</strong></p>

			<p><em>Moderator:</em> Paul Murphy &ndash; Special Adviser, Gowling WLG<br />
			<em>Panelists:</em><br />
			Sean Donnelly &ndash; Team Lead &ndash; Canada, U-Battery<br />
			Simon Irish &ndash; CEO, Terrestrial Energy<br />
			Tim Peterson &ndash; President, Global First Power<br />
			Bob Walker &ndash; Retired; Former President &amp; CEO of AECL</p>
			</td>
		</tr>
		<tr>
			<td>10:15 a.m.</td>
			<td><strong>Event concludes</strong></td>
		</tr>
	</tbody>
</table>

<p>&nbsp;</p>
","<p><em>This program will count for up to 2 hours of substantive credits toward the mandatory CPD requirements of the Law Society of Ontario.</em></p>
",NULL,04-03-2019 15:02,https://sites-gowlingwlg.vuturevx.com/103/4293/landing-pages/event-registration-(blank-form).asp?sid=blankform,NULL,Register for this event,B2DC4461-DC66-4F96-9AE6-32BC2B14259D,f1e960f5-8231-4c56-b7bf-9898ebb538c5,NULL,NULL,1306a2b0-6e66-4e76-b253-7b3c3ade2914,NULL,Seminar,Paul M. Murphy,Toronto,63,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/103/4293/landing-pages/event-registration-(blank-form).asp?sid=blankform,Register for this seminar,GWLG.Canada,0,NULL,Moderator,NULL,NULL,Energy,NULL,NULL,NULL,NULL,NULL,NULL
125,/Events/2019/The-Impact-of-the-Redwater-Energy-Decision,en-GB,4A224E04-5484-46A6-AB5C-EC3DFF8CBD30,The Impact of the Redwater Energy Decision,The Impact of the Redwater Energy Decision,Join Gowling WLG's Tom Cumming and Caireen Hanert for an in-depth discussion about the significance of the decision for Canada's natural resources and financial services sectors and the insolvency system.,~/getmedia/3a7c20d1-c54e-4c46-97a9-7e5bcb785939/190219-redwater-event-tile.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Seminar,25-02-2019 08:30,25-02-2019 10:30,08:30,10:30,Local time,0,NULL,"<p>On January 31, 2019, the Supreme Court of Canada released its decision in <em>Orphan Well Association, Alberta Energy Regulator (AER) v Grant Thornton Limited</em> in a closely watched appeal by the Alberta Energy Regulator and the Orphan Well Association.</p>

<p>Join Gowling WLG&#39;s Tom Cumming and Caireen Hanert for an in-depth discussion about the significance of the decision for Canada&#39;s natural resources and financial services sectors and the insolvency system. Tom Cumming leads the firm&#39;s Calgary Restructuring and Insolvency Group and was co-counsel to Grant Thornton Ltd., Redwater&#39;s receiver, at the Court of Queen&#39;s Bench, the Court of Appeal and the Supreme Court of Canada. Caireen Hanert, prior to joining Gowling WLG, represented the Canadian Association of Insolvency and Restructuring Professionals before the Court of Appeal and the Supreme Court of Canada.</p>",NULL,NULL,25-02-2019 10:30,https://sites-gowlingwlg.vuturevx.com/95/4312/landing-pages/event-registration-(blank-form).asp,NULL,Register now!,E936AE5C-9349-4E26-B125-7F86D4C0D437,f1e960f5-8231-4c56-b7bf-9898ebb538c5;06cecb4c-c959-4674-9047-d5d8ee8c673c,NULL,NULL,4c19a7dc-0f41-4d79-bee9-5d126e9e317f;46503468-daa2-4925-9e67-563efcae08f8,NULL,Seminar,"Tom Cumming, Caireen E. Hanert  ",Hudson,39185,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,Speakers,NULL,NULL,"Energy, Financial Institutions & Services",NULL,NULL,NULL,NULL,NULL,NULL
126,/Events/2019/ThinkHouse-Abu-Dhabi-Spring-2019,en-GB,AF3369DC-9CC7-4555-85FB-8E94845C4ACE,ThinkHouse Abu Dhabi - Spring 2019,ThinkHouse Abu Dhabi - Spring 2019,At our ThinkHouse event in Abu Dhabi we will we will take a look at tech developments and disruptors and how to protect your Intellectual Property rights in the Middle East.,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,18-03-2019 17:00,18-03-2019 19:30,17:00,19:30,Local time,0,NULL,"<p>We are excited to announce that we are bringing our in-house lawyer programme, ThinkHouse, to Abu Dhabi. ThinkHouse provides a range of free seminars, networking opportunities and resources, tailored exclusively for in-house lawyers.</p>

<p>At this inaugural ThinkHouse event in Abu Dhabi we will we will take a look at tech developments and disruptors and how to protect your Intellectual Property rights in the Middle East.</p>

<h2>What is Tech and what does it mean to you and your business?</h2>

<p>Artificial Intelligence, connected and autonomous vehicles, <abbr title=""Internet of Things"">IoT</abbr>, blockchain and cryptocurrency, Fintech, Prop-Tech, digital transformation or Everything-as-a-Service; technology is complex, it&#39;s everywhere and part of every sector but it means different things to different organizations.</p>

<p>So what does it mean to you and your business? How does it impact you as a lawyer and your stakeholders now, and in the future? This &quot;helicopter&quot; view of tech will separate the hype from the reality for you and your business.</p>

<h2>Protecting your Intellectual Property Rights in the Middle East</h2>

<p>Having looked at tech developments and disruptors, we will then focus on how you are able to protect your intellectual property rights in and around tech, as well as non-tech related IP.</p>

<p>We will look at capturing, protecting and enforcing IP rights in the region and how best to protect these important commercial assets in order to obtain and maintain a competitive advantage.</p>

<p>In keeping with the tech, disruption and innovation theme, we are delighted to be holding the inaugural session in <a href=""https://www.kryptolabs.com"" target=""_blank"">KryptoLabs</a>, a global incubator and co-working space in Abu Dhabi, which has already seen the launch of many successful early stage start-ups.</p>

<h2>Agenda</h2>

<table>
	<thead>
		<tr>
			<th scope=""col"">Time</th>
			<th scope=""col"">Activity</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>17:00</td>
			<td>Registration and refreshments</td>
		</tr>
		<tr>
			<td>17:30</td>
			<td>What Tech means to your business</td>
		</tr>
		<tr>
			<td>18:00</td>
			<td>Protecting IP in the Middle East</td>
		</tr>
		<tr>
			<td>18:30</td>
			<td>Q&amp;A</td>
		</tr>
		<tr>
			<td>18:45</td>
			<td>Networking and refreshments</td>
		</tr>
		<tr>
			<td>19:30</td>
			<td>Ends</td>
		</tr>
	</tbody>
</table>
","<p>This event is free of charge.<br />
<br />
Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,17-03-2019 23:59,mailto:abudhabi.thinkhouse@gowlingwlg.com?subject=ThinkHouse Abu Dhabi  – 18 March 2019 (webform),NULL,Register for this event,C3747C69-48D1-471D-BDB8-285D057217AE,NULL,NULL,a143cbfd-d333-42a0-89a6-7287894464f1,NULL,NULL,Seminar,NULL,NULL,NULL,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,NULL,0,B58CF9C3-DC86-4783-834F-1954E7C865B5,Speaker(s),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
127,/Events/2019/ThinkHouse-Foundations-Spring-Seminar-Birmingham,en-GB,F5C97B01-F863-45D5-B5CE-BF4AEFDECEE0,ThinkHouse Foundations Spring Seminar - Birmingham,ThinkHouse Foundations Spring Seminar - Birmingham,"Following the success of our autumn seminar, we have decided once again to combine our popular legal sessions with a 'soft skills' workshop.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,14-05-2019 09:00,14-05-2019 13:45,09:00,13:45,BST,1,4,"<p>ThinkHouse Foundations supports the development of paralegals, trainees and lawyers of up to five years&#39; PQE by providing insight into the latest legal developments and hot topics, training resources, and a chance to meet your peers and exchange ideas.</p>

<p>Following the success of our autumn seminar, we have decided once again to combine our popular legal sessions with a &#39;soft skills&#39; workshop. We will be taking a closer look at:</p>

<h2>Free Trade Agreements - What do they mean for corporates?</h2>

<p>Businesses that can successfully leverage the global network of trade agreements can unlock lower landed cost for their products, market access for their services and fewer barriers to trade. We will examine the current trade agreement landscape in the UK and what a business should do to maximise the potential opportunities thereunder.</p>

<h2>Contract Termination and the impact of Brexit</h2>

<p>We will run through the basics of contract termination, including a recap on the key points that parties need to consider when deciding whether and on what basis to terminate, and advice on what you need to think about upon receiving a termination notice. We will also touch upon the impact of Brexit on this area, and take a look at the recent decision in Canary Wharf v European Medicines Agency.</p>

<h2>Effective Communication and Influencing Skills</h2>

<p>A fun, engaging and insightful session on how to enhance your skills in communication and influence. It doesn&#39;t matter how good we are at our job, if we&#39;re not able to communicate well with others, our career progression and satisfaction is capped. Our ability to engage effectively with colleagues and clients is key. No matter your personal style, you will walk away with real life insights and tools on how to elevate your personal impact.</p>

<h2>Agenda</h2>

<table>
	<thead>
		<tr>
			<th>Time</th>
			<th>Agenda item</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>09:00</td>
			<td>Registration &amp; networking</td>
		</tr>
		<tr>
			<td>09:30</td>
			<td>Welcome &amp; Introduction</td>
		</tr>
		<tr>
			<td>09:40</td>
			<td>Free Trade Agreements - What do they mean for corporates?</td>
		</tr>
		<tr>
			<td>10:15</td>
			<td>Contract Termination and the impact of Brexit</td>
		</tr>
		<tr>
			<td>10:50</td>
			<td>Mid-morning break</td>
		</tr>
		<tr>
			<td>11:15</td>
			<td>Effective communication and influence</td>
		</tr>
		<tr>
			<td>12:45</td>
			<td>Lunch &amp; networking</td>
		</tr>
	</tbody>
</table>
","<p>This event is free of charge.</p>

<p>This event will run for four hours. Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession.<br />
<br />
Please do get in touch if you have any further queries about this event and CPD.<br />
<br />
Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,10-05-2019 09:30,https://reaction.gowlingwlg.com/reaction/RSGenPage.asp?RSID=8Y2OBvW8mHLNPfO8TkJ8xMElTKQLGZr61IythTLhFbo,NULL,Click here to Register,58076178-DA60-4AB6-A07C-EF250971EBF7,NULL,NULL,a143cbfd-d333-42a0-89a6-7287894464f1,03bca839-f0af-451c-b9c1-b89feb359fb1;009e72fc-178d-4b0b-805e-c2ef1a0d5e00;6965a192-e42d-4e06-af1e-a4ebb072b416;ca67aa19-bd53-48e1-97b2-b3dec72a50c8;36577668-7f35-419a-a252-68405ab1f2bd,NULL,Seminar,NULL,NULL,NULL,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
128,/Events/2019/ThinkHouse-Foundations-Spring-Seminar-London,en-GB,31928E36-B9CE-4954-8C0E-1FA1DDFD2ED8,ThinkHouse Foundations Spring Seminar - London,ThinkHouse Foundations Spring Seminar - London,"Following the success of our autumn seminar, we have decided once again to combine our popular legal sessions with a 'soft skills' workshop.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,16-05-2019 09:00,16-05-2019 13:45,09:00,13:45,BST,1,4,"<p>ThinkHouse Foundations supports the development of paralegals, trainees and lawyers of up to five years&#39; PQE by providing insight into the latest legal developments and hot topics, training resources, and a chance to meet your peers and exchange ideas.</p>

<p>Following the success of our autumn seminar, we have decided once again to combine our popular legal sessions with a &#39;soft skills&#39; workshop. We will be taking a closer look at:</p>

<h2>Free Trade Agreements - What do they mean for corporates?</h2>

<p>Businesses that can successfully leverage the global network of trade agreements can unlock lower landed cost for their products, market access for their services and fewer barriers to trade. We will examine the current trade agreement landscape in the UK and what a business should do to maximise the potential opportunities thereunder.</p>

<h2>Contract Termination and the impact of Brexit</h2>

<p>We will run through the basics of contract termination, including a recap on the key points that parties need to consider when deciding whether and on what basis to terminate, and advice on what you need to think about upon receiving a termination notice. We will also touch upon the impact of Brexit on this area, and take a look at the recent decision in Canary Wharf v European Medicines Agency.</p>

<h2>Effective Communication and Influencing Skills</h2>

<p>A fun, engaging and insightful session on how to enhance your skills in communication and influence. It doesn&#39;t matter how good we are at our job, if we&#39;re not able to communicate well with others, our career progression and satisfaction is capped. Our ability to engage effectively with colleagues and clients is key. No matter your personal style, you will walk away with real life insights and tools on how to elevate your personal impact.</p>

<h2>Agenda</h2>

<table>
	<thead>
		<tr>
			<th>Time</th>
			<th>Agenda item</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>09:00</td>
			<td>Registration &amp; networking</td>
		</tr>
		<tr>
			<td>09:30</td>
			<td>Welcome &amp; Introduction</td>
		</tr>
		<tr>
			<td>09:40</td>
			<td>Free Trade Agreements - What do they mean for corporates?</td>
		</tr>
		<tr>
			<td>10:15</td>
			<td>Contract Termination and the impact of Brexit</td>
		</tr>
		<tr>
			<td>10:50</td>
			<td>Mid-morning break</td>
		</tr>
		<tr>
			<td>11:15</td>
			<td>Effective communication and influence</td>
		</tr>
		<tr>
			<td>12:45</td>
			<td>Lunch &amp; networking</td>
		</tr>
	</tbody>
</table>
","<p>This event is free of charge.</p>

<p>This event will run for four hours. Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession.</p>

<p>Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,10-05-2019 09:30,https://reaction.gowlingwlg.com/reaction/RSGenPage.asp?RSID=8Y2OBvW8mHLNPfO8TkJ8xMElTKQLGZr61IythTLhFbo,NULL,Click here to Register,9FBE191E-3BCF-45DE-A2BA-338BB194FC9D,NULL,NULL,a143cbfd-d333-42a0-89a6-7287894464f1,03bca839-f0af-451c-b9c1-b89feb359fb1;009e72fc-178d-4b0b-805e-c2ef1a0d5e00;6965a192-e42d-4e06-af1e-a4ebb072b416;ca67aa19-bd53-48e1-97b2-b3dec72a50c8;36577668-7f35-419a-a252-68405ab1f2bd,NULL,Seminar,NULL,NULL,NULL,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
129,/Events/2019/ThinkHouse-Brands-Design-Workshop-Birmingham,en-GB,859DC522-C538-4461-BB05-FB6B4442341B,ThinkHouse Brands & Design Workshop - Birmingham,ThinkHouse Brands & Design Workshop - Birmingham,"During this workshop our IP experts will guide senior in-house counsel through recent developments in brands and designs law and practice, giving practical tips and guidance on how to get the best from your brand and design portfolio.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,11-06-2019 09:00,11-06-2019 13:30,09:00,13:30,BST,1,2.5,"<p>In recent months we have seen a plethora of changes to IP law, with varying levels of impact on UK businesses. During this workshop our IP experts will guide senior in-house counsel through recent developments in brands and designs law and practice, giving practical tips and guidance on how to get the best from your brand and design portfolio.&nbsp;</p>

<p>We will consider:</p>

<h3>Designs in a changing world</h3>

<p>John Coldham will look at how design law can help businesses, how to make the most of the options available, and what Brexit and other factors mean for you.</p>

<h3>EU Copyright Directive -&nbsp;What you need to know</h3>

<p>Alice Stagg will review the key provisions and potential impact of the recently - and controversially - adopted Directive on Copyright in the Digital Single Market.</p>

<h3>IP Enforcement - Hints and tips</h3>

<p>Kate Swaine will run through the top ten things you need to know to enforce your IP effectively.</p>

<h3>IP Enforcement in France -&nbsp;Insight into the latest news</h3>

<p>Céline Bey will talk about the latest French news on the enforcement and enhancement of IP rights in France under the new law for economic growth and recent case law.</p>

<h3>Agenda</h3>

<table>
	<thead>
	</thead>
	<tbody>
		<tr>
			<td width=""35"">09:00</td>
			<td width=""365"">Registration &amp; networking</td>
		</tr>
		<tr>
			<td>09:30</td>
			<td>Welcome &amp; Introduction</td>
		</tr>
		<tr>
			<td>09:35</td>
			<td>Designs in a changing world</td>
		</tr>
		<tr>
			<td>10:15</td>
			<td>EU Copyright Directive - What you need to know</td>
		</tr>
		<tr>
			<td>10:55</td>
			<td>
			<p align=""left"">Coffee break</p>
			</td>
		</tr>
		<tr>
			<td>11:15</td>
			<td>IP Enforcement - Hints and tips</td>
		</tr>
		<tr>
			<td>11:50</td>
			<td>IP Enforcement in France - Insight into the latest news</td>
		</tr>
		<tr>
			<td>12:30</td>
			<td>Lunch &amp; networking</td>
		</tr>
	</tbody>
</table>
","<p data_liveedit_tagid=""000000000EB88560"">This event is free of charge.</p>

<p data_liveedit_tagid=""000000000EB888F0"">This event will run for 2.5&nbsp;hours. Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession.<br data_liveedit_tagid=""000000000EB88B50"" />
<br data_liveedit_tagid=""000000000EB88D90"" />
Please do get in touch if you have any further queries about this event and CPD.<br data_liveedit_tagid=""000000000EB88FD0"" />
<br data_liveedit_tagid=""000000000EB89210"" />
Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,07-06-2019 09:30,https://reaction.gowlingwlg.com/reaction/RSGenPage.asp?RSID=ytkD7H2uErFnIr0WgwOPk_pB_8dT6DkwGdrQiXBh568,NULL,Register for this event,58076178-DA60-4AB6-A07C-EF250971EBF7,NULL,NULL,a143cbfd-d333-42a0-89a6-7287894464f1,5f39b2b0-1232-4c03-abce-300149d85f9b;9ff8fd1a-c2f5-4084-b72e-4aa02fdf3312;073a5651-6d42-44aa-b017-5f38488a4aef;ad4cc2a0-5825-4d92-930d-64226a7659b3,NULL,Seminar,NULL,Birmingham,70,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
130,/Events/2019/ThinkHouse-Brands-Design-Workshop-London,en-GB,C0AFB5CC-3167-49AD-A33F-73BF25CFF115,ThinkHouse Brands & Design Workshop - London,ThinkHouse Brands & Design Workshop - London,"During this workshop our IP experts will guide senior in-house counsel through recent developments in brands and designs law and practice, giving practical tips and guidance on how to get the best from your brand and design portfolio.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,12-06-2019 09:00,12-06-2019 13:30,09:00,13:30,BST,1,2.5,"<p>In recent months we have seen a plethora of changes to IP law, with varying levels of impact on UK businesses. During this workshop our IP experts will guide senior in-house counsel through recent developments in brands and designs law and practice, giving practical tips and guidance on how to get the best from your brand and design portfolio.&nbsp;</p>

<p>We will consider:</p>

<h3>Designs in a changing world</h3>

<p>John Coldham will look at how design law can help businesses, how to make the most of the options available, and what Brexit and other factors mean for you.</p>

<h3>EU Copyright Directive -&nbsp;What you need to know</h3>

<p>Alice Stagg will review the key provisions and potential impact of the recently - and controversially - adopted Directive on Copyright in the Digital Single Market.</p>

<h3>IP Enforcement - Hints and tips</h3>

<p>Kate Swaine will run through the top ten things you need to know to enforce your IP effectively.</p>

<h3>IP Enforcement in France -&nbsp;Insight into the latest news</h3>

<p>Céline Bey will talk about the latest French news on the enforcement and enhancement of IP rights in France under the new law for economic growth and recent case law.</p>

<h3>Agenda</h3>

<table>
	<thead>
	</thead>
	<tbody>
		<tr>
			<td width=""35"">09:00</td>
			<td width=""365"">Registration &amp; networking</td>
		</tr>
		<tr>
			<td>09:30</td>
			<td>Welcome &amp; Introduction</td>
		</tr>
		<tr>
			<td>09:35</td>
			<td>Designs in a changing world</td>
		</tr>
		<tr>
			<td>10:15</td>
			<td>EU Copyright Directive - What you need to know</td>
		</tr>
		<tr>
			<td>10:55</td>
			<td>
			<p align=""left"">Coffee break</p>
			</td>
		</tr>
		<tr>
			<td>11:15</td>
			<td>IP Enforcement - Hints and tips</td>
		</tr>
		<tr>
			<td>11:50</td>
			<td>IP Enforcement in France - Insight into the latest news</td>
		</tr>
		<tr>
			<td>12:30</td>
			<td>Lunch &amp; networking</td>
		</tr>
	</tbody>
</table>
","<p data_liveedit_tagid=""000000000EB88560"">This event is free of charge.</p>

<p data_liveedit_tagid=""000000000EB888F0"">This event will run for 2.5&nbsp;hours. Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession.<br data_liveedit_tagid=""000000000EB88B50"" />
<br data_liveedit_tagid=""000000000EB88D90"" />
Please do get in touch if you have any further queries about this event and CPD.<br data_liveedit_tagid=""000000000EB88FD0"" />
<br data_liveedit_tagid=""000000000EB89210"" />
Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,07-06-2019 09:30,https://reaction.gowlingwlg.com/reaction/RSGenPage.asp?RSID=ytkD7H2uErFnIr0WgwOPk_pB_8dT6DkwGdrQiXBh568,NULL,Register for this event,9FBE191E-3BCF-45DE-A2BA-338BB194FC9D,NULL,NULL,a143cbfd-d333-42a0-89a6-7287894464f1,5f39b2b0-1232-4c03-abce-300149d85f9b;9ff8fd1a-c2f5-4084-b72e-4aa02fdf3312;073a5651-6d42-44aa-b017-5f38488a4aef;ad4cc2a0-5825-4d92-930d-64226a7659b3,NULL,Seminar,NULL,London,71,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
132,/Events/2019/ThinkHouse-TUPE-Club-Workshop,en-GB,668A06B9-4F26-4403-B02D-8A1E74627591,ThinkHouse TUPE Club Workshop,ThinkHouse TUPE Club Workshop,"This workshop is designed to help you master the fundamental concepts of TUPE if it's not something you regularly deal with, or want a refresher on how TUPE works.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,03-07-2019 08:45,03-07-2019 11:45,8.45,11.45,BST,1,2.5,"<p>Join us for our next ThinkHouse TUPE Club event for in-house lawyers. This workshop is designed to help you master the fundamental concepts of TUPE if it&#39;s not something you regularly deal with, or want a refresher on how TUPE works. The Back to Basics session will cover the key issues that arise, and how to avoid liability and manage in practice the collective and individual rights under TUPE.</p>

<p>The issues covered in the workshop will include:</p>

<ul>
	<li>When does TUPE apply?</li>
	<li>What is the effect of TUPE?</li>
	<li>What are the TUPE information and consultation obligations for transferors and transferees?</li>
	<li>How to mitigate the risks if TUPE may apply</li>
</ul>

<p>Our speakers, Jane Fielding and Rebecca Jones will run through these issues and give you practical tips on dealing with the most common tricky issues arising from them.</p>

<p>During this workshop you will have the opportunity to ask questions and work through an interactive case study, applying the theory we have discussed to a practical scenario.</p>

<p>Following the workshop we would invite you to stay for coffee and networking, giving you the opportunity to ask further questions and dig a little deeper into issues discussed during the session.</p>

<h2>Agenda</h2>

<table>
	<tbody>
		<tr>
			<td>08:45</td>
			<td>Registration and Networking</td>
		</tr>
		<tr>
			<td rowspan=""3"">09:15</td>
			<td>Welcome &amp; introduction</td>
		</tr>
		<tr>
			<td>TUPE Back to Basics Presentation</td>
		</tr>
		<tr>
			<td>Interactive Case study workshop</td>
		</tr>
		<tr>
			<td>11:15</td>
			<td>Coffee and Networking</td>
		</tr>
	</tbody>
</table>
","<p>This event is free of charge.</p>

<p>This event will run for 2.5 hours. Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession.</p>

<p>Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,19-06-2019 08:18,https://reaction.gowlingwlg.com/reaction/RSGenPage.asp?RSID=-Esf3_Kaiv8pA1g0K6IbjrQv_866E8H8Ew6-_7QVoA8,NULL,Register for this event,9FBE191E-3BCF-45DE-A2BA-338BB194FC9D,NULL,d8837737-40d2-4472-8a9e-ba4101ec2105,a143cbfd-d333-42a0-89a6-7287894464f1,799cf040-59c7-4986-825a-e4b909364823;144241c0-43c9-4f47-ab36-eb138f49f18e,NULL,Seminar,NULL,London,71,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
133,/Events/2019/ThinkHouse-Autumn-Seminar-Birmingham,en-GB,A998DC4E-3A65-46F2-8FEA-CFC32929F862,ThinkHouse Autumn Seminar - Birmingham,ThinkHouse Autumn Seminar - Birmingham,"Our Autumn ThinkHouse Seminar in Birmingham offers an opportunity for GCs, Heads of Leagal and senior in-house counsel to network with peers and receive some valuable business insight and training on current hot-topics.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,19-09-2019 09:00,19-09-2019 13:30,9,13:30,BST,1,3,"<p>Our Autumn ThinkHouse Seminar offers an opportunity for GCs, Heads of Legal and senior in-house counsel to network with peers and receive some valuable business insight and training on current hot-topics. If your skill-set places you in an intermediate or advanced level within your in-house legal role, then this seminar is for you.</p>

<p>We will be joined by five experts from across our firm to discuss the following topics:</p>

<h2>A New Era for Environmental Liability and Compliance</h2>

<p><strong>Speakers - Lee McBride &amp; Ben Stansfield </strong></p>

<p>Following unprecedented interest in environmental issues in the media and amongst consumers, this session will consider how businesses need to respond to environmental issues. We will firstly cover the recent Vedanta Supreme Court decision examining the potential for companies to be responsible for their group&#39;s environmental activities; and will then look at how the Government&#39;s push for greater &#39;producer responsibility&#39; is impacting business in terms of changes to issues such as packaging and waste, and finally we will offer a horizon scan of what&#39;s next for environmental compliance.</p>

<h2>The corporate governance tide keeps coming</h2>

<p><strong>Speaker - Sharon Ayres</strong></p>

<p>Corporate governance was once the preserve of listed companies. But the UK government is driving for improved corporate governance for private companies. Sharon will identify the recent initiatives (such as the Wates Corporate Governance principles and new reporting regulations) and explain what that means and how it should be integrated into compliance more generally.</p>

<h2>Understanding and managing legal risks of trade controls</h2>

<p><strong>Speaker - Ursula Johnston</strong></p>

<p>In this session we will explore trade control measures which restrict the movement of goods, assets and finance and attract steep penalties for those businesses which knowingly or unknowingly fail to comply. In many commercial scenarios, across a range of sectors, businesses are facing the possibility of breaching EU rules which aim to temper the effect of far reaching US secondary sanctions. Meanwhile the control on the physical movement on sensitive goods and technologies presents its own set of challenges. Understanding the export controls regimes and licensing environment in the UK and beyond is a commercial and legal challenge which if not understood and addressed can leave businesses exposed to blocked shipments, fines and reputational damage.</p>

<p>We will provide a view on the key legal risks posed and how they can be effectively managed.</p>

<h2>IR35 reform - how to prepare</h2>

<p><strong>Speaker - Zoe Fatchen </strong></p>

<p>In April 2020, the government will be rolling out reform to the IR35 regime in the private sector, following changes already made in the public sector. Government consultation has recently closed and there is still time to plan for the changes. Our employment tax team will provide an update on what the changes are likely to involve and what you can do now to prepare.</p>
","<p>This event is free of charge.</p>

<p>This event will run for 3 hours. Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession.</p>

<p>Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,11-09-2019 11:10,https://reaction.gowlingwlg.com/reaction/RSGenPage.asp?RSID=gPscf4rVZqjdbD1Z5Mxjkv_NSBdF_j3xtG5Y-SB33fg,NULL,Register for this event,58076178-DA60-4AB6-A07C-EF250971EBF7,de517572-4373-4b36-844b-18be93f6f9bc;cbbbf9eb-a169-4053-8043-7085cfb8fd4a;3fc2ca8c-9d19-44ba-a3a9-ad1ecb11e900;f1e960f5-8231-4c56-b7bf-9898ebb538c5;06cecb4c-c959-4674-9047-d5d8ee8c673c;2cd1b5c0-8992-4c92-b8e8-d65d8b86dbed;5ad41b49-d460-489a-95b9-84c854eda6f1;a929915c-1d1f-4e9c-8c8b-f34a30e2ab4e;df411e0b-2c62-4a68-8456-2c7c1dd0b4da;049c8249-7ff3-4ee3-a439-590f45fd5cff;c0b8c1a8-73eb-4122-972f-dc5df852f68d;dede4518-e78c-4b48-a143-a2338be5d0ac;59be9dcd-e5f0-43e4-9d50-442a658eda18;0357076d-2635-451a-8d67-ec01f9f3082b;cdfc9b50-74c2-4af5-9508-342935f81ccd,NULL,a143cbfd-d333-42a0-89a6-7287894464f1,1a0f69ce-d1e7-42e2-96d6-0dbdd570161e;f287bc23-6058-4bc2-a7b7-9003cf1415dc;d7a64117-fe8d-47a0-ace6-75c8607bfcdd;ea3a66e9-0355-4229-a792-9f4094b0eeaa;e33531f3-9132-4365-bdfc-fe6df95bab54;ad056fcd-7211-4da7-a9e2-30612d332954;a9daf1f3-b2ff-43d9-b76e-b815bb73aace,NULL,Seminar,"Ben Stansfield, Lee P McBride, Sharon Ayres, Zoe Fatchen, Ursula Johnston, David Lowe, Michael J Luckman",Birmingham,70,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
134,/Events/2019/ThinkHouse-Autumn-Seminar-London,en-GB,A3D11D0C-A03E-4CF2-BB2D-BC04044F76C6,ThinkHouse Autumn Seminar - London,ThinkHouse Autumn Seminar - London,"Our Autumn ThinkHouse Seminar in London offers an opportunity for GCs, Heads of Leagal and senior in-house counsel to network with peers and receive some valuable business insight and training on current hot-topics.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,26-09-2019 09:00,26-09-2019 13:30,09:00,13:30,BST,1,3,"<p>Our Autumn ThinkHouse Seminar offers an opportunity for GCs, Heads of Legal and senior in-house counsel to network with peers and receive some valuable business insight and training on current hot-topics. If your skill-set places you in an intermediate or advanced level within your in-house legal role, then this seminar is for you.</p>

<p>We will be joined by five experts from across our firm to discuss the following topics:</p>

<h2>A New Era for Environmental Liability and Compliance</h2>

<p><strong>Speakers - Lee McBride &amp; Ben Stansfield </strong></p>

<p>Following unprecedented interest in environmental issues in the media and amongst consumers, this session will consider how businesses need to respond to environmental issues. We will firstly cover the recent Vedanta Supreme Court decision examining the potential for companies to be responsible for their group&#39;s environmental activities; and will then look at how the Government&#39;s push for greater &#39;producer responsibility&#39; is impacting business in terms of changes to issues such as packaging and waste, and finally we will offer a horizon scan of what&#39;s next for environmental compliance.</p>

<h2>The corporate governance tide keeps coming</h2>

<p><strong>Speaker - Sharon Ayres</strong></p>

<p>Corporate governance was once the preserve of listed companies. But the UK government is driving for improved corporate governance for private companies. Sharon will identify the recent initiatives (such as the Wates Corporate Governance principles and new reporting regulations) and explain what that means and how it should be integrated into compliance more generally.</p>

<h2>Understanding and managing legal risks of trade controls</h2>

<p><strong>Speaker - Ursula Johnston</strong></p>

<p>In this session we will explore trade control measures which restrict the movement of goods, assets and finance and attract steep penalties for those businesses which knowingly or unknowingly fail to comply. In many commercial scenarios, across a range of sectors, businesses are facing the possibility of breaching EU rules which aim to temper the effect of far reaching US secondary sanctions. Meanwhile the control on the physical movement on sensitive goods and technologies presents its own set of challenges. Understanding the export controls regimes and licensing environment in the UK and beyond is a commercial and legal challenge which if not understood and addressed can leave businesses exposed to blocked shipments, fines and reputational damage.</p>

<p>We will provide a view on the key legal risks posed and how they can be effectively managed.</p>

<h2>IR35 reform - how to prepare</h2>

<p><strong>Speaker - Zoe Fatchen </strong></p>

<p>In April 2020, the government will be rolling out reform to the IR35 regime in the private sector, following changes already made in the public sector. Government consultation has recently closed and there is still time to plan for the changes. Our employment tax team will provide an update on what the changes are likely to involve and what you can do now to prepare.</p>
","<p>This event is free of charge.</p>

<p>This event will run for 3 hours. Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession.</p>

<p>Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,23-09-2019 09:30,mailto:susan.barnes@gowlingwlg.com,NULL,Enquire about this event,9FBE191E-3BCF-45DE-A2BA-338BB194FC9D,de517572-4373-4b36-844b-18be93f6f9bc;cbbbf9eb-a169-4053-8043-7085cfb8fd4a;3fc2ca8c-9d19-44ba-a3a9-ad1ecb11e900;f1e960f5-8231-4c56-b7bf-9898ebb538c5;06cecb4c-c959-4674-9047-d5d8ee8c673c;2cd1b5c0-8992-4c92-b8e8-d65d8b86dbed;5ad41b49-d460-489a-95b9-84c854eda6f1;a929915c-1d1f-4e9c-8c8b-f34a30e2ab4e;df411e0b-2c62-4a68-8456-2c7c1dd0b4da;049c8249-7ff3-4ee3-a439-590f45fd5cff;c0b8c1a8-73eb-4122-972f-dc5df852f68d;dede4518-e78c-4b48-a143-a2338be5d0ac;59be9dcd-e5f0-43e4-9d50-442a658eda18;0357076d-2635-451a-8d67-ec01f9f3082b;cdfc9b50-74c2-4af5-9508-342935f81ccd,NULL,a143cbfd-d333-42a0-89a6-7287894464f1,NULL,NULL,Seminar,"Lee P McBride, Ben Stansfield, Sharon Ayres, Ursula Johnston, Zoe Fatchen, David Lowe, Michael J Luckman",London,71,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
135,/Events/2019/ThinkHouse-Foundations-Autumn-Seminar-Birmingham,en-GB,8D7A8C3C-569E-4CB3-B0E1-0F7939D1854E,ThinkHouse Foundations Autumn Seminar - Birmingham,ThinkHouse Foundations Autumn Seminar 2019 - Birmingham,Join us at our next seminar in Birmingham for an opportunity to network with your peers and receive some valuable insight and training on the latest legal developments and current hot-topics.,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,08-10-2019 09:00,08-10-2019 13:00,09:00,13:00,BST,1,4,"<p><em>ThinkHouse Foundations runs exclusively for paralegals, trainees and lawyers of up to five years&#39; PQE. </em></p>

<p>Join us at our next seminar for an opportunity to network with your peers and receive some valuable insight and training on the latest legal developments and current hot-topics.</p>

<p>The seminar will be covering three topics in detail as well as providing a short update on Brexit to bring you up to speed with the latest developments and legal implications.</p>

<h2>Data Protection: GDPR - where are we now?</h2>

<p>Alex Ha Kyung Kim will provide an update on the key developments in regulatory guidelines and enforcement actions, sharing key takeaway points and his outlook for the near future.</p>

<h2>Regulatory Investigations: A survival guide</h2>

<p>In an increasingly fluctuating regulatory landscape, companies are facing obligations enforced by multiple different regulators, with significant criminal consequences for those found in breach. Natalie Barton-Howes will provide practical advice to help you to understand the enforcement powers your company may be faced with and how to navigate a regulatory investigation in order to minimise the disruption to your business and avoid, where possible, having any enforcement action taken.</p>

<h2>Contract law update</h2>

<p>Caroline McNally will provide a roundup of commercial contract law, reviewing the developments of the last 12 months and highlighting cases which should be at the top of your reference list.</p>

<p>A light lunch will be provided following the seminar, offering you the opportunity to network with your peers and ask any follow up questions you may have for our speakers.</p>
","<p>This event is free of charge.</p>

<p>This event will run for four hours. Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession.</p>

<p>Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,04-10-2019 08:30,https://reaction.gowlingwlg.com/reaction/RSGenPage.asp?RSID=4itav73cVX144mE5p5SvAtmw3HgxgHClRlz06Lw7hBw,NULL,Register for this event,58076178-DA60-4AB6-A07C-EF250971EBF7,de517572-4373-4b36-844b-18be93f6f9bc;cbbbf9eb-a169-4053-8043-7085cfb8fd4a;3fc2ca8c-9d19-44ba-a3a9-ad1ecb11e900;f1e960f5-8231-4c56-b7bf-9898ebb538c5;06cecb4c-c959-4674-9047-d5d8ee8c673c;2cd1b5c0-8992-4c92-b8e8-d65d8b86dbed;5ad41b49-d460-489a-95b9-84c854eda6f1;a929915c-1d1f-4e9c-8c8b-f34a30e2ab4e;df411e0b-2c62-4a68-8456-2c7c1dd0b4da;049c8249-7ff3-4ee3-a439-590f45fd5cff;c0b8c1a8-73eb-4122-972f-dc5df852f68d;dede4518-e78c-4b48-a143-a2338be5d0ac;59be9dcd-e5f0-43e4-9d50-442a658eda18;0357076d-2635-451a-8d67-ec01f9f3082b;cdfc9b50-74c2-4af5-9508-342935f81ccd,549cbe28-f188-44cd-85c0-0f4e23a23817;5f904dac-edf7-4f4a-8c59-8c0f5bbc0d7a,NULL,6965a192-e42d-4e06-af1e-a4ebb072b416;ca67aa19-bd53-48e1-97b2-b3dec72a50c8;36577668-7f35-419a-a252-68405ab1f2bd;d7bb2c60-3288-4a2a-acd0-e82cfa85f6c9;77781370-a881-48be-a13e-871b97c58c38,NULL,Seminar,"Emma Bufton, Tom Cox, Natalie Barton-Howes, Caroline McNally, Clark Sargent",Birmingham,70,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
136,/Events/2019/ThinkHouse-Foundations-Autumn-Seminar-London,en-GB,BF50AE9C-8960-4617-AA6F-5843649910BF,ThinkHouse Foundations Autumn Seminar - London,ThinkHouse Foundations Autumn Seminar 2019 - London,Join us at our next seminar in London for an opportunity to network with your peers and receive some valuable insight and training on the latest legal developments and current hot-topics.,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,10-10-2019 09:00,10-10-2019 13:00,09:00,13:00,BST,1,4,"<p><em>ThinkHouse Foundations runs exclusively for paralegals, trainees and lawyers of up to five years&#39; PQE. </em></p>

<p>Join us at our next seminar for an opportunity to network with your peers and receive some valuable insight and training on the latest legal developments and current hot-topics.</p>

<p>The seminar will be covering three topics in detail as well as providing a short update on Brexit to bring you up to speed with the latest developments and legal implications.</p>

<h2>Data Protection: GDPR - where are we now?</h2>

<p>Alex Ha Kyung Kim will provide an update on the key developments in regulatory guidelines and enforcement actions, sharing key takeaway points and his outlook for the near future.</p>

<h2>Regulatory Investigations: A survival guide</h2>

<p>In an increasingly fluctuating regulatory landscape, companies are facing obligations enforced by multiple different regulators, with significant criminal consequences for those found in breach. Natalie Barton-Howes will provide practical advice to help you to understand the enforcement powers your company may be faced with and how to navigate a regulatory investigation in order to minimise the disruption to your business and avoid, where possible, having any enforcement action taken.</p>

<h2>Contract law update</h2>

<p>Caroline McNally will provide a roundup of commercial contract law, reviewing the developments of the last 12 months and highlighting cases which should be at the top of your reference list.</p>

<p>A light lunch will be provided following the seminar, offering you the opportunity to network with your peers and ask any follow up questions you may have for our speakers.</p>
","<p>This event is free of charge.</p>

<p>This event will run for four hours. Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession.</p>

<p>Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,07-10-2019 08:00,https://reaction.gowlingwlg.com/reaction/RSGenPage.asp?RSID=4itav73cVX144mE5p5SvAtmw3HgxgHClRlz06Lw7hBw,NULL,Register for this event,9FBE191E-3BCF-45DE-A2BA-338BB194FC9D,de517572-4373-4b36-844b-18be93f6f9bc;cbbbf9eb-a169-4053-8043-7085cfb8fd4a;3fc2ca8c-9d19-44ba-a3a9-ad1ecb11e900;f1e960f5-8231-4c56-b7bf-9898ebb538c5;06cecb4c-c959-4674-9047-d5d8ee8c673c;2cd1b5c0-8992-4c92-b8e8-d65d8b86dbed;5ad41b49-d460-489a-95b9-84c854eda6f1;a929915c-1d1f-4e9c-8c8b-f34a30e2ab4e;df411e0b-2c62-4a68-8456-2c7c1dd0b4da;049c8249-7ff3-4ee3-a439-590f45fd5cff;c0b8c1a8-73eb-4122-972f-dc5df852f68d;dede4518-e78c-4b48-a143-a2338be5d0ac;59be9dcd-e5f0-43e4-9d50-442a658eda18;0357076d-2635-451a-8d67-ec01f9f3082b;cdfc9b50-74c2-4af5-9508-342935f81ccd,5f904dac-edf7-4f4a-8c59-8c0f5bbc0d7a;549cbe28-f188-44cd-85c0-0f4e23a23817,NULL,6965a192-e42d-4e06-af1e-a4ebb072b416;ca67aa19-bd53-48e1-97b2-b3dec72a50c8;36577668-7f35-419a-a252-68405ab1f2bd;d7bb2c60-3288-4a2a-acd0-e82cfa85f6c9;77781370-a881-48be-a13e-871b97c58c38,NULL,Seminar,"Emma Bufton, Tom Cox, Natalie Barton-Howes, Caroline McNally, Clark Sargent",London,71,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
137,/Events/2019/ThinkHouse-Public-Sector-Seminar-Birmingham,en-GB,6A4E4BA3-3B63-4BF3-AC3D-0336D6E1921C,ThinkHouse Public Sector Seminar - Birmingham,ThinkHouse Public Sector Seminar - Birmingham,Join us for our annual ThinkHouse Public Sector Seminar for an opportunity to network with your peers and receive some valuable business insight and training on current hot-topics.,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,07-11-2019 09:00,07-11-2019 13:15,09:00,13:15,BST,1,3,"<p>Join us for our annual ThinkHouse Public Sector Seminar for an opportunity to network with your peers and receive some valuable business insight and training on current hot-topics. If your skill-set places you in an intermediate or advanced level within your in-house legal role, then this seminar is for you.</p>



<p>We will be joined by experts from across our firm to discuss the following topics:</p>



<h2>Outsourcing Playbook</h2>

<p>Earlier this year, the Cabinet Office released its new Outsourcing Playbook - the government&#39;s guide to &quot;getting it right&quot; when it comes to outsourcing decisions, procurements and contracts. The Outsourcing Playbook is the result of a collaborative cross-departmental and industry review of best practice in outsourcing. It is structured around a typical outsourcing lifecycle and captures best practice, common pitfalls and key principles at each stage.</p>



<p>We will consider some of the key themes contained within the guidance, the implications for central government bodies and the wider public sector and consequential changes to the GLS Model Services Agreement.</p>



<h2>Addressing equality and social value in procurement</h2>

<p>The Equality Act 2010 sets out anti-discrimination law and the requirements of the public sector equality duty (PSED). Compliance with the PSED should help public bodies ensure that the goods, services and works they procure are fit for purpose - thus ensuring they meet the needs of their users. Since the introduction of the Public Services (Social Value) Act 2012 public sector commissioners cannot now exclusively consider the most economically advantageous tender when running procurements; they must also consider their social value obligations.</p>



<p>We will discuss how these increasing duties of equality and social value have affected the public sector procurement process. He will explore how public bodies can address these duties at different stages of the procurement cycle.</p>



<h2>Expiry of PFI/PPP - What next?</h2>

<p>A significant number of PFI/PPP projects are approaching the end of their contract terms. For authorities, this raises important strategic and practical issues in ensuring a smooth handback of the project assets and the continuity or re-provision of key services.</p>



<p>Our Projects lawyers will share their experiences from advising on the expiry and early termination of projects, providing you with guidance on how to secure project assets in an acceptable condition whilst also ensuring the uninterrupted provision of relevant services. We will also give some thoughts on the potential new private finance models following the Treasury's Infrastructure finance review.</p>
","<p>This event is free of charge.</p>

<p>This event will run for 4 hours. Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession.</p>

<p>Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,04-11-2019 09:30,https://reaction.gowlingwlg.com/reaction/RSGenPage.asp?RSID=X0Iv7VoNPxxyjiWujIBaz8Lsl2lp_L1W8krUHx6qRq4,NULL,Register for this event,58076178-DA60-4AB6-A07C-EF250971EBF7,5ad41b49-d460-489a-95b9-84c854eda6f1,NULL,a143cbfd-d333-42a0-89a6-7287894464f1,4cff9d8a-aa65-4eee-91f1-bfb81156c383;667bbf5f-7038-4fe6-9e59-de081f876b1c;1ca237c0-eb32-40df-ba06-268230275f34;ce26ed51-95b0-44fd-86b0-2667fae0d46e;b8180d18-a523-4d12-9a03-f76949a53796;01e2a21e-7b9f-4432-9678-214446264bbe,NULL,Seminar,"Alison Richards, Alexi Markham, Robert Breedon, Stephen C Kenny, Andrew Newbery, Dominic Richardson",Birmingham,70,GWLG.Events,NULL,~/getmedia/5d57b23c-f4d3-44e3-a08e-7ee56360fd71/thinkhouse-snr-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/27fda93c-8849-4d7e-a292-bcc5eb1e7896/thinkhouse-snr-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speakers,NULL,58076178-da60-4ab6-a07c-ef250971ebf7,NULL,NULL,NULL,NULL,NULL,NULL,NULL
138,/Events/2019/ThinkHouse-Public-Sector-Seminar-London,en-GB,453EF793-481B-4F15-AEDF-9F4E75725E9A,ThinkHouse Public Sector Seminar - London,ThinkHouse Public Sector Seminar - London,Join us for our annual ThinkHouse Public Sector Seminar for an opportunity to network with your peers and receive some valuable business insight and training on current hot-topics.,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,14-11-2019 09:00,14-11-2019 13:15,09:00,13:15,BST,1,3,"<p>Join us for our annual ThinkHouse Public Sector Seminar for an opportunity to network with your peers and receive some valuable business insight and training on current hot-topics. If your skill-set places you in an intermediate or advanced level within your in-house legal role, then this seminar is for you.</p>



<p>We will be joined by experts from across our firm to discuss the following topics:</p>



<h2>Outsourcing Playbook</h2>

<p>Earlier this year, the Cabinet Office released its new Outsourcing Playbook - the government&#39;s guide to &quot;getting it right&quot; when it comes to outsourcing decisions, procurements and contracts. The Outsourcing Playbook is the result of a collaborative cross-departmental and industry review of best practice in outsourcing. It is structured around a typical outsourcing lifecycle and captures best practice, common pitfalls and key principles at each stage.</p>



<p>We will consider some of the key themes contained within the guidance, the implications for central government bodies and the wider public sector and consequential changes to the GLS Model Services Agreement.</p>



<h2>Addressing equality and social value in procurement</h2>

<p>The Equality Act 2010 sets out anti-discrimination law and the requirements of the public sector equality duty (PSED). Compliance with the PSED should help public bodies ensure that the goods, services and works they procure are fit for purpose - thus ensuring they meet the needs of their users. Since the introduction of the Public Services (Social Value) Act 2012 public sector commissioners cannot now exclusively consider the most economically advantageous tender when running procurements; they must also consider their social value obligations.</p>



<p>We will discuss how these increasing duties of equality and social value have affected the public sector procurement process. He will explore how public bodies can address these duties at different stages of the procurement cycle.</p>



<h2>Expiry of PFI/PPP - What next?</h2>

<p>A significant number of PFI/PPP projects are approaching the end of their contract terms. For authorities, this raises important strategic and practical issues in ensuring a smooth handback of the project assets and the continuity or re-provision of key services.</p>



<p>Our Projects lawyers will share their experiences from advising on the expiry and early termination of projects, providing you with guidance on how to secure project assets in an acceptable condition whilst also ensuring the uninterrupted provision of relevant services. We will also give some thoughts on the potential new private finance models following the Treasury's Infrastructure finance review.</p>
","<p>This event is free of charge.</p>

<p>This event will run for 4 hours. Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession.</p>

<p>Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,11-11-2019 09:30,https://reaction.gowlingwlg.com/reaction/RSGenPage.asp?RSID=X0Iv7VoNPxxyjiWujIBaz8Lsl2lp_L1W8krUHx6qRq4,NULL,Register for event,9FBE191E-3BCF-45DE-A2BA-338BB194FC9D,5ad41b49-d460-489a-95b9-84c854eda6f1,NULL,a143cbfd-d333-42a0-89a6-7287894464f1,4cff9d8a-aa65-4eee-91f1-bfb81156c383;667bbf5f-7038-4fe6-9e59-de081f876b1c;1ca237c0-eb32-40df-ba06-268230275f34;ce26ed51-95b0-44fd-86b0-2667fae0d46e;b8180d18-a523-4d12-9a03-f76949a53796,NULL,Seminar,"Alison Richards, Alexi Markham, Robert Breedon, Stephen C Kenny, Andrew Newbery",London,71,GWLG.Events,NULL,~/getmedia/5d57b23c-f4d3-44e3-a08e-7ee56360fd71/thinkhouse-snr-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/27fda93c-8849-4d7e-a292-bcc5eb1e7896/thinkhouse-snr-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,58076178-da60-4ab6-a07c-ef250971ebf7,NULL,NULL,NULL,NULL,NULL,NULL,NULL
139,/Events/2019/Cannabis-workshop,en-GB,3D82E766-96D3-4B32-B57B-0421241E4F3F,Cannabis workshop,Cannabis workshop: Taking your Canadian cannabis company public & preparing for legalization,"Join Gowling WLG on March 28 for a cannabis workshop that will provide you with the information you need to take your Canadian cannabis company public, and to prepare for the upcoming era of legalization.",~/getmedia/f8030ea4-ca4e-4d80-9f83-7be7ba8c4d8a/190312-cannabis-workshop-tile.jpg.xml?width=930&height=450&ext=.jpg,people in seminar facing speaker,GWLG.Seminar,28-03-2019 08:00,28-03-2019 11:00,08:00,11:00,EST,1,2.5 hours,"<p>Join Gowling WLG on March 28 for a cannabis workshop that will provide you with the information you need to take your Canadian cannabis company public, and to prepare for the upcoming era of legalization.</p>

<p>The first part of the workshop will offer an overview of how to go public in Canada with your cannabis assets. This will include a presentation from <a href=""https://thecse.com/en/about/our-people/management-team"" target=""_blank"">Richard Carleton</a>, CEO of the Canada Securities Exchange (CSE), on its listing requirements, as well as an overview of the various structures for going public from Gowling WLG partner, Peter Simeon. </p>

<p>The second part of the workshop, Gowling WLG professionals will provide you with short, practical tips that are relevant to the era of legalization.</p>

<p>We hope you will join us for this very informative presentation. </p>

<p>*<em>This program will count for up to 2.5 hours of substantive credits toward the mandatory CPD requirements of the Law Society of Ontario.</em></p>

<h2>Agenda</h2>

<table>
	<thead>
		<tr>
			<th scope=""col"">Time</th>
			<th scope=""col"">Activity</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>08:00</td>
			<td>Registration &amp; breakfast</td>
		</tr>
		<tr>
			<td>08:30.</td>
			<td>Welcome &amp; introductions</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td><strong>Part 1: Taking your cannabis company public</strong></td>
		</tr>
		<tr>
			<td>08:35</td>
			<td>Overview of various structures for going public and Canadian considerations for going public<br />
			<em>Peter Simeon - Partner, Gowling WLG</em></td>
		</tr>
		<tr>
			<td>08:55</td>
			<td>CSE listing requirements and other CSE listing trends<br />
			<em>Richard Carleton - CEO, Canadian Securities Exchange (CSE)</em></td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td><strong>Part 2: Preparing for the new era of legalization</strong></td>
		</tr>
		<tr>
			<td>09:15</td>
			<td>Immigration issues<br />
			<em>Lesley Love - Associate, Gowling WLG</em></td>
		</tr>
		<tr>
			<td>09:35</td>
			<td>Break</td>
		</tr>
		<tr>
			<td>09:45</td>
			<td>Municipal law<br />
			<em>Michael Polowin - Partner, Gowling WLG</em></td>
		</tr>
		<tr>
			<td>10:05</td>
			<td>Intellectual property basics for the cannabis industry<br />
			<em>Natalie Rizkalla-Kamel - Partner, Gowling WLG</em></td>
		</tr>
		<tr>
			<td>10:25</td>
			<td>Regulatory: Edibles, topicals, extracts, isolates/branding/Quebec issues<br />
			<em>Lewis Retik - Partner, Gowling WLG</em></td>
		</tr>
		<tr>
			<td>10:45</td>
			<td>Q&amp;A</td>
		</tr>
	</tbody>
</table>
",NULL,NULL,26-03-2019 18:25,https://sites-gowlingwlg.vuturevx.com/103/4328/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,B2DC4461-DC66-4F96-9AE6-32BC2B14259D,NULL,255bcb12-7168-4281-9d52-a56233e8ae69,NULL,89b4f31e-be98-4f5c-a2b3-c2c53bcb2bc2;33136a2e-83db-4377-81d9-81fa56cf4154;9b9ae971-5e77-434c-ab69-7192c6cb65b6;1b773a30-0764-4fd8-b851-cf232b806324;286a9412-b4bf-49af-840a-a94f08cb65d1,NULL,Seminar,NULL,Toronto,63,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,Gowling WLG Speakers,NULL,NULL,NULL,Cannabis,NULL,NULL,NULL,NULL,NULL
140,/Events/2019/Blockchain-leadership-series,en-GB,1383DC88-FEA7-4928-8424-9BCB0872A787,Blockchain leadership series,Blockchain leadership series,Join us for the first panel discussion in our series exploring recent trends in blockchain and the important role key stakeholders are playing in shaping the technology's future. ,~/getmedia/208ba3e2-7cd1-41b4-bb6a-9c6926523bd2/190312-blockchain-leadership-series-tile.jpg.xml?width=930&height=450&ext=.jpg,modern office meeting,GWLG.Seminar,28-03-2019 16:45,28-03-2019 19:00,16:45,19:00,EST,0,NULL,"<p>Please join us on March 28 for the first panel discussion in our series exploring recent trends in blockchain and the important role key stakeholders are playing in shaping the technology&#39;s future. </p>

<p>Immediately following the panel discussion, we invite you to stay for a cocktail reception where you'll have the opportunity to connect with other industry leaders.</p>

<p>We look forward to seeing you there.</p>

<h2>Speakers</h2>

<ul>
	<li>Pat Chaukos - Deputy Director, OSC LaunchPad, Ontario Securities Commission	</li>
	<li>Rachel Lam - Blockchain Consultant	</li>
	<li>Iliana Oris Valiente - Managing Director, Accenture | Founder, ColliderX
	</li>
</ul>

<h2>Agenda</h2>

<table>
	<thead>
		<tr>
			<th scope=""col"">Time</th>
			<th scope=""col"">Activity</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>16:45</td>
			<td>Registration</td>
		</tr>
		<tr>
			<td>17:00</td>
			<td>Panel discussion</td>
		</tr>
		<tr>
			<td>17:45</td>
			<td>Q&amp;A</td>
		</tr>
		<tr>
			<td>18:00</td>
			<td>Networking reception</td>
		</tr>
		<tr>
			<td>19:00</td>
			<td>Event concludes</td>
		</tr>
	</tbody>
</table>
",NULL,NULL,28-03-2019 16:45,https://sites-gowlingwlg.vuturevx.com/103/4043/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,B2DC4461-DC66-4F96-9AE6-32BC2B14259D,NULL,20e41ca2-b15a-4815-bb5c-7cf60c18278f,NULL,ede5ead0-1723-4206-be45-ecf0ae1db2b4,NULL,Seminar,NULL,Toronto,63,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,Moderator,NULL,NULL,NULL,Blockchain & Smart Contracts,NULL,NULL,NULL,NULL,NULL
141,/Events/2021/INTA-2021,en-GB,A3085CF3-F173-4755-AE1E-E2A5AB963C58,INTA 2021,Explore INTA 2021 with Gowling WLG,Connect with our global trademarks team at INTA.,~/getmedia/ce02a8bf-d93f-4f20-8680-d96d66dc6fed/211020-INTA-2021.jpg.xml?width=1400&height=540&ext=.jpg,Abstract photo of the globe,GWLG.Conference,38:25.0,38:50.0,NULL,NULL,EST,0,NULL,"<h2>Attending this year&#39;s INTA Annual Meeting? Connect with our global trademarks team</h2>

<p>As a trusted adviser for those seeking IP solutions &ndash; regardless of where their business takes them &ndash; Gowling WLG is thrilled to once again be participating in the <a href=""https://www.inta.org/events/2021-annual-meeting/"" target=""_blank""><strong>International Trademark Association (INTA) Annual Meeting Virtual+</strong></a>.</p>

<p>With more than 215 experienced professionals working in IP, Gowling WLG is home to one of the largest teams of its kind in the world. Our firm offers a ""one stop shop"" for global IP services, with a single point of contact advising startups and major multinationals alike on all facets of branding, with a commercial approach to trademarks, designs, copyright, domain names, licensing, and enforcement. Our IP professionals are well-versed in managing global portfolios, conducting major clearance exercises, and leading multi-jurisdictional enforcement programs.</p>

<blockquote>
<p><em>&quot;Gowling WLG is a prolific filer that can also be entrusted with the most complex strategic advisory, contentious and transactional mandates. Deep insight, boundless resources and global reach give it a major advantage over competitors.&quot;</em><br />
	<cite>- World Trademark Review 1000</cite></p>
</blockquote>



<p>As always, we're delighted to be playing an active role at the INTA Annual Meeting. Our team is looking forward to five days of personal and professional growth, business development opportunities, and the forging of new connections. Schedule a meeting with us now on <a href=""https://matchmaking.grip.events/2021annualmeetingvirtual/event-login"" target=""_blank"">INTAConnect</a>.</p>

<p>{^widget|(path)%2fGlobal-Objects%2fCTAs%2fEvents%2fINTA-2021%2f%2525|(name)GWLG.Widgets.FAQList|(image_guid)884cd42b-93de-40b9-9f7f-cf7e3608a676|(headingtext)%3ch2+align%3d%22left%22%3eINTA+speaking+events+featuring+Gowling+WLG%3c%2fa%3e|(widget_displayname)FAQ+List|(width)|(height)^}</p>

<h2>Plug into the firm&#39;s multimedia IP resources</h2>

<p>Are webinars more your style? Watch our latest on-demand webinar on global trademark cancellation strategies.</p>

<ul class=""o-lined-list is-list-unstyled list-of-links"">
	<li><a href=""~/en/insights-resources/on-demand-webinars/2021/global-trademark-cancellation-strategies/"" target=""_blank"">Join speakers Alexander Christophoroff, Yan Gong, Charlotte McDonald, Jon Parker and Kate Swaine for the webinar &raquo;</a></li>
</ul>

<p>Additionally, the <a href=""~/en/ip-law-hub/webinars/"" target=""_blank"">Lifecycle of a Smart Idea</a> series, presented by Gowling WLG&#39;s international team of IP lawyers and agents, explores trade secrets, trademark laws, and a full range of IP rights, all while giving listeners the tips and perspectives they need to maximize opportunity and minimise risk when taking ideas to market. In particular, check out these past favourites:</p>

<div>
<div id=""_com_1"">
<ul>
	<li><a href=""~/en/insights-resources/on-demand-webinars/2020/building-out-a-global-trademark-and-design-profile/"">Starting strong: Building out a global trademark and design profile</a></li>
	<li><a href=""~/en/insights-resources/on-demand-webinars/2020/defending-trademarks-design-strategies/"">Defending your trademarks &amp; designs: Global enforcement strategies</a></li>
	<li><a href=""~/en/insights-resources/on-demand-webinars/2021/defending-your-brand-online-global-strategies/"">Defending your brand online: Global enforcement strategies for a new era</a><br />
	 </li>
</ul>
</div>
</div>

<p><strong><a class=""c-button-white"" href=""~/en/ip-law-hub/webinars/"" target=""_blank"">Watch other previous episodes from the series on our IP Law Hub &raquo;</a> </strong></p>

<h2>Let our IP Law Hub be your go-to resource centre</h2>

<p>With digital platforms still regularly replacing face-to-face meetings, our response has been to provide a comprehensive resource hub where you can stay connected with us as your legal partner. Use the firm's <a href=""~/en/ip-law-hub/"">IP Law Hub</a> to access our complete library of articles and videos, subscribe for updates, or register to join us at live webinars. We've got the tools you need to harness the full potential of your IP.</p>

<h2>Get in touch with our team</h2>

<p>Interested in learning more about Gowling WLG&#39;s global IP practice? Our experienced lawyers and agents are available to offer support wherever you operate around the globe &ndash; including many of the most challenging jurisdictions. Learn more about our teams around the world.</p>

<p>To arrange a one-on-one meeting, feel free to get in touch with any of our INTA team members listed below.</p>
",NULL,NULL,12:53.0,https://www.inta.org/events/2021-annual-meeting/,NULL,Learn more about INTA 2021,NULL,NULL,08b9a44c-bb26-4255-9779-296a124fcbee;aa72ea93-20f8-455a-8e77-6f6cea510684,8c0f2d68-a5d9-441b-95a9-3b2a98a43c1d,afb0c846-e2bb-4832-ab33-f5e96564c770;cba60c6d-eb6d-4fa1-b4b4-a4b8c0d0c080;21b73e52-7ddf-4e8d-a4aa-7e1dd05f99de;ad4cc2a0-5825-4d92-930d-64226a7659b3;8ad0e3f6-68e6-45b9-a509-c5811ebc77af;9738a4d8-83a4-42d3-af36-707d3260a32d;8881287e-24c9-49cc-9a9b-985ad209d75d;3e53de90-a96b-4f34-a4b0-5cd3cf0a71e9;5f99910a-0f55-443d-803f-ad13952b4946;3fd4913d-3096-46ba-93b4-f365a5b14944;c7845de1-72de-4e9d-bad4-859a8d00311c;41742f49-9549-47bb-ae1f-ab536cd5ba62;5f39b2b0-1232-4c03-abce-300149d85f9b;1813d034-571c-4419-aa32-1d25e7134e70,NULL,Conference,NULL,NULL,NULL,GWLG.Events,NULL,~/getmedia/ce02a8bf-d93f-4f20-8680-d96d66dc6fed/211020-INTA-2021.jpg.xml?width=1399&height=933&ext=.jpg,~/getmedia/c861613d-520f-443e-bd34-7f96fcdf0322/211020-INTA-2021-mobile.jpg.xml?width=500&height=500&ext=.jpg,0,NULL,NULL,NULL,GWLG.Canada;GWLG.China;GWLG.Global;GWLG.Russia;GWLG.UK;GWLG.UAEDubai,0,NULL,INTA Team,NULL,NULL,NULL,"Intellectual Property Law, Trademarks, Brands & Designs",IP Law Hub,NULL,~/getmedia/1bcdfe8b-1f51-41be-aed9-bd710c5f7f82/211102-INTA-virtual-meeting-social-image.jpg.xml?width=930&height=450&ext=.jpg,NULL,NULL
142,/Events/2019/ThinkHouse-TUPE-Club-TUPE-and-Insolvency,en-GB,C378885F-AE83-4286-B8F0-966C35DFCE37,ThinkHouse TUPE Club: TUPE and Insolvency,ThinkHouse TUPE Club: TUPE and Insolvency,"Join us for our next TUPE Club webinar on 7 May 2019, where we will be covering how TUPE applies when there is an Insolvency situation",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,00:00.0,00:00.0,13:00,14:00,BST,1,1,"<p>Join us for our next TUPE Club webinar, where we will be covering how TUPE applies when there is an Insolvency situation. We will look at the consequences of TUPE applying in various types of insolvency scenario and how can you manage the risks that creates.</p>

<p>The topics will include:</p>

<ol>
	<li>The effect of insolvency on contracts of employment</li>
	<li>Preferential Debts and the National Insurance Fund</li>
	<li>TUPE and different insolvency procedures</li>
	<li>The impact on the employment aspects of transactions</li>
	<li>How to mitigate the risks</li>
</ol>

<p>Our speakers, Jane Fielding and Hannah Swindle, will run through these issues and give you practical tips on dealing with the tricky issues arising from them.</p>

<p>During this live webinar you will have the opportunity to ask questions and we will answer as many as we can in the time available.</p>
","<p>This event is free of charge.</p>

<p>This event will run for 1 hour. Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession.</p>

<p>Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,00:00.0,https://reaction.gowlingwlg.com/reaction/RSGenPage.asp?RSID=ueHzfsKSEAqNQMjEpB2N4W_6icSRilnMy1aCjtyYZ5o,NULL,Register for this event,C41373B4-86B9-4F74-8894-0B0BB7DDBD18,NULL,d8837737-40d2-4472-8a9e-ba4101ec2105,a143cbfd-d333-42a0-89a6-7287894464f1,799cf040-59c7-4986-825a-e4b909364823;5466df28-982a-4f78-92d0-6e464942cbc1;7e119a87-174d-49b2-9cc3-1270bd96a57e,NULL,Webinar,NULL,NULL,NULL,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Africa;GWLG.AustraliaNewZealand;GWLG.Austria;GWLG.BalticStates;GWLG.Belgium;GWLG.Canada;GWLG.CentralEasternEurope;GWLG.ChannelIslands;GWLG.China;GWLG.Cuba;GWLG.Cyprus;GWLG.France;GWLG.Germany;GWLG.Global;GWLG.HongKong;GWLG.India;GWLG.Indonesia;GWLG.Ireland;GWLG.Italy;GWLG.Japan;GWLG.LatinAmerica;GWLG.Luxembourg;GWLG.Monaco;GWLG.Netherlands;GWLG.NordicRegion;GWLG.Portugal;GWLG.Russia;GWLG.Singapore;GWLG.SouthKorea;GWLG.Spain;GWLG.Switzerland;GWLG.UAEDubai;GWLG.UK;GWLG.UnitedStates;GWLG.Malta,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speakers,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
143,/Events/2019/Employment-and-labour-law-seminar-Hamilton,en-GB,715D3B1F-3DF8-450B-B506-4F118AAB1661,Employment and labour law seminar Hamilton,Employment & Labour Law Seminar - Hamilton,"Gowling WLG's popular Employment & Labour Law Seminar returns to Hamilton on Tuesday, May 7, giving you the opportunity to learn about the latest legal developments affecting your workplace.",~/getmedia/b1ba5669-cd25-4d34-aa85-a90e921f1166/190402-ELE-Seminar.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Seminar,07-05-2019 07:45,07-05-2019 12:15,07:45,12:15,EST,1,4 hours,"<p>Gowling WLG&#39;s popular <strong>Employment &amp; Labour Law Seminar</strong> returns to Hamilton on Tuesday, May 7, giving you the opportunity to learn about the latest legal developments affecting your workplace.</p>

<p>Our leading professionals will guide you through these changes and offer practical insight and advice on what they mean for your organization.</p>

<h2>Benefits of attending</h2>

<p>This complimentary seminar provides an open and personal forum for the presentation and discussion of the latest case law, legislation and evolving employment issues. By attending, you&rsquo;ll have the chance to consider and discuss critical employment issues affecting your business with our panel of legal experts.</p>

<p>In addition, the seminar will be eligible for HRPA and LSO CPD credits.</p>

<h2>Who should attend</h2>

<p>In-house legal counsel, executives and senior human resources professionals are encouraged to attend.</p>

<p><span>We are pleased to offer this complimentary seminar to our clients and friends. This invitation is intended for the recipient at the corresponding email address. However, if you are unable to attend, a delegate from your organization can attend in your place.&nbsp;If you wish to register additional guests, please contact <span style=""color: #005aa9;""><a href=""mailto:chantal.chaves@gowlingwlg.com""><span style="" color: #005aa9;"">Chantal Chaves</span></a></span>.</span></p>

<h2>Topics</h2>

<ul>
	<li>The Good, the Bad and the Ugly &ndash; Top legal developments in 2018-2019 and trends for 2020</li>
	<li>Fatal Flaws &ndash; Is your Employment Agreement as enforceable as you think?</li>
	<li>When the Inspector Knocks &ndash; Ministry of Labour inspections</li>
	<li>The Complex Juggling Act &ndash; Managing tough accommodation cases</li>
	<li>Stump Our Experts &ndash; Q&amp;A panel discussion</li>
</ul>

<h2>Can&#39;t make it to the Hamilton&nbsp;seminar?&nbsp;</h2>

<p>Join us at a similar <a href=""~/en/insights-resources/events/2019/employment-and-labour-law-seminar-in-waterloo/"" target=""_blank"">session in the Waterloo Region on May 30</a>.&nbsp;</p>

<h2>CPD Credits</h2>

<p style=""text-align: center;""><img alt=""ELE CPD Credits"" src=""~/getmedia/fbe9484c-5001-4ae4-a7df-a6354774cb6c/14-HRPA-CPD-Seal-RGB-300.jpg.xml?width=99&amp;height=92"" style=""width: 99px; height: 92px;"" /></p>

<p>This program has been pre-approved for CPD hours under Section A of the CPD Log of the Human Resource Professionals Association (HRPA).</p>
",NULL,NULL,01-05-2019 16:39,https://sites-gowlingwlg.vuturevx.com/96/4402/landing-pages/employment-and-labour-law-seminar-event-registration-(blank-form).asp,NULL,Register for this event,41B87C9D-FCDE-4383-B5E1-0DFEEA28FF12,NULL,d8837737-40d2-4472-8a9e-ba4101ec2105,NULL,NULL,aa598f14-c406-4a0b-bf75-1e50eb033bfa;c2481f60-c3b5-45f4-bd24-6100c8e93683;7eff5158-bbe5-43de-be0e-cc3a84d2ecfd,Seminar,NULL,Art Gallery of Hamilton,39514,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,NULL,NULL,NULL,NULL,"Employment, Labour & Equalities",NULL,NULL,NULL,NULL,NULL
144,/Events/2019/In-the-Company-of-Innovators,en-GB,A489EC72-89F9-4069-8337-BD38C30D24C3,In the Company of Innovators,In the Company of Innovators with Gowling WLG & Ontario Tech University,Join Gowling WLG & Ontario Tech University for an informative session on innovation. ,~/getmedia/e2b0168d-ac4c-44e8-be0f-352687f32abd/190412-ontario-tech-university-innovation-roundtable.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Seminar,25-04-2019 21:00,26-04-2019 00:30,4:00 p.m.,7:30 p.m.,EST,0,NULL,"<h2><a href=""https://uoit.ca/"" target=""_blank""><img alt=""Ontario Tech University logo"" src=""~/getmedia/73818f26-0f93-4569-b37e-4a0b8483724f/ontariotechuniversity_primary_colour_rgb_150ppi.jpg.xml"" style=""float: right;"" /></a>Join Gowling WLG &amp; Ontario Tech University for an informative session on innovation.&nbsp;</h2>

<p>This event will include presentations on innovation in the energy technology and automotive technology sectors, and will be followed by a fireside chat with Ontario Tech University President, Dr. Steven Murphy.&nbsp;</p>

<p>After the session, join us for drinks and hors d&#39;oeuvres to network with peers and colleagues.&nbsp;</p>

<p><a class=""c-button"" href=""https://sites-gowlingwlg.vuturevx.com/103/4306/landing-pages/event-registration-(blank-form).asp?sid=blankform"" target=""_blank"">RSVP now to reserve your spot</a></p>

<h2>Speakers include:</h2>

<ul>
	<li>Nicolle Butcher, Vice President, Strategy and Acquisitions, Ontario Power Generation Inc.</li>
	<li>Justin Gammage, Industry Liaison Manager, Ontario Tech University</li>
	<li>Daniel Hoornweg, Associate Professor, Faculty of Energy Systems &amp; Nuclear Science, Ontario Tech University</li>
	<li>Dr. Steven Murphy, President &amp; Vice Chancellor, Ontario Tech University</li>
	<li><a href=""https://urldefense.proofpoint.com/v2/url?u=https-3A__sites-2Dgowlingwlg.vuturevx.com_email-5Fhandler.aspx-3Fsid-3Dblankform-26redirect-3Dhttps-253a-252f-252fgowlingwlg.com-252fen-252fpeople-252fw-2Dian-2Dpalm-252f-2523panel-2Dbutton1&amp;d=DwMFaQ&amp;c=d0WXBk_Z-g8VkGhzz_gPiQ&amp;r=3WUdzpv8XyhoR6nz3Sxns1z-TzothquFnbM3NHMWvm4&amp;m=HVaRMYihT9KcqMgZ05ffmLt8TsdyLZ1EpVZMmu71pqE&amp;s=p0F7ycHpwXUl6Nh3VHzIGo2-hHQsHKDpzhTvVNbrrtQ&amp;e="">W. Ian Palm</a>, Partner, Gowling WLG</li>
	<li>David Pamenter, Executive in Residence for Entrepreneurship, Ontario Tech University</li>
	<li><a href=""https://urldefense.proofpoint.com/v2/url?u=https-3A__sites-2Dgowlingwlg.vuturevx.com_email-5Fhandler.aspx-3Fsid-3Dblankform-26redirect-3Dhttps-253a-252f-252fgowlingwlg.com-252fen-252fpeople-252fparna-2Dsabet-2Dstephenson-252f-2523panel-2Dbutton1&amp;d=DwMFaQ&amp;c=d0WXBk_Z-g8VkGhzz_gPiQ&amp;r=3WUdzpv8XyhoR6nz3Sxns1z-TzothquFnbM3NHMWvm4&amp;m=HVaRMYihT9KcqMgZ05ffmLt8TsdyLZ1EpVZMmu71pqE&amp;s=UNm3mTTaofGbAh9vHDKvsu61G4Xl9YQ8EpsJCCTcx34&amp;e="">Parna Sabet-Stephenson</a>, Partner, Gowling WLG</li>
	<li>Sean Sexstone, Senior Vice President, Nuclear, Aecon Group Inc</li>
	<li><a href=""https://www.linkedin.com/in/tedgraham/"" target=""_blank"">Ted Graham</a>, Head of Open Innovation, General Motors</li>
</ul>

<h2>Student/Alumni showcase</h2>

<p>We will also showcase some exciting developments and commercialization opportunities incubated by <a href=""https://sites-gowlingwlg.vuturevx.com/103/4306/landing-pages/list-of-students-and-entrepreneurs.asp?sid=blankform"" target=""_blank"">students and entrepreneurs associated with the Ontario Tech University</a>.&nbsp;</p>

<h2>Agenda</h2>

<ul class=""o-lined-list is-list-unstyled"">
	<li>4:00 p.m.&nbsp;Registration</li>
	<li>4:15&nbsp;p.m.&nbsp;Welcome &amp; Introductions</li>
	<li>4:20&nbsp;p.m.&nbsp;Innovation in Automotive Technology Panel Discussion</li>
	<li>5:00 p.m.&nbsp;Innovation in Energy Technology Panel Discussion</li>
	<li>5:40 p.m.&nbsp;Fireside chat with Ontario Tech University President</li>
	<li>6:15 p.m.&nbsp;Showcase &amp; Reception</li>
</ul>
",NULL,NULL,25-04-2019 12:07,https://sites-gowlingwlg.vuturevx.com/103/4306/landing-pages/event-registration-(blank-form).asp?sid=blankform,NULL,Register for this event,B2DC4461-DC66-4F96-9AE6-32BC2B14259D,f1e960f5-8231-4c56-b7bf-9898ebb538c5;de517572-4373-4b36-844b-18be93f6f9bc,NULL,NULL,NULL,NULL,Seminar,NULL,NULL,NULL,GWLG.Events,NULL,~/getmedia/07674c57-fca2-402f-ad7e-e1961d830ed8/190412-innovation-event-roundtable-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/103/4306/landing-pages/event-registration-(blank-form).asp?sid=blankform,Register for this event,GWLG.Canada,0,NULL,Speaker(s),t-white,NULL,"Energy, Automotive",NULL,NULL,NULL,NULL,NULL,NULL
145,/Events/2019/Employment-and-labour-law-seminar-in-Waterloo,en-GB,D592382C-CBB9-404B-A089-00688FF4D47B,Employment and labour law seminar in Waterloo,Employment & Labour Law Seminar - Waterloo,"Gowling WLG's popular Employment & Labour Law Seminar returns to the Waterloo Region on Thursday, May 30, giving you the opportunity to learn about the latest legal developments affecting your workplace.",~/getmedia/b1ba5669-cd25-4d34-aa85-a90e921f1166/190402-ELE-Seminar.jpg.xml?width=930&height=450&ext=.jpg,Construction workers looking up at building,GWLG.Seminar,30-05-2019 07:45,30-05-2019 12:15,7:45 a.m.,12:15 a.m.,EST,0,4 hours,"<p>Gowling WLG&#39;s popular&nbsp;<strong>Employment &amp; Labour Law Seminar</strong>&nbsp;returns to the Waterloo Region on Thursday, May 30, giving you the opportunity to learn about the latest legal developments affecting your workplace.</p>

<p>Our leading professionals will guide you through these changes and offer practical insight and advice on what they mean for your organization.</p>

<h2>Benefits of attending</h2>

<p>This complimentary seminar provides an open and personal forum for the presentation and discussion of the latest case law, legislation and evolving employment issues. By attending, you&#39;ll have the chance to consider and discuss critical employment issues affecting your business with our panel of legal experts.</p>

<p>In addition, the seminar will be eligible for HRPA and LSO CPD credits.</p>

<h2>Who should attend</h2>

<p>In-house legal counsel, executives and senior human resources professionals are encouraged to attend.</p>

<p>We are pleased to offer this complimentary seminar to our clients and friends.&nbsp;This invitation is intended for the recipient at the corresponding email address. However, if you are unable to attend, a delegate from your organization can attend in your place.&nbsp;If you wish to register additional guests, please contact&nbsp;<a href=""mailto:chantal.chaves@gowlingwlg.com"">Chantal Chaves</a>.</p>

<h2>Topics</h2>

<ul>
	<li>The Good, the Bad and the Ugly&nbsp;- Top legal developments in 2018-2019 and trends for 2020</li>
	<li>Fatal Flaws&nbsp;-&nbsp;Is your Employment Agreement as enforceable as you think?</li>
	<li>When the Inspector Knocks&nbsp;-&nbsp;Ministry of Labour inspections</li>
	<li>The Complex Juggling Act&nbsp;-&nbsp;Managing tough accommodation cases</li>
	<li>Stump Our Experts: Q&amp;A Panel Discussion&nbsp;-&nbsp;Our renowned employment and labour lawyers will discuss a variety of topics that&nbsp;</li>
</ul>

<h2>Can&#39;t make it to the Waterloo seminar?&nbsp;</h2>

<p>We will also be hosting a similar seminar&nbsp;in Hamilton. <a href=""~/en/insights-resources/events/2019/employment-and-labour-law-seminar-hamilton/"" target=""_blank"">Learn more &amp; register for the Hamilton Employment and Labour Law seminar</a>.&nbsp;</p>

<h2>CPD Credits</h2>

<p style=""text-align: center;""><img alt=""ELE CPD Credits"" src=""~/getmedia/fbe9484c-5001-4ae4-a7df-a6354774cb6c/14-HRPA-CPD-Seal-RGB-300.jpg.xml?width=99&amp;height=92"" style=""width: 99px; height: 92px;"" /></p>

<p>This program has been pre-approved for CPD hours under Section A of the CPD Log of the Human Resource Professionals Association (HRPA).</p>
",NULL,NULL,27-05-2019 14:59,https://sites-gowlingwlg.vuturevx.com/105/4403/landing-pages/employment-and-labour-law-seminar-event-registration-(blank-form).asp,NULL,Register for this event,C7F2B1A2-DB6D-4E6A-92BD-F3ECF8CCBC22,NULL,d8837737-40d2-4472-8a9e-ba4101ec2105,NULL,NULL,NULL,Seminar,NULL,Holiday Inn,34462,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/105/4403/landing-pages/employment-and-labour-law-seminar-event-registration-(blank-form).asp,Register now,GWLG.Canada,0,NULL,Speaker(s),NULL,NULL,NULL,"Employment, Labour & Equalities",NULL,NULL,NULL,NULL,NULL
146,/Events/2019/Gowling-WLG-Summer-Open-House,en-GB,E279E546-9E60-4F7E-9BA4-0D1F16A9D53C,Gowling WLG Summer Open House,Gowling WLG Summer Open House,"As you prepare for the upcoming recruitment processes, take the opportunity to find out what sets Gowling WLG apart.  We invite you to come into our Toronto office and see what makes Gowling WLG a great place to work.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.SpecialEvents,NULL,NULL,NULL,NULL,EST,0,NULL,"<p>As you prepare for the upcoming recruitment processes, take the opportunity to find out what sets Gowling WLG apart.&nbsp; We invite you to come into our Toronto office and see what makes Gowling WLG a great place to work.</p>

<h3>Gowling WLG is currently offering firm tours on:</h3>

<ul>
	<li>Wednesday, July 10, 2019&nbsp;from 5:00 p.m. &ndash; 6:30 p.m.</li>
	<li>Wednesday, July 31, 2019&nbsp;from 5:00 p.m. &ndash; 6:30 p.m.</li>
</ul>
","<h3>Our student programs focus on the following practice areas:</h3>

<ul>
	<li>Advocacy</li>
	<li>Business Law&nbsp;</li>
	<li>Tax</li>
	<li>Corporate Finance</li>
	<li>Intellectual Property</li>
	<li>Financial Services</li>
	<li>Real Estate &amp; Urban Development</li>
	<li>Environmental Law</li>
</ul>

<p>Please note that our Open Houses are available to those candidates eligible to participate in the 2020 summer student recruitment process. &nbsp;</p>

<p><br />
For more information about our student programs, please check out our student site at <a href=""http://gowlingwlgstudents.ca/"">http://gowlingwlgstudents.ca/</a>.</p>
",NULL,17:12.0,NULL,NULL,Registration closed.,B2DC4461-DC66-4F96-9AE6-32BC2B14259D,NULL,NULL,NULL,NULL,NULL,Special events,NULL,Toronto,63,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,Speaker(s),NULL,b2dc4461-dc66-4f96-9ae6-32bc2b14259d,NULL,NULL,NULL,NULL,NULL,NULL,NULL
147,/Events/2019/Collision-Conference,en-GB,AFD52AB9-7C34-4ADB-9ECC-B113F24E5AB8,Collision Conference,Gowling WLG at Collision Conference,"Gowling WLG professionals from around the nation will be at #CollisionConf, said to be North America’s fastest-growing tech conference in Toronto May 20-23.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Conference,38:29.0,38:39.0,NULL,NULL,EST,0,NULL,"<h2>Come visit our Gowling WLG tech team at <a href=""https://collisionconf.com/"" target=""_blank"">Collision</a>, North America&#39;s fastest growing tech conference, taking place in Toronto on May 20-23, 2019.</h2>

<p>Our Collision tech team has the market insight, legal expertise and business focus to help you grow your company and protect what makes your business unique. Whether you are an existing client, startup, established tech company or publicly listed entity, we want to meet you to discuss what makes your company tick &mdash; as well as to explore strategies to assist you in achieving your business objectives in a constantly changing and increasingly competitive landscape.</p>

<p>We look forward to meeting you in Toronto. Please reach out to any of our Collision team members below.</p>

<h2>Our Tech Team</h2>

<p>The global tech sector continues to evolve, transforming business and behaviour while revealing new opportunities and challenges. In this fast-paced world, you need a law firm that&#39;s as forward-thinking and dynamic as you.</p>

<p><a class=""c-button"" href=""~/en/sectors/tech/"">Learn more about our Global Tech Team</a></p>
",NULL,NULL,NULL,NULL,NULL,NULL,NULL,cdfc9b50-74c2-4af5-9508-342935f81ccd,NULL,NULL,425a9689-d70c-46ff-b7b6-8994bb782c5f;45042386-e87e-4fa2-8f87-101784526d0a;7fb29160-44a7-4f27-b030-99ef5d9941cf;48295bef-3e9d-4fad-a7cd-de2dea46e3dd;7e822e16-356b-4251-84ae-83b9293fa418;3cb7b903-24be-4d44-b671-e9e9bb0f7efd;300e471b-5cfe-45e3-bb75-6cc00bbdf27b;e82bac0e-f421-45e2-b38c-eacabbb741a6;ebe9e779-afc4-4e2d-9ebd-57d4b49a25ea;7669672b-04fc-4c7a-a4cd-16cfb6e777ab;25b3dc0e-5f2c-43b2-b14a-78f34dd3c1aa;393694af-228a-4a17-ae11-f9f035dc2b53;1cf0dd94-9cc3-4d42-b64f-a001f6676a9f;86c656a5-8525-4b82-b9b5-bafa5237c8e5,NULL,Conference,"Viona M. Duncan, Christopher N. Alam, Naïm Alexandre Antaki, Sean Gomes, W. Ian Palm, Parna Sabet-Stephenson, Usman M. Sheikh, Warren Cass, Emily Dies, Cindy Kou, Marek Lorenc, Sachin Seth, Kavi Sivasothy, Radhika Vaidyanathan",NULL,NULL,GWLG.Events,NULL,~/getmedia/939d81e3-707a-4661-8da8-126307b161b0/190423-collision-conference-header.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,Gowling WLG Collision Team,NULL,NULL,Tech,NULL,NULL,NULL,NULL,NULL,NULL
148,/Events/2019/Collision-Conference,fr-CA,AFD52AB9-7C34-4ADB-9ECC-B113F24E5AB8,Conférence Collision,Gowling WLG à la conférence « Collision »,"Les professionnels de Gowling WLG du monde entier assisteront à Collision, la conférence technologique de plus en plus populaire en Amérique du Nord, qui se déroulera à Toronto du 20 au 23 mai prochain.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Conference,38:29.0,38:39.0,NULL,NULL,EST,0,NULL,"<h2>Les professionnels de Gowling WLG du monde entier assisteront à <a href=""http://collisionconf.com"" target=""_blank"">Collision</a>, la conférence technologique de plus en plus populaire en Amérique du Nord, qui se déroulera à Toronto du 20 au 23&nbsp;mai prochain.</h2>

<p>Que vous soyez une jeune entreprise, une entreprise technologique bien établie ou une entité cotée en bourse, nos professionnels présents à Collision possèdent la perspicacité, l&#39;expertise et l&#39;esprit d&#39;entreprise nécessaires pour vous aider à faire croître votre entreprise et protéger ses caractéristiques uniques. Nous profiterons de la conférence Collision pour établir des liens privilégiés avec vous, clients et contacts, pour discuter des technologies émergentes et explorer des stratégies pouvant vous aider à atteindre vos objectifs d&#39;affaires dans un environnement de plus en plus concurrentiel et en constante évolution.</p>

<p>Nous serions ravis de vous rencontrer pour discuter de vos besoins d&#39;affaires et vous être d&rsquo;une quelconque assistance lors de votre séjour à Toronto.&nbsp; Pour prendre rendez-vous, n&#39;hésitez pas à communiquer avec l&#39;un des membres de l&#39;équipe de Collision figurant ci-dessous.</p>

<h2>Notre groupe Technologie</h2>

<p>Le secteur des technologies évolue rapidement, et ce à l&#39;échelle mondiale. Cette constante évolution transforme les affaires et les comportements, tout en révélant de nouvelles opportunités et de nouveaux défis. Dans un monde au rythme frénétique, il vous faut le soutien d&#39;un cabinet juridique tout aussi novateur et dynamique que vous.&nbsp;</p>

<p><a href=""~/fr/sectors/tech/global/"">En savoir plus sur notre équipe internationale</a></p>
",NULL,NULL,NULL,NULL,NULL,NULL,NULL,cdfc9b50-74c2-4af5-9508-342935f81ccd,NULL,NULL,425a9689-d70c-46ff-b7b6-8994bb782c5f;7fb29160-44a7-4f27-b030-99ef5d9941cf;48295bef-3e9d-4fad-a7cd-de2dea46e3dd;7e822e16-356b-4251-84ae-83b9293fa418;3cb7b903-24be-4d44-b671-e9e9bb0f7efd;300e471b-5cfe-45e3-bb75-6cc00bbdf27b;e82bac0e-f421-45e2-b38c-eacabbb741a6;ebe9e779-afc4-4e2d-9ebd-57d4b49a25ea;7669672b-04fc-4c7a-a4cd-16cfb6e777ab;25b3dc0e-5f2c-43b2-b14a-78f34dd3c1aa;393694af-228a-4a17-ae11-f9f035dc2b53;1cf0dd94-9cc3-4d42-b64f-a001f6676a9f,NULL,Conférence,"Naïm Alexandre Antaki, Parna Sabet-Stephenson, Warren Cass",NULL,NULL,GWLG.Events,NULL,~/getmedia/939d81e3-707a-4661-8da8-126307b161b0/190423-collision-conference-header.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,Les professionnels de Gowling WLG présents à Collision,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
149,/Events/2019/The-role-of-the-Board-in-M-A-transactions-Ottawa,en-GB,18876822-2230-41DA-B3CE-F773FF65D3E4,The role of the Board in M&A transactions Ottawa,The role of the Board in M&A transactions: Creating value and minimizing risk,The role of the board in the M&A process is critical to ensure the transaction contributes to value creation for the company and the risk of failure is minimized.,~/getmedia/f9bb9e14-3db2-433e-8585-8c9bf048d198/190527-wgob-event-ottawa.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Seminar,29-05-2019 08:30,29-05-2019 10:00,8:30 a.m.,10 a.m.,EST,0,NULL,"<p>In partnership with <a href=""https://womengetonboard.ca/"" target=""_blank"">Women Get on Board</a></p>

<p><img alt="""" src=""~/getmedia/f611e6cd-700a-4182-8e69-1cbdbcb0f500/WGOB-pinklogo-cmyk.png.xml"" /></p>

<p>The role of the board in the M&amp;A process is critical to ensuring that proposed transactions result in value creation, while minimizing the risk of failure. Whether the process begins with a friendly offer or a hostile ambush, the steps directors follow and the ultimate decision may be among their most scrutinized actions as board members.</p>

<p>Join us for a panel discussion that will explore strategies for success in the context of both public and private companies.&nbsp;<a href=""https://www.eventbrite.ca/e/ottawa-eventthe-role-of-the-board-in-ma-transactions-creating-value-and-minimizing-risk-on-tickets-52484645989"" target=""_blank""><em>Learn more and register for this event here&nbsp;&raquo;</em></a></p>
",NULL,NULL,27-05-2019 16:50,https://www.eventbrite.ca/e/ottawa-eventthe-role-of-the-board-in-ma-transactions-creating-value-and-minimizing-risk-on-tickets-52484645989,NULL,Register for this event,CB61C4C1-D0CF-4AA1-BA0B-5DAB5DC99393,NULL,56646cda-20d7-43d4-b13c-886e1cd90c52,NULL,NULL,NULL,Seminar,NULL,Ottawa,67,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://www.eventbrite.ca/e/ottawa-eventthe-role-of-the-board-in-ma-transactions-creating-value-and-minimizing-risk-on-tickets-52484645989,Register now,GWLG.Canada,0,NULL,Speaker(s),NULL,NULL,NULL,Mergers & Acquisitions,NULL,NULL,NULL,NULL,NULL
150,/Events/2019/Blockchain-Litigation-Cutting-Edge-Developments,en-GB,52905A7C-7F5D-4431-84E5-A8D1EFE418D7,Blockchain Litigation - Cutting Edge Developments,Blockchain Litigation - Cutting Edge Developments,Are you up to speed on the latest developments in blockchain litigation?,~/getmedia/f0924ad9-ac18-4330-abf7-e690d9f832c6/Blockchain-Litigation-Cutting-Edge-Developments.png.xml?width=744&height=400&ext=.png,NULL,GWLG.Seminar,28-05-2019 00:00,28-05-2019 00:00,16:30,20:00,EST,0,NULL,"<p>Are you up to speed on the latest developments in blockchain litigation? Join us on May 28 as leading litigation experts from Canada and the United States offer a fresh update on cases and cutting-edge trends involving blockchain litigation.</p>

<p>Usman Sheikh, the National Head of Gowling WLG&#39;s Blockchain &amp; Smart Contract Group, will kick things off with a high level overview of case law development in blockchain. Our panelists will then explore the topic of securities litigation, including cases involving ICOs, crypto-asset trading platforms, misleading statements in White Papers, and more. Litigation involving blockchain-related civil class actions, criminal prosecutions and insolvency proceedings will also be discussed.</p>

<p>We are pleased to feature special guest, Jeff Kehoe, Director of Enforcement for the Ontario Securities Commission, along with several of the leading cryptocurrency trial attorneys from the United States.</p>

<p>A cocktail reception will follow this informative panel. Please RSVP today to reserve your spot.</p>

<h2>Schedule</h2>

<ul>
	<li>16:00&nbsp;Registration &amp; Networking</li>
	<li>17:00&nbsp;Blockchain Litigation overview</li>
	<li>17:15&nbsp;Securities Litigation</li>
	<li>18:00&nbsp;Criminal, Civil, and Insolvency litigation&nbsp;</li>
	<li>18:45 Cocktail Reception &amp; Networking</li>
	<li>20:00 Event Concludes</li>
</ul>

<h2>Speakers</h2>

<p><img alt=""Photo of speakers for Blockchain Litigation event"" src=""~/getmedia/8addcfbc-d480-4082-8a4a-2f213ef30184/190507-blockchain-litigation-speakers-chair.png.xml"" /></p>
",NULL,NULL,28-05-2019 14:01,https://sites-gowlingwlg.vuturevx.com/103/4461/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,B2DC4461-DC66-4F96-9AE6-32BC2B14259D,cdfc9b50-74c2-4af5-9508-342935f81ccd,20e41ca2-b15a-4815-bb5c-7cf60c18278f,NULL,300e471b-5cfe-45e3-bb75-6cc00bbdf27b,NULL,Seminar,Usman M. Sheikh,Toronto,63,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,Chair,NULL,NULL,Tech,Blockchain & Smart Contracts,NULL,NULL,NULL,NULL,NULL
151,/Events/2019/Conduct-Risk-an-update-from-the-FCA,en-GB,8D2B9519-3315-4186-9DB9-6AB6FFAFA933,Conduct Risk - an update from the FCA,Conduct Risk - an update from the FCA,Gowling WLG will be hosting a breakfast briefing with the FCA on Conduct Risk.,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,Conduct Risk - an update from the FCA,GWLG.Seminar,29-05-2019 08:30,29-05-2019 10:00,08:30,10:00,BST,1,1,"<p>Gowling WLG will be hosting a breakfast briefing with the Financial Conduct Authority (FCA) on Conduct Risk, a hot topic for firms. Simone Ferreira, Head of European Wholesale Banks, and her colleagues, Alessandro Chiozzi and Ted MacDonald from the <abbr title=""Financial Conduct Authority"">FCA</abbr> will provide an update on the following:</p>

<ul>
	<li>the <abbr title=""Financial Conduct Authority"">FCA</abbr>&#39;s latest thinking on conduct risk (including an update on the <abbr title=""Financial Conduct Authority"">FCA</abbr>&#39;s 5 Conduct Questions Programme, sharing what the <abbr title=""Financial Conduct Authority"">FCA</abbr> has seen on innovation, risks and good and bad practice in wholesale banking, but of broader interest to other regulated firms);</li>
	<li>recent developments on whistleblowing; and</li>
	<li>developments on non-financial misconduct</li>
</ul>

<p>Ian Mason and Sushil Kuner, Financial Services Regulatory Team, Gowling WLG, will consider the practical implications and next steps for firms.</p>

<p>The briefing will be of interest in particular to Legal and Compliance teams, and members of senior management at <abbr title=""Financial Conduct Authority"">FCA</abbr> regulated firms.</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,27-05-2019 23:59,https://reaction.gowlingwlg.com/reaction/RSGenPage.asp?RSID=uhigbthzDAs-f_L9RCiEtOQme-jftE4nqy6PmeVzShI,NULL,Register for this event,9FBE191E-3BCF-45DE-A2BA-338BB194FC9D,06cecb4c-c959-4674-9047-d5d8ee8c673c,ccb3b009-ba81-4ff5-8e8a-9200813a2a54;1af5918b-cdfd-4eab-8cdc-ac92fd0b26c8;6ecd1574-34c3-42ca-a28b-70a10b61221e;aa5dcce5-fbe3-48b0-8a5c-b653c134f240,NULL,af5005a2-4ec9-49ba-b7bd-262bb191b111;0ccc4841-f8a1-4356-853e-e2ad6f7e230c,NULL,Seminar,"Ian Mason, Sushil Kuner",London,71,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,95EC9477-4594-4332-A463-E612BD16CA0C,Speaker(s),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
152,/Events/2019/Risk-to-reward-seminar-Upcoming-election-2019,en-GB,F8616CEA-EC3F-49DA-87D9-C473B7D28DA7,Risk to reward seminar: Upcoming election 2019,5 months and counting: What the upcoming election could mean for your business,The federal election is only five months away and polling suggests it will be a highly competitive election.,~/getmedia/f20fd693-2697-4e43-b211-552e62aeb111/190507-r2r-election-social-tile.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Seminar,22-05-2019 07:30,22-05-2019 09:00,07:30,09:00,EST,0,NULL,"<p>The federal election is only five months away and polling suggests it will be a highly competitive election. The Liberals are down, but not out, the Conservatives are emboldened and the NDP and Greens are trying to figure out how to break through.</p>

<p>Will climate change be the defining issue or will economic concerns drive voter decisions? How might increased federal-provincial conflict impact the race and will President Trump complicate things for Andrew Scheer?</p>

<p>Hear from two of Canada&#39;s leading political commentators: <a href=""https://abacusdata.ca/team/david-coletto/"" target=""_blank""><strong>David Coletto</strong></a> and <strong>Tim Powers </strong>from <strong><a href=""https://abacusdata.ca/"" target=""_blank"">Abacus Data</a></strong>.</p>
",NULL,NULL,20-05-2019 18:07,https://sites-gowlingwlg.vuturevx.com/101/4475/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,CB61C4C1-D0CF-4AA1-BA0B-5DAB5DC99393,NULL,NULL,NULL,c31b146c-1c90-4aa9-bbdd-a3660daf3a5b,NULL,Seminar,NULL,Ottawa,67,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,Host,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
153,/Events/2019/Automotive-breakfast-seminar,en-GB,4D9AE8EB-0349-4D02-91A1-39DE6ADEAF81,Automotive breakfast seminar,Automotive breakfast seminar,Interested in foreign markets? Then this automotive breakfast seminar is for you. ,~/getmedia/f487bb64-d529-481c-bfaf-e60b71cdbfc6/190510-automotive-breakfast-seminar.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Seminar,06-06-2019 08:00,06-06-2019 10:28,08:00,09:30,BST,0,1,"<p>Interested in foreign markets? Then this seminar is for you and covers two key aspects:</p>

<ol>
	<li>Whether your business is ready for the rules and regulations governing exports; and</li>
	<li>Opportunities and risks in North America. We will have counsel from the UK, US and Canada on hand to answer your questions.</li>
</ol>

<p>The topic will be around the trade challenges for UK automotive exporters, both from the perspective of exporting out of the UK and the subsequent import into markets including Canada, US and Mexico.</p>

<p>Although this seminar is aimed at the West Midland&rsquo;s automotive industry, it will also be relevant to any business in the UK that is looking to expand its export horizons as a result of uncertainty about the UK&rsquo;s future trading relationship with Europe.</p>

<h2>Agenda</h2>

<table>
	<thead>
		<tr>
			<th>Time</th>
			<th>Agenda item</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>08:00</td>
			<td>Registration and breakfast</td>
		</tr>
		<tr>
			<td>08:30</td>
			<td>Welcome and presentations</td>
		</tr>
		<tr>
			<td>09:15</td>
			<td>Q&amp;A</td>
		</tr>
		<tr>
			<td>09:30</td>
			<td>Close</td>
		</tr>
	</tbody>
</table>
","<p>This event is free of charge.</p>

<p>This event will run for one hour. Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession.</p>

<p>Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,31-05-2019 18:00,https://reaction.gowlingwlg.com/reaction/RSGenPage.asp?RSID=FpE41hPmJsWEnNysKgyUzNRhsufEtR4FQjBzgOsmmaA,NULL,Register for this event,58076178-DA60-4AB6-A07C-EF250971EBF7,de517572-4373-4b36-844b-18be93f6f9bc,NULL,NULL,e33531f3-9132-4365-bdfc-fe6df95bab54;afc382e9-2b75-4a26-9e20-0a8c68694164,NULL,Seminar,"Ursula Johnston, Wendy J. Wagner",Birmingham,70,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,95EC9477-4594-4332-A463-E612BD16CA0C,Speaker(s),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
154,/Events/2019/Hot-button-employment-issues-of-2019,en-GB,36E2CA2F-CA34-40A5-83F5-AF7F0C9A1D52,Hot button employment issues of 2019,Hot button employment issues of 2019,"Join Gowling WLG's Western Canada Employment, Labour and Equalities Group on Wednesday, June 5 for our fourth annual Hot Button Employment Issues seminar.",~/getmedia/884b6337-a03e-4eb3-a380-311cacbfd489/190515-calgary-employment-issues-seminar-2019.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Seminar,05-06-2019 07:30,05-06-2019 11:30,07:30,11:30,Local time,1,NULL,"<p>Join Gowling WLG&#39;s Western Canada <strong><a href=""~/en/services/employment-labour-equalities/#canada"" target=""_blank"">Employment, Labour and Equalities Group</a></strong> on Wednesday, June 5 for our fourth annual <em>Hot Button Employment Issues </em>seminar. This half day session will focus on a range of challenges that many workplaces face today.</p>

<p>Our professionals will guide you through key developments and offer practical insights and advice for your organization.</p>

<p><strong>CPD (CPHR) credits</strong> will be awarded to those eligible.</p>

<p>Breakfast and a mid-morning snack will be provided.</p>

<p>RSVP above to reserve your spot.</p>

<h2>Agenda</h2>

<table>
	<thead>
		<tr>
			<th scope=""col"">Time</th>
			<th scope=""col"">Activity</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>07:55</td>
			<td>Welcome &amp; introductions (Max Brunette)</td>
		</tr>
		<tr>
			<td>08:00</td>
			<td>Case law update (Max Brunette, Bruce Graham)</td>
		</tr>
		<tr>
			<td>08:40</td>
			<td>Current termination issues (Will Cascadden)</td>
		</tr>
		<tr>
			<td>09:20</td>
			<td>Canada &amp; US immigration trends (Krista Schofer, Nichole Mirwaldt)</td>
		</tr>
		<tr>
			<td>10:00</td>
			<td>Break</td>
		</tr>
		<tr>
			<td>10:45</td>
			<td>Panel discussion</td>
		</tr>
		<tr>
			<td>11:20</td>
			<td>Wrap-up</td>
		</tr>
	</tbody>
</table>
",NULL,NULL,31-05-2019 20:07,https://sites-gowlingwlg.vuturevx.com/95/4430/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,3C426BFB-9E67-4F77-AB6F-715278509DAC,NULL,d8837737-40d2-4472-8a9e-ba4101ec2105,NULL,26fb12df-b407-4553-9451-a9880a4c2e8b;9e1d72cc-4bfa-433a-ab12-01ecd560cc72;d05a8142-f64d-4686-b20f-6ae0cbfa3e8a;53a32860-b6e9-431a-a79b-957e5ad8806b;7c4afefb-1620-431e-8cc4-5f9ddd468aec;8019d9ad-34b0-4cbd-8dfb-99a7578a4b6a,715d3b1f-3df8-450b-b506-4f118aab1661;d592382c-cbb9-404b-a089-00688ff4d47b,Seminar,NULL,Hotel Arts,34468,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,Speakers,NULL,NULL,NULL,"Employment, Labour & Equalities",NULL,NULL,NULL,NULL,NULL
155,/Events/2019/Cyber-Crisis-Management-Workshop,en-GB,F75AC383-53B7-465F-8080-64D0EBA43D3C,Cyber Crisis Management Workshop,Cyber Crisis Management Workshop,Join Gowling WLG for the Cyber Crisis Management Workshop.,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,18-06-2019 09:00,18-06-2019 13:00,09:00,13:00,GMT,0,NULL,"<p>Join us for an interactive workshop for GCs, Heads of Legal and senior in-house lawyers, for an opportunity to rehearse your crisis management skills and ensure you have confidence if you ever need to implement your cyber incident response plan.</p>

<p>With cyber risks on the minds of all organisations, this workshop will challenge you to respond to a simulated cyber incident. As the exercise unfolds, you will need to make tough decisions to protect your business, reputation and operations.</p>

<p>This interactive workshop will give you the opportunity to consider the legal aspects of cyber response planning as well as wider issues such as internal comms, IT systems, stakeholder management and PR.</p>

<p>Working in teams with peers from other organisations, you will determine your response in an emerging cyber crisis in this fast-paced exercise facilitated by Gowling WL and Insignia Crisis Management.</p>

<p align=""left"">Due to the interactive nature of this event places are limited so early registration is recommended to secure your place.</p>

<table>
	<thead>
		<tr>
			<th scope=""col"">Time</th>
			<th scope=""col"">Activity</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>09:00</td>
			<td>Registration &amp; networking</td>
		</tr>
		<tr>
			<td>09:30</td>
			<td>Cyber crisis management workshop starts</td>
		</tr>
		<tr>
			<td>10:30</td>
			<td>Mid-morning break</td>
		</tr>
		<tr>
			<td>11:00</td>
			<td>Cyber crisis management workshop resumes</td>
		</tr>
		<tr>
			<td>12:00</td>
			<td>Lunch &amp; networking</td>
		</tr>
		<tr>
		</tr>
	</tbody>
</table>

<p><strong>Jonathan Hemus, managing director, Insignia </strong></p>

<p>Jonathan Hemus is managing director of specialist crisis management consultancy Insignia and has more than 30 years&rsquo; experience in crisis communication.</p>

<p>He established Insignia ten years ago with a mission to help organisations do and say the right things under the intense pressure of a crisis. Since then, the Insignia team has worked with leaders of organisations as diverse as Cathay Pacific, DP World, Henley Business School, Lidl, Luton Airport, NFU Mutual and Sky to protect their reputations through crisis management planning, training, exercising and advice.</p>

<p>Jonathan has led crisis simulations in Chilean copper mines, coached senior government officials in Dubai, advised the International Cricket Council as it grappled with match-fixing and even persuaded 100 in-house lawyers to work more collaboratively with their communication colleagues when responding to a crisis.</p>

<p>He has spoken at international crisis management conferences including Business Continuity World, The Communication Directors&rsquo; Forum, the International Crisis and Risk Communication Conference and PR Week&rsquo;s annual crisis communication conference.</p>

<p>As an acknowledged crisis management expert, Jonathan is regularly asked by national and international broadcast media such as Al Jazeera, the BBC, CNBC, CNN and Sky to provide insight into high profile crises.&nbsp;&nbsp;</p>
","<p>This event is free of charge.</p>

<p>This event will run for three hours. Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession.</p>

<p>Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,14-06-2019 23:00,https://reaction.gowlingwlg.com/reaction/RSGenPage.asp?RSID=SxSTJgk9a-3uLtGPSdCPGhzddIn-SYzoBE4nMwI8Xe8,NULL,Register for this event,9FBE191E-3BCF-45DE-A2BA-338BB194FC9D,NULL,NULL,a143cbfd-d333-42a0-89a6-7287894464f1,NULL,NULL,Seminar,NULL,London,71,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,NULL,Speaker(s),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
157,/Events/2019/Spring-construction-law-forum-2019,en-GB,DD1B0FC6-10E1-418D-84E8-80048774CE81,Spring construction law forum 2019,Spring construction law forum 2019,"The Gowling WLG Construction & Engineering Group invites you to breakfast on Thursday, June 13 for the Spring Construction Law Forum.",~/getmedia/7f147812-230a-440e-b033-6741860c02c9/190521-spring-law-construction-forum.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Seminar,13-06-2019 07:30,13-06-2019 10:00,07:30,10:00,EST,0,NULL,"<p>The Gowling WLG Construction &amp; Engineering Group invites you to breakfast on Thursday, June 13 for the Spring Construction Law Forum.</p>

<p>Guests will hear from a panel of industry experts on prompt payment and the status of Bill 142. You will also be invited to participate in an interactive Q&amp;A session.</p>

<p>Please RSVP to reserve your spot!&nbsp;</p>

<h2>Agenda</h2>

<table>
	<thead>
		<tr>
			<th scope=""col"">Activity</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>Introduction &amp; statute update<br />
			<em>Ted Betts</em></td>
		</tr>
		<tr>
			<td>Case law update<br />
			<em>Neil Abbott and Kelly Campagnola</em></td>
		</tr>
		<tr>
			<td>Brief summary of prompt payment<br />
			<em>Christopher Stanek</em></td>
		</tr>
		<tr>
			<td>Best practices? Panel discussion on how to get ready for prompt payment<br />
			<em>Moderator: Mark Crane</em></td>
		</tr>
	</tbody>
</table>
",NULL,NULL,10-06-2019 18:20,https://sites-gowlingwlg.vuturevx.com/103/4512/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,B2DC4461-DC66-4F96-9AE6-32BC2B14259D,3fc2ca8c-9d19-44ba-a3a9-ad1ecb11e900,NULL,19723ad7-81d9-4a40-a93b-96bd009dd149,dd6fafb1-ecf7-491d-ac34-0e0f405cea0d;8de9fbe6-53f4-4edf-916a-973cd916b47b;8c8bc8d8-999c-4e83-b1ee-fa3f33b0ecdd;21b43a95-c33f-4ac5-8755-4a0799707d9a;71cc52f2-e0c0-470a-a5a0-0726d832bc1e,NULL,Seminar,"Edward (Ted) G. Betts, Neil S. Abbott, Kelly Campagnola, Christopher M. Stanek, Mark W. Crane",Toronto,63,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,Speakers,NULL,NULL,Construction & Engineering,NULL,"Construction Law Reform: Prompt payment, adjudication, and modernization",NULL,NULL,NULL,NULL
158,/Events/2019/Life-Sciences-Seminar-2019-4-July-2019,en-GB,D9AB2957-036B-44C7-A134-915F620B0886,Life Sciences Seminar 2019 - 4 July 2019,Life Sciences Seminar 2019,This year's life sciences seminar will provide an update on the key developments in the UK life sciences sector from the last 12 months with a focus on how technology and the life sciences sector work together.,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,04-07-2019 08:45,04-07-2019 13:30,08:45,13:30,BST,0,NULL,"<p>This year&#39;s seminar will provide an update on the key developments in the UK life sciences sector from the last 12 months with a focus on how technology and the life sciences sector work together.</p>

<p>We will also discuss the increasing trend of using AI in life sciences and some of the issues that creates.</p>

<p>We are delighted to have Michale Bouskila-Chubb from Healx join us as our external speaker this year. Michale will provide an overview of how Healx uses Al, the development of the company and its business model as well as her ideas on deal-making for AI in Life Sciences.</p>

<p>We hope you can join us.</p>

<table>
	<thead>
		<tr>
			<th>Time</th>
			<th>Agenda item</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>08:45			</td>
			<td>Registration &amp; breakfast
			</td>
		</tr>
		<tr>
			<td>09:15
			</td>
			<td>Welcome &amp; introduction with Patrick Duxbury
			</td>
		</tr>
		<tr>
			<td>09:20
			</td>
			<td>Case law update with Paul Inman, Luke Kempton &amp; Jenny Davies
			</td>
		</tr>
		<tr>
			<td>10:00
			</td>
			<td>AI in Life Sciences - trends and legal issues with Matt Hervey
			</td>
		</tr>
		<tr>
			<td>
			10:40
			</td>
			<td>
			Refreshments
			</td>
		</tr>
		<tr>
			<td>
			11:00
			</td>
			<td>
			AI &amp; Privacy: a journey to Trust with Rocio de la Cruz
			</td>
		</tr>
		<tr>
			<td>
			11:40
			</td>
			<td>
			Healx - Deal-making for AI in Life Sciences with Michale Bouskila-Chubb
			</td>
		</tr>
		<tr>
			<td>
			12:10
			</td>
			<td>
			Panel discussion and Q&amp;A
			</td>
		</tr>
		<tr>
			<td>
			12:40
			</td>
			<td>
			Lunch &amp; networking
			</td>
		</tr>
	</tbody>
</table>
","<p>This event is free of charge.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,28-06-2019 17:30,https://reaction.gowlingwlg.com/reaction/RSGenPage.asp?RSID=286ApEerYZiaIIIQqf7F0gle-pnnil_AejGtSJF1JCw,NULL,Register for this event,9FBE191E-3BCF-45DE-A2BA-338BB194FC9D,049c8249-7ff3-4ee3-a439-590f45fd5cff;cdfc9b50-74c2-4af5-9508-342935f81ccd,NULL,NULL,8e016382-a73f-4aba-8339-02f14b8a79bb;f3cd8bc4-37c5-4d8f-b2ff-eb4b97b8b140;31699bd7-da5f-4d73-834a-7e345e466806;74b9d0c7-28ad-4afc-8e4c-194a33906a90;a198222e-fff0-47b3-bbca-b7c042e76a69;a1fc3780-83d6-4133-9ed0-6fa6f7fffbd2,9769454f-335a-41c5-ace0-246c3b5337ff,Seminar,"Patrick Duxbury, Paul Inman, Dr Luke Kempton, Jenny Davies, Matt Hervey, Rocio de la Cruz",London,71,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,1,78951690-74A0-4DDF-BEAB-7CB8D27C6422,Speaker(s),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
159,/Events/2019/Le-reglement-des-differends-insolvabilite,fr-CA,25352987-6393-49B5-A604-B96B78FC8248,Le règlement des différends insolvabilité,Le règlement des différends au moyen des lois en matière d’insolvabilité,"Le fait pour une entreprise en difficulté de se placer sous la protection des lois en matière d’insolvabilité est souvent le signe de litiges en cours ou à venir. Au cours des dernières années, des sociétés spécialisées dans le financement de ces litiges ont fait leur apparition. ",~/getmedia/78545655-72b9-4b06-aa44-06ab88342c54/06_18_conf-inso.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Conference,00:00.0,00:00.0,8 h,9 h 30,EST,0,NULL,"<p>Le fait pour une entreprise en difficulté de se placer sous la protection des lois en matière d&rsquo;insolvabilité est souvent le signe de litiges en cours ou à venir. Au cours des dernières années, des sociétés spécialisées dans le financement de ces litiges ont fait leur apparition. Joignez-vous à&nbsp;nos experts, Geneviève Cloutier et Alexander Bayus, pour un déjeuner privé lors duquel ils aborderont les sujets suivants :</p>

<ul>
	<li>Le financement de litiges</li>
	<li>Le règlement de litiges contre les compagnies solvables au moyen&nbsp;des lois en matière d&rsquo;insolvabilité</li>
</ul>

<p>Nous espérons que vous pourrez vous joindre à nous pour cet événement exclusif.</p>

<p>Places limitées, réservez la vôtre sans tarder!</p>
",NULL,NULL,00:00.0,mailto:julie-han.angers@gowlingwlg.com,NULL,Inscrivez-vous,FDA376DB-224B-47A9-9C38-2B9C8591B608,NULL,cb3477a6-c725-4d55-8fa9-194abc3a4ec4;153dc4b1-a86f-45ab-b010-bef82a13326b,NULL,8be65ddc-f979-4c8c-afaf-b83b4d5143c1;31589b1d-8773-40f3-b07d-0b7a1a5eee2f,NULL,Conférence,NULL,Gowling WLG Montréal,40558,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,Conférenciers,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
160,/Events/2019/Gowling-WLG-at-Le-Bourget,fr-CA,5CBE1D9B-1F5B-4DEB-9269-6AF401C6911A,Gowling WLG au Bourget,Gowling WLG au Salon International de l'Aéronautique et de l'Espace à Paris,"Une équipe d’avocats experts en aviation, aéronautique et défense de Gowling WLG assistera au Salon International de l’Aéronautique et de l’Espace qui se déroulera à Paris – Le Bourget du 17 au 23 juin prochain.",~/getmedia/ec1eba33-cee9-45c8-8174-dd14c5872ee5/190613_LE-Bourget_fr.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Conference,00:00.0,00:00.0,NULL,NULL,GMT,0,NULL,"<h2>Une équipe d&rsquo;avocats experts en aviation, aéronautique et défense de Gowling WLG assistera au <a href=""https://www.siae.fr/"">Salon International de l&rsquo;Aéronautique et de l&rsquo;Espace</a> qui se déroulera à Paris &ndash; Le Bourget du 17 au 23 juin prochain.</h2>

<p>Gowling WLG œuvre depuis longtemps dans le domaine de l&rsquo;aviation, de l&rsquo;aéronautique et de la défense, nous sommes des experts en la matière.</p>

<p>Notre mission? Vous fournir les conseils juridiques pratiques et avisés dont vous avez besoin pour atteindre vos objectifs commerciaux. Fiez-vous à notre expertise multiterritoriale, notre excellence technique et nos connaissances du secteur et de l&rsquo;industrie pour obtenir des résultats efficaces en ce qui concerne les coûts.</p>

<p>Que vos produits aient une application civile ou militaire, qu&rsquo;ils soient hautement spécialisés ou diversifiés, nous pouvons vous offrir un soutien exhaustif. Et comme nous sommes bien pourvus en professionnels juridiques, nous pouvons adapter notre pratique à des opérations de petite ou grande envergure dans votre pays ou ailleurs dans le monde.</p>

<p><a href=""https://gowlingwlg.com/fr/sectors/aviation-aerospace-defence/global/"">En savoir plus sur notre équipe</a></p>
",NULL,NULL,22:12.0,https://www.siae.fr/,NULL,Salon International de l’Aéronautique et de l’Espace,67E97629-0CC7-4DFE-9730-6D7A7D2CB727,cbbbf9eb-a169-4053-8043-7085cfb8fd4a,NULL,NULL,ff6c0bfb-40e4-432b-8b21-fa0689b68388;9b369b5c-88d8-43a8-bafa-904a97fda10b;463bb09c-872b-413e-93ff-9c5e381dca6c;126a0d50-b911-4041-948f-0e213389179e;126b1fbb-e57d-4996-949e-df40bdd77d00;c3c5faa1-cc56-4323-b8f3-96a415f8c4e3;85069c1c-8d45-4a66-b56b-128c6ee41680;3a0c975c-ae61-4906-9ee2-b44185806511;d4d0a9ab-1442-418e-b620-cf4cbb4a3912;81d344ac-749e-4e17-a03d-62198249b530;2563a6d6-5f45-46c5-8698-e572a35f100b;e33531f3-9132-4365-bdfc-fe6df95bab54;c7845de1-72de-4e9d-bad4-859a8d00311c;ee86af6e-e106-4e72-8f7b-f812bed8d711;ad4cc2a0-5825-4d92-930d-64226a7659b3,NULL,Conférence,"Marie-France Béland, Guy David, Benoit Yelle, David B. Kierans, Phuong T.V. Ngo",Paris - Le Bourget,40559,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Belgium;GWLG.Canada;GWLG.France,0,NULL,Retrouvez-les à Paris,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
161,/Events/2019/Gowling-WLG-at-Le-Bourget,en-GB,5CBE1D9B-1F5B-4DEB-9269-6AF401C6911A,Gowling WLG at Le Bourget,Gowling WLG at the International Paris Air Show,"Gowling WLG has a long history in aviation, aerospace and defence, and some of our lawyers who are experts in these sectors will be attending the International Paris Air Show - Le Bourget from June 17 to 23.",~/getmedia/4b0c92cb-4374-4921-bbda-37b9336ce559/190613_Le-Bourget.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Conference,00:00.0,00:00.0,NULL,NULL,GMT,0,NULL,"<h2>Gowling WLG has a long history in aviation, aerospace and defence, and some of our lawyers who are experts in these sectors will be attending <a href=""https://www.siae.fr/en/"" target=""_blank"">the International Paris Air Show</a> - Le Bourget from June 17 to 23.</h2>

<p>Our professionals aim to provide you with the practical and informed legal advice you need to achieve your business objectives. You can count on their combined multi-jurisdictional expertise, technical excellence and sector knowledge to deliver fast, cost-effective results.</p>

<p>Whether your products have a civil or military application, or are highly specialised or diverse, we can provide full support. And because we&#39;re so well-resourced, we can scale our practice for small to large deals, in your country or around the world.</p>

<p><a href=""~/en/sectors/aviation-aerospace-defence/"">Learn more about our team</a></p>

<p>&nbsp;</p>
",NULL,NULL,22:12.0,https://www.siae.fr/en/,NULL,International Paris Air Show ,67E97629-0CC7-4DFE-9730-6D7A7D2CB727,cbbbf9eb-a169-4053-8043-7085cfb8fd4a,NULL,NULL,ff6c0bfb-40e4-432b-8b21-fa0689b68388;9b369b5c-88d8-43a8-bafa-904a97fda10b;463bb09c-872b-413e-93ff-9c5e381dca6c;126a0d50-b911-4041-948f-0e213389179e;126b1fbb-e57d-4996-949e-df40bdd77d00;c3c5faa1-cc56-4323-b8f3-96a415f8c4e3;85069c1c-8d45-4a66-b56b-128c6ee41680;3a0c975c-ae61-4906-9ee2-b44185806511;d4d0a9ab-1442-418e-b620-cf4cbb4a3912;81d344ac-749e-4e17-a03d-62198249b530;2563a6d6-5f45-46c5-8698-e572a35f100b;e33531f3-9132-4365-bdfc-fe6df95bab54;c7845de1-72de-4e9d-bad4-859a8d00311c;ee86af6e-e106-4e72-8f7b-f812bed8d711;ad4cc2a0-5825-4d92-930d-64226a7659b3,NULL,Conference,"Marie-France Béland, Guy David, Jonathan Behar, Benoit Yelle, E. Patrick Shea, LSM, CS, David B. Kierans, Phuong T.V. Ngo, Matthew Harvey, David Vaughan, Andrew Nugent Smith, Bernardine Adkins, Ursula Johnston, Philippe Rousseau, Frédéric Dereux, Céline Bey",Paris - Le Bourget,40545,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Belgium;GWLG.Canada;GWLG.France,0,NULL,Come meet our professionals in Paris!,NULL,NULL,"Aviation, Aerospace & Defence",NULL,NULL,NULL,NULL,NULL,NULL
162,/Events/2019/Stop-the-copycats-Protect-your-designs,en-GB,2880627F-9EE9-4451-8D35-02A74672C3C7,Stop the copycats - Protect your designs,Stop the copycats - Protect your designs,Stop your ideas being ripped off by copycats and get to grips with how IP protection helps you throughout the lifecycle of a design.,~/getmedia/1ef7e5b4-c321-4e0b-8ead-66af0de8e194/190705-ldf.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.SpecialEvents,00:00.0,00:00.0,16:00,20:00,BST,1,1.5,"<p><strong>Stop your ideas being ripped off by copycats and get to grips with how IP protection helps you throughout the lifecycle of a design. Sign up for this unique event by clicking to register in the box to the right.</strong><img alt="""" src=""~/getmedia/1ef7e5b4-c321-4e0b-8ead-66af0de8e194/190705-ldf.jpg.xml"" /></p>

<p>Leading designer Martin Darbyshire will explain how design and technology can be fused to create beautiful, modern, and practical products that will appeal to heart and mind, using the case study of the ground-breaking Bluebell smart monitoring system for parents and babies.</p>

<p>Martin has been inspiring ground-breaking innovation and forward-thinking strategic design at tangerine since co-founding the company in 1989. Under his stewardship the company has grown into an international design consultancy with offices in the UK, South Korea and Brazil; from which, tangerine exports innovation, strategy and design services to the world&rsquo;s leading brands, service providers and manufactures. In 2017, tangerine partnered with start-up company Bluebell on a shared equity basis to work with the company to turn their technological system into a brand, family of IoT products and a unique customer experience.</p>

<p>Bluebell&#39;s founder, Romi Mathew, will set out the practical aspects of ensuring that a product is not just beautiful, but will work in the commercial world.</p>

<p>As the COO and Co-founder of Connido Ltd, the parent company of start-up Bluebell, Romi has utilised his extensive experience as a data consultant and analyst to innovate a product which is set to revolutionise the parenting market. Romi&#39;s nine years in the industry saw him working for the NHS as well as PwC, this in conjunction with his experience of being a father (to a wonderful little boy) inspired him to create a new innovation to aid parent wellbeing.</p>

<p>John Coldham, a leading designs lawyer, will discuss practical ways for designers to protect their creativity against copycats, to ensure their investment is not wasted.</p>

<p>Jamie Rowlands, who has spent the last four years in China enforcing designs and other IP for some of the world&#39;s leading brands, will also be on hand to offer advice.</p>

<h2>Agenda</h2>

<table>
	<thead>
	</thead>
	<tbody>
		<tr>
			<td>16:00</td>
			<td>Registration</td>
		</tr>
		<tr>
			<td>16:30</td>
			<td>Talk and Q&amp;A</td>
		</tr>
		<tr>
			<td>17:45</td>
			<td>Drinks on our balcony overlooking the Thames</td>
		</tr>
	</tbody>
</table>

<h2>Guest speakers</h2>

<ul>
	<li>Martin Derbyshire - CEO, Tangerine</li>
	<li>Romi Mathew - Founder at Bluebell</li>
</ul>
","<p>This event is free of charge.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,00:11.0,https://reaction.gowlingwlg.com/reaction/RSGenPage.asp?RSID=cH1qwefRKRV5UVBGOBLQUYFqQ6YJxHDVroWoftdyfkg,NULL,Register for this event,9FBE191E-3BCF-45DE-A2BA-338BB194FC9D,NULL,aa72ea93-20f8-455a-8e77-6f6cea510684,NULL,NULL,NULL,Special events,NULL,London,71,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,40ECBAEA-9783-479A-8EB9-9D39F577C01D,Speaker(s),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
163,/Events/2019/Pharmaceutical-market,en-GB,D49B9789-E585-4EB8-BDA6-DF5B1918D613,Pharmaceutical market,Insight Series,Overview of the best patent and regulatory strategies for pharmaceutical and biologic medicines in Canada. ,~/getmedia/fa2470ed-4aaa-4c52-b5df-8ab39e9d0ffa/190802-patent-regulatory.jpg.xml?width=930&height=450&ext=.jpg,test tubes for pharmaceutical research,GWLG.Seminar,03-10-2019 00:00,NULL,8:00 a.m.,9:30 a.m.,PDT,1,1 hour,"<p>This fall, Gowling WLG is hosting a number of breakfast seminars as part of our Insight Series. The informative seminars will include discussions on recent legal developments, emerging trends and issues that will have an impact on your business.<br />
<br />
Join Gowling WLG professional and Leader of the Life Sciences Group <a href=""https://gowlingwlg.com/en/people/john-norman/#panel-button1"" target=""_blank"">John Norman</a> for an overview of the best patent and regulatory strategies for pharmaceutical and biologic medicines in Canada. This seminar will reveal the various strategies of how to maximize the protections and enforcement rights provided to Canadian innovators.</p>

<p>We will also discuss a few changes to the patent and regulatory schemes that will be implemented as a result of the United States-Mexico-Canada Agreement.<br />
<br />
This seminar is eligible for up to 1 hour toward the LSBC&#39;s CPD requirement.</p>

<h2>Other seminars in the series:</h2>

<ul>
	<li><strong>Sept. 12</strong> |&nbsp;<a href=""~/en/insights-resources/events/2019/new-cannabis-products/"" target=""_blank"">New cannabis products: Regulatory and IP considerations for edibles, topicals and extracts</a></li>
	<li><strong>Sept. 25</strong> |&nbsp;<a href=""~/en/insights-resources/events/2019/protecting-your-ai-investment/"" target=""_blank"">Protecting your AI investment using patent applications</a></li>
	<li><strong>Oct. 16</strong> |&nbsp;<a href=""~/en/insights-resources/events/2019/data-protection/"" target=""_blank"">Data protection: What Canadian companies need to know about operating in or trading with the European Union</a></li>
	<li><strong>Nov. 14</strong> |&nbsp;<a href=""~/en/insights-resources/events/2019/international-patent/"" target=""_blank"">Trends in international patent development</a></li>
</ul>
",NULL,NULL,01-10-2019 00:00,https://sites-gowlingwlg.vuturevx.com/104/4622/landing-pages/event-registration-(blank-form).asp?sid=blankform,NULL,Register for this event,AFD10BE7-206C-4F2D-9094-257D6B5E7BCC,NULL,85764222-db69-43cf-af79-2c6fcbda9589;65c34333-2a1a-4fba-8d2a-65496d535f64,NULL,870774bf-534e-466c-be9a-e89fb3fb38bf,042bfc90-a4a9-432c-9a17-3be1bfdc9e9f;6792578c-9b85-4596-98fe-84d82122d77f;91070352-e40e-4ecc-b14c-6b8be51f2b3f;293da8dc-5c8f-4df5-ad16-ba58f070a761,Seminar,NULL,Vancouver,68,GWLG.Events,"<h2>Patent and regulatory affairs in the pharmaceutical market</h2>
",~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/104/4622/landing-pages/event-registration-(blank-form).asp?sid=blankform,Register for this event,GWLG.Canada,0,63387DF2-25F3-4268-9B20-2D4323F1E706,Speaker,NULL,NULL,NULL,"Patents, Advertising & Product Regulatory",NULL,NULL,NULL,NULL,NULL
164,/Events/2019/New-cannabis-products,en-GB,042BFC90-A4A9-432C-9A17-3BE1BFDC9E9F,New cannabis products,Insight series,"Cannabis edibles, topicals and extracts will become legal in Canada on Oct. 17, 2019. Is your business ready?",~/getmedia/101ec01d-585a-4523-8778-be06717fd362/190802-new-cannabis-products-tile.jpg.xml?width=930&height=450&ext=.jpg,cannabis infused brownie,GWLG.Seminar,12-09-2019 00:00,NULL,8:00 a.m.,9:30 a.m.,PDT,1,1 hour,"<p>This fall, Gowling WLG is hosting a number of breakfast seminars as part of our Insight Series. The informative seminars will include discussions on recent legal developments, emerging trends and issues that will have an impact on your business.<br />
<br />
Cannabis edibles, topicals and extracts will become legal in Canada on Oct. 17, 2019. Is your business ready?</p>

<p>Join Gowling WLG intellectual property professionals <a href=""https://gowlingwlg.com/en/people/emilie-feil-fraser/#panel-button1"" target=""_blank"">Emilie Feil-Fraser</a> and <a href=""https://gowlingwlg.com/en/people/sonia-ziesche/#panel-button1"" target=""_blank"">Sonia Ziesche</a> as they provide an overview of the regulatory framework governing these new types of cannabis products and discuss the various intellectual property protections available for innovators in this space.<br />
<br />
This seminar is eligible for up to 1 hour toward the LSBC&#39;s CPD requirement.</p>

<h2>Other seminars in the series:</h2>

<ul>
	<li><strong>Sept. 25</strong> |&nbsp;<a href=""~/en/insights-resources/events/2019/protecting-your-ai-investment/"" target=""_blank"">Protecting your AI investment using patent applications</a></li>
	<li><strong>Oct. 3</strong> |&nbsp;<a href=""~/en/insights-resources/events/2019/pharmaceutical-market/"" target=""_blank"">Patent and regulatory affairs in the pharmaceutical market</a></li>
	<li><strong>Oct. 16</strong> |&nbsp;<a href=""~/en/insights-resources/events/2019/data-protection/"" target=""_blank"">Data protection: What Canadian companies need to know about operating in or trading with the European Union</a></li>
	<li><strong>Nov. 14</strong> |&nbsp;<a href=""~/en/insights-resources/events/2019/international-patent/"" target=""_blank"">Trends in international patent development</a></li>
</ul>
",NULL,NULL,10-09-2019 00:00,https://sites-gowlingwlg.vuturevx.com/104/4622/landing-pages/event-registration-(blank-form).asp?sid=blankform,NULL,Register for this event,AFD10BE7-206C-4F2D-9094-257D6B5E7BCC,NULL,255bcb12-7168-4281-9d52-a56233e8ae69;65c34333-2a1a-4fba-8d2a-65496d535f64;08b9a44c-bb26-4255-9779-296a124fcbee,NULL,d7c099e5-2ffb-4e83-bc13-09edebff00d4;56ee3f73-d210-49c8-9910-551c59e95fb2,6792578c-9b85-4596-98fe-84d82122d77f;d49b9789-e585-4eb8-bda6-df5b1918d613;91070352-e40e-4ecc-b14c-6b8be51f2b3f;293da8dc-5c8f-4df5-ad16-ba58f070a761,Seminar,NULL,Vancouver,68,GWLG.Events,"<h2>New cannabis products: Regulatory and IP considerations for edibles, topicals and extracts</h2>
",~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/104/4622/landing-pages/event-registration-(blank-form).asp?sid=blankform,Register for this event,GWLG.Canada,0,63387DF2-25F3-4268-9B20-2D4323F1E706,Speakers,NULL,NULL,NULL,"Cannabis, Advertising & Product Regulatory, Intellectual Property",NULL,NULL,NULL,NULL,NULL
165,/Events/2019/Protecting-your-AI-investment,en-GB,6792578C-9B85-4596-98FE-84D82122D77F,Protecting your AI investment,Insight Series,"Artificial intelligence (AI) is being commercialized for many purposes: computer vision, robotics and control methods, telecommunications, financial services, and human-computer interaction, to name a few. ",~/getmedia/e0d76a8e-bd5e-4c6c-b65e-ca70c169fb6b/190802-protecting-your-ai.jpg.xml?width=930&height=450&ext=.jpg,AI control robot welding,GWLG.Seminar,25-09-2019 00:00,NULL,8:00 a.m.,9:30 a.m.,PDT,1,1 hour,"<p>This fall, Gowling WLG is hosting a number of breakfast seminars as part of our Insight Series. The informative seminars will include discussions on recent legal developments, emerging trends and issues that will have an impact on your business.<br />
<br />
Artificial intelligence (AI) is being commercialized for many purposes: computer vision, robotics and control methods, telecommunications, financial services, and human-computer interaction, to name a few. The time and money companies are spending on commercializing AI has caused them to also leverage intellectual property laws to protect their investment.</p>

<p>Join Gowling WLG professional <a href=""https://gowlingwlg.com/en/people/roch-ripley/#panel-button1"" target=""_blank"">Roch Ripley</a>, head of Vancouver&#39;s intellectual property department, for an in-depth explanation of how IP laws are used to protect AI-based inventions.<br />
<br />
This seminar is eligible for up to 1 hour toward the LSBC&#39;s CPD requirement.</p>

<h2>Other seminars in the series:</h2>

<ul>
	<li><strong>Sept. 12</strong> |&nbsp;<a href=""~/en/insights-resources/events/2019/new-cannabis-products/"" target=""_blank"">New cannabis products: Regulatory and IP considerations for edibles, topicals and extracts</a></li>
	<li><strong>Oct. 3</strong> |&nbsp;<a href=""~/en/insights-resources/events/2019/pharmaceutical-market/"" target=""_blank"">Patent and regulatory affairs in the pharmaceutical market</a></li>
	<li><strong>Oct. 16</strong> |&nbsp;<a href=""~/en/insights-resources/events/2019/data-protection/"" target=""_blank"">Data protection: What Canadian companies need to know about operating in or trading with the European Union</a></li>
	<li><strong>Nov. 14</strong> |&nbsp;<a href=""~/en/insights-resources/events/2019/international-patent/"" target=""_blank"">Trends in international patent development</a></li>
</ul>
",NULL,NULL,23-09-2019 00:00,https://sites-gowlingwlg.vuturevx.com/104/4622/landing-pages/event-registration-(blank-form).asp?sid=blankform,NULL,Register for this event,AFD10BE7-206C-4F2D-9094-257D6B5E7BCC,cdfc9b50-74c2-4af5-9508-342935f81ccd,08b9a44c-bb26-4255-9779-296a124fcbee,NULL,b90b93dd-dfd5-4115-9af8-148b313aa426,042bfc90-a4a9-432c-9a17-3be1bfdc9e9f;d49b9789-e585-4eb8-bda6-df5b1918d613;91070352-e40e-4ecc-b14c-6b8be51f2b3f;293da8dc-5c8f-4df5-ad16-ba58f070a761,Seminar,Roch J. Ripley,Vancouver,68,GWLG.Events,"<h2>Protecting your AI investment using patent applications</h2>
",~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/104/4622/landing-pages/event-registration-(blank-form).asp?sid=blankform,Register for this event,GWLG.Canada,0,63387DF2-25F3-4268-9B20-2D4323F1E706,Speaker,NULL,NULL,Tech,Intellectual Property,NULL,NULL,NULL,NULL,NULL
166,/Events/2019/Data-protection,en-GB,91070352-E40E-4ECC-B14C-6B8BE51F2B3F,Data protection,Insight Series,The European Union General Data Protection Regulation came into effect. The GDPR has had a significant impact on Canadian companies doing business in the EU.,~/getmedia/ebf75f0e-85df-437e-a5e7-51714e847021/190802-data-protection.jpg.xml?width=930&height=450&ext=.jpg,person working on laptop with sensitive information,GWLG.Seminar,16-10-2019 00:00,NULL,8:00 a.m.,9:30 a.m.,PDT,1,1 hour,"<p>This fall, Gowling WLG is hosting a number of breakfast seminars as part of our Insight Series. The informative seminars will include discussions on recent legal developments, emerging trends and issues that will have an impact on your business.</p>

<p>On May 25, 2018, the European Union (EU) General Data Protection Regulation (GDPR) came into effect. The GDPR has had a significant impact on Canadian companies doing business in the EU &mdash; whether or not they have subsidiaries or branches there. The new regulation strengthens individuals&#39; data protection rights. It also saddles additional data privacy obligations on EU and EEA-based organizations, as well as on organizations outside the EU that process data or monitor behaviour.</p>

<p>To help you better understand the implications of the regulation, please join intellectual property professionals <a href=""https://gowlingwlg.com/en/people/paul-armitage/#panel-button1"" target=""_blank"">Paul Armitage</a> and <a href=""https://gowlingwlg.com/en/people/danhoe-reddy-girard/#panel-button1"" target=""_blank"">Danhoé Reddy-Girard</a>, a Paris-based Gowling WLG partner, for this informative session.<br />
<br />
This seminar is eligible for up to 1 hour toward the LSBC&#39;s CPD requirement.</p>

<h2>Other seminars in the series:</h2>

<ul>
	<li><strong>Sept. 12</strong> |&nbsp;<a href=""~/en/insights-resources/events/2019/new-cannabis-products/"" target=""_blank"">New cannabis products: Regulatory and IP considerations for edibles, topicals and extracts</a></li>
	<li><strong>Sept. 25</strong> |&nbsp;<a href=""~/en/insights-resources/events/2019/protecting-your-ai-investment/"" target=""_blank"">Protecting your AI investment using patent applications</a></li>
	<li><strong>Oct. 3</strong> |&nbsp;<a href=""~/en/insights-resources/events/2019/pharmaceutical-market/"" target=""_blank"">Patent and regulatory affairs in the pharmaceutical market</a></li>
	<li><strong>Nov. 14</strong> |&nbsp;<a href=""~/en/insights-resources/events/2019/international-patent/"" target=""_blank"">Trends in international patent development</a></li>
</ul>
",NULL,NULL,16-10-2019 00:00,https://sites-gowlingwlg.vuturevx.com/104/4622/landing-pages/event-registration-(blank-form).asp?sid=blankform,NULL,Register for this event,AFD10BE7-206C-4F2D-9094-257D6B5E7BCC,NULL,2e9a87e2-3d2e-4d69-ba9c-06b4b358ca0d,NULL,537ca4c8-995c-4dd1-86e3-d32115e70c0f;b0a7b3fc-4cb7-4be6-926c-4b5e385f1bb1,042bfc90-a4a9-432c-9a17-3be1bfdc9e9f;6792578c-9b85-4596-98fe-84d82122d77f;d49b9789-e585-4eb8-bda6-df5b1918d613;293da8dc-5c8f-4df5-ad16-ba58f070a761,Seminar,NULL,Vancouver,68,GWLG.Events,"<h2>Data protection: What Canadian companies need to know<br />
about operating in or trading with the European Union</h2>
",~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/104/4622/landing-pages/event-registration-(blank-form).asp?sid=blankform,Register for this event,GWLG.Canada,0,E27DAF69-E758-4617-9BAE-E854B13AF32A,Speakers,NULL,NULL,NULL,Cyber security & data protection law,NULL,NULL,NULL,NULL,NULL
167,/Events/2019/International-patent,en-GB,293DA8DC-5C8F-4DF5-AD16-BA58F070A761,International patent,Insight Series,Review of some of the most important patent practice developments from around the globe in 2019.,~/getmedia/7bb0f0a4-2087-44e9-8adb-2164aab834bb/190802-intl-patent-development.jpg.xml?width=930&height=450&ext=.jpg,abstract view of a city on earth,GWLG.Seminar,14-11-2019 00:00,NULL,8:00 a.m.,9:30 a.m.,PDT,1,1 hour,"<p>This fall, Gowling WLG is hosting a number of breakfast seminars as part of our Insight Series. The informative seminars will include discussions on recent legal developments, emerging trends and issues that will have an impact on your business.</p>

<p>Join Gowling WLG intellectual property professionals <a href=""https://gowlingwlg.com/en/people/lisa-thorne/#panel-button1"" target=""_blank"">Lisa Thorne</a> and <a href=""https://gowlingwlg.com/en/people/edith-penty-geraets/#panel-button1"" target=""_blank"">Edith Penty Geraets</a> as they review some of the most important patent practice developments from around the globe in 2019. Featured topics include the new changes to the Canadian <em>Patent Act and Patent Rules</em>, European priority practice and recent practice trends from the United States.</p>

<p>This session is an intermediate-level seminar targeted at CEOs, patent managers and in-house counsel who are already familiar with the patenting process.<br />
<br />
This seminar is eligible for up to 1 hour toward the LSBC&#39;s CPD requirement.</p>

<h2>Other seminars in the series:</h2>

<ul>
	<li><strong>Sept. 12</strong> |&nbsp;<a href=""~/en/insights-resources/events/2019/new-cannabis-products/"" target=""_blank"">New cannabis products: Regulatory and IP considerations for edibles, topicals and extracts</a></li>
	<li><strong>Sept. 25</strong> |&nbsp;<a href=""~/en/insights-resources/events/2019/protecting-your-ai-investment/"" target=""_blank"">Protecting your AI investment using patent applications</a></li>
	<li><strong>Oct. 3</strong> |&nbsp;<a href=""~/en/insights-resources/events/2019/pharmaceutical-market/"" target=""_blank"">Patent and regulatory affairs in the pharmaceutical market</a></li>
	<li><strong>Oct. 16</strong> |&nbsp;<a href=""~/en/insights-resources/events/2019/data-protection/"" target=""_blank"">Data protection: What Canadian companies need to know about operating in or trading with the European Union</a></li>
</ul>
",NULL,NULL,12-11-2019 00:00,https://sites-gowlingwlg.vuturevx.com/104/4622/landing-pages/event-registration-(blank-form).asp?sid=blankform,NULL,Register for this event,AFD10BE7-206C-4F2D-9094-257D6B5E7BCC,NULL,85764222-db69-43cf-af79-2c6fcbda9589;08b9a44c-bb26-4255-9779-296a124fcbee,NULL,d9a834e2-7b85-4089-b241-ed2e95e1b3d6;f801a2a1-89ec-4986-8030-70e2352aa794,042bfc90-a4a9-432c-9a17-3be1bfdc9e9f;6792578c-9b85-4596-98fe-84d82122d77f;d49b9789-e585-4eb8-bda6-df5b1918d613;91070352-e40e-4ecc-b14c-6b8be51f2b3f,Seminar,NULL,Vancouver,68,GWLG.Events,"<h2>Trends in international patent development</h2>
",~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/104/4622/landing-pages/event-registration-(blank-form).asp?sid=blankform,Register for this event,GWLG.Canada,0,E27DAF69-E758-4617-9BAE-E854B13AF32A,Speakers,NULL,NULL,NULL,"Patents, Intellectual Property",NULL,NULL,NULL,NULL,NULL
168,/Events/2019/China-Hong-Kong-Canada-Symposium,en-GB,15D06F82-5B93-4221-BD80-BF569128BE01,China Hong Kong Canada Symposium,China-Hong Kong-Canada Infrastructure and Construction Symposium,"Canada is one of the world's leading infrastructure markets, with numerous government agencies using tried-and-true Public Private Partnership (PPP) policies and methodologies to attract investment from around the world.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,13-09-2019 09:00,13-09-2019 12:00,8:45 a.m.,12 p.m.,Local time,0,NULL,"<p>Canada is one of the world&#39;s leading infrastructure markets, with numerous government agencies using tried-and-true Public Private Partnership (PPP) policies and methodologies to attract investment from around the world.</p>

<p>China plays a critical role in the development of infrastructure across Asia and around the world through large-scale project development, active strategic investment and critical involvement in government lead procurements worldwide.</p>

<p>The clarity, predictability and attractiveness of Canadian PPP processes helps to drive down costs, improve project outcome certainty and improve investment attractiveness for key global players. The scale and vision of China&rsquo;s Belt and Road initiative, its investment in AIIB and its commitment to international market integration through infrastructure project development make China and Asia one of the most exciting places for infrastructure investment.&nbsp;</p>

<p>This China-Hong Kong-Canada BRI Infrastructure and Construction seminar will look at key developments and emerging opportunities evolving in Canada and examine possible opportunities for continued collaboration, investment and cooperation amongst China, Hong Kong, Canada and other economies.</p>

<p>Please join senior representatives from the Consulate General of Canada in Hong Kong and Macao, the Institution of Public Private Partnerships (Hong Kong), the Government of Alberta, the Canadian Chamber of Commerce in Hong Kong, and Gowling WLG and other global infrastructure thought leaders for a half-day of learning, discussion and analysis.</p>

<p>Registration is complimentary but space is limited. Please <a href=""https://sites-gowlingwlg.vuturevx.com/103/4618/landing-pages/event-registration-(blank-form).asp"" target=""_blank"">RSVP early to reserve your spot</a>.</p>

<h2>Schedule</h2>

<table border=""1"" cellpadding=""2"" cellspacing=""1"" style=""width:700px;"">
	<tbody>
		<tr>
			<td>Time</td>
			<td>Speaker &amp; Subject</td>
		</tr>
		<tr>
			<td>8:45-9:00 a.m.</td>
			<td><strong>Registration &amp; Coffee</strong></td>
		</tr>
		<tr>
			<td>9:00-9:05 a.m.</td>
			<td><strong>Introduction to the day</strong> <em>Thomas J. Timmins, Partner, Gowling WLG</em></td>
		</tr>
		<tr>
			<td>9:05-9:15 a.m.</td>
			<td><strong>Welcoming remarks</strong> <em>Jeff Nankivell, Consul General of Canada in Hong Kong and Macao</em></td>
		</tr>
		<tr>
			<td>9:15-9:40 a.m.</td>
			<td><strong>Emerging opportunities in Canadian markets &amp; invitation to the CCPPP Conference</strong> <em>Thomas J. Timmins, Partner, Gowling WLG&nbsp;</em></td>
		</tr>
		<tr>
			<td height=""155"">9:40-10:20 a.m.</td>
			<td><strong>Root Causes of Conflict and Conflict Resolution Mechanisms in Public-Private Partnerships: Lessons Learnt from some Belt and Road Countries</strong> <em>Professor Albert PC Chan, Head of Department of Building and Real Estate, The Hong Kong Polytechnic University</em><br />
			&amp; A</td>
		</tr>
		<tr>
			<td>10:20-10:40 a.m.</td>
			<td><strong>Coffee break</strong></td>
		</tr>
		<tr>
			<td>10:40-11:20 a.m.</td>
			<td><strong>Deep dive: Why projects stumble</strong> <em>Thomas J. Timmins &amp; Luc Lissoir, Partners, Gowling WLG</em></td>
		</tr>
		<tr>
			<td>11:20-11:35 a.m.</td>
			<td><strong>The new Alberta Government&#39;s &quot;Open for Business&quot; approach to Asian investment</strong> <em>Ron Hoffman, Alberta Senior Representative for the Asia Pacific Basin</em></td>
		</tr>
		<tr>
			<td>11:35-11:50 a.m.</td>
			<td><strong>Q &amp; A</strong></td>
		</tr>
		<tr>
			<td>11:50-12:00 p.m.</td>
			<td><strong>Concluding Remarks &ndash; Canadian Resources Available in Hong Kong to Help Make Your BRI PPP Project a Success </strong> <em>Sophia Chan-Combrink, Executive Director, The Canadian Chamber of Commerce in Hong Kong</em></td>
		</tr>
		<tr>
			<td>12:00 p.m.</td>
			<td><strong>Adjournment of Seminar</strong></td>
		</tr>
	</tbody>
</table>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p>{^widget|(path)%2fGlobal-Objects%2fCTAs%2fInsights-Resources%2fEvents%2fChina-Canada-Symposium%2f%2525|(name)GWLG.Widgets.FAQList|(image_guid)884cd42b-93de-40b9-9f7f-cf7e3608a676|(headingtext)Speakers|(widget_displayname)FAQ+List|(width)|(height)^}</p>

<h2 style=""text-align: center;"">Event partners</h2>

<p><img alt="""" src=""~/getmedia/be25bf03-3065-413c-bd59-7e058e432e54/190814-ccis-event-partners-reduced.jpg.xml"" /></p>
",NULL,NULL,11-09-2019 20:40,https://sites-gowlingwlg.vuturevx.com/103/4618/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,0789D9E6-69E1-4336-933E-A24AD8C43C1A,3fc2ca8c-9d19-44ba-a3a9-ad1ecb11e900;df411e0b-2c62-4a68-8456-2c7c1dd0b4da,NULL,NULL,NULL,NULL,Seminar,NULL,NULL,NULL,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/103/4618/landing-pages/event-registration-(blank-form).asp,Register now,GWLG.HongKong;GWLG.Canada;GWLG.China,0,NULL,Speaker(s),t-white,NULL,"Construction & Engineering, Infrastructure",NULL,NULL,NULL,NULL,NULL,NULL
169,/Events/2019/China-Shanghai-Canada-Symposium,en-GB,2CD32409-36BE-4704-B9AF-310A40CB1E95,China Shanghai Canada Symposium,China-Shanghai-Canada Infrastructure and <br>Construction Symposium,"Canada is one of the world's leading infrastructure markets, with numerous government agencies using tried-and-true Public Private Partnership (PPP) policies and methodologies to attract investment from around the world.",~/getmedia/a44f52b8-7e01-4cd5-addc-9d643018773f/190903-Canada-China-infrastucture-event-2019.jpg.xml?width=1200&height=627&ext=.jpg,NULL,GWLG.Seminar,16-09-2019 08:00,NULL,8:30 a.m.,4:30 p.m.,Local time,0,NULL,"<p>Canada is one of the world&#39;s leading infrastructure markets, with numerous government agencies using tried-and-true Public Private Partnership (PPP) policies and methodologies to attract investment from around the world.</p>

<p>China plays a critical role in the development of infrastructure across Asia and around the world through large-scale project development, active strategic investment and critical involvement in government lead procurements worldwide.</p>

<p>The clarity, predictability and attractiveness of Canadian PPP processes helps to drive down costs, improve project outcome certainty and improve investment attractiveness for key global players. The scale and vision of China&#39;s Belt and Road initiative, its investment in AIIB and its commitment to international market integration through infrastructure project development make China and Asia one of the most exciting places for infrastructure investment.</p>

<p>This year, the China-Canada Infrastructure and Construction Symposium will look at key developments and emerging opportunities evolving in Canada and examine possible opportunities for continued collaboration, investment and cooperation between China and Canada.</p>

<p>Please join Jean-Christian Brillant, Deputy Consul General of Canada &amp; Senior Trade Commissioner in Shanghai, the Government of Alberta, the Canadian Council for Public-Private Partnerships and representatives from Gowling WLG and other global infrastructure thought leaders for a day of learning, discussion and analysis</p>

<p>Space is limited. Please <a href=""https://sites-gowlingwlg.vuturevx.com/103/4601/landing-pages/event-registration-(blank-form).asp"" target=""_blank"">RSVP early to reserve your spot</a>.</p>

<p>{^widget|(path)%2fGlobal-Objects%2fCTAs%2fInsights-Resources%2fEvents%2fChina-Shanghai-Canada-Symposium%2f%2525|(name)GWLG.Widgets.FAQList|(image_guid)884cd42b-93de-40b9-9f7f-cf7e3608a676|(headingtext)Speakers|(widget_displayname)FAQ+List|(width)|(height)^}</p>

<h2 style=""text-align: center;"">Event partners</h2>

<p><img alt="""" src=""~/getmedia/204b705d-0d36-407c-a670-afe712846658/logo-event-page-2_1.jpg.xml"" /></p>
",NULL,NULL,13-09-2019 17:00,https://sites-gowlingwlg.vuturevx.com/103/4601/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,5A7E5B95-0B5F-4E3F-BACB-8B3F42A28A9B,3fc2ca8c-9d19-44ba-a3a9-ad1ecb11e900;df411e0b-2c62-4a68-8456-2c7c1dd0b4da,NULL,NULL,NULL,NULL,Seminar,NULL,NULL,NULL,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/103/4601/landing-pages/event-registration-(blank-form).asp,Register now,GWLG.Canada;GWLG.China,0,NULL,Speakers,t-white,NULL,"Construction & Engineering, Infrastructure",NULL,NULL,NULL,NULL,NULL,NULL
170,/Events/2019/China-Beijing-Canada-Symposium,en-GB,16875CE5-6749-46EB-B7F2-5240897C1E7E,China Beijing Canada Symposium,China-Beijing-Canada <br>Infrastructure and <br>Construction Symposium,"Canada is one of the world's leading infrastructure markets, with numerous government agencies using tried-and-true Public Private Partnership (PPP) policies and methodologies to attract investment from around the world.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,17-09-2019 08:00,NULL,8 a.m.,5 p.m.,Local time,0,NULL,"<p>Canada is one of the world&#39;s leading infrastructure markets, with numerous government agencies using tried-and-true Public Private Partnership (PPP) policies and methodologies to attract investment from around the world.</p>

<p>China plays a critical role in the development of infrastructure across Asia and around the world through large-scale project development, active strategic investment and critical involvement in government lead procurements worldwide.</p>

<p>The clarity, predictability and attractiveness of Canadian PPP processes helps to drive down costs, improve project outcome certainty and improve investment attractiveness for key global players. The scale and vision of China&#39;s infrastructure investments through AIIB and its commitment to international market integration through infrastructure project development make China and Asia one of the most exciting places for infrastructure investment.</p>

<p>This year, the China-Canada Infrastructure and Construction Symposium will look at key developments and emerging opportunities evolving in Canada and examine possible opportunities for continued collaboration, investment and cooperation between China and Canada.</p>

<p>Please join Dave Murphy, Minister (Commercial) at the Embassy of Canada in Beijing, the Government of Alberta and representatives from Gowling WLG and other global infrastructure thought leaders for a day of learning, discussion and analysis.</p>

<p>Space is limited. Please <a href=""https://sites-gowlingwlg.vuturevx.com/103/4632/landing-pages/event-registration-(blank-form).asp"" target=""_blank"">RSVP early to reserve your spot</a>.</p>

<p>{^widget|(path)%2fGlobal-Objects%2fCTAs%2fInsights-Resources%2fEvents%2fChina-Beijing-Canada-Symposium%2f%2525|(name)GWLG.Widgets.FAQList|(image_guid)884cd42b-93de-40b9-9f7f-cf7e3608a676|(headingtext)Speakers|(widget_displayname)FAQ+List|(width)|(height)^}</p>

<h2 style=""text-align: center;"">Event partners</h2>

<p><img alt="""" src=""~/getmedia/f03aee81-e4ec-4056-94ce-e1ad801ac58d/logo-event-page-2.jpg.xml"" /></p>
",NULL,NULL,13-09-2019 17:00,https://sites-gowlingwlg.vuturevx.com/103/4632/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,C7B8A418-E649-425E-A550-460A06769BED,3fc2ca8c-9d19-44ba-a3a9-ad1ecb11e900;df411e0b-2c62-4a68-8456-2c7c1dd0b4da,NULL,NULL,NULL,NULL,Seminar,NULL,NULL,NULL,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/103/4632/landing-pages/event-registration-(blank-form).asp,Register now,GWLG.Canada;GWLG.China,0,NULL,Speakers,t-white,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
171,/Events/2019/Data-protection-in-the-EU-Canadian-Business,en-GB,EC5732F8-7379-493B-AFA8-C76098E6EC49,Data protection in the EU: Canadian Business ,Data protection in the EU: What Canadian Businesses need to know,October is Cyber Security Awareness Month which is an internationally recognized campaign to help inform the public the importance of cyber security and data protection. ,~/getmedia/97cc7f30-2171-4245-b456-ef3742cfdbdc/190904-EU-Data-protection-event-Social-media-image.jpg.xml?width=1200&height=627&ext=.jpg,NULL,GWLG.Seminar,08-10-2019 00:00,08-10-2019 00:00,07:30,11:00,EST,0,NULL,"<p>October is Cyber Security Awareness Month which is an internationally recognized campaign to help inform the public the importance of cyber security and data protection.</p>

<p>Join Gowling WLG on October 8 2019 as we discuss the implications that the General Data Protection Regulation (GDPR) can have on Canadian businesses as well as recent developments in Canada&#39;s privacy laws. We will be joined by two data protection specialists from our UK offices that will:</p>

<ul>
	<li>provide insights and practical examples of the application of GDPR to organisations in non-EU countries</li>
	<li>offer guidance on processing EU data and discuss how to minimise risks associated with GDPR</li>
	<li>recent regulatory actions and breaches under the GDPR</li>
	<li>highlight how future developments may impact the data protection legal landscape in both Canada and the EU, as the legal regimes and enforcement become increasingly restrictive.</li>
</ul>

<h2>Agenda</h2>

<ul>
	<li><strong>07:30 -&nbsp;</strong>Registration and breakfast</li>
	<li><strong>08:30 -&nbsp;</strong>Presentations</li>
	<li><strong>10:15 -&nbsp;</strong>Q&amp;A</li>
	<li><strong>11:00 -&nbsp;</strong>Event concludes</li>
</ul>
",NULL,NULL,04-10-2019 14:57,https://sites-gowlingwlg.vuturevx.com/103/4662/landing-pages/event-registration-(blank-form).asp?sid=c1ee536d-b370-43c9-903f-35a59a856932,NULL,Register for this event,B2DC4461-DC66-4F96-9AE6-32BC2B14259D,NULL,NULL,NULL,7c982ff4-2b05-446c-9f31-9d84cd6e9912;d3e0fa3e-1011-4fe0-b62a-88c920f62d49;a1fc3780-83d6-4133-9ed0-6fa6f7fffbd2;0855ebb5-545b-4029-9c8b-b4958ea8652b,NULL,Seminar,NULL,Toronto,63,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,Speakers,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
172,/Events/2019/Insight-German-IP-seminar-series-2019,en-GB,2E222AF1-0037-41E2-91C7-C8C71D07CC23,Insight German IP seminar series 2019 ,Insight German IP seminar series 2019 Event,Insight German IP seminar series 2019 ,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,17-10-2019 00:00,17-10-2019 00:00,13:00,NULL,CST,0,NULL,"<p>Our Munich office invites you to its next seminar in its Insight German IP seminar series 2019 on 17th October 2019, from 1pm in Munich.</p>

<p>Join our IP experts and learn more about the hot topics, inter alia, AI, FRAND, and Trade Secrets Act and the potential impact on your business success.</p>

<p>Afterwards, you can take the opportunity to exchange with peers or to discuss your questions with our experts in private.</p>

<p>The seminar will be held in German and is free of charge.</p>
","<p>We have provided the full agenda (in German) as a <a href=""~/getmedia/9c80057c-1d2b-468d-b3fa-2d3476adbba0/Einladung_Patentrecht_Geschaeftsgeheimnisse_20190906.pdf.xml"" target=""_blank"">PDF download</a>. If you have questions or desire more information, please contact Gabriele Kretschmann, Head of BD &amp; Marketing Germany, at <a href=""mailto:events.munich@gowlingwlg.com?subject=Insight%20German%20IP%20Seminar%20series%202019%20Event"">events.munich@gowlingwlg.com</a>.</p>
",NULL,15-10-2019 00:00,mailto:events.munich@gowlingwlg.com?subject=Insight German IP seminar series 2019,NULL,Register for this event,B5516766-D3DD-4ED8-A43D-A714446F16EE,NULL,08b9a44c-bb26-4255-9779-296a124fcbee,NULL,NULL,NULL,Seminar,NULL,Hotel Marias Platzl,41902,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Germany,0,NULL,Speaker(s),NULL,a1545ae9-a498-4b1d-b5e5-a71093fb7f2b,NULL,Intellectual Property,NULL,Munich,NULL,NULL,NULL
173,/Events/2019/Legal-cannabis-A-year-in-review-and-looking-ahead,en-GB,EEC773F9-2D0E-41D9-9320-96CC89A5C06B,Legal cannabis: A year in review and looking ahead,Legal cannabis: A year in review and looking ahead to new challenges,Join Gowling WLG employment law partner and cannabis expert Jennifer Koschinsky for a discussion on one of the most trending topics in recent news - the legalization of cannabis.,~/getmedia/30bdf279-97c8-428a-b206-0b7b90a17269/190913-event-tile-legal-cannabis-yir.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Seminar,09-10-2019 08:30,09-10-2019 10:00,08:30,10:00,Local time,0,NULL,"<p>Join Gowling WLG employment law partner and cannabis expert Jennifer Koschinsky for a discussion on one of the most trending topics in recent news - the legalization of cannabis.</p>

<p>Jennifer will unpack the last year in the world of cannabis, upcoming changes (including the introduction of edibles) and comment on how the changes may apply to the employment law sector.</p>

",NULL,NULL,04-10-2019 20:26,https://sites-gowlingwlg.vuturevx.com/95/4651/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,8BF72D3F-E216-4FDD-B0BE-52D41A644293,2cd1b5c0-8992-4c92-b8e8-d65d8b86dbed,255bcb12-7168-4281-9d52-a56233e8ae69,NULL,edc10914-2fae-4dd0-b9c6-b377e8b7a68c,NULL,Seminar,Jennifer Koschinsky,Calgary,64,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,Speaker,NULL,NULL,Food & Beverage,Cannabis,NULL,NULL,NULL,NULL,NULL
174,/Events/2019/Growth-stories,en-GB,307CBDC2-04F5-45E4-BDF1-F96D7C44C3F8,Growth stories,Growth stories,"In celebration of the upcoming Elevate festival in Toronto, Gowling WLG's Tech Group invites you to explore the startup, finance, scale-up and M&A stories behind some of Canada's most innovative companies.",~/getmedia/c7a214b9-808b-4830-8b99-cbcd63e1c39c/190916-event-tile-growth-stories.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Seminar,24-09-2019 07:00,24-09-2019 08:45,07:00,08:45,EST,0,NULL,"<p>Start your day with some inspiration.</p>

<p>In celebration of the upcoming Elevate festival in Toronto, Gowling WLG&#39;s Tech Group invites you to explore the startup, finance, scale-up and M&amp;A stories behind some of Canada&#39;s most innovative companies.</p>

<h2>Innovators</h2>

<ul>
	<li>Srikant Nayak - CFO, GroupBy</li>
	<li>J. Paul Haynes - President &amp; COO, eSentire</li>
	<li>Ghassan Halazon - CEO, Emerge Commerce Inc.</li>
	<li>Raymond Luk - Founder &amp; CEO Hockeystick</li>
</ul>
",NULL,NULL,23-09-2019 18:01,https://sites-gowlingwlg.vuturevx.com/103/4683/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,B2DC4461-DC66-4F96-9AE6-32BC2B14259D,06cecb4c-c959-4674-9047-d5d8ee8c673c;cdfc9b50-74c2-4af5-9508-342935f81ccd,714e9c25-3dce-4dac-89a9-dd1d02f0eda6,NULL,3cb7b903-24be-4d44-b671-e9e9bb0f7efd;48295bef-3e9d-4fad-a7cd-de2dea46e3dd;7e822e16-356b-4251-84ae-83b9293fa418;425a9689-d70c-46ff-b7b6-8994bb782c5f,NULL,Seminar,"Parna Sabet-Stephenson, Sean Gomes, W. Ian Palm, Viona M. Duncan",Toronto,63,GWLG.Events,"<p>Startup/Finance/Scale-Up/M&amp;A</p>
",~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,Hosts,NULL,NULL,"Financial Institutions & Services, Tech",FinTech,NULL,NULL,NULL,NULL,NULL
175,/Events/2019/Risk-to-Reward-Seminar-Series-Data-protection-in,en-GB,D63F622B-AE33-4C8B-B4B9-8B990B1961A3,Risk to Reward Seminar Series: Data protection in ,Risk to Reward Seminar Series: Data protection in the EU,"October is Cyber Security Awareness Month, an internationally recognized campaign to help inform the public of the importance of cyber security and data protection. ",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,10-10-2019 08:00,10-10-2019 10:30,08:00,10:30,EST,0,NULL,"<p>October is Cyber Security Awareness Month, an internationally recognized campaign to help inform the public of the importance of cyber security and data protection. </p>

<p>Join Gowling WLG on October 10 as we discuss the implications that the General Data Protection Regulation (GDPR) can have on Canadian businesses as well as recent developments in Canada's privacy laws. We will be joined by two data protection specialists from our UK offices who will:</p>

<ul>
	<li>provide insights and practical examples of the application of GDPR to organizations in non-EU countries;</li>
	<li>offer guidance on processing EU data and discuss how to minimise risks associated with GDPR;</li>
	<li>discuss recent regulatory actions and breaches under the GDPR; and</li>
	<li>highlight how future developments may impact the data protection legal landscape in both Canada and the EU, as the legal regimes and enforcement become increasingly restrictive.</li>
</ul>

<h2>Agenda</h2>

<ul>
	<li><strong>08:00</strong> Registration and breakfast</li>
	<li><strong>08:30</strong> Presentation</li>
	<li><strong>10:15</strong> Q &amp; A </li>
</ul>
",NULL,NULL,10-10-2019 00:00,https://sites-gowlingwlg.vuturevx.com/101/4658/landing-pages/event-registration-(blank-form).asp?sid=blankform,NULL,Register for this event,CB61C4C1-D0CF-4AA1-BA0B-5DAB5DC99393,NULL,NULL,NULL,afc382e9-2b75-4a26-9e20-0a8c68694164;d3e0fa3e-1011-4fe0-b62a-88c920f62d49;a1fc3780-83d6-4133-9ed0-6fa6f7fffbd2,NULL,Seminar,NULL,Ottawa,67,GWLG.Events,"<p>What Canadian businesses need to know</p>
",~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,Speakers,NULL,cb61c4c1-d0cf-4aa1-ba0b-5dab5dc99393,NULL,NULL,NULL,Ottawa,NULL,NULL,NULL
176,/Events/2019/Gowling-WLG-at-Elevate-Conference,en-GB,B77E2881-A928-416E-8BC8-6D83619883AB,Gowling WLG at Elevate Conference,Gowling WLG at Elevate Conference,"Come visit Gowling WLG's tech team at Elevate, Canada’s tech festival.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Conference,00:00.0,00:00.0,NULL,NULL,CST,0,NULL,"<h2>Come visit&nbsp;Gowling WLG&#39;s tech team at Elevate, Canada&#39;s tech festival, taking place in Toronto from&nbsp;Sept 20-26, 2019.</h2>

<p>Our Elevate tech team has the market insight, legal expertise and business focus to help you grow your company and protect what makes your business unique. Whether you are an existing client, startup, established tech company or publicly listed entity, we want to meet you to discuss what makes your company tick &ndash;&nbsp;as well as to explore strategies to assist you in achieving your business objectives in a constantly changing and increasingly competitive landscape.</p>

<p>We look forward to meeting you in Toronto.&nbsp;Please reach out to any of our Elevate team members below or join us for <a href=""~/en/insights-resources/events/2019/growth-stories/"" target=""_blank"">our hosted breakfast on Tuesday, Sept. 24</a>, or at <a href=""https://elevate.ca/events/smart-cities-summit/"" target=""_blank"">Smart Cities Summit 4.0</a> on Wednesday, Sept. 25&nbsp;at First Canadian Place.</p>

<h2>Our Tech Team</h2>

<p>The global tech sector continues to evolve, transforming business and behaviour while revealing new opportunities and challenges. In this fast-paced world, you need a law firm that&#39;s as forward-thinking and dynamic as you.</p>

<p><a class=""c-button"" href=""~/en/sectors/tech/global/"" target=""_blank"">Learn more about our Global Tech Team</a></p>
",NULL,NULL,NULL,NULL,NULL,NULL,NULL,cdfc9b50-74c2-4af5-9508-342935f81ccd;de517572-4373-4b36-844b-18be93f6f9bc,08b9a44c-bb26-4255-9779-296a124fcbee,NULL,425a9689-d70c-46ff-b7b6-8994bb782c5f;48295bef-3e9d-4fad-a7cd-de2dea46e3dd;7e822e16-356b-4251-84ae-83b9293fa418;e7699c32-3759-4e7e-b810-53eb248fab9f;5f95d156-4514-4eed-b192-86dcac98e42d;7a3dc7c1-92e7-47f5-b53f-c887609f124e;3cb7b903-24be-4d44-b671-e9e9bb0f7efd;300e471b-5cfe-45e3-bb75-6cc00bbdf27b;52cfeee8-3a31-4049-a315-db5ef0c65610;35328107-9935-4d4e-8f39-578c7ea94e0e;bbcb612e-3f3f-4628-85b8-5f08869dda7e;3c491e10-b593-4b4c-bbd5-84cbfcdc69cb;c0660c2d-79e7-42d8-b553-235b03ce0d4b;25b3dc0e-5f2c-43b2-b14a-78f34dd3c1aa;8a619aab-f652-44fa-9fa7-242123c2e214;2e157dcc-2fdf-42d1-8dd5-f9350a946928,307cbdc2-04f5-45e4-bdf1-f96d7c44c3f8,Conference,"Viona M. Duncan, Sean Gomes, W. Ian Palm, Henry A. Harris, Adam Lewinberg, Timothy N. Ross, Parna Sabet-Stephenson, Usman M. Sheikh, Mehmet Komurcu, PhD, Yulia Yarnykh, Adam Carlin, Jennifer Charles, Meldir Erbulekova, Marek Lorenc, Mark McAuley, Shaela W. Rae",NULL,NULL,GWLG.Events,NULL,~/getmedia/ec306630-74c2-4334-a906-bc00c59dd101/190909-toronto-skyline-elevate-conference.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/6ced47f4-d278-4930-8638-cca6438e63b3/190909-toronto-skyline-elevate-conference-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,NULL,0,NULL,Gowling WLG Elevate Team,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
177,/Events/2019/Risk-to-Reward-Seminar-Series-Ransomware-Attack,en-GB,80797310-80F2-4F8E-92F9-F8920DFA204A,Risk to Reward Seminar Series: Ransomware Attack,Risk to Reward Seminar Series: Anatomy of a Ransomware Attack: How to Prevent and Respond,"Ransomware is pervasive, affecting organizations of all sizes - whether private or public sector, commercial or not-for-profit. The good news is that all organizations can make meaningful changes to help avoid being a target.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,22-10-2019 00:00,22-10-2019 00:00,4:30 PM,NULL,EST,0,NULL,"<p>Ransomware is pervasive, affecting organizations of all sizes &mdash; whether private or public sector, commercial or not-for-profit. The good news is that all organizations can make meaningful changes to help avoid being a target.</p>

<p>Our expert panel will explain the sources of ransomware, how victims are located and compromised, what the attack does on your network, and what your organization must do to respond to attacks.</p>

<p>The discussion will address questions such as:&nbsp;</p>

<ul>
	<li>What can you do to proactively address the threat?</li>
	<li>What are the important things to do and keep in mind from a technical perspective if you find ransomware on your network?</li>
	<li>What are your legal obligations?</li>
	<li>Is it acceptable to pay the ransom/to pursue the attackers?</li>
	<li>Must the attack be reported to regulators and the affected persons?</li>
</ul>

<p>Despite best efforts to prevent them, ransomware attacks happen. RSVP today to learn what you can do to ensure your business is protected.</p>

<h2>Agenda</h2>

<ul>
	<li><strong>4:30 p.m.</strong>&nbsp; &nbsp;Registration and welcome</li>
	<li><strong>5:00 p.m.</strong>&nbsp; &nbsp;Panel discussion</li>
	<li><strong>6:30 p.m.</strong>&nbsp; &nbsp;Networking</li>
</ul>

<h2>Moderator</h2>

<ul>
	<li><a href=""https://www.welchllp.com/about/our-people/team-members/bryan-haralovich/"" target=""_blank"">Bryan Haralovich</a> &ndash; Partner, Welch LLP</li>
</ul>

<h2>Speakers</h2>

<ul>
	<li><a href=""https://fieldeffect.com/company/"" target=""_blank"">Andrew Loschmann</a> &ndash; President &amp; Chief Technology Officer, Field Effect Software</li>
	<li>Richard McConnell &ndash; Chief Operating Officer, Gowling WLG</li>
	<li><a href=""https://gowlingwlg.com/en/people/wendy-wagner/#panel-button1"" target=""_blank"">Wendy Wagner</a> &ndash; Partner, Gowling WLG</li>
</ul>
",NULL,NULL,20-10-2019 00:00,https://sites-gowlingwlg.vuturevx.com/101/4694/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,CB61C4C1-D0CF-4AA1-BA0B-5DAB5DC99393,NULL,NULL,NULL,NULL,NULL,Seminar,NULL,Ottawa,67,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/101/4694/landing-pages/event-registration-(blank-form).asp,Register for this event,GWLG.Canada,0,NULL,Speakers,NULL,cb61c4c1-d0cf-4aa1-ba0b-5dab5dc99393,NULL,NULL,NULL,Ottawa,NULL,NULL,NULL
178,/Events/2019/Data-protection-in-the-EU-Montreal,fr-CA,D670B395-B659-4797-AB13-28A89C4C98DE,Protection des donnees dans l'UE,Protection des données dans l'UE : que devez-vous savoir?,"Octobre est le Mois de la sensibilisation à la cybersécurité, une campagne internationale visant à renseigner le public sur l’importance de la cybersécurité et la protection des données.",~/getmedia/cc5ab565-de7d-4268-8b03-95649c15ecd4/190926-event-tile-data-protection-EU-francais.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Conference,00:00.0,00:00.0,8 h,NULL,EST,0,NULL,"<p>Octobre est le Mois de la sensibilisation à la cybersécurité, une campagne internationale visant à renseigner le public sur l&rsquo;importance de la cybersécurité et la protection des données.</p>

<p>Le 9&nbsp;octobre prochain, joignez-vous à Gowling&nbsp;WLG alors que nous discuterons des implications du&nbsp;<strong><em>Règlement général sur la protection des données</em>&nbsp;</strong>(RGPD) pour les entreprises canadiennes en plus d&rsquo;examiner les développements récents dans la législation en matière de protection de la vie privée au Canada. La discussion sera animée par deux spécialistes en protection des données de nos bureaux du Royaume-Uni, qui présenteront&nbsp;:</p>

<ul>
	<li>des renseignements pertinents et des exemples pratiques illustrant l&#39;application du RGPD aux organisations se trouvant dans un pays à l&#39;extérieur de l&#39;UE,</li>
	<li>des conseils quant au traitement de données provenant de l&#39;UE et aux façons d&#39;atténuer les risques associés au RGPD,</li>
	<li>un exposé des mesures réglementaires récentes découlant du RGPD et des cas récents de violation de celui-ci,</li>
	<li>des clarifications quant à l&rsquo;incidence potentielle de développements futurs sur le cadre juridique lié à la protection des données au Canada et dans l&#39;UE, à mesure que les régimes juridiques et les mesures d&#39;application de la loi deviennent de plus en plus contraignants.</li>
</ul>

<p>Veuillez confirmer votre présence afin de réserver votre place.<br />
Au plaisir de vous voir en octobre!</p>
",NULL,NULL,21:56.0,https://sites-gowlingwlg.vuturevx.com/98/4685/landing-pages---french/event-registration-(blank-form)---fr.asp,NULL,RSVP,4EEBBC16-5EC7-4186-B6BB-A7F0CF2F7CA4,NULL,2e9a87e2-3d2e-4d69-ba9c-06b4b358ca0d,NULL,d3e0fa3e-1011-4fe0-b62a-88c920f62d49;a1fc3780-83d6-4133-9ed0-6fa6f7fffbd2;7fb29160-44a7-4f27-b030-99ef5d9941cf,ec5732f8-7379-493b-afa8-c76098e6ec49,Conférence,NULL,Montréal,66,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,Conférenciers,NULL,4eebbc16-5ec7-4186-b6bb-a7f0cf2f7ca4,NULL,NULL,NULL,NULL,NULL,NULL,NULL
179,/Events/2019/Data-protection-in-the-EU-Montreal,en-GB,D670B395-B659-4797-AB13-28A89C4C98DE,Data protection in the EU Montreal,Data protection in the EU: What do you need to know,"October is Cyber Security Awareness Month, which is an internationally recognized campaign to help inform the public on the importance of cyber security and data protection. ",~/getmedia/3ae965ab-1230-414b-bf00-7f0b9b77599e/190926-event-tile-data-protection-EU.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Conference,00:00.0,00:00.0,08:00,NULL,EST,0,NULL,"<p>October is Cyber Security Awareness Month, which is an internationally recognized campaign to help inform the public on the importance of cyber security and data protection. </p>

<p>Join Gowling WLG on October 9 2019 as we discuss the implications that the <strong>General Data Protection Regulation</strong> (GDPR) can have on Canadian businesses as well as recent developments in Canada&#39;s privacy laws. We will be joined by two data protection specialists from our UK offices who will:</p>

<ul>
	<li>provide insights and practical examples of the application of GDPR to organisations in non-EU countries</li>
	<li>offer guidance on processing EU data and discuss how to minimise risks associated with GDPR</li>
	<li>discuss recent regulatory actions and breaches under the GDPR</li>
	<li>highlight how future developments may impact the data protection legal landscape in both Canada and the EU, as the legal regimes and enforcement become increasingly restrictive.</li>
</ul>

<p>Please RSVP to reserve your spot. We look forward to seeing you in October! </p>
",NULL,NULL,21:56.0,https://sites-gowlingwlg.vuturevx.com/98/4685/landing-pages---english/event-registration-(blank-form)---en.asp,NULL,RSVP,4EEBBC16-5EC7-4186-B6BB-A7F0CF2F7CA4,NULL,2e9a87e2-3d2e-4d69-ba9c-06b4b358ca0d,NULL,d3e0fa3e-1011-4fe0-b62a-88c920f62d49;a1fc3780-83d6-4133-9ed0-6fa6f7fffbd2;7fb29160-44a7-4f27-b030-99ef5d9941cf,ec5732f8-7379-493b-afa8-c76098e6ec49,Conference,NULL,Montréal,66,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,Conférenciers,NULL,4eebbc16-5ec7-4186-b6bb-a7f0cf2f7ca4,NULL,Cyber security & data protection law,NULL,Montréal,NULL,NULL,NULL
180,/Events/2019/GROW-Speaker-series-EGO,en-GB,B404AA41-9764-4161-A8E6-CBA5E79976FF,GROW Speaker series: EGO,GROW Speaker series: EGO - Don't let it get in the way of excellence,"On Thursday, October 24, 2019  Dr. Marie Claire Bourque  will deliver an interactive presentation entitled ""EGO – Don't Let it Get in the Way of Excellence.""",~/getmedia/61b4a499-7931-42f1-9e36-7fa7285dc937/190926-event-tile-grow-speaker-series.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Seminar,24-10-2019 15:30,24-10-2019 18:00,3:30 p.m.,6 p.m.,Local time,0,NULL,"<p>On Thursday, October 24, 2019&nbsp;&nbsp;<a href=""https://www.marieclairebourque.com/home"" target=""_blank""><strong>Dr. Marie Claire Bourque</strong></a>&nbsp;&nbsp;will deliver an interactive&nbsp;presentation entitled &quot;EGO &ndash; Don&rsquo;t Let it Get in the Way of Excellence.&quot;</p>

<p>This 60-minute&nbsp;presentation will include a breakout session as well as an exercise to help participants identify their personal core values and live according to their authentic selves.&nbsp;Drinks and appetizers will follow the presentation&nbsp;to give participants an opportunity to network and debrief on the session.</p>

<p>This exciting and unique&nbsp;event is a part of Gowling WLG&#39;s GROW (Gowling WLG Realizing Opportunities for Women) initiative.</p>

<p>We look forward to seeing you there! Please RSVP as soon as possible.</p>

<h2>Agenda</h2>

<p>3:30 p.m. - Session begins</p>

<p>4 p.m. - Breakout session</p>

<p>4:30 p.m. - Formal session ends, drinks &amp; networking begin</p>
",NULL,NULL,23-10-2019 20:02,https://sites-gowlingwlg.vuturevx.com/95/4654/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,8BF72D3F-E216-4FDD-B0BE-52D41A644293,NULL,NULL,NULL,NULL,NULL,Seminar,NULL,Calgary,64,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/95/4654/landing-pages/event-registration-(blank-form).asp,Register now,NULL,0,NULL,Speaker(s),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
181,/Events/2019/ThinkHouse-Dubai-Incoterms-2020-Seminar,en-GB,8A369697-3874-4522-BA9D-4E6314EE09BB,ThinkHouse Dubai – Incoterms 2020 Seminar,ThinkHouse Dubai – Incoterms 2020 Seminar,"Incoterms 2020 has arrived, but is your business ready for the key changes it will bring to the international trade of goods? Attend our seminar in Dubai to learn more.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,23-10-2019 08:00,23-10-2019 10:00,08:00,10:00,CST,0,NULL,"<p>Incoterms&reg;2020 has now been released by the International Chambers of Commerce (ICC) and the new rules will come into force on 1 January 2020.</p>

<p>In our upcoming ThinkHouse training and networking session we will be joined by David Lowe, UK based partner and co-chair and co-author of Incoterms&reg;2020. This is an early opportunity to have your questions answered by David who is directly involved in Incoterms&reg;2020, and understands how these changes could be a determining factor for your business.</p>

<p>Incoterms are a set of contract terms for international freight delivery, which clearly define the delivery point and the seller and buyer&#39;s responsibilities, risks and costs. Last updated 10 years ago, the 2020 edition will bring a number of new changes to note. Gowling WLG is able to bring expert insight into this area, having played a central role in shaping the new set of terms.</p>

<p>We hope you can join us for what will be an informative introduction to Incoterms&reg;2020.</p>

<h2>Agenda</h2>

<table>
	<thead>
		<tr>
			<th scope=""col"">Time</th>
			<th scope=""col"">Agenda item</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>08:00</td>
			<td>Breakfast &amp; Registration</td>
		</tr>
		<tr>
			<td>08:00</td>
			<td>Session begins</td>
		</tr>
		<tr>
			<td>09:15</td>
			<td>Q&amp;A</td>
		</tr>
		<tr>
			<td>09:30</td>
			<td>Tea, coffee &amp; networking</td>
		</tr>
	</tbody>
</table>
",NULL,NULL,23-10-2019 11:10,mailto:dubai.thinkhouse@gowlingwlg.com?subject=Incoterms 2020 seminar,NULL,Register for this event,2D388260-6B09-4610-9C1D-852369DE565C,NULL,NULL,NULL,ad056fcd-7211-4da7-a9e2-30612d332954,NULL,Seminar,NULL,Capital Club Dubai,37415,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UAEDubai,0,NULL,Speaker,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
182,/Events/2019/Brexit-Its-impact-on-exports-of-products-to-the-UK,en-GB,97A7D617-783E-4086-B5E4-8B6A6D092D1A,Brexit Its impact on exports of products to the UK,Deal or No Deal? Brexit - Its impact on exports of products to the UK,"On Wednesday, Oct. 16, please join Yordas, Gowling WLG, the UK Department for International Trade and KPMG for a morning event that will examine how Brexit will impact North American businesses that are exporting products to the UK.",~/getmedia/c08be868-9759-461a-8c01-75430de8c457/191003-event-tile-brexit.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Seminar,16-10-2019 08:00,16-10-2019 11:00,8 a.m.,11 a.m.,EST,0,NULL,"<p>On Wednesday, Oct. 16, please join <a href=""https://www.yordasgroup.com"" target=""_blank"">Yordas</a>, Gowling WLG, the <a href=""https://www.gov.uk/government/organisations/department-for-international-trade"" target=""_blank"">UK Department for International Trade</a> and <a href=""https://home.kpmg/ca/en/home.html"" target=""_blank"">KPMG</a> for a morning event that will examine how Brexit will impact North American businesses that are exporting products to the UK.</p>

<p>Our seminar will cover a range of timely topics, including:</p>

<ul>
	<li>The most up-to-date information on the UK government position and preparations for Brexit</li>
	<li>Impacts on imports to/exports from the UK and administrative costs and processes</li>
	<li>Steps to take to ensure supply chain resilience, compliance and continuity of supply</li>
	<li>Trade agreements and possible impacts and outcomes: CETA, Most Favoured Nation (MFN) status, new trade agreements, interim measures</li>
	<li>Strategies to maximise savings around duties</li>
	<li>Impact on corporate structure, including withholding taxes on dividends, interest and royalties and access to double tax treaties/EU directives</li>
	<li>Industry case study on chemical supply chain impacts<br />
	&nbsp;</li>
</ul>

<p>You won&#39;t want to miss this helpful and engaging session. Please register to attend in person or via webinar using the links below.</p>

<p><a class=""c-button"" href=""https://sites-gowlingwlg.vuturevx.com/96/4690/landing-pages/event-registration-(blank-form).asp"" target=""_blank"">Attend in person at McMaster Innovation Park</a>&nbsp;or <a class=""c-button-white"" href=""https://register.gotowebinar.com/register/6494848572411689996?source=dotmailer&amp;utm_campaign=381847_Deal%20or%20No-Deal%3F%20Brexit%20-%20its%20impact%20on%20exports%20of%20products%20to%20the%20UK&amp;utm_medium=email&amp;utm_source=Yordas%20Limited&amp;AprilCA=1&amp;dm_t=0,0,0,0,0"" target=""_blank"">Attend via webinar</a></p>

<h2>Presenters</h2>

<ul>
	<li>Latham French, <em>UK Department of International Trade -&nbsp;</em>Trade and Investment Specialist</li>
	<li>Ursula Johnston, Gowling WLG (UK) - Director, Customs and Global Trade</li>
	<li>Chris Wilson, KPMG - Associate Director KPMG UK (Transatlantic)</li>
	<li>Craig Barrowman, KPMG UK (Transatlantic) - Associate Director KPMG</li>
	<li>Alex Paul, Yordas Group - Principal Consultant, International Chemicals Regulations</li>
</ul>

<h2>Agenda</h2>

<ul>
	<li>8 a.m. - Breakfast &amp; networking</li>
	<li>9 a.m. - Seminar starts</li>
	<li>11 a.m. - Seminar ends</li>
</ul>
",NULL,NULL,15-10-2019 21:10,NULL,NULL,NULL,0231847C-BCE9-44FF-89C6-0F163BA67B16,NULL,NULL,NULL,NULL,NULL,Seminar,NULL,McMaster Innovation Park,42265,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
183,/Events/2019/FCA-Breakfast-Briefing,en-GB,BBC220D2-C841-46A4-9BE7-ABD08BEC1C38,FCA Breakfast Briefing ,Hot topics in Enforcement - what are the FCA's current priorities?,"Gowling WLG will be hosting the second of its breakfast briefings with the FCA., this time on FCA Enforcement and what this means for you.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,22-10-2019 08:30,22-10-2019 08:30,08:30,10:00,GMT,1,1,"<p>Gowling WLG will be hosting the second of its breakfast briefings with the FCA., this time on FCA Enforcement and what this means for you.</p>

<p>Mark Steward, Director of Enforcement and Market Oversight at the FCA, will provide an update on current priorities and future developments. There will be an opportunity for audience interaction and to ask Mark questions.</p>

<p>Ian Mason, Partner and Head of the UK Financial Services Regulatory Team, will chair and facilitate the briefing.</p>

<h2>Agenda</h2>

<table>
	<thead>
		<tr>
			<th>Time</th>
			<th>Agenda item</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>08:30</td>
			<td>Registration and breakfast</td>
		</tr>
		<tr>
			<td>09:00</td>
			<td>Briefing with Q&amp;A</td>
		</tr>
		<tr>
			<td>10:00</td>
			<td>Close</td>
		</tr>
	</tbody>
</table>
","<p>This event is free of charge.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,11-10-2019 21:00,mailto:joy.litchfield@gowlingwlg.com?subject=FCA Breakfast Briefing,NULL,Register for this event,9FBE191E-3BCF-45DE-A2BA-338BB194FC9D,06cecb4c-c959-4674-9047-d5d8ee8c673c,aa5dcce5-fbe3-48b0-8a5c-b653c134f240,NULL,af5005a2-4ec9-49ba-b7bd-262bb191b111,NULL,Seminar,Ian Mason,London,71,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,95EC9477-4594-4332-A463-E612BD16CA0C,Speaker(s),NULL,9fbe191e-3bcf-45de-a2ba-338bb194fc9d,NULL,NULL,NULL,NULL,NULL,NULL,NULL
186,/Events/2019/Hamilton-Cross-Institutional-Lending-Conference,en-GB,B3AEDECB-5E2B-4A8B-9D23-F0ED0DA2D347,Hamilton Cross Institutional Lending Conference,Hamilton Cross-Institutional Lending Conference,Gowling WLG's Financial Services Group in Hamilton invites you and your colleagues to an insightful afternoon conference for commercial lenders in the Hamilton region.,~/getmedia/4fdf071e-b04a-42e8-9df2-127da7538704/191017-hamilton-cross-lending-conference.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Conference,00:00.0,00:00.0,12 p.m.,4 p.m.,EST,0,NULL,"<p>Gowling WLG&#39;s Financial Services Group in Hamilton invites you and your colleagues to an insightful afternoon conference for commercial lenders in the Hamilton region.</p>

<p>Join our panel of local legal experts at the Sheraton Hamilton Hotel&nbsp;as they explore a range of timely topics relevant to mid-market lending transactions. Following the panel, please stay for a special cocktail reception, where you will have the unique opportunity to connect with professionals from the region&#39;s major financial institutions.</p>

<p>Below is a list of proposed topics:</p>

<ul>
	<li>Overview of various security documents</li>
	<li>Dealing with third party creditors and landlords</li>
	<li>Block chain/cryptocurrency</li>
	<li>Construction loans and the new <em>Construction Act</em></li>
	<li>Environmental issues</li>
</ul>

<p>If there are other topics of interest to you, please let us know by contacting <a href=""mailto:kathy.leblanc@gowlingwlg.com?subject=Topic%20of%20interest%20for%20Nov.%207%20Lending%20conference"">Kathy LeBlanc</a>.</p>

<p>Please share this evite with your colleagues. Space is limited so <a href=""mailto:HAM-BD@gowlingwlg.com?subject=RSVP%20-%20Hamilton%20Cross-Institutional%20Lending%20Conference%20-%20Nov.%207%2F19""><strong>RSVP today</strong></a> to reserve your spot(s).</p>
",NULL,NULL,44:23.0,mailto:HAM-BD@gowlingwlg.com?subject=RSVP - Hamilton Cross-Institutional Lending Conference - Nov. 7%2F19,NULL,Register for this event,1FD64EEA-9F1A-47A5-9C77-39D302D1A5A1,06cecb4c-c959-4674-9047-d5d8ee8c673c,NULL,NULL,NULL,NULL,Conference,NULL,NULL,NULL,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,NULL,NULL,NULL,Financial Institutions & Services,NULL,NULL,NULL,NULL,NULL,NULL
187,/Events/2019/Women-and-Wealth-Your-Estate-Your-Plan,en-GB,D867755A-2ABD-484E-AB83-0DBF12889462,Women and Wealth Your Estate Your Plan ,"Women and Wealth: Your Estate, Your Plan ","Please join us for a fun, informative and interactive workshop with legal & financial experts to discuss and explore topics in estate planning.",~/getmedia/ab78170f-7e2c-468c-83ba-d7c267f67816/191025-women-wealth-estate-plan-website.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Seminar,07-11-2019 07:45,07-11-2019 09:30,7:45 a.m.,9:30 a.m.,EST,0,NULL,"<p>Please join us for a fun, informative and interactive workshop with legal &amp; financial experts to discuss and explore topics in estate planning.</p>

<p>Topics covered include:</p>

<ul>
	<li>Power of attorney for property</li>
	<li>Charitable giving</li>
	<li>Financial planning</li>
</ul>

<p>Over breakfast, you will have the opportunity to hear from legal and financial experts and speak directly to each one in a friendly, non-intimidating atmosphere.&nbsp; All questions welcome.&nbsp;</p>

<p>Please share this evite with your colleagues. Space is limited so <a href=""mailto:HAM-BD@gowlingwlg.com?subject=RSVP%20to%20Women%20and%20Wealth:%20Your%20Estate,%20Your%20Plan""><strong>RSVP today</strong></a><strong> </strong>to reserve your spot(s).<strong>&nbsp;</strong></p>

<p><em>Brought to you in partnership with Walzak Wealth Management.</em></p>

<h2>Speaker</h2>

<h3>Victoria Walzak</h3>

<h4>Vice-President, Portfolio Manager &amp; Investment Advisor at RBC Wealth Management</h4>
",NULL,NULL,06-11-2019 12:00,mailto:HAM-BD@gowlingwlg.com,NULL,Register for this event,274899BE-162E-42C9-A5AA-00D092A07989,06cecb4c-c959-4674-9047-d5d8ee8c673c,NULL,NULL,4eef1fbf-3df9-4a75-a931-75a938845276;ed1099ae-0656-44f9-b5cf-ad59fe8d5d89;22caa3a7-ab34-47a7-866b-892c7db3973a,NULL,Seminar,"Alex Del Bel Belluz, Karen C. Watters, Pamela Green",Hamilton Golf & Country Club,42598,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,Gowling WLG Speakers & Moderator,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
188,/Events/2019/Incoterms-2020-ThinkHouse-Briefing,en-GB,7E56AF6A-507E-47B9-8145-906F48EC4F78,Incoterms® 2020 - ThinkHouse Briefing ,Incoterms® 2020 - ThinkHouse Briefing ,Join us for a ThinkHouse special interest briefing on how the changes to Incoterms could be a determining factor for your business.,~/getmedia/532d0f3a-eb2b-45d0-a72c-1340e5fc6c3d/thinkhouse-event-generic-banner.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Seminar,19-11-2019 09:57,19-11-2019 09:57,09:00,11:15,GMT,1,2,"<p><a href=""~/en/topics/incoterms-2020/"">Incoterms&reg; 2020</a> has now been released by the International Chambers of Commerce (ICC) and the new rules will come into force on 1 January 2020. Join us for a ThinkHouse special interest briefing on how the changes to Incoterms could be a determining factor for your business.</p>

<p>Incoterms are a set of contract terms for international freight delivery, which clearly define the delivery point and the seller and buyer&#39;s responsibilities, risks and costs. The new edition of ICC Incoterms&reg; arrives at a time of increased interest in understanding more about the import and export process since the 2016 UK referendum on whether to remain in, or leave, the EU. Updated every 10 years, the 2020 edition brings a number of new changes to note.</p>

<p>In this briefing session we will cover:</p>

<ul>
	<li>The key areas of change that businesses should be aware of</li>
	<li>How to identify what Incoterms your business uses and whether they are the right Incoterms for your current situation</li>
	<li>Where the potential areas of impact are for your business, and how to optimise your trading arrangements</li>
	<li>Highlight how to minimise exposure to customs compliance risks through effective use of Incoterms and address the practical considerations for new importers and exporters</li>
</ul>

<p>Gowling WLG is able to bring expert insight into this area, having played a central role in shaping the new set of terms through David Lowe, global co-chair of the Incoterms&reg; 2020 drafting committee.</p>
","<p>This event is free of charge.</p>

<p>This event will run for 2 hours. Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession.</p>

<p>Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,15-11-2019 12:00,mailto:susan.barnes@gowlingwlg.com?subject=ThinkHouse Incoterms Briefing,NULL,Register for this event,9FBE191E-3BCF-45DE-A2BA-338BB194FC9D,de517572-4373-4b36-844b-18be93f6f9bc;cbbbf9eb-a169-4053-8043-7085cfb8fd4a;3fc2ca8c-9d19-44ba-a3a9-ad1ecb11e900;2cd1b5c0-8992-4c92-b8e8-d65d8b86dbed;049c8249-7ff3-4ee3-a439-590f45fd5cff;0357076d-2635-451a-8d67-ec01f9f3082b;cdfc9b50-74c2-4af5-9508-342935f81ccd,NULL,a143cbfd-d333-42a0-89a6-7287894464f1;7442155c-8116-411f-a14b-68c3de561aa7,ad056fcd-7211-4da7-a9e2-30612d332954;e33531f3-9132-4365-bdfc-fe6df95bab54,NULL,Seminar,"David Lowe, Ursula Johnston",London,71,GWLG.Events,NULL,~/getmedia/d2b9ca59-d716-4c60-abb1-472dd7eeec23/thinkhouse-primary-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/0363a899-4ad3-4e9e-a428-fbf0ebf9f31d/thinkhouse-primary-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,NULL,Speaker(s),NULL,9fbe191e-3bcf-45de-a2ba-338bb194fc9d,NULL,NULL,NULL,NULL,NULL,NULL,NULL
190,/Events/2020/ThinkHouse-TUPE-Masterclass,en-GB,D6AFDED1-519C-47C1-831D-CA2A09D8D3AF,ThinkHouse TUPE Masterclass,ThinkHouse Masterclass: TUPE and Outsourcing,"Providing GCs, Heads of Legal and senior in-house lawyers with the latest thoughts and developments on TUPE from our employment experts.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,12-02-2020 10:55,12-02-2020 10:55,09.:00,12:00,GMT,1,3,"<p>The first TUPE Club session of 2020 is an advanced workshop focusing on outsourcing.</p>

<p>This session is aimed at more experienced delegates who want to master the more complex concepts of TUPE. The session will assume a general knowledge and understanding of TUPE and focus on the realities of dealing with an outsourcing situation and how to mitigate risk.</p>

<p>The issues covered in the workshop will include:</p>

<ul>
	<li>Outsourcing - when is there a Service Provision Change?</li>
	<li>Particular issues with TUPE information and consultation obligations</li>
	<li>Redundancy - risks and reality</li>
	<li>Protecting your organisation from uncertainty and liability</li>
</ul>

<p>Our speakers, Martin Chitty and Hannah Swindle, will provide practical tips on dealing with the most common tricky issues arising from these issues.</p>

<p>During this workshop you will have the opportunity to ask questions and work through a case study, applying the theory we have discussed to a practical scenario.</p>

<p>Following the session we would invite you to stay for coffee and networking, giving you the opportunity to ask further questions and dig a little deeper into issues discussed during the session.</p>
","<p style=""background-color: transparent; color: rgb(51, 51, 51); cursor: text; font-family: sans-serif,Arial,Verdana,&amp;quot;trebuchet ms&amp;quot;; font-size: 13px; font-style: normal; font-variant: normal; font-weight: 400; letter-spacing: normal; line-height: 20.8px; margin-bottom: 13px; margin-left: 0px; margin-right: 0px; margin-top: 13px; orphans: 2; text-align: left; text-decoration: none; text-indent: 0px; text-transform: none; -webkit-text-stroke-width: 0px; white-space: normal; word-spacing: 0px;"">This event is free of charge.</p>

<p style=""background-color: transparent; color: rgb(51, 51, 51); cursor: text; font-family: sans-serif,Arial,Verdana,&amp;quot;trebuchet ms&amp;quot;; font-size: 13px; font-style: normal; font-variant: normal; font-weight: 400; letter-spacing: normal; line-height: 20.8px; margin-bottom: 13px; margin-left: 0px; margin-right: 0px; margin-top: 13px; orphans: 2; text-align: left; text-decoration: none; text-indent: 0px; text-transform: none; -webkit-text-stroke-width: 0px; white-space: normal; word-spacing: 0px;"">This event will run for three hours. Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession.</p>

<p style=""background-color: transparent; color: rgb(51, 51, 51); cursor: text; font-family: sans-serif,Arial,Verdana,&amp;quot;trebuchet ms&amp;quot;; font-size: 13px; font-style: normal; font-variant: normal; font-weight: 400; letter-spacing: normal; line-height: 20.8px; margin-bottom: 13px; margin-left: 0px; margin-right: 0px; margin-top: 13px; orphans: 2; text-align: left; text-decoration: none; text-indent: 0px; text-transform: none; -webkit-text-stroke-width: 0px; white-space: normal; word-spacing: 0px;"">Please do get in touch if you have any further queries about this event and CPD.</p>

<p style=""background-color: transparent; color: rgb(51, 51, 51); cursor: text; font-family: sans-serif,Arial,Verdana,&amp;quot;trebuchet ms&amp;quot;; font-size: 13px; font-style: normal; font-variant: normal; font-weight: 400; letter-spacing: normal; line-height: 20.8px; margin-bottom: 13px; margin-left: 0px; margin-right: 0px; margin-top: 13px; orphans: 2; text-align: left; text-decoration: none; text-indent: 0px; text-transform: none; -webkit-text-stroke-width: 0px; white-space: normal; word-spacing: 0px;"">Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,07-02-2020 17:00,mailto:thinkhouse@gowlingwlgmail.com?subject=TUPE Masterclass,NULL,Express interest in this event,9FBE191E-3BCF-45DE-A2BA-338BB194FC9D,de517572-4373-4b36-844b-18be93f6f9bc;3fc2ca8c-9d19-44ba-a3a9-ad1ecb11e900;06cecb4c-c959-4674-9047-d5d8ee8c673c;5ad41b49-d460-489a-95b9-84c854eda6f1;df411e0b-2c62-4a68-8456-2c7c1dd0b4da;c0b8c1a8-73eb-4122-972f-dc5df852f68d;cbbbf9eb-a169-4053-8043-7085cfb8fd4a;f1e960f5-8231-4c56-b7bf-9898ebb538c5;2cd1b5c0-8992-4c92-b8e8-d65d8b86dbed;a929915c-1d1f-4e9c-8c8b-f34a30e2ab4e;049c8249-7ff3-4ee3-a439-590f45fd5cff;dede4518-e78c-4b48-a143-a2338be5d0ac;59be9dcd-e5f0-43e4-9d50-442a658eda18;0357076d-2635-451a-8d67-ec01f9f3082b;cdfc9b50-74c2-4af5-9508-342935f81ccd,d8837737-40d2-4472-8a9e-ba4101ec2105,a143cbfd-d333-42a0-89a6-7287894464f1,fb60329f-6333-4f7e-b26b-4f9b106a32e7;5466df28-982a-4f78-92d0-6e464942cbc1,NULL,Seminar,"Martin Chitty, Hannah Swindle",London,71,GWLG.Events,NULL,~/getmedia/5d57b23c-f4d3-44e3-a08e-7ee56360fd71/thinkhouse-snr-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/27fda93c-8849-4d7e-a292-bcc5eb1e7896/thinkhouse-snr-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,9fbe191e-3bcf-45de-a2ba-338bb194fc9d,NULL,NULL,NULL,NULL,NULL,NULL,NULL
191,/Events/2020/ThinkHouse-Spring-Seminar-2020-Birmingham,en-GB,F2FB9DEE-E7AA-4956-9C30-2D99B8A932C2,ThinkHouse Spring Seminar 2020 - Birmingham,ThinkHouse Brexit Seminar 2020 - Birmingham,"Providing GCs, Heads of Legal and senior in-house lawyers with timely, topical and practical legal advice on Brexit",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,19-03-2020 09:00,19-03-2020 14:00,09:00,13:30,GMT,1,4,"<p>Our spring ThinkHouse seminar for senior in-house lawyers will be dedicated to providing practical Brexit guidance on a range of legal areas.</p>

<p>How Brexit will affect business will vary significantly, but there are some key challenges that we all need to be aware of and prepare for. The ThinkHouse team has assembled seven experts from across the firm to deliver practical, action-led talks to help support you through this uncertain time.</p>

<h2>EU law after Brexit</h2>

<p>Kieran Laird will provide a short overview of how EU law will apply in the UK both during and after the transition period, as well as flagging the risks of regulatory divergence over time.</p>

<h2>Data Privacy after Brexit</h2>

<p>Rocio de la Cruz will cover the data privacy issues that have been most discussed with our clients over the last few months. In particular, she will address: international transfers of personal data, appointing a representative, marketing, cookies and electronic marketing communications, GDPR compliance and enforcement by the ICO.</p>

<h2>Employment obligations post-Brexit</h2>

<p>Jonathan Chamberlain will look at what might happen to both employees&#39; rights and employers&#39; obligations post-Brexit. How much of our employment law really does come from the EU? What, if anything, will change and when?</p>

<h2>Cross border trade after Brexit</h2>

<p>Ursula Johnston will consider the potential costs and compliance challenges that business will face in trading goods with the EU after the transition period. She will focus on the practical requirements business will need to adopt to ensure that they can take advantage of any UK - EU trade deal.</p>

<h2>Contracts in a post-Brexit world</h2>

<p>David Lowe and Clark Sargent will provide an overview of how to approach and mitigate some of the potentially &#39;interesting&#39; contractual issues/risks that could be caused by Brexit. They will discuss the challenges that may be encountered with existing contracts before discussing elements to be considered when drafting new contracts in a post-Brexit world.</p>

<h2>The UK-EU FTA negotiations and other FTA&#39;s</h2>

<p>Bernardine Adkins will review the current negotiating positions of the EU and the UK for their future relationship and considers how these respective positions may unfold (or not) over the coming months, with implications for business. She will review what is actually in CETA and the prospects of the UK achieving a similar arrangement. She examines what &#39;regulatory alignment&#39; actually means, whether it actually is on the table, and the prospects of a &#39;no deal&#39; situation in December. She also considers the issues that will be on the negotiating table with other third countries.</p>
","<p>This event is free of charge.</p>

<p>This event will run for four hours. Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession.</p>

<p>Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,13-03-2020 17:00,https://reaction.gowlingwlg.com/reaction/RSGenPage.asp?RSID=Asqy-tLeQ-v9bOpzwYf057hiwOAqW3P49Rv27_kPJeI,NULL,Register for this event,58076178-DA60-4AB6-A07C-EF250971EBF7,de517572-4373-4b36-844b-18be93f6f9bc;cbbbf9eb-a169-4053-8043-7085cfb8fd4a;3fc2ca8c-9d19-44ba-a3a9-ad1ecb11e900;f1e960f5-8231-4c56-b7bf-9898ebb538c5;06cecb4c-c959-4674-9047-d5d8ee8c673c;2cd1b5c0-8992-4c92-b8e8-d65d8b86dbed;5ad41b49-d460-489a-95b9-84c854eda6f1;a929915c-1d1f-4e9c-8c8b-f34a30e2ab4e;df411e0b-2c62-4a68-8456-2c7c1dd0b4da;049c8249-7ff3-4ee3-a439-590f45fd5cff;c0b8c1a8-73eb-4122-972f-dc5df852f68d;dede4518-e78c-4b48-a143-a2338be5d0ac;59be9dcd-e5f0-43e4-9d50-442a658eda18;0357076d-2635-451a-8d67-ec01f9f3082b;cdfc9b50-74c2-4af5-9508-342935f81ccd,9847316e-d705-4e8e-91fb-88df430a5dfc;bac2f2f8-09c0-4d06-b0c8-98d9567adfc7;d8837737-40d2-4472-8a9e-ba4101ec2105;549cbe28-f188-44cd-85c0-0f4e23a23817;04411fac-dc23-4861-bd0c-aada44efcdeb;2e9a87e2-3d2e-4d69-ba9c-06b4b358ca0d;39ca3d7e-072f-42c5-ad32-ee659513b4b3,a143cbfd-d333-42a0-89a6-7287894464f1;603d9889-cb72-431a-8d55-60d68706837b,ad056fcd-7211-4da7-a9e2-30612d332954;77781370-a881-48be-a13e-871b97c58c38;a1fc3780-83d6-4133-9ed0-6fa6f7fffbd2;79205c59-28cb-4630-bd62-bf070ba732b0;e33531f3-9132-4365-bdfc-fe6df95bab54;a1a4c901-7400-490f-8357-9db439f7dfee;2563a6d6-5f45-46c5-8698-e572a35f100b,NULL,Seminar,"David Lowe, Clark Sargent, Rocio de la Cruz, Jonathan Chamberlain, Ursula Johnston, Kieran Laird, Bernardine Adkins",Birmingham,70,GWLG.Events,NULL,~/getmedia/5d57b23c-f4d3-44e3-a08e-7ee56360fd71/thinkhouse-snr-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/27fda93c-8849-4d7e-a292-bcc5eb1e7896/thinkhouse-snr-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,58076178-da60-4ab6-a07c-ef250971ebf7,NULL,NULL,NULL,NULL,NULL,NULL,NULL
192,/Events/2020/ThinkHouse-Spring-Seminar-2020-London,en-GB,3C3DC02E-E34F-4D4C-8003-5592C6A139FF,ThinkHouse Spring Seminar 2020 - London,ThinkHouse Brexit Seminar 2020 - London,"Providing GCs, Heads of Legal and senior in-house lawyers with timely, topical and practical legal advice on Brexit.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,26-03-2020 15:24,26-03-2020 15:24,09:00,14,GMT,0,NULL,"<p>Our spring ThinkHouse seminar for senior in-house lawyers will be dedicated to providing practical Brexit guidance on a range of legal areas.</p>

<p>How Brexit will affect business will vary significantly, but there are some key challenges that we all need to be aware of and prepare for. The ThinkHouse team has assembled seven experts from across the firm to deliver practical, action-led talks to help support you through this uncertain time.</p>

<h2>EU law in the UK after Brexit</h2>

<p>Kieran Laird will provide a short overview of how EU law will apply in the UK both during and after the transition period, as well as flagging the risks of regulatory divergence over time.</p>

<h2>Data Privacy after Brexit</h2>

<p>Rocio de la Cruz will cover the data privacy issues that have been most discussed with our clients over the last few months. In particular, she will address: international transfers of personal data, appointing a representative, marketing, cookies and electronic marketing communications, GDPR compliance and enforcement by the ICO.</p>

<h2>Employment obligations post-Brexit</h2>

<p>Jonathan Chamberlain will look at what might happen to both employees&#39; rights and employers&#39; obligations post-Brexit. How much of our employment law really does come from the EU? What, if anything, will change and when?</p>

<h2>Cross border trade after Brexit</h2>

<p>Ursula Johnston will consider the potential costs and compliance challenges that business will face in trading goods with the EU after the transition period. She will focus on the practical requirements business will need to adopt to ensure that they can take advantage of any UK - EU trade deal.</p>

<h2>Contracts in a post-Brexit world</h2>

<p>David Lowe and Clark Sargent will provide an overview of how to approach and mitigate some of the potentially &#39;interesting&#39; contractual issues/risks that could be caused by Brexit. They will discuss the challenges that may be encountered with existing contracts before discussing elements to be considered when drafting new contracts in a post-Brexit world.</p>

<h2>The UK-EU FTA negotiations and other FTA&#39;s</h2>

<p>Bernardine Adkins will review the current negotiating positions of the EU and the UK for their future relationship and considers how these respective positions may unfold (or not) over the coming months, with implications for business. She will review what is actually in CETA and the prospects of the UK achieving a similar arrangement. She examines what &#39;regulatory alignment&#39; actually means, whether it actually is on the table, and the prospects of a &#39;no deal&#39; situation in December. She also considers the issues that will be on the negotiating table with other third countries.</p>
","<p>This event is free of charge.</p>

<p>This event will run for four hours. Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession.</p>

<p>Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,16-03-2020 16:00,https://reaction.gowlingwlg.com/reaction/RSGenPage.asp?RSID=Asqy-tLeQ-v9bOpzwYf057hiwOAqW3P49Rv27_kPJeI,NULL,Register for this event,9FBE191E-3BCF-45DE-A2BA-338BB194FC9D,de517572-4373-4b36-844b-18be93f6f9bc;cbbbf9eb-a169-4053-8043-7085cfb8fd4a;3fc2ca8c-9d19-44ba-a3a9-ad1ecb11e900;f1e960f5-8231-4c56-b7bf-9898ebb538c5;06cecb4c-c959-4674-9047-d5d8ee8c673c;2cd1b5c0-8992-4c92-b8e8-d65d8b86dbed;5ad41b49-d460-489a-95b9-84c854eda6f1;a929915c-1d1f-4e9c-8c8b-f34a30e2ab4e;df411e0b-2c62-4a68-8456-2c7c1dd0b4da;049c8249-7ff3-4ee3-a439-590f45fd5cff;c0b8c1a8-73eb-4122-972f-dc5df852f68d;dede4518-e78c-4b48-a143-a2338be5d0ac;59be9dcd-e5f0-43e4-9d50-442a658eda18;0357076d-2635-451a-8d67-ec01f9f3082b;cdfc9b50-74c2-4af5-9508-342935f81ccd,d8837737-40d2-4472-8a9e-ba4101ec2105;9847316e-d705-4e8e-91fb-88df430a5dfc;bac2f2f8-09c0-4d06-b0c8-98d9567adfc7;39ca3d7e-072f-42c5-ad32-ee659513b4b3;2e9a87e2-3d2e-4d69-ba9c-06b4b358ca0d;549cbe28-f188-44cd-85c0-0f4e23a23817;04411fac-dc23-4861-bd0c-aada44efcdeb,a143cbfd-d333-42a0-89a6-7287894464f1;603d9889-cb72-431a-8d55-60d68706837b,ad056fcd-7211-4da7-a9e2-30612d332954;e33531f3-9132-4365-bdfc-fe6df95bab54;77781370-a881-48be-a13e-871b97c58c38;a1a4c901-7400-490f-8357-9db439f7dfee;a1fc3780-83d6-4133-9ed0-6fa6f7fffbd2;79205c59-28cb-4630-bd62-bf070ba732b0;2563a6d6-5f45-46c5-8698-e572a35f100b,NULL,Seminar,"David Lowe, Ursula Johnston, Clark Sargent, Kieran Laird, Rocio de la Cruz, Jonathan Chamberlain, Bernardine Adkins",London,71,GWLG.Events,NULL,~/getmedia/5d57b23c-f4d3-44e3-a08e-7ee56360fd71/thinkhouse-snr-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/27fda93c-8849-4d7e-a292-bcc5eb1e7896/thinkhouse-snr-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,9fbe191e-3bcf-45de-a2ba-338bb194fc9d,NULL,NULL,NULL,NULL,NULL,NULL,NULL
193,/Events/2020/ThinkHouse-Foundations-Spring-Seminar-2020-London,en-GB,F1C81DD5-6245-4C2A-B24F-91A71F94B6D8,ThinkHouse Foundations Spring Seminar 2020 London,ThinkHouse Foundations Spring Seminar 2020 London,"Supporting the development of paralegals, trainees and lawyers of up to five years' PQE by providing valuable knowledge and guidance together with practical tips.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,05-05-2020 15:45,05-05-2020 15:45,09:00,13:30,GMT,0,4,"<p><strong>ThinkHouse Foundations runs exclusively for paralegals, trainees and lawyers of up to five years&#39; PQE.</strong></p>

<p>Join us at our upcoming spring seminar for an opportunity to network with your peers and receive some valuable insight and training on the latest legal developments and current hot-topics.</p>

<p>Once again, we will be combining our popular legal sessions with a &#39;soft skills&#39; workshop, taking a closer look at:</p>

<h2>Protecting privilege - practical tips</h2>

<p>With the law on Legal Professional Privilege in a state of flux, there have never been more pitfalls for practitioners to avoid. Alex Wrixon will summarise the impact of the recent Court of Appeal decisions in CAA v Jet2.com and West Ham United v E20 and provide practical tips to in-house counsel for maintaining privilege&#39;s invaluable protection.</p>

<h2>A New Era for Environmental Law</h2>

<p>Nick Harding will provide an update on the latest changes in the ever-changing field of environmental law and explain why sustainability and climate change should be one of the top issues facing in-house counsel.</p>

<h2>Standing out from the crowd</h2>

<p>What do you want to be known for in your role and how can you influence this?</p>

<p>This practical and highly engaging session will equip you with the tools you need to convey your legal knowledge in a way that has you stand out from the crowd. Executive coach and trainer Alicia Sutton will demystify how to make a great first impression, build rapport and enhance your personal impact.</p>
","<p>This event is free of charge.</p>

<p>This event will run for four hours. Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession.<br />
Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.<br />
&nbsp;</p>
",NULL,16-03-2020 16:04,mailto:thinkhouse@gowlingwlgmail.com?subject=ThinkHouse Foundations Spring Seminar 2020,NULL,Express interest in this event,9FBE191E-3BCF-45DE-A2BA-338BB194FC9D,de517572-4373-4b36-844b-18be93f6f9bc;cbbbf9eb-a169-4053-8043-7085cfb8fd4a;3fc2ca8c-9d19-44ba-a3a9-ad1ecb11e900;f1e960f5-8231-4c56-b7bf-9898ebb538c5;06cecb4c-c959-4674-9047-d5d8ee8c673c;2cd1b5c0-8992-4c92-b8e8-d65d8b86dbed;5ad41b49-d460-489a-95b9-84c854eda6f1;a929915c-1d1f-4e9c-8c8b-f34a30e2ab4e;df411e0b-2c62-4a68-8456-2c7c1dd0b4da;049c8249-7ff3-4ee3-a439-590f45fd5cff;c0b8c1a8-73eb-4122-972f-dc5df852f68d;dede4518-e78c-4b48-a143-a2338be5d0ac;59be9dcd-e5f0-43e4-9d50-442a658eda18;0357076d-2635-451a-8d67-ec01f9f3082b;cdfc9b50-74c2-4af5-9508-342935f81ccd,NULL,a143cbfd-d333-42a0-89a6-7287894464f1,73e21e2c-c353-4385-b087-4e589f60a3e4;9c5d0eeb-13c2-4753-9e53-4df6072318a3;6965a192-e42d-4e06-af1e-a4ebb072b416;ca67aa19-bd53-48e1-97b2-b3dec72a50c8,NULL,Seminar,"Alexander Wrixon, Nick Harding, Emma Bufton, Tom Cox",London,71,GWLG.Events,NULL,~/getmedia/5c73cf2c-5ac2-465b-9dff-9377774e4d9b/thinkhouse-foundations-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/a1bd54ac-e5a3-4c45-8585-8ccbdce9e524/thinkhouse-foundations-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,9fbe191e-3bcf-45de-a2ba-338bb194fc9d,NULL,NULL,NULL,NULL,NULL,NULL,NULL
194,/Events/2020/ThinkHouse-Foundations-Spring-Seminar-Birmingham,en-GB,CFA6048D-2DBA-403F-98F9-B7BE9C47C3F5,ThinkHouse Foundations Spring Seminar Birmingham,ThinkHouse Foundations Spring Seminar 2020 Birmingham,"Supporting the development of paralegals, trainees and lawyers of up to five years' PQE by providing valuable knowledge and guidance together with practical tips.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,12-05-2020 16:06,12-05-2020 16:07,09:00,13:30,GMT,0,4,"<p><strong>ThinkHouse Foundations runs exclusively for paralegals, trainees and lawyers of up to five years&#39; PQE.</strong></p>

<p>Join us at our upcoming spring seminar for an opportunity to network with your peers and receive some valuable insight and training on the latest legal developments and current hot-topics.</p>

<p>Once again, we will be combining our popular legal sessions with a &#39;soft skills&#39; workshop, taking a closer look at:</p>

<h2>Protecting privilege - practical tips</h2>

<p>With the law on Legal Professional Privilege in a state of flux, there have never been more pitfalls for practitioners to avoid. Alex Wrixon will summarise the impact of the recent Court of Appeal decisions in CAA v Jet2.com and West Ham United v E20 and provide practical tips to in-house counsel for maintaining privilege&#39;s invaluable protection.</p>

<h2>A New Era for Environmental Law</h2>

<p>Nick Harding will provide an update on the latest changes in the ever-changing field of environmental law and explain why sustainability and climate change should be one of the top issues facing in-house counsel.</p>

<h2>Standing out from the crowd</h2>

<p>What do you want to be known for in your role and how can you influence this?</p>

<p>This practical and highly engaging session will equip you with the tools you need to convey your legal knowledge in a way that has you stand out from the crowd. Executive coach and trainer Alicia Sutton will demystify how to make a great first impression, build rapport and enhance your personal impact.</p>
","<p>This event is free of charge.</p>

<p>This event will run for four hours. Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession.<br />
Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,16-03-2020 16:07,mailto:thinkhouse@gowlingwlgmail.com?subject=ThinkHouse Foundations Spring Seminar 2020,NULL,Express interest in this event,58076178-DA60-4AB6-A07C-EF250971EBF7,de517572-4373-4b36-844b-18be93f6f9bc;cbbbf9eb-a169-4053-8043-7085cfb8fd4a;3fc2ca8c-9d19-44ba-a3a9-ad1ecb11e900;f1e960f5-8231-4c56-b7bf-9898ebb538c5;06cecb4c-c959-4674-9047-d5d8ee8c673c;2cd1b5c0-8992-4c92-b8e8-d65d8b86dbed;5ad41b49-d460-489a-95b9-84c854eda6f1;a929915c-1d1f-4e9c-8c8b-f34a30e2ab4e;df411e0b-2c62-4a68-8456-2c7c1dd0b4da;049c8249-7ff3-4ee3-a439-590f45fd5cff;c0b8c1a8-73eb-4122-972f-dc5df852f68d;dede4518-e78c-4b48-a143-a2338be5d0ac;59be9dcd-e5f0-43e4-9d50-442a658eda18;0357076d-2635-451a-8d67-ec01f9f3082b;cdfc9b50-74c2-4af5-9508-342935f81ccd,NULL,a143cbfd-d333-42a0-89a6-7287894464f1,73e21e2c-c353-4385-b087-4e589f60a3e4;9c5d0eeb-13c2-4753-9e53-4df6072318a3;6965a192-e42d-4e06-af1e-a4ebb072b416;ca67aa19-bd53-48e1-97b2-b3dec72a50c8,NULL,Seminar,"Alexander Wrixon, Nick Harding, Emma Bufton, Tom Cox",Birmingham,70,GWLG.Events,NULL,~/getmedia/5c73cf2c-5ac2-465b-9dff-9377774e4d9b/thinkhouse-foundations-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/a1bd54ac-e5a3-4c45-8585-8ccbdce9e524/thinkhouse-foundations-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,58076178-da60-4ab6-a07c-ef250971ebf7,NULL,NULL,NULL,NULL,NULL,NULL,NULL
195,/Events/2020/The-current-trajectory-of-the-Pensions-Regulator,en-GB,B9AA31A6-4CA0-42C0-B2F6-12935A4E107D,The current trajectory of the Pensions Regulator,The current trajectory of the Pensions Regulator,"In this joint webinar, experts from Gowling WLG and First Actuarial will discuss the current trajectory of the Pensions Regulator.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,35:35.0,35:42.0,13:00,13:45,BST,0,NULL,"<p>In this joint webinar, experts from Gowling WLG and First Actuarial will discuss the current trajectory of the Pensions Regulator, with a particular focus on:</p>

<ul>
	<li>the Pensions Regulator&#39;s direction of travel over recent years;</li>
	<li>&quot;clearer, quicker, tougher&quot; - the Pensions Regulator&#39;s 2019 funding statement, and how that is impacting in practice on scheme sponsors and trustees of occupational pension schemes;</li>
	<li>recent themes and case study examples from both employers and trustees&#39; perspectives; and</li>
	<li>practical steps for employees and trustees.</li>
</ul>

<p>The webinar will be presented by Liz Gane and Liz Wood who are both senior members of Gowling WLG&#39;s pensions team, along with Marcos Abreu, a senior actuary from First Actuarial.</p>

<p>The speakers will draw on their own and their firms&#39; extensive experience of advising employers and trustees on pensions issues, to highlight the key factors to be aware of from case studies involving the Pensions Regulator.</p>

<p>The webinar will run from 1:00pm to 1:45pm, with the opportunity for attendees to ask questions during the webinar.</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,28:32.0,https://reaction.gowlingwlg.com/reaction/RSGenPage.asp?RSID=g41GM7-v76t0bH4izow3-QoKZ7YUcgMhCfgp8kfuqiM,NULL,Register for this webinar,C41373B4-86B9-4F74-8894-0B0BB7DDBD18,NULL,a19c4c5e-c05a-4fa5-95aa-c5a274279d8c,NULL,ba2d9a11-808e-48c9-aec4-0c9d2ef8b403;78b949bf-8838-4a2c-aa74-aa3ad35e87e3,NULL,Webinar,NULL,Online event,694,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
196,/Events/2020/ThinkHouse-IT-Masterclass-Birmingham,en-GB,A42183E2-F97D-4EF5-B420-E11C0FF57383,ThinkHouse IT Masterclass - Birmingham,ThinkHouse IT Masterclass - Birmingham,"Providing GCs, Heads of Legal and senior in-house lawyers with timely, topical and practical legal advice on topics related to data protection, cyber security and other IT challenges.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,09-06-2020 13:20,09-06-2020 13:20,09:00,13:30,BST,0,NULL,"<p>Providing GCs, Heads of Legal and senior in-house lawyers with timely, topical and practical legal advice on cyber insurance, 5G, cloud computing and data centres.</p>

<p>Full details of this event to be confirmed shortly.</p>
","<div>
<p>This event is free of charge.</p>

<p>This event will run for four hours. Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession.</p>

<p>Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
</div>
",NULL,05-06-2020 17:00,mailto:thinkhouse@gowlingwlgmail.com?subject=ThinkHouse IT Masterclass,NULL,Express interest in this event,58076178-DA60-4AB6-A07C-EF250971EBF7,de517572-4373-4b36-844b-18be93f6f9bc;cbbbf9eb-a169-4053-8043-7085cfb8fd4a;3fc2ca8c-9d19-44ba-a3a9-ad1ecb11e900;f1e960f5-8231-4c56-b7bf-9898ebb538c5;06cecb4c-c959-4674-9047-d5d8ee8c673c;2cd1b5c0-8992-4c92-b8e8-d65d8b86dbed;5ad41b49-d460-489a-95b9-84c854eda6f1;a929915c-1d1f-4e9c-8c8b-f34a30e2ab4e;df411e0b-2c62-4a68-8456-2c7c1dd0b4da;049c8249-7ff3-4ee3-a439-590f45fd5cff;c0b8c1a8-73eb-4122-972f-dc5df852f68d;dede4518-e78c-4b48-a143-a2338be5d0ac;59be9dcd-e5f0-43e4-9d50-442a658eda18;0357076d-2635-451a-8d67-ec01f9f3082b;cdfc9b50-74c2-4af5-9508-342935f81ccd,NULL,a143cbfd-d333-42a0-89a6-7287894464f1,NULL,NULL,Seminar,NULL,NULL,NULL,GWLG.Events,NULL,~/getmedia/5d57b23c-f4d3-44e3-a08e-7ee56360fd71/thinkhouse-snr-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/27fda93c-8849-4d7e-a292-bcc5eb1e7896/thinkhouse-snr-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,58076178-da60-4ab6-a07c-ef250971ebf7,"Automotive, Aviation, Aerospace & Defence, Construction & Engineering, Energy, Financial Institutions & Services, Food & Beverage, Government Contracting & Public Sector , Health & Care, Infrastructure, Life Sciences, Natural Resources, Nuclear, Real Estate, Retail, Leisure & Hotels, Tech",NULL,ThinkHouse,NULL,NULL,NULL,NULL
197,/Events/2020/ThinkHouse-IT-Masterclass-London,en-GB,59F60D15-2B15-4BC0-AC99-9B07B5D7E922,ThinkHouse IT Masterclass - London,ThinkHouse IT Masterclass - London,"Providing GCs, Heads of Legal and senior in-house lawyers with timely, topical and practical legal advice on topics related to data protection, cyber security and other IT challenges.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,11-06-2020 13:33,11-06-2020 13:33,09:00,13:30,BST,0,NULL,"<p><span style=""display: inline !important; float: none; background-color: transparent; color: rgb(51, 51, 51); cursor: text; font-family: sans-serif,Arial,Verdana,&quot;Trebuchet MS&quot;; font-size: 13px; font-style: normal; font-variant: normal; font-weight: 400; letter-spacing: normal; line-height: 20.8px; orphans: 2; text-align: left; text-decoration: none; text-indent: 0px; text-transform: none; -webkit-text-stroke-width: 0px; white-space: normal; word-spacing: 0px;"">Providing GCs, Heads of Legal and senior in-house lawyers with timely, topical and practical legal advice on cyber insurance, 5G, cloud computing and data centres.</span></p>

<p>Full details of this event to be confirmed shortly.<br />
&nbsp;</p>
","<p>This event is free of charge.</p>

<p>This event will run for four hours. Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession.</p>

<p>Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,09-12-2019 17:00,mailto:thinkhouse@gowlingwlgmail.com?subject=ThinkHouse IT Masterclass,NULL,Express interest in this event,9FBE191E-3BCF-45DE-A2BA-338BB194FC9D,de517572-4373-4b36-844b-18be93f6f9bc;cbbbf9eb-a169-4053-8043-7085cfb8fd4a;3fc2ca8c-9d19-44ba-a3a9-ad1ecb11e900;f1e960f5-8231-4c56-b7bf-9898ebb538c5;06cecb4c-c959-4674-9047-d5d8ee8c673c;2cd1b5c0-8992-4c92-b8e8-d65d8b86dbed;5ad41b49-d460-489a-95b9-84c854eda6f1;a929915c-1d1f-4e9c-8c8b-f34a30e2ab4e;df411e0b-2c62-4a68-8456-2c7c1dd0b4da;049c8249-7ff3-4ee3-a439-590f45fd5cff;c0b8c1a8-73eb-4122-972f-dc5df852f68d;dede4518-e78c-4b48-a143-a2338be5d0ac;59be9dcd-e5f0-43e4-9d50-442a658eda18;0357076d-2635-451a-8d67-ec01f9f3082b;cdfc9b50-74c2-4af5-9508-342935f81ccd,NULL,a143cbfd-d333-42a0-89a6-7287894464f1,NULL,NULL,Seminar,NULL,NULL,NULL,GWLG.Events,NULL,~/getmedia/5d57b23c-f4d3-44e3-a08e-7ee56360fd71/thinkhouse-snr-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/27fda93c-8849-4d7e-a292-bcc5eb1e7896/thinkhouse-snr-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,9fbe191e-3bcf-45de-a2ba-338bb194fc9d,NULL,NULL,NULL,NULL,NULL,NULL,NULL
198,/Events/2020/ThinkHouse-Brands-Design-Masterclass,en-GB,AFB88D0B-9A41-46D7-936E-29DAE3170B7B,ThinkHouse Brands & Design Masterclass,ThinkHouse Brands & Design Masterclass,"Guiding in-house counsel through recent developments in brands and designs law and practice, giving practical tips and guidance on how to get the best from your brand and design portfolio",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,21-05-2020 14:42,21-05-2020 14:42,NULL,NULL,GMT,0,NULL,"<p>Guiding in-house counsel through recent developments in brands and designs law and practice, giving practical tips and guidance on how to get the best from your brand and design portfolio.</p>

<p>Full details of this event to be confirmed shortly.</p>
","<p>This event is free of charge.</p>

<p>&nbsp;Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession.</p>

<p>Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,16-03-2020 16:02,mailto:thinkhouse@gowlingwlgmail.com?subject=ThinkHouse Brands & Design Masterclass,NULL,Express interest in this event,9FBE191E-3BCF-45DE-A2BA-338BB194FC9D,de517572-4373-4b36-844b-18be93f6f9bc;cbbbf9eb-a169-4053-8043-7085cfb8fd4a;3fc2ca8c-9d19-44ba-a3a9-ad1ecb11e900;f1e960f5-8231-4c56-b7bf-9898ebb538c5;06cecb4c-c959-4674-9047-d5d8ee8c673c;2cd1b5c0-8992-4c92-b8e8-d65d8b86dbed;5ad41b49-d460-489a-95b9-84c854eda6f1;a929915c-1d1f-4e9c-8c8b-f34a30e2ab4e;df411e0b-2c62-4a68-8456-2c7c1dd0b4da;049c8249-7ff3-4ee3-a439-590f45fd5cff;c0b8c1a8-73eb-4122-972f-dc5df852f68d;dede4518-e78c-4b48-a143-a2338be5d0ac;59be9dcd-e5f0-43e4-9d50-442a658eda18;0357076d-2635-451a-8d67-ec01f9f3082b;cdfc9b50-74c2-4af5-9508-342935f81ccd,08b9a44c-bb26-4255-9779-296a124fcbee,a143cbfd-d333-42a0-89a6-7287894464f1;471a00a2-e109-4e85-8152-8a92a4982d19,NULL,NULL,Seminar,NULL,NULL,NULL,GWLG.Events,NULL,~/getmedia/d2b9ca59-d716-4c60-abb1-472dd7eeec23/thinkhouse-primary-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/0363a899-4ad3-4e9e-a428-fbf0ebf9f31d/thinkhouse-primary-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
199,/Events/2020/ThinkHouse-Autumn-Seminar-2020-Birmingham,en-GB,724F6B41-8628-4A21-8862-0823FE41A094,ThinkHouse Autumn Seminar 2020 - Birmingham,ThinkHouse Autumn Seminar 2020 - Birmingham,"Providing GCs, Heads of Legal and senior in-house lawyers with timely, topical and practical legal advice on a variety of topics.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,17-09-2020 11:44,17-09-2020 11:50,09:00,13:30,BST,0,NULL,"<p>Providing GCs, Heads of Legal and senior in-house lawyers with timely, topical and practical legal advice on a variety of topics.</p>

<p><span style=""display: inline !important; float: none; background-color: transparent; color: rgb(51, 51, 51); cursor: text; font-family: sans-serif,Arial,Verdana,&quot;Trebuchet MS&quot;; font-size: 13px; font-style: normal; font-variant: normal; font-weight: 400; letter-spacing: normal; line-height: 20.8px; orphans: 2; text-align: left; text-decoration: none; text-indent: 0px; text-transform: none; -webkit-text-stroke-width: 0px; white-space: normal; word-spacing: 0px;"">Full details of this event to be confirmed shortly.</span></p>
","<p>This event is free of charge.</p>

<p>This event will run for four hours. Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession.<br />
Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>

<p>&nbsp;</p>
",NULL,11-09-2020 17:00,mailto:thinkhouse@gowlingwlgmail.com?subject=ThinkHouse Autumn Seminar 2020,NULL,Express interest in this event,58076178-DA60-4AB6-A07C-EF250971EBF7,de517572-4373-4b36-844b-18be93f6f9bc;cbbbf9eb-a169-4053-8043-7085cfb8fd4a;3fc2ca8c-9d19-44ba-a3a9-ad1ecb11e900;f1e960f5-8231-4c56-b7bf-9898ebb538c5;06cecb4c-c959-4674-9047-d5d8ee8c673c;2cd1b5c0-8992-4c92-b8e8-d65d8b86dbed;5ad41b49-d460-489a-95b9-84c854eda6f1;a929915c-1d1f-4e9c-8c8b-f34a30e2ab4e;df411e0b-2c62-4a68-8456-2c7c1dd0b4da;049c8249-7ff3-4ee3-a439-590f45fd5cff;c0b8c1a8-73eb-4122-972f-dc5df852f68d;dede4518-e78c-4b48-a143-a2338be5d0ac;59be9dcd-e5f0-43e4-9d50-442a658eda18;0357076d-2635-451a-8d67-ec01f9f3082b;cdfc9b50-74c2-4af5-9508-342935f81ccd,NULL,a143cbfd-d333-42a0-89a6-7287894464f1,NULL,NULL,Seminar,NULL,NULL,NULL,GWLG.Events,NULL,~/getmedia/5d57b23c-f4d3-44e3-a08e-7ee56360fd71/thinkhouse-snr-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/27fda93c-8849-4d7e-a292-bcc5eb1e7896/thinkhouse-snr-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,58076178-da60-4ab6-a07c-ef250971ebf7,NULL,NULL,NULL,NULL,NULL,NULL,NULL
200,/Events/2020/ThinkHouse-Foundations-Autumn-Seminar-2020-London,en-GB,CBEDECAE-ED0D-4B53-B260-676B2574DA7C,ThinkHouse Foundations Autumn Seminar 2020 London,ThinkHouse Foundations Autumn Seminar 2020 London,"Supporting the development of paralegals, trainees and lawyers of up to five years' PQE by providing valuable knowledge and guidance together with practical tips.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,08-10-2020 15:45,08-10-2020 15:45,09:00,13:00,GMT,0,NULL,"<div>Supporting the development of paralegals, trainees and lawyers of up to five years&#39; PQE by providing valuable knowledge and guidance together with practical tips.</div>

<div>&nbsp;</div>

<div>Full details of this event to be confirmed shortly.</div>
","<p>This event is free of charge.</p>

<p>This event will run for four hours. Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession.<br />
Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.<br />
&nbsp;</p>
",NULL,01-05-2020 17:00,mailto:thinkhouse@gowlingwlgmail.com?subject=ThinkHouse Foundations Autumn Seminar 2020,NULL,Express interest in this event,9FBE191E-3BCF-45DE-A2BA-338BB194FC9D,de517572-4373-4b36-844b-18be93f6f9bc;cbbbf9eb-a169-4053-8043-7085cfb8fd4a;3fc2ca8c-9d19-44ba-a3a9-ad1ecb11e900;f1e960f5-8231-4c56-b7bf-9898ebb538c5;06cecb4c-c959-4674-9047-d5d8ee8c673c;2cd1b5c0-8992-4c92-b8e8-d65d8b86dbed;5ad41b49-d460-489a-95b9-84c854eda6f1;a929915c-1d1f-4e9c-8c8b-f34a30e2ab4e;df411e0b-2c62-4a68-8456-2c7c1dd0b4da;049c8249-7ff3-4ee3-a439-590f45fd5cff;c0b8c1a8-73eb-4122-972f-dc5df852f68d;dede4518-e78c-4b48-a143-a2338be5d0ac;59be9dcd-e5f0-43e4-9d50-442a658eda18;0357076d-2635-451a-8d67-ec01f9f3082b;cdfc9b50-74c2-4af5-9508-342935f81ccd,NULL,a143cbfd-d333-42a0-89a6-7287894464f1,NULL,NULL,Seminar,NULL,NULL,NULL,GWLG.Events,NULL,~/getmedia/5c73cf2c-5ac2-465b-9dff-9377774e4d9b/thinkhouse-foundations-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/a1bd54ac-e5a3-4c45-8585-8ccbdce9e524/thinkhouse-foundations-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,9fbe191e-3bcf-45de-a2ba-338bb194fc9d,"Automotive, Aviation, Aerospace & Defence, Construction & Engineering, Energy, Financial Institutions & Services, Food & Beverage, Government Contracting & Public Sector , Health & Care, Infrastructure, Life Sciences, Natural Resources, Nuclear, Real Estate, Retail, Leisure & Hotels, Tech",NULL,ThinkHouse,NULL,NULL,NULL,NULL
201,/Events/2020/ThinkHouse-Foundations-Autumn-Seminar-Birmingham,en-GB,ABF34856-C149-412B-8604-F058030B8484,ThinkHouse Foundations Autumn Seminar Birmingham,ThinkHouse Foundations Autumn Seminar 2020 Birmingham,"Supporting the development of paralegals, trainees and lawyers of up to five years' PQE by providing valuable knowledge and guidance together with practical tips.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,06-10-2020 16:06,06-10-2020 16:07,09:00,13:00,GMT,0,NULL,"<div>Supporting the development of paralegals, trainees and lawyers of up to five years&#39; PQE by providing valuable knowledge and guidance together with practical tips.</div>

<div>&nbsp;</div>

<div>Full details of this event to be confirmed shortly.</div>
","<p>This event is free of charge.</p>

<p>This event will run for four hours. Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession.<br />
Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.<br />
&nbsp;</p>
",NULL,08-05-2020 17:00,mailto:thinkhouse@gowlingwlgmail.com?subject=ThinkHouse Foundations Spring Seminar 2020,NULL,Express interest in this event,58076178-DA60-4AB6-A07C-EF250971EBF7,de517572-4373-4b36-844b-18be93f6f9bc;cbbbf9eb-a169-4053-8043-7085cfb8fd4a;3fc2ca8c-9d19-44ba-a3a9-ad1ecb11e900;f1e960f5-8231-4c56-b7bf-9898ebb538c5;06cecb4c-c959-4674-9047-d5d8ee8c673c;2cd1b5c0-8992-4c92-b8e8-d65d8b86dbed;5ad41b49-d460-489a-95b9-84c854eda6f1;a929915c-1d1f-4e9c-8c8b-f34a30e2ab4e;df411e0b-2c62-4a68-8456-2c7c1dd0b4da;049c8249-7ff3-4ee3-a439-590f45fd5cff;c0b8c1a8-73eb-4122-972f-dc5df852f68d;dede4518-e78c-4b48-a143-a2338be5d0ac;59be9dcd-e5f0-43e4-9d50-442a658eda18;0357076d-2635-451a-8d67-ec01f9f3082b;cdfc9b50-74c2-4af5-9508-342935f81ccd,NULL,a143cbfd-d333-42a0-89a6-7287894464f1,NULL,NULL,Seminar,NULL,NULL,NULL,GWLG.Events,NULL,~/getmedia/5c73cf2c-5ac2-465b-9dff-9377774e4d9b/thinkhouse-foundations-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/a1bd54ac-e5a3-4c45-8585-8ccbdce9e524/thinkhouse-foundations-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,58076178-da60-4ab6-a07c-ef250971ebf7,"Automotive, Aviation, Aerospace & Defence, Construction & Engineering, Energy, Financial Institutions & Services, Food & Beverage, Government Contracting & Public Sector , Health & Care, Infrastructure, Life Sciences, Natural Resources, Nuclear, Real Estate, Retail, Leisure & Hotels, Tech",NULL,ThinkHouse,NULL,NULL,NULL,NULL
202,/Events/2020/ThinkHouse-Autumn-Seminar-2020-London,en-GB,773E1EBF-894C-4DF9-82BF-6B1D37164C90,ThinkHouse Autumn Seminar 2020 - London,ThinkHouse Autumn Seminar 2020 - London,"Providing GCs, Heads of Legal and senior in-house lawyers with timely, topical and practical legal advice on a variety of topics.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,24-09-2020 15:24,24-09-2020 15:24,09:00,13:30,GMT,0,NULL,"<p>Providing GCs, Heads of Legal and senior in-house lawyers with timely, topical and practical legal advice on a variety of topics.</p>

<p>Full details of this event to be confirmed shortly.</p>
","<p>This event is free of charge.</p>

<p style=""background-color: transparent; color: rgb(51, 51, 51); cursor: text; font-family: sans-serif,Arial,Verdana,&amp;quot;trebuchet ms&amp;quot;; font-size: 13px; font-style: normal; font-variant: normal; font-weight: 400; letter-spacing: normal; line-height: 20.8px; margin-bottom: 13px; margin-left: 0px; margin-right: 0px; margin-top: 13px; orphans: 2; text-align: left; text-decoration: none; text-indent: 0px; text-transform: none; -webkit-text-stroke-width: 0px; white-space: normal; word-spacing: 0px;"">This event will run for four hours. Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession.<br style=""background-color: transparent; color: rgb(51, 51, 51); cursor: text; font-family: sans-serif,Arial,Verdana,&amp;quot;trebuchet ms&amp;quot;; font-size: 13px; line-height: 20.8px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;"" />
Please do get in touch if you have any further queries about this event and CPD.</p>

<p style=""background-color: transparent; color: rgb(51, 51, 51); cursor: text; font-family: sans-serif,Arial,Verdana,&amp;quot;trebuchet ms&amp;quot;; font-size: 13px; font-style: normal; font-variant: normal; font-weight: 400; letter-spacing: normal; line-height: 20.8px; margin-bottom: 13px; margin-left: 0px; margin-right: 0px; margin-top: 13px; orphans: 2; text-align: left; text-decoration: none; text-indent: 0px; text-transform: none; -webkit-text-stroke-width: 0px; white-space: normal; word-spacing: 0px;"">Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,18-09-2020 17:00,mailto:thinkhouse@gowlingwlgmail.com?subject=ThinkHouse Autumn Seminar 2020,NULL,Express interest this event,9FBE191E-3BCF-45DE-A2BA-338BB194FC9D,de517572-4373-4b36-844b-18be93f6f9bc;cbbbf9eb-a169-4053-8043-7085cfb8fd4a;3fc2ca8c-9d19-44ba-a3a9-ad1ecb11e900;f1e960f5-8231-4c56-b7bf-9898ebb538c5;06cecb4c-c959-4674-9047-d5d8ee8c673c;2cd1b5c0-8992-4c92-b8e8-d65d8b86dbed;5ad41b49-d460-489a-95b9-84c854eda6f1;a929915c-1d1f-4e9c-8c8b-f34a30e2ab4e;df411e0b-2c62-4a68-8456-2c7c1dd0b4da;049c8249-7ff3-4ee3-a439-590f45fd5cff;c0b8c1a8-73eb-4122-972f-dc5df852f68d;dede4518-e78c-4b48-a143-a2338be5d0ac;59be9dcd-e5f0-43e4-9d50-442a658eda18;0357076d-2635-451a-8d67-ec01f9f3082b;cdfc9b50-74c2-4af5-9508-342935f81ccd,NULL,a143cbfd-d333-42a0-89a6-7287894464f1,NULL,NULL,Seminar,NULL,NULL,NULL,GWLG.Events,NULL,~/getmedia/5d57b23c-f4d3-44e3-a08e-7ee56360fd71/thinkhouse-snr-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/27fda93c-8849-4d7e-a292-bcc5eb1e7896/thinkhouse-snr-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,9fbe191e-3bcf-45de-a2ba-338bb194fc9d,NULL,NULL,NULL,NULL,NULL,NULL,NULL
203,/Events/2020/ThinkHouse-Public-Sector-Seminar-2020-Birmingham,en-GB,508A6ABF-7FC4-42C5-822E-2E4B0924D2B9,ThinkHouse Public Sector Seminar 2020 - Birmingham,ThinkHouse Public Sector Seminar 2020 - Birmingham,"Providing GCs, Heads of Legal and senior in-house lawyers with timely, topical and practical legal advice on a variety of topics.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,12-11-2020 11:44,12-11-2020 11:50,09:00,13:30,GMT,0,NULL,"<p>Providing content specifically tailored to the needs of GCs and Heads of Legal working in government organisations and their affiliates.</p>

<p><span style=""display: inline !important; float: none; background-color: transparent; color: rgb(51, 51, 51); cursor: text; font-family: sans-serif,Arial,Verdana,&quot;Trebuchet MS&quot;; font-size: 13px; font-style: normal; font-variant: normal; font-weight: 400; letter-spacing: normal; line-height: 20.8px; orphans: 2; text-align: left; text-decoration: none; text-indent: 0px; text-transform: none; -webkit-text-stroke-width: 0px; white-space: normal; word-spacing: 0px;"">Full details of this event to be confirmed shortly.</span></p>
","<p>This event is free of charge.</p>

<p>This event will run for four hours. Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession.<br />
Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>

<p>&nbsp;</p>
",NULL,06-11-2020 17:00,mailto:thinkhouse@gowlingwlgmail.com?subject=ThinkHouse Public Sector Seminar 2020,NULL,Express interest in this event,58076178-DA60-4AB6-A07C-EF250971EBF7,5ad41b49-d460-489a-95b9-84c854eda6f1;a929915c-1d1f-4e9c-8c8b-f34a30e2ab4e;df411e0b-2c62-4a68-8456-2c7c1dd0b4da;3fc2ca8c-9d19-44ba-a3a9-ad1ecb11e900,NULL,a143cbfd-d333-42a0-89a6-7287894464f1,NULL,NULL,Seminar,NULL,NULL,NULL,GWLG.Events,NULL,~/getmedia/5d57b23c-f4d3-44e3-a08e-7ee56360fd71/thinkhouse-snr-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/27fda93c-8849-4d7e-a292-bcc5eb1e7896/thinkhouse-snr-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,58076178-da60-4ab6-a07c-ef250971ebf7,NULL,NULL,NULL,NULL,NULL,NULL,NULL
204,/Events/2020/ThinkHouse-Public-Sector-Seminar-2020-London,en-GB,5DAB0F26-C8B0-40FA-9FAB-833AB284D191,ThinkHouse Public Sector Seminar 2020 - London,ThinkHouse Public Sector Seminar 2020 - London,"Providing GCs, Heads of Legal and senior in-house lawyers with timely, topical and practical legal advice on a variety of topics.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,19-11-2020 15:24,19-11-2020 15:24,09:00,13:30,GMT,0,NULL,"<p>Providing content specifically tailored to the needs of GCs and Heads of Legal working in government organisations and their affiliates.</p>

<p>Full details of this event to be confirmed shortly.</p>
","<p>This event is free of charge.</p>

<p style=""background-color: transparent; color: rgb(51, 51, 51); cursor: text; font-family: sans-serif,Arial,Verdana,&amp;quot;trebuchet ms&amp;quot;; font-size: 13px; font-style: normal; font-variant: normal; font-weight: 400; letter-spacing: normal; line-height: 20.8px; margin-bottom: 13px; margin-left: 0px; margin-right: 0px; margin-top: 13px; orphans: 2; text-align: left; text-decoration: none; text-indent: 0px; text-transform: none; -webkit-text-stroke-width: 0px; white-space: normal; word-spacing: 0px;"">This event will run for four hours. Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession.<br style=""background-color: transparent; color: rgb(51, 51, 51); cursor: text; font-family: sans-serif,Arial,Verdana,&amp;quot;trebuchet ms&amp;quot;; font-size: 13px; line-height: 20.8px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;"" />
Please do get in touch if you have any further queries about this event and CPD.</p>

<p style=""background-color: transparent; color: rgb(51, 51, 51); cursor: text; font-family: sans-serif,Arial,Verdana,&amp;quot;trebuchet ms&amp;quot;; font-size: 13px; font-style: normal; font-variant: normal; font-weight: 400; letter-spacing: normal; line-height: 20.8px; margin-bottom: 13px; margin-left: 0px; margin-right: 0px; margin-top: 13px; orphans: 2; text-align: left; text-decoration: none; text-indent: 0px; text-transform: none; -webkit-text-stroke-width: 0px; white-space: normal; word-spacing: 0px;"">Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,13-11-2020 17:00,mailto:thinkhouse@gowlingwlgmail.com?subject=ThinkHouse Public Sector Seminar 2020,NULL,Express interest this event,9FBE191E-3BCF-45DE-A2BA-338BB194FC9D,5ad41b49-d460-489a-95b9-84c854eda6f1;a929915c-1d1f-4e9c-8c8b-f34a30e2ab4e;df411e0b-2c62-4a68-8456-2c7c1dd0b4da;3fc2ca8c-9d19-44ba-a3a9-ad1ecb11e900,NULL,a143cbfd-d333-42a0-89a6-7287894464f1,NULL,NULL,Seminar,NULL,NULL,NULL,GWLG.Events,NULL,~/getmedia/5d57b23c-f4d3-44e3-a08e-7ee56360fd71/thinkhouse-snr-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/27fda93c-8849-4d7e-a292-bcc5eb1e7896/thinkhouse-snr-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,9fbe191e-3bcf-45de-a2ba-338bb194fc9d,NULL,NULL,NULL,NULL,NULL,NULL,NULL
205,/Events/2020/Tax-developments-impacting-business-in-BC,en-GB,8E44AB4F-0C67-4CFC-8AE4-754B21AC1DEF,Tax developments impacting business in BC,Tax developments impacting business in British Columbia,This session will help businesses stay up-to-date on the most pertinent federal and provincial tax changes. ,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,00:00.0,NULL,12:00 p.m.,1:00 p.m.,PST,1,This seminar is eligible for up to 1 hour toward the LSBC's CPD requirement.,"<p>Interested in learning more about the recent tax developments impacting business in BC? &nbsp;</p>

<p>On September 29, 2020, please join Gowling WLG associate <a href=""~/en/people/anita-yuk/#panel-button1"" target=""_blank""><strong>Anita Yuk</strong></a>&nbsp;for a comprehensive overview of the most pressing updates in tax legislation.&nbsp; This session will help businesses stay up-to-date on the most pertinent federal and provincial tax changes and measures.&nbsp; It will also&nbsp;outline how recent legal outcomes are impacting future business dealings.</p>

<p>If you are interested in future Insight Series events, please contact <a href=""http://riannah.reagh@gowlingwlg.com"" target=""_blank"">Riannah Reagh</a>.</p>
",NULL,NULL,00:00.0,https://sites-gowlingwlg.vuturevx.com/104/5583/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,5e7a4c28-1f41-45d6-9485-1a23041b34f6,NULL,e4ed17d0-5e95-4b52-9b2f-be5ec83fcf02,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/104/5583/landing-pages/event-registration-(blank-form).asp,Register now,GWLG.Canada,0,63387DF2-25F3-4268-9B20-2D4323F1E706,Speaker,NULL,afd10be7-206c-4f2d-9094-257d6b5e7bcc,NULL,Tax,NULL,Vancouver,NULL,NULL,NULL
206,/Events/2020/Constructive-dismissal-in-2020,en-GB,F6F3005E-89DD-4C3D-9990-B405DD4D1D91,Constructive dismissal in 2020,Constructive dismissal in 2020: Achieving 20/20 foresight,"On Jan. 30, 2020, please join Gowling WLG professionals Amy-Lynn Kosick and Jonathan Lam to learn more about the legal aspects and recent trends regarding the doctrine of constructive dismissal. ",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,30-01-2020 14:51,30-01-2019 14:51,08:00,09:30,PST,1,This seminar is eligible for up to 1 hour towards the LSBC's CPD requirement and up to 1 CPD hour towards CPHR BC & Yukon's requirement.,"<p>On Jan. 30, 2020, please join Gowling WLG professionals <strong>Amy-Lynn Kosick</strong> and <strong>Jonathan Lam</strong> to learn more about the legal aspects and recent trends regarding the doctrine of constructive dismissal.</p>

<p>During this breakfast seminar, Amy-Lynn and Jonathan will explain the circumstances that can lead a court to a finding of constructive dismissal in the workplace. They will also provide an overview of steps and procedures that employers are advised to follow when initiating proposed changes to an employee's title, compensation structure, duties, reporting structure or work location, among other terms of employment. As well, Amy-Lynn and Jonathan will discuss the increasing claims of constructive dismissal due to bullying and harassment in the workplace.</p>

<p>If you are interested in future Insight Series events, please contact <a href=""mailto:riannah.reagh@gowlingwlg.com"">Riannah Reagh</a>.</p>
","<p><em>This seminar is eligible for up to 1 hour towards the LSBC&#39;s CPD requirement and up to 1 CPD hour towards CPHR BC &amp; Yukon&#39;s requirement.</em></p>
",NULL,29-01-2020 15:13,https://sites-gowlingwlg.vuturevx.com/104/4880/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,AFD10BE7-206C-4F2D-9094-257D6B5E7BCC,NULL,d8837737-40d2-4472-8a9e-ba4101ec2105,NULL,ddc317a8-0a23-4e9e-88d7-d56bdf68612d;f79e57ed-fd34-4e0d-bdc0-86f06930c7bc,NULL,Seminar,NULL,Vancouver,68,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada,0,63387DF2-25F3-4268-9B20-2D4323F1E706,Speakers,NULL,afd10be7-206c-4f2d-9094-257d6b5e7bcc,NULL,"Employment, Labour & Equalities",NULL,Vancouver,NULL,NULL,NULL
207,/Events/2020/Developments-Intellectual-property-technology,en-GB,2422F046-FFF9-4318-8429-B9F0866EA8F8,Developments Intellectual property technology,"Developments in Intellectual Property, Tech and Privacy Law","Intellectual property, technology and privacy law are at the heart of many business’ operations and success.  Legal cases and developments in these areas can have wide-ranging effects.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,00:00.0,00:00.0,12:00 p.m.,1:00 p.m.,PST,1,1 hour,"<p>Intellectual property, technology and data privacy are at the&nbsp;heart of many business&rsquo; operations and success.&nbsp; Legal cases and developments in these areas can have wide-ranging effects.</p>

<p>Join partners <a href=""~/en/people/paul-armitage/#panel-button1"" target=""_blank""><strong>Paul Armitage</strong></a> and<strong> <a href=""~/en/people/r-nelson-godfrey/#panel-button1"" target=""_blank"">Nelson Godfrey</a></strong> on November 3, 2020, to learn about some of the recent top cases and developments affecting&nbsp;intellectual property, technology and privacy law.&nbsp; Guests will learn how these decisions and emerging trends may impact their operations.</p>

<p>If you are interested in future Insight Series events, please contact&nbsp;<a href=""mailto:riannah.reagh@gowlingwlg.com?subject=2020%20Insight%20Series"">Riannah Reagh</a>.</p>

<p><strong>CLE/CPD:</strong> This seminar is eligible for up to 1 hour toward the LSBC&#39;s CPD requirement.</p>
",NULL,NULL,21:17.0,https://sites-gowlingwlg.vuturevx.com/104/4900/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,cdfc9b50-74c2-4af5-9508-342935f81ccd,714e9c25-3dce-4dac-89a9-dd1d02f0eda6;5d5bf1f5-9750-4592-8ca8-7c4628c450ff;2ef996ea-428e-4dff-b4e3-4e43f5b3ddfb;d6cd11a8-8003-488d-91b1-32f8c4fef082,NULL,537ca4c8-995c-4dd1-86e3-d32115e70c0f;538a936e-b130-4df1-b42e-bdd98442edb4,NULL,Webinar,"Paul Armitage, R. Nelson Godfrey",Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada,0,63387DF2-25F3-4268-9B20-2D4323F1E706,Speakers,NULL,afd10be7-206c-4f2d-9094-257d6b5e7bcc,Tech,"FinTech, Information Technology, InsurTech, Technology, media, and telecoms",NULL,Vancouver,NULL,NULL,NULL
209,/Events/2020/Proteger-votre-entreprise-de-la-fraude,fr-CA,30EFAF8F-9AB7-4F97-9F30-92630B1260A3,Proteger votre entreprise de la fraude,Protéger votre entreprise de la fraude : exemples courants et meilleures pratiques,"La fraude en entreprise peut prendre de multiples visages et il est parfois difficile de la repérer. Les fraudeurs ne manquent jamais d’imagination afin de trouver de nouvelles façons de compromettre votre entreprise, mais quelles pratiques adoptez-vous afin de limiter les risques?",~/getmedia/6685f558-4ad9-4c3a-834c-365397297e9d/Conference_Fraude_Vuture_Header_FR.jpg.xml?width=600&height=180&ext=.jpg,NULL,GWLG.Conference,00:00.0,30:00.0,8 h,NULL,EST,0,NULL,"<p>La fraude en entreprise peut prendre de multiples visages et il&nbsp;est parfois difficile&nbsp;de la repérer. Les fraudeurs ne manquent jamais d&rsquo;imagination afin de trouver de nouvelles façons de compromettre votre entreprise, mais quelles pratiques adoptez-vous afin de limiter les risques?</p>

<p>Dans le cadre de cette conférence,&nbsp;Me <strong>Ronald Audette</strong> et Me <strong>Charles Daviault</strong>, vous sensibiliseront aux failles dans les pratiques internes qui permettent dans certains cas la fraude. Ils présenteront des exemples concrets et vous donneront des&nbsp;conseils afin d&#39;éviter de vous retrouver dans cette situation épineuse. Votre entreprise est déjà victime d&rsquo;une fraude? Ils aborderont&nbsp;également les mesures urgentes à prendre une fois la fraude découverte.</p>

<p>Ne manquez pas cette opportunité d&#39;échanger avec nos experts.</p>

<p><strong>Inscriptions fermées</strong><br />
Nous avons atteint le nombre d&#39;inscriptions maximales pour cette conférence. Nous vous invitons à envoyer un courriel à&nbsp;<u><a href=""mailto:julie-han.angers@gowlingwlg.com?subject=Comment%20prot%c3%a9ger%20votre%20entreprise%20contre%20la%20fraude%20-%2022%20janvier%202020"">julie-han.angers@gowlingwlg.com</a></u>&nbsp;afin d&#39;être le ou la première informé(e) si une place se libère!&nbsp;</p>

<h2>Pour nous joindre</h2>

<p>Julie-Han Angers<br />
Spécialiste, Événements<br />
<a href=""tel:+1%20514%20392-9553"" id=""lnkEventContactPhone"">T: +1 514 392-9553</a><br />
<a href=""mailto:julie-han.angers@gowlingwlg.com"" id=""lnkEventContactEmail"">julie-han.angers@gowlingwlg.com</a></p>
",NULL,NULL,00:00.0,mailto:julie-han.angers@gowlingwlg.com,NULL,Inscrivez-vous,4EEBBC16-5EC7-4186-B6BB-A7F0CF2F7CA4,NULL,6ecd1574-34c3-42ca-a28b-70a10b61221e;ccb3b009-ba81-4ff5-8e8a-9200813a2a54,NULL,0dea1395-883b-4534-a606-1a943c240748;bbce9529-822b-4e21-8875-fa89114ca44b,NULL,Conférence,NULL,Montréal,66,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,Conférenciers,NULL,4eebbc16-5ec7-4186-b6bb-a7f0cf2f7ca4,NULL,NULL,NULL,NULL,NULL,NULL,NULL
210,/Events/2020/Technology-Predictions-Roundtable,en-GB,AEE9613B-5565-455F-BF53-788FD005E6DF,Technology Predictions Roundtable,Technology Predictions Roundtable,,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,04-02-2020 08:30,04-02-2020 11:00,08:30,10:30,Local time,0,NULL,"<p><a href=""https://gowlingwlg.com/fr/people/barbara-jouffa/#panel-button1"">Barbara Jouffa</a> (Partner of the M&amp;A / Private Equity department) has the pleasure of inviting you to the Technology Predictions presentation and breakfast organized in collaboration with GP Bullhound and Erevena, taking place on Tuesday, 4 February in Paris.</p>

<p>For the 13th consecutive year, GP Bullhound reveals the top ten trends to define the technology landscape over the coming year, in its annual <em>Technology Predictions</em> report.</p>

<p>From the verticalisation of <abbr title=""artificial intelligence"">AI</abbr> to 5G battles and the rise of corporate social responsibility, GP Bullhound analyses the now, near and next of the global technology sector, mapping the trends and innovations destined to drive growth for months and years to come.</p>

<p>Please join us in Paris for networking and discussion, as Technology Predictions are presented.</p>

<p><strong>To attend, please register: <a href=""http://mailto:parisevents@gowlingwlg.com?Subject=Technology Predictions Roundtable"" target=""_blank"">parisevent@gowlingwlg.com</a></strong></p>

<h2>Programme</h2>

<p>08:30 Registration &amp; breakfast</p>

<p>09:00 Welcome remarks</p>

<p>09:10 GP Bullhound presents its Technology Predictions 2020 report</p>

<p>09:45 Fireside chat</p>

<p>10:15 Open discussion / Q&amp;A</p>
","<p>This invitation is aimed at entrepreneurs, founders and investors only. Due to limited availability we might be unable to accommodate everyone who wants to attend and places will be confirmed via email prior the event.</p>
",NULL,04-02-2020 09:46,parisevent@gowlingwlg.com,NULL,Register for this event,C34B7263-2BCC-4186-8D40-42BA73A44A76,cdfc9b50-74c2-4af5-9508-342935f81ccd,56646cda-20d7-43d4-b13c-886e1cd90c52;fc6b9a02-14ad-48cf-829a-375dc13f44ac,NULL,627cfa87-baaa-4187-a801-0423872978b6,NULL,Seminar,Barbara Jouffa,Paris,668,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml?width=1400&height=540&ext=.jpg,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.France,0,D8E342AA-7A3B-4882-9C05-DAEE703A307C,Speaker(s),NULL,c34b7263-2bcc-4186-8d40-42ba73a44a76,NULL,NULL,NULL,NULL,NULL,NULL,NULL
211,/Events/2020/Top-10-Workplace-Investigation-Cases-of-2019,en-GB,BB2A0CDB-7285-49CB-A1DC-4D404C647E72,Top 10 Workplace Investigation Cases of 2019,Top 10 Workplace Investigation Cases of 2019 – What We Learned,"Workplace investigations are more common than ever before. Employment lawyer Janice Rubin is one of the country’s most respected and sought-after practitioners in this area. Join us to hear Janice and Cory Boyd discuss the top ten workplace investigation cases overseen by her firm, Rubin Thomlinson, in the past year.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,19-02-2020 16:00,NULL,4:00 P.M.,NULL,EST,1,This program contains up to 1.5 hours of Substantive credits toward the mandatory CPD requirements of the Law Society of Ontario.,"<p>Workplace investigations are more common than ever before. Employment lawyer&nbsp;<strong>Janice Rubin</strong>&nbsp;is one of the country&rsquo;s most respected and sought-after practitioners in this area. Join us to hear Janice and Cory Boyd discuss the top ten workplace investigation cases overseen by her firm, Rubin Thomlinson, in the past year. Those cases delved into these issues &ndash; among others:&nbsp;</p>

<ul>
	<li>When is procedural fairness required in an investigation, and what elements are required</li>
	<li>What are the elements of structural independence of an internal workplace investigation department</li>
	<li>Does a respondent have a right to remain silent in the face of workplace allegations of misconduct</li>
	<li>Is an employer obliged to conduct an investigation after a complainant leaves the workplace</li>
	<li>What kinds of interim measures should employers consider when an investigation is conducted and when is an investigation &ldquo;appropriate in the circumstances&rdquo;</li>
	<li>Getting ready for Bill C-65</li>
</ul>

<h2>Agenda</h2>

<ul>
	<li><strong>4:00 p.m.&nbsp;</strong> &nbsp;Registration&nbsp;</li>
	<li><strong>4:30 p.m.&nbsp;</strong> &nbsp;Presentation and Q&amp;A</li>
	<li><strong>6:00 p.m.</strong>&nbsp; &nbsp;Networking</li>
</ul>

<h2>Moderator</h2>

<ul>
	<li><a href=""https://gowlingwlg.com/en/people/andre-poulin-denis/#panel-button1"" target=""_blank"">André Poulin-Denis</a> - Associate, Gowling WLG</li>
</ul>

<h2>Speakers</h2>

<ul>
	<li><a href=""https://rubinthomlinson.com/lawyers/janice-rubin/"" target=""_blank"">Janice Rubin</a>&nbsp;- Co-Founder &amp;&nbsp;Co-Managing Partner, Rubin Thomlinson</li>
	<li><a href=""https://rubinthomlinson.com/lawyers/cory-boyd/"" target=""_blank"">Cory Boyd</a>&nbsp;- Partner &amp; Practice Lead, Rubin Thomlinson</li>
	<li><a href=""https://gowlingwlg.com/en/people/john-peters/"" target=""_blank"">John Peters</a> - Partner, Gowling WLG</li>
</ul>
",NULL,NULL,18-02-2020 15:24,NULL,NULL,NULL,CB61C4C1-D0CF-4AA1-BA0B-5DAB5DC99393,NULL,NULL,NULL,NULL,NULL,Seminar,NULL,Ottawa,67,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada,0,D43FBA3A-F8DB-4F0C-8230-D50508AB0503,Speakers,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
212,/Events/2020/German-IP-Insights-Pharma-Life-Sciences,en-GB,4004BADA-C51C-44E5-88B9-BE8B5437DA9E,German IP Insights: Pharma & Life Sciences,German IP Law seminar - IP Insights: Pharma & Life Sciences,"Our German patent law seminar we will focus on the following topics: Compulsory licenses; Infringement of Second-Medical-Use patents; Arrow Declarations; Interpreting Article 3(a) of the SPC Regulation.
",~/getmedia/cc3f9c85-5a81-4874-8f53-0c3723bdb421/Inivitation.jpg.xml?width=710&height=150&ext=.jpg,NULL,GWLG.Seminar,NULL,NULL,13:00,18:00,CET,0,NULL,"<p><strong>This seminar has been postponed - stay tuned to get the new date first thing its confirmed.</strong></p>

<p>If you want to be informed via email, please let our German IP team know: <a href=""mailto:events.munich@gowlingwlg.com?subject=Patentrechtsseminar%20IP%20Insights:%20Pharma%20&amp;%20Life%20Sciences"">events.munich@gowlingwlg.com.</a></p>

<p>More <a href=""~/getmedia/b9fbf36c-0203-4202-b4b5-7525206cb7c3/IP-Insights-Pharma-Life-Sciences_Flyer.pdf.xml"" target=""_blank"">details about the topics are availble in our flyer (in German)</a> or below.</p>

<p>Our next German patent law seminar, focussing on the protection of know-how &amp; innovation, will cover the&nbsp;following topics:</p>

<ul>
	<li>News on compulsory licenses;</li>
	<li>Infringement of &quot;Second-Medical-Use&quot;-patents;</li>
	<li>Arrow Declarations: The rise of a litigation defence tool in the UK and similar possibilities in Germany;</li>
	<li>Interpreting Article 3(a) of the SPC Regulation - How specifically an active ingredient has to be identified in the basic patent?; and</li>
	<li>Update on case law and legislative developments.</li>
</ul>

<p>Our speakers Thomas Mayer, Jonathan Konietz and Paul Inman from Gowling WLG as well as patent attorney Stefan Danner from DANNER BioPharm IP, are looking forward to welcoming you.</p>
","<p>The seminar will be held in German, except for the presentation on Arrow Declaration and is free of charge.</p>

<p>If you would like to receive regularly invitations to our seminars in Germany, please email <a href=""mailto:events.munich@gowlingwlg.com"">events.munich@gowlingwlg.com</a>.</p>

<hr />
<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,NULL,mailto:events.munich@gowlingwlg.com,NULL,RSVP,335E82B9-317C-47A9-8340-BBAEDBC27592,049c8249-7ff3-4ee3-a439-590f45fd5cff;a929915c-1d1f-4e9c-8c8b-f34a30e2ab4e,08b9a44c-bb26-4255-9779-296a124fcbee;82f237a8-0da3-46f1-86b5-4392a020f41a;85764222-db69-43cf-af79-2c6fcbda9589,471a00a2-e109-4e85-8152-8a92a4982d19,573d1455-ea45-45db-a443-9b45707a1db2;50260439-3478-44dc-a940-987d3e0c030b;f3cd8bc4-37c5-4d8f-b2ff-eb4b97b8b140,NULL,Seminar,"Thomas Mayer, Jonathan Konietz, Paul Inman",Sofitel Munich Bayerpost,43665,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Germany,0,F650DC48-3ED1-4629-819D-C89BA6D3E2F0,Speaker(s),NULL,a1545ae9-a498-4b1d-b5e5-a71093fb7f2b,"Life Sciences, Health & Care","Intellectual Property, IP Litigation & Strategy, Patents",Intellectual property and disruptive technology,Munich,NULL,NULL,NULL
213,/Events/2020/Annual-patents-seminar-Birmingham,en-GB,0AEC6CB8-99A9-441B-A6AD-08E82FBF10D1,Annual patents seminar - Birmingham,Annual patents seminar - Birmingham,Join Gowling WLG in Birmingham as we review the key themes of 2019's judgments from the UK at our annual patents seminar.,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,29-01-2020 16:26,29-01-2020 16:26,09:30,14:00,GMT,0,NULL,"<p>2019 has been a fascinating year for patent law, in the UK and beyond. We will be reviewing the key themes of 2019&#39;s judgments from the UK at Gowling WLG&#39;s Annual Patents seminar in January. We have seen the &quot;settling in&quot; of the doctrine of equivalents, the first injunction in the SEP/FRAND arena, the final resolution of employee benefits, and by the time of the seminar we hope to be reporting on the Supreme Court&#39;s judgment in <em>Unwired Planet</em>. We will also, as always, look at the key facts and statistics of this year&#39;s patent cases in the UK to see who has been doing what and how!</p>

<ul>
	<li>Jamie Rowlands, Alexandra Brodie and Céline Bey, who will update on SEP/FRAND cases in China, the UK and France</li>
	<li>Thomas Mayer, who will talk us through compulsory licensing in Germany, and</li>
	<li>Huw Evans, on Brexit fallout: leaked papers, trade deals, EPC, UPC &ndash; what now for the UK patent scene&hellip;?</li>
</ul>

<p>Céline will also give us a more general round-up of the highlights of patent litigation in France, as 2019 has been a busy year there.</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,27-01-2020 16:27,https://reaction.gowlingwlg.com/reaction/RSGenPage.asp?RSID=ae6gX4ALQJEDriQpLmTg6vVNXb6dpbj5GDSvm5TFiBU&utm_source=invitation&utm_medium=email&utm_campaign=events,NULL,Register for this event,58076178-DA60-4AB6-A07C-EF250971EBF7,NULL,85764222-db69-43cf-af79-2c6fcbda9589;08b9a44c-bb26-4255-9779-296a124fcbee,NULL,6767b2fc-7817-42ae-a54e-05595fe6c1cd;324b94dc-effd-40f6-9b4b-de402aa7d013;d960a618-a196-404c-b795-b884bc90e603;ad4cc2a0-5825-4d92-930d-64226a7659b3;573d1455-ea45-45db-a443-9b45707a1db2;a21f77d5-b08e-4dac-9b34-efe5dddc9db1,NULL,Seminar,NULL,Birmingham,70,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,95EC9477-4594-4332-A463-E612BD16CA0C,Speaker(s),NULL,58076178-da60-4ab6-a07c-ef250971ebf7,NULL,NULL,NULL,NULL,NULL,NULL,NULL
214,/Events/2020/Annual-patents-seminar-London,en-GB,46456BC4-5FF3-43D8-A407-85EE93234803,Annual patents seminar - London,Annual patents seminar - London,Join Gowling WLG in London as we review the key themes of 2019's judgments from the UK at our annual patents seminar.,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,30-01-2020 16:26,30-01-2020 16:26,14:30,19:00,GMT,0,NULL,"<p>2019 has been a fascinating year for patent law, in the UK and beyond. We will be reviewing the key themes of 2019&#39;s judgments from the UK at Gowling WLG&#39;s Annual Patents seminar in January. We have seen the &quot;settling in&quot; of the doctrine of equivalents, the first injunction in the SEP/FRAND arena, the final resolution of employee benefits, and by the time of the seminar we hope to be reporting on the Supreme Court&#39;s judgment in <em>Unwired Planet</em>. We will also, as always, look at the key facts and statistics of this year&#39;s patent cases in the UK to see who has been doing what and how!</p>

<ul>
	<li>Jamie Rowlands, Alexandra Brodie and Céline Bey, who will update on SEP/FRAND cases in China, the UK and France</li>
	<li>Thomas Mayer, who will talk us through compulsory licensing in Germany, and</li>
	<li>Huw Evans, on Brexit fallout: leaked papers, trade deals, EPC, UPC &ndash; what now for the UK patent scene&hellip;?</li>
</ul>

<p>Céline will also give us a more general round-up of the highlights of patent litigation in France, as 2019 has been a busy year there.</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,27-01-2020 16:27,https://reaction.gowlingwlg.com/reaction/RSGenPage.asp?RSID=ae6gX4ALQJEDriQpLmTg6vVNXb6dpbj5GDSvm5TFiBU&utm_source=invitation&utm_medium=email&utm_campaign=events,NULL,Register for this event,9FBE191E-3BCF-45DE-A2BA-338BB194FC9D,NULL,85764222-db69-43cf-af79-2c6fcbda9589;08b9a44c-bb26-4255-9779-296a124fcbee,NULL,6767b2fc-7817-42ae-a54e-05595fe6c1cd;324b94dc-effd-40f6-9b4b-de402aa7d013;d960a618-a196-404c-b795-b884bc90e603;ad4cc2a0-5825-4d92-930d-64226a7659b3;573d1455-ea45-45db-a443-9b45707a1db2;a21f77d5-b08e-4dac-9b34-efe5dddc9db1,NULL,Seminar,NULL,London,71,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,95EC9477-4594-4332-A463-E612BD16CA0C,Speaker(s),NULL,9fbe191e-3bcf-45de-a2ba-338bb194fc9d,NULL,NULL,NULL,NULL,NULL,NULL,NULL
216,/Events/2020/Celebration-of-Arab-women-leaders,fr-CA,04C41112-3C5E-4A39-8B78-D9AAFCB3121A,Celebration des femmes arabes ,Célébration des femmes d'affaires arabes,"Gowling WLG, en collaboration avec le Conseil de commerce canado-arabe, vous invite à célébrer les réalisations de femmes arabes du monde entier qui ont su exceller dans le domaine de leur choix.",~/getmedia/ec03450b-8579-4cbb-b07b-7c27f8bd722c/Conference_Header.png.xml?width=744&height=400&ext=.png,NULL,GWLG.Seminar,13-02-2020 18:00,13-02-2020 20:00,18 h ,NULL,EST,0,NULL,"<p>Gowling WLG, en collaboration avec le Conseil de commerce canado-arabe, vous invite à célébrer les réalisations de femmes arabes du monde entier qui ont su exceller dans le domaine de leur choix.</p>

<p>C&#39;est avec grand honneur que nous recevrons les conférencières <strong>Danièle Henkel</strong>, femme d&#39;affaires et entrepreneure, fondatrice et PDG des entreprises Daniele Henkel Inc. ainsi qu&#39;<strong>Henriette Bichai</strong>, VP des opérations pour le Québec au réseau d&rsquo;assurance IDC Worldsource. Ces dernières vous parleront de leurs expériences et de leurs démarches pour la promotion et l&#39;avancement des femmes d&#39;origine arabe.</p>

<p>Nous espérons que vous pourrez vous joindre à nous pour cet événement exclusif. Comme les places sont limitées, veuillez confirmer votre présence le plus tôt possible.</p>

<p>Cette conférence se déroulera principalement en anglais.</p>

<h2>Conférencières&nbsp;</h2>

<p><img alt="""" src=""~/getmedia/e2733df4-f9f0-482e-ad7d-8f9b5f5db3d2/Conferenciere2.png.xml?width=500&amp;height=277"" style=""width: 500px; height: 277px;"" /></p>

<h2>Programme</h2>

<ul>
	<li>18 h : Accueil et inscription</li>
	<li>18 h 30 : Introduction&nbsp;</li>
	<li>18 h 45 :
	<ul>
		<li><strong>Danièle Henkel</strong>, femme d&#39;affaires et entrepreneure, fondatrice et PDG des entreprises Danièle Henkel Inc.&nbsp;</li>
		<li><strong>Henriette Bichai</strong>, vice-présidente des opérations - Québec, réseau d&#39;assurance IDC Worldsource&nbsp;</li>
	</ul>
	</li>
	<li>19 h 30 : Période de questions&nbsp;</li>
	<li>19 h 45 : Cocktail et réseautage</li>
</ul>

<h2>Inscriptions fermées</h2>

<p>Nous avons atteint le nombre d&#39;inscriptions maximales pour cette conférence. Nous vous invitons à envoyer un courriel à&nbsp;<a href=""mailto:julie-han.angers@gowlingwlg.com"">julie-han.angers@gowlingwlg.com</a>&nbsp;afin d&#39;être le ou la première informé(e) si une place se libère!&nbsp;</p>

<h2>Pour nous joindre</h2>

<p>Julie-Han Angers<br />
Spécialiste, Événements<br />
<a href=""tel:+1%20514%20392-9553"" id=""lnkEventContactPhone"">T: +1 514 392-9553</a><br />
<a href=""mailto:julie-han.angers@gowlingwlg.com"" id=""lnkEventContactEmail"">julie-han.angers@gowlingwlg.com</a></p>
",NULL,NULL,13-02-2020 08:00,mailto:julie-han.angers@gowlingwlg.com,NULL,Inscrivez-vous,4EEBBC16-5EC7-4186-B6BB-A7F0CF2F7CA4,NULL,NULL,NULL,NULL,NULL,Séminaire,NULL,Montréal,66,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,Modératrice,NULL,4eebbc16-5ec7-4186-b6bb-a7f0cf2f7ca4,NULL,NULL,NULL,NULL,NULL,NULL,NULL
217,/Events/2020/Celebration-of-Arab-women-leaders,en-GB,04C41112-3C5E-4A39-8B78-D9AAFCB3121A,Celebration of Arab women leaders,Celebration of Arab Women Leaders,"Gowling WLG, together with the Canada Arab Business Council, invite you to celebrate the achievements of Arab women all over the world who have excelled in their field of choice.",~/getmedia/16200405-e07c-40d8-bda4-29b3d8d1ef0c/ArabWomen_Banner.png.xml?width=744&height=400&ext=.png,NULL,GWLG.Seminar,13-02-2020 18:00,13-02-2020 20:00,18:00,20:00,EST,0,NULL,"<p>Gowling WLG, together with the Canada Arab Business Council, invite you to celebrate the achievements of Arab women all over the world who have excelled in their field of choice.</p>

<p>It will be our great honour to host guest speakers <strong>Danièle Henkel</strong>, businesswoman and entrepreneur, founder and CEO of Daniele Henkel Enterprises and <strong>Henriette Bichai</strong>, VP of Quebec Operations at IDC Worldsource Insurance Network. Our guests will speak to their experience and efforts towards the promotion and advancement of women of Arab origin.</p>

<p>We hope you can join us for this exclusive event. Space is limited, so please RSVP as soon as possible.</p>

<p>This conference will be presented mainly in English.</p>

<h2>Speakers</h2>

<p><img alt="""" src=""~/getmedia/8d484a24-c5f1-4bc1-911c-53df45c80c89/Speakers.png.xml?width=500&amp;height=277"" style=""width: 500px; height: 277px;"" /></p>

<h2>Agenda</h2>

<ul>
	<li>6:00 p.m. : Registration</li>
	<li>6:30 p.m. : Introduction</li>
	<li>6:45 p.m. :
	<ul>
		<li><strong>Danièle Henkel</strong>, Businesswoman and Entrepreneur, Founder and CEO of Daniele Henkel Enterprises.</li>
		<li><strong>Henriette Bichai</strong>, VP, Operations - Québec, IDC Worldsource Insurance Network</li>
	</ul>
	</li>
	<li>7:30 p.m. : Q&amp;A</li>
	<li>7:45 p.m. : Cocktail and networking</li>
</ul>

<h2>Contact</h2>

<p>Julie-Han Angers<br />
Events Specialist<br />
<a href=""tel:+1%20514%20392-9553"" id=""lnkEventContactPhone"">T: +1 514 392-9553</a><br />
<a href=""mailto:julie-han.angers@gowlingwlg.com"" id=""lnkEventContactEmail"">julie-han.angers@gowlingwlg.com</a></p>
",NULL,NULL,13-02-2020 08:00,mailto:julie-han.angers@gowlingwlg.com,NULL,RSVP,4EEBBC16-5EC7-4186-B6BB-A7F0CF2F7CA4,NULL,NULL,NULL,e21a01a4-efc1-409c-b08c-4859c79fe643,NULL,Seminar,NULL,Montréal,66,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,Moderator,NULL,4eebbc16-5ec7-4186-b6bb-a7f0cf2f7ca4,NULL,NULL,NULL,Montréal,NULL,NULL,NULL
218,/Events/2020/ThinkHouse-Dubai-IP-Strategies,en-GB,6F0BD5F9-7E09-4DF6-9254-F699E9A74D6F,ThinkHouse Dubai: IP Strategies,"ThinkHouse Dubai: IP Strategies, is your business covering the 4 Cs?","As the UAE continues in its move to a knowledge-based economy, investing in and promoting innovation, intellectual property rights are at the heart of this.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,24-02-2020 08:00,24-02-2020 10:00,08:00,10:00,Local time,0,NULL,"<p>As the UAE continues in its move to a knowledge-based economy, investing in and promoting innovation, intellectual property rights are at the heart of this push and continue to grow in significance and importance to UAE businesses. Companies are making significant investments in time and money to develop new rights or enhance existing IP rights, including working with others to develop ideas further.</p>

<p>It is therefore important for in-house counsel to ensure that the company is taking steps to cover the following 4 Cs in their IP strategies and when dealing with IP rights:</p>

<ul>
	<li>Creation</li>
	<li>Capture</li>
	<li>Collaboration</li>
	<li>Commercialization</li>
</ul>

<p>This first ThinkHouse of 2020 will provide clear vision to in-house counsel in relation to these commercially important rights, and how they can be used to build on, obtain and safeguard your commercial advantage.</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,24-02-2020 00:00,mailto:Dubai.ThinkHouse@gowlingwlg.com?subject=Thinkhouse Dubai: IP Strategies,NULL,Register for this event,2D388260-6B09-4610-9C1D-852369DE565C,NULL,08b9a44c-bb26-4255-9779-296a124fcbee,a143cbfd-d333-42a0-89a6-7287894464f1,3fd4913d-3096-46ba-93b4-f365a5b14944;dd727450-7a16-496e-85c6-f49662ae2c14,NULL,Seminar,NULL,Capital Club Dubai,37415,GWLG.Events,NULL,~/getmedia/d2b9ca59-d716-4c60-abb1-472dd7eeec23/thinkhouse-primary-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/0363a899-4ad3-4e9e-a428-fbf0ebf9f31d/thinkhouse-primary-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UAEDubai,0,B58CF9C3-DC86-4783-834F-1954E7C865B5,Speaker(s),NULL,23ef7ff4-756b-454c-a477-8dfedb1af5bc,NULL,Intellectual Property,ThinkHouse,Dubai,NULL,NULL,NULL
219,/Events/2020/Women-in-Aviation-and-Aerospace-Dinner,en-GB,7CB95599-3D5D-4374-94CB-C73B7B0F555A,Women in Aviation and Aerospace Dinner,Women in Aviation and Aerospace - Dinner and Discussion,,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.SpecialEvents,10:08.0,10:17.0,18:30,22:00,BST,0,NULL,"<p>The <a href=""https://iawa.org/"" target=""_blank"">International Aviation Womens Association</a> (IAWA) and Gowling WLG are co-hosting a dinner in London to mark International Women&#39;s Day.</p>

<p>Gowling WLG&#39;s <a href=""https://gowlingwlg.com/en/people/matthew-harvey"" target=""_blank"">Matthew Harvey</a> and <a href=""https://iawa.org/board-of-directors/"">Katherine Bennett</a> of <abbr title=""International Aviation Womens Association"">IAWA</abbr> will be joined by <a href=""https://www.caa.co.uk/Our-work/About-us/CAA-board-and-staff/"" target=""_blank"">Dame Deirdre Hutton</a>, Chair of the UK&#39;s CAA; <a href=""https://www.linkedin.com/in/fionapenhallurick/"" target=""_blank"">Fiona Penhallurick</a>, General Counsel at Birmingham Airport; and <a href=""https://www.linkedin.com/in/amanda-pullinger-8274/"" target=""_blank"">Amanda Pullinger</a>, CEO of 100 Women in Finance and Director of FlyPlymouth.</p>

<p>To encourage a debate about what more can be done to attract women to aviation, Deirdre, Fiona and Amanda will be describing their careers and the challenges they have faced. Please join us and colleagues in your sector for an evening of networking and discussion at Gowling WLG&#39;s offices overlooking London&#39;s Tower Bridge.</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,37:42.0,https://reaction.gowlingwlg.com/reaction/RSGenPage.asp?RSID=At1rN3nw_cZqN5IL1zrqwuDm3pEdBLGKgNhngvsg67k,NULL,Register for this event,9FBE191E-3BCF-45DE-A2BA-338BB194FC9D,NULL,NULL,NULL,3a0c975c-ae61-4906-9ee2-b44185806511,NULL,Special events,NULL,London,71,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,40ECBAEA-9783-479A-8EB9-9D39F577C01D,Speaker(s),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
221,/Events/2020/Life-Sciences-Spring-Forum,en-GB,13A9BBC0-7DEA-471F-AE7C-3F40D19B28D2,Life Sciences Spring Forum,Life Sciences Spring Forum,"This session will help businesses stay up-to-date on the rapidly changing life sciences sector, latest issues and challenges that affect the industry. ",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,00:00.0,NULL,8:30 a.m.,11:30 a.m.,PST,1,Each presentation is eligible for 1 CPD hour (3 hours total) toward the LSBC's CPD requirement.,"<h2>UPDATE: IMPORTANT NOTICE</h2>

<p>The health and safety of our registered attendees is our top priority and with this in mind, we are moving our Life Sciences Spring Forum&nbsp;<strong>online&nbsp;(only).&nbsp;</strong><br />
On Wednesday, March 11th, registered attendees will receive information regarding how to connect to the Life Sciences Spring Forum&nbsp;<strong>webinar</strong>.</p>

<p>If you would like to participate, <strong>please register by 3:00 pm PST Wednesday, March 11.</strong></p>

<p>&nbsp;</p>

<p>In the rapidly changing life sciences sector, it is vital to remain current on the latest issues and challenges that affect the industry. Learn about trends, risks and opportunities across key areas of life sciences from our accomplished professionals at Gowling WLG.</p>

<p>You are invited to our Life Sciences Spring Forum on&nbsp;<strong>Thursday, March 12.</strong>&nbsp;Our speakers are leading lawyers, patent attorneys and patent agents with expertise in various fields such as technology, science, and intellectual property. Topics to be covered in our morning seminar include licensing terms and trends, intellectual property, and mitigating risks.</p>

<p>RSVP now to reserve your spot.</p>

<h2>Agenda</h2>

<p>8:30 to 9:15 a.m.<strong> &ndash;</strong> <strong>IP 101 for Life Sciences</strong><br />
Associates <a href=""https://gowlingwlg.com/en/people/edith-penty-geraet"">Edith Penty Geraets</a> and <a href=""https://gowlingwlg.com/en/people/filza-tariq"">Filza Tariq</a> present an overview of the best approach to protecting your business assets through patents and trademarks. They will discuss topics that range from identifying IP to deciding when to file to avoiding common prosecution pitfalls.</p>

<p>9:30&nbsp;to 10:15&nbsp;a.m.<strong> &ndash;</strong> <strong>Managing risks: Could it or will it happen?</strong></p>

<p>Partner <a href=""https://gowlingwlg.com/en/people/lisa-thorne"">Lisa Thorne</a> leads an in-depth discussion of practical tips and insights for identifying, managing and mitigating the risks to your IP portfolio. She will examine sources of risk, tools and systems to monitoring threats and opportunities, and third party reviews of IP portfolios.</p>

<p>10:30 to 11:15 a.m. <strong>&ndash;</strong> <strong>Life Sciences Licensing: Terms and Trends</strong><br />
Partner <a href=""https://gowlingwlg.com/en/people/paul-armitage"">Paul Armitage</a> explores the latest industry trends in deal terms and royalties, as well as discussing key terms in life sciences licenses and collaborations.</p>
",NULL,NULL,00:00.0,https://sites-gowlingwlg.vuturevx.com/104/4976/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,90A71CC3-07A3-4265-B0C4-C31612546237,049c8249-7ff3-4ee3-a439-590f45fd5cff,NULL,NULL,f801a2a1-89ec-4986-8030-70e2352aa794;66ecdc1d-e8f7-4cfe-8236-6ac719b4f787;d9a834e2-7b85-4089-b241-ed2e95e1b3d6;537ca4c8-995c-4dd1-86e3-d32115e70c0f,NULL,Webinar,"Edith Penty Geraets, Filza Tariq, Lisa Thorne, Paul Armitage",Gowling WLG Webinar,44232,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/104/4976/landing-pages/event-registration-(blank-form).asp,Register now,GWLG.Canada,0,63387DF2-25F3-4268-9B20-2D4323F1E706,Speakers,NULL,NULL,Life Sciences,NULL,NULL,NULL,NULL,NULL,NULL
222,/Events/2020/A-look-into-the-Future-Mining-Industry-Trends,en-GB,782209E2-7AA1-462D-8DEE-59C1D6CF68EF,A look into the Future: Mining Industry Trends,A look into the future: Trends shaping the mining industry,"Join us for a breakfast seminar in the Toronto office of Gowling WLG on Monday, March 2. Six highly knowledgeable speakers from Canada and the UK will explore the issues, trends and technology that influence the mining industry worldwide.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,02-03-2020 07:30,02-03-2020 09:00,7:30 a.m.,9:00 a.m.,EST,1,This program will count for up to 1 hour of Substantive credits toward the mandatory annual CPD requirement of the Law Society of Ontario,"<div style=""display: none;"">&nbsp;</div>

<div style=""display: none;"">&nbsp;</div>

<p>Join us for a breakfast seminar in the Toronto office of Gowling WLG on Monday, March 2. Six highly knowledgeable speakers from Canada and the UK will explore the issues, trends and technology that influence the mining industry worldwide.</p>

<p>Topics include: the role of renewable energy in remote mining locations, new European rules to ensure that imported minerals are sourced responsibly, and the use of blockchain technology to improve efficiency and cut costs in the mining supply chain.</p>

<p>Please RSVP to reserve your spot. We hope to see you there!&nbsp;</p>
","<div style=""display: none;"">&nbsp;</div>

<div style=""display: none;"">&nbsp;</div>

<p>&nbsp;</p>
",NULL,02-03-2020 00:00,https://sites-gowlingwlg.vuturevx.com/103/4947/landing-pages/event-registration-(blank-form).asp?sid=blankform,NULL,Register for this event,B2DC4461-DC66-4F96-9AE6-32BC2B14259D,c0b8c1a8-73eb-4122-972f-dc5df852f68d,NULL,NULL,6535cd7a-0e8e-447a-bc96-cec1df267dfe;d084ac14-1e2e-4b99-a026-90bb152ae60d;21d39022-993b-45aa-9b21-f4135da041c8;300e471b-5cfe-45e3-bb75-6cc00bbdf27b;a4c7d72a-1620-4590-ad91-827dd804aee0;4c3c2534-e644-427f-9b61-e7cd1aec53cf,NULL,Seminar,"Charles Bond, R. Ian Mitchell, Stuart M. Olley, Usman M. Sheikh, Denis G. Silva, Thomas J. Timmins",Toronto,63,GWLG.Events,"<div style=""display: none;"">&nbsp;</div>

<div style=""display: none;"">&nbsp;</div>

<p>&nbsp;</p>
",~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,Speakers,NULL,b2dc4461-dc66-4f96-9ae6-32bc2b14259d,Natural Resources,NULL,NULL,Toronto,NULL,NULL,NULL
223,/Events/2020/Trustee-Governance-2020-and-beyond,en-GB,35D023D5-1940-4040-AF01-D7440EA784F7,Trustee Governance: 2020 and beyond,Trustee Governance: 2020 and beyond,Pension scheme trustees are operating within an increasingly complex and fast-changing world. Join us to find out what the future holds for trustee board governance and what trustee boards can learn about improving governance from areas beyond the world of pensions. ,~/getmedia/7ca281c8-ab0a-47a8-90bb-bc10bd516041/200221-pensions-governance.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Seminar,23-04-2020 15:27,23-04-2020 15:27,09:00,12:00,BST,0,NULL,"<p>Pension scheme trustees are operating within an increasingly complex environment. Increased regulation and greater scrutiny from regulators, sponsors and members against an ever-changing social, economic and political backdrop all impact on trustee boards and how they discharge their duties and responsibilities. In addition, pension scheme trustees are facing some difficult questions:</p>

<ul>
	<li>What does the future hold for pension trustee board governance?</li>
	<li>What does <abbr title=""The Pensions Regulator"">TPR</abbr> expect of trustees in light of its recent response to its consultation on the future of governance and trusteeship?</li>
	<li>What can trustee boards learn about improving standards of governance from the world of corporate governance?</li>
</ul>

<p>These are important issues for trustees and scheme sponsors alike. To tackle them, we&#39;ve brought together a panel of cross-industry experts chaired by Jason Coates, Head of Pensions at Gowling WLG.</p>

<p>The panel will provide insights about the future of trusteeship in light of <abbr title=""The Pensions Regulator"">TPR</abbr>&#39;s latest pronouncements and also consider what trustee boards can learn about board effectiveness from other areas, outside of the pensions world.</p>

<table>
	<thead>
		<tr>
			<th>Time</th>
			<th>Agenda item</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>09:00-9:30</td>
			<td>Registration and breakfast</td>
		</tr>
		<tr>
			<td>09:35-09:50</td>
			<td>Introduction to Gowling WLG (UK) LLP - Jason Coates</td>
		</tr>
		<tr>
			<td>09:50-10:10</td>
			<td>Key note speaker - Sharmila Nebhrajani</td>
		</tr>
		<tr>
			<td>10:10-11:00</td>
			<td>Panel discussion followed by Q&amp;A</td>
		</tr>
		<tr>
			<td>11:00</td>
			<td>Event close and tea/coffee refreshments</td>
		</tr>
	</tbody>
</table>
","<p>This event is free of charge.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,16-03-2020 16:08,https://reaction.gowlingwlg.com/reaction/RSGenPage.asp?RSID=g41GM7-v76t0bH4izow3-Ws-U9pMbewFlcbnNtLzBPc,NULL,Register for this event,9FBE191E-3BCF-45DE-A2BA-338BB194FC9D,NULL,a19c4c5e-c05a-4fa5-95aa-c5a274279d8c,NULL,91c9c57f-d1b5-4113-862f-60addeffaa4f,NULL,Seminar,NULL,London,71,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,40ECBAEA-9783-479A-8EB9-9D39F577C01D,Speaker(s),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
224,/Events/2020/InterGrowth-2020,en-GB,F6874864-0704-4336-8A58-FEE912EEEFA7,InterGrowth 2020,Connect with our global M&A team <br>at Intergrowth 2020,M&A solutions - wherever you're investing,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,las vegas strip during sundown,GWLG.Conference,20:47.0,21:09.0,NULL,NULL,CST,0,NULL,"<h2>Please note that InterGrowth this year has been cancelled. For more information, please visit <a href=""https://intergrowth.org/attend/intergrowth-covid-19-update/"" target=""_blank"">intergrowth.org</a></h2>

<hr />
<h2>M&amp;A solutions &mdash; wherever you&#39;re investing</h2>

<ul>
	<li style=""margin-left:0.5in"">#1 law firm for Canadian M&amp;A by deal count</li>
	<li style=""margin-left:0.5in"">Ranked among the top law firms for UK, European and global mid-market M&amp;A</li>
</ul>

<p>Working closely with clients across all major industry sectors, our top-ranked M&amp;A lawyers get the deals done. Year after year, our team continues to advise on more Canadian M&amp;A transactions than almost any other law firm in the world.</p>

<p>Exploring investment opportunities in Canada or abroad? Learn how we can we help by visiting us at booth #125 or clicking on the appropriate lawyer&rsquo;s image below to schedule an appointment.</p>

<h2>Gowling WLG InterGrowth team</h2>

<div class=""grid-container grid-container-inline"">
<div class=""grid-x"">
<h3 class=""small-12 medium-4 cell""><a href=""https://calendly.com/gowlingwlg-digital/ian-palm?month=2020-04"" target=""_blank""><img alt="""" src=""~/getmedia/ff5beed3-9c5c-4e9e-a98c-e1fc18b57418/w-ian-palm.jpg.xml?width=200&amp;height=200"" style="" margin: 15px 0px"" /></a><br />
W. Ian Palm<br />
<span style=""color: #8f2457;"">Partner</span><br />
Greater Toronto Area<br />
<a class=""c-button"" href=""https://calendly.com/gowlingwlg-digital/ian-palm?month=2020-04"" target=""_blank"">Book meeting</a></h3>

<h3 class=""small-12 medium-4 cell""><a href=""https://calendly.com/gowlingwlg-digital/greg-shannon?month=2020-04"" target=""_blank""><img alt="""" src=""~/getmedia/3b55923b-d158-4168-b4d3-cb50356f208b/Greg-Shannon.jpg.xml?width=200&amp;height=200"" style="" margin: 15px 0px;"" /></a><br />
Greg P. Shannon<br />
<span style=""color: #8f2457;"">Partner</span><br />
Western Canada<br />
<a class=""c-button"" href=""https://calendly.com/gowlingwlg-digital/greg-shannon?month=2020-04"" target=""_blank"">Book meeting</a></h3>

<h3 class=""small-12 medium-4 cell""><a href=""https://calendly.com/gowlingwlg-digital/david-cohen?month=2020-04""><img alt="""" src=""~/getmedia/b827d521-0d64-432e-8cd3-67431149a212/david-cohen_1.jpg.xml?width=200&amp;height=200"" style="" margin: 15px 0px;"" /></a><br />
David Cohen<br />
<span style=""color: #8f2457;"">Partner</span><br />
Cross-Canada<br />
<a class=""c-button"" href=""https://calendly.com/gowlingwlg-digital/david-cohen?month=2020-04"">Book meeting</a></h3>
</div>
</div>

<div class=""grid-container grid-container-inline"">
<div class=""grid-x"">
<h3 class=""small-12 medium-4 cell""><a href=""https://calendly.com/gowlingwlg-digital/lorraine-mastersmith?month=2020-04"" target=""_blank""><img alt="""" src=""~/getmedia/da3dbe92-303f-45cb-ae12-953a49613ac2/lorraine-mastersmith.jpg.xml?width=200&amp;height=200"" style="" margin: 15px 0px;"" /></a>Lorraine Mastersmith<br />
<span style=""color: #8f2457;"">Partner</span><br />
National Capital Region<br />
<a class=""c-button"" href=""https://calendly.com/gowlingwlg-digital/lorraine-mastersmith?month=2020-04"" target=""_blank"">Book meeting</a></h3>

<h3 class=""small-12 medium-4 cell""><a href=""https://calendly.com/gowlingwlg-digital/chris-towle?month=2020-04""><img alt="""" src=""~/getmedia/1ca64df9-bee4-44e6-a5a9-24caa57a0e6f/chris-towle.jpg.xml?width=200&amp;height=200"" style="" margin: 15px 0px;"" /></a>Chris Towle<br />
<span style=""color: #8f2457;"">Partner</span><br />
Birmingham, UK<br />
<a class=""c-button"" href=""https://calendly.com/gowlingwlg-digital/chris-towle?month=2020-04"">Book meeting</a></h3>

<h3 class=""small-12 medium-4 cell""><a href=""https://calendly.com/gowlingwlg-digital/kristian-rogers?month=2020-04""><img alt="""" src=""~/getmedia/9e2758e5-4a78-4800-a456-ce2394b205e8/kristian-rogers.jpg.xml?width=200&amp;height=200"" style="" margin: 15px 0px;"" /></a>Kristian Rogers<br />
<span style=""color: #8f2457;"">Partner</span><br />
London, UK<br />
<a class=""c-button"" href=""https://calendly.com/gowlingwlg-digital/kristian-rogers?month=2020-04"">Book meeting</a></h3>
</div>
</div>

<h2>Guides to Going Global</h2>

<p><a href=""~/getmedia/1da13db4-069b-4fb3-978f-e403435720a0/guide-to-doing-business-in-the-uk.pdf.xml"" target=""_blank""><img alt=""Guide to Doing Business in the UK"" src=""~/getmedia/f1aab2de-804f-45b2-9bcd-8616e98e0f37/guide-to-doing-business-in-the-uk-thumbnail.jpg.xml"" /></a>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<a href=""~/en/insights-resources/guides/2017/guide-to-doing-business-in-canada""><img alt=""Guide to Doing Business in Canada"" src=""~/getmedia/a173a953-7629-4ce3-9c3f-4a4747a40d0e/guide-to-doing-business-in-canada-thumbnail.jpg.xml"" /></a></p>
",NULL,NULL,NULL,NULL,NULL,Register for this event,NULL,NULL,56646cda-20d7-43d4-b13c-886e1cd90c52,NULL,NULL,NULL,Conference,NULL,NULL,NULL,GWLG.Events,NULL,~/getmedia/12d113b9-92ba-42d8-97bf-e809e437a56b/200214-intergrowth-las-vegas-2020.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/80148820-6047-430f-bcc7-abb92fe83e4b/200214-intergrowth-las-vegas-2020-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.Canada;GWLG.UnitedStates,0,NULL,InterGrowth team,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
228,/Events/2020/WRAP-UP-Website-Data-Protection-Exit,en-GB,95CEF683-8DB2-4069-AD40-C9FD16833392,"WRAP UP - Website, Data Protection & Exit ","Legal Boost for Start-ups: WRAP UP - Website, Data Protection & Exit","The most important legal principles for start-ups in Germany - short and simple explained in 5 webinars:
From foundation to protection of intellectual property, important (company) contracts, financing and data protection and beyond.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,00:00.0,00:00.0,17:00,18:00,CET,0,NULL,"<p>Our last webinar of this series <strong>WRAP UP - Website, Data Protection &amp; Exit </strong>will focus on:</p>

<ul>
	<li>Website must haves</li>
	<li>Online advertising, social media and social plug in</li>
	<li>Liability for &#39;user generated content&#39;</li>
	<li>Privacy, cookies and tracking tools</li>
	<li>Exit or move on? - Possibilities and scenarios</li>
</ul>

<p>&nbsp;</p>

<p>---------------------------------------------</p>

<p>About the webinar series</p>

<p>What are the most important legal principles you should be aware of when doing or setting up business in Germany? All will be explained - short and simple in five events. From foundation to protection of intellectual property, important (company) contracts, financing and data protection and beyond.</p>

<p>So</p>

<p>=&gt; SET UP<br />
=&gt; START UP&nbsp;<br />
=&gt; BOOST UP&nbsp;<br />
=&gt; GROWN UP&nbsp;<br />
=&gt; WRAP UP&nbsp;</p>

<p>Our IP lawyers at Gowling WLG Munich and our cooperation partner LawUp, which specializes on the needs of start-ups, are looking forward to welcoming you.</p>

<p>The webinar is free of charge and will be held in German.</p>
","<p>If you want to get all information via email or have pressing questions concerning your IP, please contact our <a href=""mailto:events.munich@gowlingwlg.com?subject=Legal%20Boost%20for%20Start-ups%20in%20Germany"">German IP team</a>.</p>
",NULL,09:15.0,https://reaction.gowlingwlg.com/reaction/RSGenPage.asp?RSID=AWmXhaq37aLdV1OR56C0NSc1OwHJn_BMaeXeJhMMcmY,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,de517572-4373-4b36-844b-18be93f6f9bc;cbbbf9eb-a169-4053-8043-7085cfb8fd4a;3fc2ca8c-9d19-44ba-a3a9-ad1ecb11e900;f1e960f5-8231-4c56-b7bf-9898ebb538c5;06cecb4c-c959-4674-9047-d5d8ee8c673c;2cd1b5c0-8992-4c92-b8e8-d65d8b86dbed;5ad41b49-d460-489a-95b9-84c854eda6f1;a929915c-1d1f-4e9c-8c8b-f34a30e2ab4e;df411e0b-2c62-4a68-8456-2c7c1dd0b4da;049c8249-7ff3-4ee3-a439-590f45fd5cff;c0b8c1a8-73eb-4122-972f-dc5df852f68d;dede4518-e78c-4b48-a143-a2338be5d0ac;59be9dcd-e5f0-43e4-9d50-442a658eda18;0357076d-2635-451a-8d67-ec01f9f3082b;cdfc9b50-74c2-4af5-9508-342935f81ccd,2e9a87e2-3d2e-4d69-ba9c-06b4b358ca0d;5d5bf1f5-9750-4592-8ca8-7c4628c450ff;d6cd11a8-8003-488d-91b1-32f8c4fef082;08b9a44c-bb26-4255-9779-296a124fcbee;aa72ea93-20f8-455a-8e77-6f6cea510684;04411fac-dc23-4861-bd0c-aada44efcdeb;ca126ce8-3692-45e8-a1be-aa0808b0c37e,471a00a2-e109-4e85-8152-8a92a4982d19;db65f669-80d2-45f3-9161-2c00aa6f157e;0cd16f2a-dd67-4f65-96e2-551e7c08c81a;1d757c00-ae1f-493b-a7e9-7d8801fa7457;50e18207-5e37-4578-b200-7b58739e837a;511dc3fa-fdb9-4738-8c91-d70815f56642,bc89113e-4507-4a3d-812a-d8d8a9d9573e;573d1455-ea45-45db-a443-9b45707a1db2;50260439-3478-44dc-a940-987d3e0c030b;3d8577eb-0e3f-41c1-8b9b-3ba987de99d4,a0c8c602-094e-40bf-b248-4b12f675aa73;4d80633e-e9fd-4f36-8b08-807385b0f4e4;6e08d1f4-78b1-4124-b2ff-3d7a0d8427f9;492294cd-17d0-48b3-b912-b3547d03c983;91070352-e40e-4ecc-b14c-6b8be51f2b3f;9b47d4c8-0d85-45cb-99a6-e08649960885,Webinar,"Manuela Finger, LL.M., Thomas Mayer, Jonathan Konietz, Lars Schoenwald",Webinar,34471,GWLG.Events,NULL,~/getmedia/7048c3b1-267c-4a33-a9cf-f20c5f8c76a9/DESIGN0001662_Legal_boost_event_banner_no-text_4.jpg.xml?width=710&height=150&ext=.jpg,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.jpg.xml?width=500&height=550&ext=.jpg,0,has-bg-top,NULL,NULL,GWLG.Germany,0,F650DC48-3ED1-4629-819D-C89BA6D3E2F0,Speaker(s),t-white,a1545ae9-a498-4b1d-b5e5-a71093fb7f2b,"Automotive, Aviation, Aerospace & Defence, Construction & Engineering, Energy, Financial Institutions & Services, Food & Beverage, Government Contracting & Public Sector , Health & Care, Infrastructure, Life Sciences, Natural Resources, Nuclear, Real Estate, Retail, Leisure & Hotels, Tech","Cyber Security & Data Protection Law, Information Technology, Technology, media, and telecoms, Intellectual Property, Trademarks, Brands & Designs, Corporate Commercial, Corporate","Intellectual property and disruptive technology, Blockchain & Cryptocurrency, What is digital transformation?, Autonomous, Connected, Electric and Shared Vehicles, What is a smart city?, Jumpstart",Munich,NULL,NULL,NULL
236,/Events/2020/Colloque-Droit-du-travail,fr-CA,0258FFB1-DC6A-4948-8F53-953E9E01B10B,Colloque Droit du travail,Colloque en droit du travail et de l'emploi : dernières tendances,"Le monde du travail est en pleine transformation et, à titre d'employeur, vous devez vous ajuster à cette nouvelle réalité. Pour en savoir plus sur les dernières tendances de l'année en droit du travail et de l'emploi, venez écouter nos experts en la matière à notre colloque annuel.",~/getmedia/70ecdf5b-aa78-490c-8d73-4001278b26b0/Save_the_date_Colloque_2020-jpg.png.xml?width=930&height=450&ext=.png,NULL,GWLG.Seminar,08-04-2020 08:00,08-04-2020 12:00,8 h ,12 h ,EST,0,NULL,"<p>Vieillissement de la population. Santé et sécurité au travail. Rareté de la main-d&rsquo;œuvre. Ces concepts propres au domaine de l&#39;emploi nous sont familiers, car on en a souvent entendu parler au cours des dernières années.&nbsp;Aujourd&#39;hui, il est aussi question de prévention du harcèlement en milieu de travail, de diversité et de virage numérique. Des enjeux comme la santé psychologique, l&#39;équité salariale et la conciliation famille-travail sont également au cœur des préoccupations de la nouvelle génération de travailleurs et grâce à la médiatisation et aux mouvements sociaux, la population est plus sensibilisée que jamais à ces sujets qui n&#39;auraient peut-être jamais été abordés dans le passé. Or, ils&nbsp;ont une grande incidence à l&#39;heure actuelle sur les structures des entreprises, petites ou grandes.</p>

<p>Bref, le monde du travail est en pleine transformation et, à titre d&#39;employeur, vous devez vous ajuster à cette nouvelle réalité. Pour en savoir plus sur les dernières tendances de l&#39;année en droit du travail et de l&#39;emploi, venez écouter nos experts en la matière à notre colloque annuel.</p>

<p>Places limitées, réservez la vôtre sans tarder!</p>

<h2>Programme</h2>

<ul>
	<li>8 h : Accueil, inscription et petit-déjeuner</li>
	<li>8 h 30 : <strong>Introduction</strong>&nbsp;par Pierre Pilote</li>
	<li>8 h 45 : <strong>Revue jurisprudentielle - Les développements récents</strong>&nbsp;par Josée Gervais et<strong> </strong>Olivier Lamoureux</li>
	<li>9 h 30 : <strong>Votre contrat d</strong>&#39;<strong>emploi vous protège-t-il vraiment?</strong>&nbsp;par Tina Aswad et Julie d&#39;Auteuil</li>
	<li>10 h 15 : <strong>Pause</strong>&nbsp;</li>
	<li>10 h 30 : <strong>Les dommages moraux</strong>&nbsp;par Luc Deshaies et Camille Paradis-Loiselle&nbsp;</li>
	<li>11 h 15 : <strong>Légalisation du cannabis en milieu de travail : un point de vue médical</strong>&nbsp;par Pierre Pilote</li>
	<li>12 h : <strong>Mot de la fin</strong></li>
</ul>

<h2><strong>​</strong>Pour nous joindre&nbsp;</h2>

<p>Julie-Han Angers<br />
Spécialiste, Événements&nbsp;<br />
T: +1 514 392-9553<br />
<a href=""mailto:julie-han.angers@gowlingwlg.com"">julie-han.angers@gowlingwlg.com</a></p>
",NULL,NULL,08-04-2020 08:00,mailto:julie-han.angers@gowlingwlg.com,NULL,Inscrivez-vous,79B9B102-4E8F-45D0-BAEB-234FAF89DEFC,NULL,d8837737-40d2-4472-8a9e-ba4101ec2105,NULL,NULL,NULL,Séminaire,NULL,Four Seasons Montréal,44133,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,Conférenciers,NULL,4eebbc16-5ec7-4186-b6bb-a7f0cf2f7ca4,NULL,NULL,NULL,NULL,NULL,NULL,NULL
237,/Events/2020/Matinee-Express-Dessins,fr-CA,58564D30-9332-46B6-806E-917E0E6A335E,Matinée Express : Dessins ,Matinée Express - Dessins industriels : Au-delà des apparences,"Joignez-vous à nos experts pour cette conférence où le dessin industriel sera à l'honneur, car au-delà des apparences, il y a beaucoup plus à protéger qu'il n'y paraît.",~/getmedia/fbf8dc26-ca3e-4e70-87a5-1d81e076a0b2/Header_Conference_dessin_industriel.jpg.xml?width=600&height=180&ext=.jpg,NULL,GWLG.Conference,00:00.0,30:00.0,8 h,9 h 30,EST,0,NULL,"<p>Dans une société où l&rsquo;apparence prime sur bien d&rsquo;autres choses, plusieurs compagnies investissent des millions pour développer des produits et services attrayants. Que ce soit dans l&#39;industrie de l&rsquo;automobile, de la mode ou de la technologie, les investissements en design sont en forte croissance. Le design peut s&#39;appliquer tant à une chaise conventionnelle qu&#39;à des applications mobiles se trouvant sur votre téléphone. Il est donc primordial d&rsquo;accorder une attention particulière aux dessins industriels et de les protéger adéquatement afin de demeurer compétitif dans un paysage hautement concurrentiel.</p>

<p>Joignez-vous à nos experts pour cette&nbsp;conférence où le dessin industriel sera à l&rsquo;honneur, car au-delà des apparences, il y a beaucoup plus à protéger qu&#39;il n&#39;y paraît.</p>

<h2>Programme&nbsp;</h2>

<ul>
	<li>8 h : Accueil et inscription&nbsp;</li>
	<li>8 h 15 : Petit-déjeuner</li>
	<li>8 h 30 : Début de la conférence&nbsp;</li>
	<li>9 h 15 : Période de questions&nbsp;</li>
	<li>9 h 30 : Fin de la conférence&nbsp;</li>
</ul>

<h2>Pour nous joindre&nbsp;</h2>

<p>Julie-Han Angers<br />
Spécialiste, Événements&nbsp;<br />
T: +1 514 392-9553<br />
<a href=""mailto:julie-han.angers@gowlingwlg.com"">julie-han.angers@gowlingwlg.com</a></p>
",NULL,NULL,00:00.0,mailto:julie-han.angers@gowlingwlg.com,NULL,Inscrivez-vous,4EEBBC16-5EC7-4186-B6BB-A7F0CF2F7CA4,NULL,08b9a44c-bb26-4255-9779-296a124fcbee;aa72ea93-20f8-455a-8e77-6f6cea510684,NULL,126a0d50-b911-4041-948f-0e213389179e;3b8f2ad5-7107-4a7e-81e1-2bc0d86cd798,NULL,Conférence,"Benoit Yelle, Yasmina Boulahia ",Montréal,66,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,Conférenciers,NULL,4eebbc16-5ec7-4186-b6bb-a7f0cf2f7ca4,NULL,NULL,NULL,NULL,NULL,NULL,NULL
238,/Events/2020/Colloque-Droit-du-travail,en-GB,0258FFB1-DC6A-4948-8F53-953E9E01B10B,Colloque Droit du travail,Colloque en droit du travail et de l'emploi : dernières tendances,"Le monde du travail est en pleine transformation et, à titre d'employeur, vous devez vous ajuster à cette nouvelle réalité. Pour en savoir plus sur les dernières tendances de l'année en droit du travail et de l'emploi, venez écouter nos experts en la matière à notre colloque annuel.",~/getmedia/70ecdf5b-aa78-490c-8d73-4001278b26b0/Save_the_date_Colloque_2020-jpg.png.xml?width=930&height=450&ext=.png,NULL,GWLG.Seminar,08-04-2020 08:00,08-04-2020 12:00,8 h ,12 h ,EST,0,NULL,"<p>Vieillissement de la population. Santé et sécurité au travail. Rareté de la main-d&rsquo;œuvre. Ces concepts propres au domaine de l&#39;emploi nous sont familiers, car on en a souvent entendu parler au cours des dernières années.&nbsp;Aujourd&#39;hui, il est aussi question de prévention du harcèlement en milieu de travail, de diversité et de virage numérique. Des enjeux comme la santé psychologique, l&#39;équité salariale et la conciliation famille-travail sont également au cœur des préoccupations de la nouvelle génération de travailleurs et grâce à la médiatisation et aux mouvements sociaux, la population est plus sensibilisée que jamais à ces sujets qui n&#39;auraient peut-être jamais été abordés dans le passé. Or, ils&nbsp;ont une grande incidence à l&#39;heure actuelle sur les structures des entreprises, petites ou grandes.</p>

<p>Bref, le monde du travail est en pleine transformation et, à titre d&#39;employeur, vous devez vous ajuster à cette nouvelle réalité. Pour en savoir plus sur les dernières tendances de l&#39;année en droit du travail et de l&#39;emploi, venez écouter nos experts en la matière à notre colloque annuel.</p>

<p>Places limitées, réservez la vôtre sans tarder!</p>

<h2>Programme</h2>

<ul>
	<li>8 h : Accueil, inscription et petit-déjeuner</li>
	<li>8 h 30 : <strong>Introduction</strong>&nbsp;par Pierre Pilote</li>
	<li>8 h 45 : <strong>Revue jurisprudentielle - Les développements récents</strong>&nbsp;par Josée Gervais et<strong> </strong>Olivier Lamoureux</li>
	<li>9 h 30 : <strong>Votre contrat d</strong>&#39;<strong>emploi vous protège-t-il vraiment?</strong>&nbsp;par Tina Aswad et Julie d&#39;Auteuil</li>
	<li>10 h 15 : <strong>Pause</strong>&nbsp;</li>
	<li>10 h 30 : <strong>Les dommages moraux</strong>&nbsp;par Luc Deshaies et Camille Paradis-Loiselle&nbsp;</li>
	<li>11 h 15 : <strong>Légalisation du cannabis en milieu de travail : un point de vue médical</strong>&nbsp;par Pierre Pilote</li>
	<li>12 h : <strong>Mot de la fin</strong></li>
</ul>

<h2><strong>​</strong>Pour nous joindre&nbsp;</h2>

<p>Julie-Han Angers<br />
Spécialiste, Événements&nbsp;<br />
T: +1 514 392-9553<br />
<a href=""mailto:julie-han.angers@gowlingwlg.com"">julie-han.angers@gowlingwlg.com</a></p>
",NULL,NULL,08-04-2020 08:00,mailto:julie-han.angers@gowlingwlg.com,NULL,Inscrivez-vous,79B9B102-4E8F-45D0-BAEB-234FAF89DEFC,NULL,d8837737-40d2-4472-8a9e-ba4101ec2105,NULL,e72ca6ad-e2e0-446b-9914-9eb2ed87e5b9;40d2e703-8710-44d5-9b4a-6108d5734e98;aac7181f-061a-4203-86bf-3d3c742afce5;55fe5486-16b8-4eff-8d24-4d3c9963bb7d;f40a057d-bc71-4dce-8996-e5bd67b7a089;6afdd62d-3166-4623-98dc-e0cdea6d1b74;4b614dcf-e7c9-466c-b39c-dae0dee147fc,NULL,Séminaire,NULL,Four Seasons Montréal,44133,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,Conférenciers,NULL,4eebbc16-5ec7-4186-b6bb-a7f0cf2f7ca4,NULL,NULL,NULL,NULL,NULL,NULL,NULL
239,/Events/2020/The-Job-Retention-Scheme,en-GB,332336BA-2807-40C6-9157-EF046769AA33,The Job Retention Scheme,The Job Retention Scheme – What does it mean for your business?,Join Gowling WLG's employment team in a live webinar on Monday 30th March at 2.30pm.  They'll be answering your questions about the Job Retention Scheme and you'll be learning not just from them but from other employers as to what is happening on the ground.  ,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,35:14.0,NULL,14:30,15:30,BST,0,NULL,"<p>With Government guidance on furloughed workers published on Thursday 26 March, employers are asking how they can keep paying their people when the work is drying-up.&nbsp; Government funding is available, but how does it function in practice?&nbsp; What do the numbers really mean?&nbsp; How easy is it to operate? What are the risks? &nbsp;And what about the tricky technical issues around pension, holiday and sickness absence?</p>

<p>Join Gowling WLG&#39;s employment team in a live webinar on Monday 30th March at 2.30pm.&nbsp; They&#39;ll be answering your questions about the Job Retention Scheme and you&#39;ll be learning not just from them but from other employers as to what is happening on the ground.&nbsp; By the end, you&#39;ll be able to brief the Board with confidence and &ndash; we hope &ndash; help keep your colleagues in their jobs.&nbsp;</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,34:33.0,https://reaction.gowlingwlg.com/reaction/RSGenPage.asp?RSID=20GDy5QNBPvsCnFPdSCjd6yzWRQz4gHh1qe_gJ5otXU ,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,d8837737-40d2-4472-8a9e-ba4101ec2105,6b906235-110b-475e-88cd-4ddef78eb8b8,79205c59-28cb-4630-bd62-bf070ba732b0;2d03f2db-bf91-45db-a827-470484fe7ddb;7e119a87-174d-49b2-9cc3-1270bd96a57e,NULL,Webinar,"Jonathan Chamberlain, Simon Stephen, Siobhan Bishop",Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,NULL,0,E0D7690F-457C-46F9-8490-D33B4B483448,Speaker(s),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
240,/Events/2020/The-Job-Retention-Scheme-Pensions-Benefits,en-GB,AE7B134A-C6E4-4B76-BCFD-B3DBC5B27A2B,The Job Retention Scheme - Pensions & Benefits,Webinar: The Job Retention Scheme – What does it mean for pensions and benefits?,,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,16:45.0,NULL,11.3,12.15,BST,0,NULL,"<p>The Government guidance on furloughed workers has now been published and employers are asking how they can keep paying their people when the work is drying-up.&nbsp; Government funding is available for employers who are facing this challenge, but how does it function in practice and what does it mean for DB &amp; DC pensions? How does this also affect automatic enrolment, consultation and the difficult issues around providing other benefits during furlough leave?<br />
<br />
Join Gowling WLG&#39;s Pensions/Combined HR Solutions team in a live webinar on&nbsp;<strong>Thursday 2 April 2020 at 11.30am&nbsp;</strong>which is&nbsp;<strong>free to attend</strong>.&nbsp;They&#39;ll be answering your pensions &amp; benefits questions about the Job Retention Scheme and you&#39;ll be learning not just from them, but from other employers as to what is happening on the ground.&nbsp;By the end, you&#39;ll be able to brief the Board, engage with Trustees, and provide your members and the Pensions Regulator with clear reasoned input at this difficult time.</p>
",NULL,NULL,34:50.0,https://reaction.gowlingwlg.com/reaction/RSGenPage.asp?RSID=3GPL8o6jMMYOTMhfhguMRGiUeAWC09qpXgAJ4jOzUj8 ,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,a19c4c5e-c05a-4fa5-95aa-c5a274279d8c,6b906235-110b-475e-88cd-4ddef78eb8b8,a6b9248c-acc9-4e7b-847f-9e566931b8f9;d777c33f-30c3-4e9d-8ff5-3909d12ffa2a,NULL,Webinar,"Richard Lee, Ian Chapman-Curry",Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,40ECBAEA-9783-479A-8EB9-9D39F577C01D,Speaker(s),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
241,/Events/2020/The-impact-of-COVID-19-on-financial-services-firms,en-GB,7EFE0AC3-4192-4506-B65E-C2E12BB9372F,The impact of COVID-19 on financial services firms,The impact of COVID-19 on financial services firms – key regulatory and employment issues,How will COVID-19 affect financial services firms from a regulatory perspective?,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,26:25.0,NULL,13:00,13:45,BST,0,NULL,"<p>Join us for a joint Financial Services and Employment webinar hosted by Ian Mason, Partner and Head of UK Financial Services Regulatory team, Sushil Kuner, Principal Associate, UK Financial Services Regulatory team and Simon Stephen, Director, UK Employment team. During the webinar we will cover:</p>

<ul>
	<li>Who are the key workers at financial services firms?</li>
	<li>Which financial services employees are expected to travel to and work from the office?</li>
	<li>What are the responsibilities of <abbr title=""Financial Conduct Authority"">FCA</abbr> regulated firms to customers during the crisis?</li>
	<li>What are the <abbr title=""Financial Conduct Authority"">FCA</abbr>&#39;s expectations on the financial resilience of firms?</li>
	<li>What other issues do financial services firms need to be aware of at this time?</li>
	<li>Related employment issues impacting on financial services firms</li>
</ul>

<p>During the live webinar our speakers will cover the above issues and answer as many audience questions as they can.</p>
","<p>This event is free of charge.<br />
<br />
Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,00:27.0,https://reaction.gowlingwlg.com/reaction/RSGenPage.asp?RSID=wkpGwtlXrLcMut40I8tabjiFvaPxLi7kuhb2FVkFUtY,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,06cecb4c-c959-4674-9047-d5d8ee8c673c,aa5dcce5-fbe3-48b0-8a5c-b653c134f240;d8837737-40d2-4472-8a9e-ba4101ec2105,6b906235-110b-475e-88cd-4ddef78eb8b8,af5005a2-4ec9-49ba-b7bd-262bb191b111;2d03f2db-bf91-45db-a827-470484fe7ddb;0ccc4841-f8a1-4356-853e-e2ad6f7e230c,NULL,Webinar,"Ian Mason, Simon Stephen, Sushil Kuner",Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
242,/Events/2020/COVID-19-Impact-of-suspended-limitation-periods,en-GB,7ACFA38B-D170-45A7-AD53-0A08C2F9F71A,COVID-19: Impact of suspended limitation periods,"COVID-19: Impact of suspended limitation periods on Ontario construction projects	","On March 23, 2020, the province of Ontario has declared the construction industry an ""essential workplace"".  Meanwhile, governments and private entities are increasing restrictions on mass gatherings. Some employees are refusing to go to work due to a fear of infection. As the spread of COVID-19 creates a ripple effect on the construction industry, it raises challenging issues for owners, contractors and trades in the industry across the country.",~/getmedia/2bf0a519-c66c-4cc6-ae20-a25148a32630/040230-COVID-19-Ontario-Construction-Webinar.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Webinar,00:00.0,00:00.0,12:00,13:00,EST,0,NULL,"<p>On March 23, 2020, the Province of Ontario declared the construction industry as an &quot;essential workplace&quot;&nbsp;and on the other hand increasing restrictions are being put in place on mass gatherings both by governments and private entities. As the spread of the virus begins to have a ripple effect on the construction industry, and the Province considers additional, escalated actions &ndash; this is raising challenging questions and issues for owners, contractors and trades in the construction industry across the Country.</p>

<p>In light of these challenging economic realities, it is now imperative to understand how to protect your payment rights and investments made to construction projects. To help our clients navigate this challenging time, Gowling WLG invites you to a webinar designed to give clarity on a range of complex issues arising as a result.</p>

<p>Our discussion will include the following:</p>

<ul>
	<li>Suspension of limitation periods in the Province of Ontario</li>
	<li>Impact on preserving and perfecting construction liens</li>
	<li>Limited access to the Ontario Superior Court of Justice on vacating construction liens</li>
	<li>Impact on payment holdbacks</li>
	<li>Impact on prompt payment and adjudication</li>
	<li>Construction projects as an &quot;essential workplace&quot;.</li>
</ul>
",NULL,NULL,00:00.0,https://sites-gowlingwlg.vuturevx.com/103/5173/landing-pages/event-registration-(blank-form).asp,NULL,Register for this webinar,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,9cebeaf8-d868-4884-b035-03f46770de62,6b906235-110b-475e-88cd-4ddef78eb8b8,dd6fafb1-ecf7-491d-ac34-0e0f405cea0d;a4cf60c6-613e-4604-bc4d-aac55528b3e3;5d3ffd40-9f34-464a-ac35-74035908df13;b1a1b208-ac53-4ad5-9a3e-12e168384a2f;ab465159-e0fc-4af9-b8ef-770846767b74;7669672b-04fc-4c7a-a4cd-16cfb6e777ab,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/103/5173/landing-pages/event-registration-(blank-form).asp,Register for this webinar,GWLG.Canada,0,NULL,Hosts,NULL,NULL,NULL,Construction,COVID-19: How will coronavirus impact your business?,NULL,NULL,NULL,NULL
243,/Events/2020/Strategies-to-help-businesses-deal-with-COVID-19,en-GB,944A5283-79D8-425C-9C3C-1E1B01D049F5,Strategies to help businesses deal with COVID-19,Strategies to help businesses deal with COVID-19 financial liquidity issues,"In times of economic uncertainty, lenders might be reluctant to provide loans to businesses at times when access to liquidity is most needed. As the fallout from COVID-19 continues, market observers are watching closely as governments, financial institutions and corporations navigate these economic hurdles.",~/getmedia/6e162e13-f609-49b0-85a5-c2ceef9fa86f/200403-COVID-19-Financial-Liquidity.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Webinar,00:00.0,00:00.0,12:00,13:00,EST,0,NULL,"<p>In times of economic uncertainty, lenders might be reluctant to provide loans to businesses at times when access to liquidity is most needed. As the fallout from COVID-19 continues, market observers are watching closely as governments, financial institutions and corporations navigate these economic hurdles.</p>

<p>Join us for an upcoming webinar hosted by Gowling WLG on&nbsp;<strong>Tuesday, April 7</strong>&nbsp;at 12:00 P.M. EDT. Our panel of experienced practitioners will provide valuable and practical insights from a wide range of perspectives on the topic of liquidity support to small and medium sized companies and steps needed to meet their operational cash flow requirements.</p>

<p>Topics of this one-hour webinar include:</p>

<ul>
	<li>The importance of liquidity</li>
	<li>Restructuring by agreement versus insolvency processes</li>
	<li>Stakeholder perspectives</li>
	<li>Responses from financial institutions</li>
	<li>Government support funds, including direct liquidity loans, emergency support and guarantees to lenders</li>
	<li>Identifying the challenges and finding solutions</li>
	<li>Financial relief, including wage support and relief from HST/GST, forbearance, covenants and payments</li>
	<li>What else can you be doing to preserve liquidity</li>
</ul>

<h2>Guest speakers</h2>

<ul>
	<li>Steve Ferguson &ndash; Managing Director,&nbsp;Alvarez &amp; Marsal</li>
	<li>Scott Sinclair &ndash; President of Sinclair Range</li>
</ul>
",NULL,NULL,30:00.0,https://sites-gowlingwlg.vuturevx.com/103/5168/landing-pages/event-registration-(blank-form).asp,NULL,Register for this webinar,2AC31727-4C97-4C05-A86C-595D3554B185,06cecb4c-c959-4674-9047-d5d8ee8c673c,NULL,6b906235-110b-475e-88cd-4ddef78eb8b8,5ae5a269-9c5f-4332-920e-28b31ec9066e;31589b1d-8773-40f3-b07d-0b7a1a5eee2f;4c19a7dc-0f41-4d79-bee9-5d126e9e317f,NULL,Webinar,"David F.W. Cohen, Geneviève Cloutier, Tom Cumming",Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/103/5168/landing-pages/event-registration-(blank-form).asp,Register now,GWLG.Canada,0,NULL,Gowling WLG hosts,NULL,NULL,Financial Institutions & Services,NULL,COVID-19: How will coronavirus impact your business?,NULL,NULL,NULL,NULL
244,/Events/2020/Updates-to-The-Job-Retention-Scheme,en-GB,922D7EE4-0DD9-48A9-B2CF-4612EA6B729C,Updates to The Job Retention Scheme,The Job Retention Scheme – How does the updated guidance change the position?,Join Siobhan Bishop from our employment team and Richard Lee from our Combined HR Solutions / Pensions teams on <strong>Wednesday 08 April at 2.30pm</strong> as they discuss the latest changes and answer your HR benefits questions.,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,20:50.0,NULL,14:30,15:15,BST,0,NULL,"<p>Over the weekend, the Government issued new guidance for employers looking to place staff on furlough and claim money back through HMRC.</p>

<p>We hosted two webinars on the Job Retention Scheme last week and since then, things have swiftly moved on. Some of your key questions may have already been answered in our previous webinars but the latest guidance has brought up both clarifications and new questions.</p>

<p>Join Siobhan Bishop from our employment team and Richard Lee from our Combined HR Solutions / Pensions teams on <strong>Wednesday 08 April at 2.30pm</strong> as they discuss the latest changes and answer your HR benefits questions.</p>

<p>If you joined us last time, please do so again; if you couldn&#39;t make it before, you are more than welcome now.</p>
","<p>This event is free of charge.<br />
<br />
Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,19:41.0,https://reaction.gowlingwlg.com/reaction/RSGenPage.asp?RSID=20GDy5QNBPvsCnFPdSCjd0WZx0r-js_n03KUSrLdvgo ,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,d8837737-40d2-4472-8a9e-ba4101ec2105;a19c4c5e-c05a-4fa5-95aa-c5a274279d8c,6b906235-110b-475e-88cd-4ddef78eb8b8,79205c59-28cb-4630-bd62-bf070ba732b0;a6b9248c-acc9-4e7b-847f-9e566931b8f9;7e119a87-174d-49b2-9cc3-1270bd96a57e,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,40ECBAEA-9783-479A-8EB9-9D39F577C01D,Speaker(s),NULL,NULL,NULL,"Employment, Labour & Equalities, Pensions",COVID-19: How will coronavirus impact your business?,NULL,NULL,NULL,NULL
245,/Events/2020/M-A-webinar-series-M-A-in-uncertain-times,en-GB,6A41225E-F3B0-451A-84AC-A0A4D18D1EEC,M&A webinar series M&A in uncertain times,M&A webinar series | M&A in uncertain times,We will address how the disruptive effect of COVID-19 is impacting M&A transactions in Canada. We will share insights and offer practical steps parties can take now to address these challenges.,~/getmedia/ce3c8ac1-9508-4a14-9360-93d21fbde1c3/200409-ma-webinar-series.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Webinar,00:00.0,00:00.0,13:00,14:00,EDT,0,NULL,"<p>Uncertainty can result in a deal being delayed, altered or cancelled. Gowling WLG&#39;s M&amp;A team is hosting a series of webinars designed to explore, analyze and help clients and friends of our firm navigate the impacts uncertainty can have on transactions.</p>

<p>Our first one hour webinar will be held on&nbsp;<strong>Tuesday April 14</strong>&nbsp;at&nbsp;<strong>1:00 P.M. EDT.</strong>&nbsp;Our panel of experienced practitioners will provide valuable insights from both the buyer&#39;s and seller&rsquo;s perspectives. We will address how the disruptive effect of COVID-19 is impacting M&amp;A transactions in Canada. We will share insights and offer practical steps parties can take now to address these challenges.</p>

<p>Topics in this session will include:</p>

<ul>
	<li>The dynamics impacting transactions in their infancy</li>
	<li>Considerations for deals that have been signed but not yet closed</li>
	<li>The potential impact on deals already closed.</li>
</ul>

<h2>Stay tuned</h2>

<p><strong>How to prepare for M&amp;A deals post COVID-19</strong><br />
Tuesday, April 21 | 1:00 - 2:00 p.m. EDT<br />
<a class=""c-button-white"" href=""https://sites-gowlingwlg.vuturevx.com/103/5196/landing-pages/event-registration-(blank-form).asp"" target=""_blank"">Register now &raquo;</a></p>

<p><strong>Deal dynamics post pandemic</strong><br />
Tuesday, April 28 | 1:00 - 2:00 p.m. EDT<br />
<a class=""c-button-white"" href=""https://sites-gowlingwlg.vuturevx.com/103/5196/landing-pages/event-registration-(blank-form).asp"" target=""_blank"">Register now &raquo;</a></p>
",NULL,NULL,31:30.0,https://sites-gowlingwlg.vuturevx.com/103/5196/landing-pages/event-registration-(blank-form).asp,NULL,Register for webinar,90A71CC3-07A3-4265-B0C4-C31612546237,NULL,60bb1a30-82de-4038-aa38-9b01a87215c6;4f997fc2-8233-4465-a01d-e68205aef05c,6b906235-110b-475e-88cd-4ddef78eb8b8,ede5ead0-1723-4206-be45-ecf0ae1db2b4;620c5627-14c7-4f39-83ad-5f7dc96db32d;3c773c26-47cd-47af-9864-e8d48e548087;7e822e16-356b-4251-84ae-83b9293fa418;5eef2bbf-b67f-4703-96ac-e8afa97f05fa,NULL,Webinar,NULL,Gowling WLG Webinar,44232,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,~/en/topics/covid-19-how-will-coronavirus-impact-your-busines/,Visit our COVID-19 resource centre,GWLG.Canada,0,NULL,Gowling WLG hosts,NULL,NULL,NULL,"Capital Markets, Corporate, M&A and Capital Markets",COVID-19: How will coronavirus impact your business?,NULL,NULL,NULL,NULL
246,/Events/2020/Insurance-issues-for-employers-during-COVID-19,en-GB,E45875BC-FD79-48C1-A3F9-6E9E7E9EC297,Insurance issues for employers during COVID-19,Insurance issues for directors during COVID-19,"In the era of COVID-19, employers will face a range of questions related to claims and insurance. You are invited to join us for a virtual panel discussion on Friday, April 17 at 12 noon EDT.",~/getmedia/6dc7556e-bb47-4be6-9587-cbd6e48f46e0/200413-insurance-issues.jpg.xml?width=930&height=450&ext=.jpg,thumbnail for april 17 webinar ,GWLG.Webinar,00:00.0,00:00.0,12:00,13:00,EDT,0,NULL,"<p>In the era of COVID-19, employers will face a range of questions related to claims and insurance. You are invited to join us for a virtual panel discussion on&nbsp;<strong>Friday, April 17</strong>&nbsp;at&nbsp;<strong>12 noon EDT</strong>.</p>

<p>This webinar will be co-hosted by Gowling WLG and BFL CANADA Insurance Services. Leading authorities from various regions of the country will explore the legal and insurance issues that are arising at an unprecedented rate in these challenging times.</p>

<p>Topics to be covered include:</p>

<ul>
	<li>Types of insurance coverage that may be triggered</li>
	<li>Directors&rsquo; and officers&rsquo; liability and insurance</li>
	<li>Employment practices liability insurance</li>
	<li>COVID-19 claims already launched in the US and their possible effects on Canadian employers</li>
	<li>Cyber security</li>
	<li>Notices and disclosure to investors and stakeholders</li>
	<li>The outcome of claims issued in previous pandemics</li>
	<li>Effects on insurers and insurance renewals</li>
</ul>

<h2>BFL CANADA Insurance Services Speaker</h2>

<ul>
	<li>Roger Hacala, National Practice Leader - Financial &amp; Professional Services, BFL</li>
</ul>

<h2>Co-host</h2>

<p><img alt=""BFL CANADA logo"" src=""~/getmedia/3f02e3be-5ce3-440c-8b32-7498b122e54b/BFL_Logo_RGB_Bleu.jpg.xml?width=248&amp;height=124"" style=""width: 248px; height: 124px;"" /></p>
",NULL,NULL,30:00.0,https://sites-gowlingwlg.vuturevx.com/103/5210/landing-pages/event-registration-(blank-form).asp,NULL,Register for this webinar,90A71CC3-07A3-4265-B0C4-C31612546237,NULL,3389c6cf-54c5-47db-81a0-7c09be2be982,6b906235-110b-475e-88cd-4ddef78eb8b8,bd7f8b8d-ad9f-4a23-a17c-8f9950d52b6d;3f7c519a-6612-414e-a791-aec1e9ed60b1,NULL,Webinar,NULL,Gowling WLG Webinar,44232,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/103/5210/landing-pages/event-registration-(blank-form).asp,Register now,GWLG.Canada,0,NULL,Gowling WLG Speakers,t-white,NULL,NULL,Insurance & Professional Liability,COVID-19: How will coronavirus impact your business?,NULL,NULL,NULL,NULL
247,/Events/2020/Data-protection-implications-of-an-increased-shift,en-GB,13FB5ED1-FE22-4F5E-96DD-2D361E85327A,Data protection implications of an increased shift,Webinar: Data protection implications of an increased shift to online trading in the time of COVID-19 ,"Data protection implications of an increased shift to online trading in the time of COVID-19 and why cyber security is more important than ever, despite Morrisons' recent victory.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,00:00.0,45:00.0,10:00,10:45,BST,1,0.75,"<p><strong>Data protection implications of an increased shift to online trading in the time of COVID-19 and why cyber security is more important than ever, despite Morrisons&#39; recent victory.</strong></p>

<p>The outbreak of the coronavirus (COVID-19) has caused significant impact to all types of businesses as the government&#39;s efforts to stop the spread of the virus included the closure of all stores selling non-essential goods and services. Numerous businesses, especially those that have traditionally operated as brick-and-mortar stores, have shifted their focus to the online market.</p>

<p>Whether your business is new to online trading or you wish to ensure more established practices are lawful, during this webinar our data privacy experts will provide guidance on some of the key e-commerce and data protection issues to consider such as online terms and conditions, information notices and the ICO&#39;s new draft Direct Marketing Code of Practice.</p>

<p>Remote work in the time of COVID-19 also presents unique and heightened cyber security risks for businesses. We will discuss emerging cyber threats and steps businesses should be taking to ensure they remain safe and secure. Our speakers will also look at the much anticipated Supreme Court decision in the case of <em>Morrison Supermarkets Plc v Various Claimants</em>. Whilst the Court held that Morrisons was not vicariously liable for the actions of its rogue employee, the outcome is unlikely to change the growing trend in group claims and other claims against businesses arising out of personal data breaches.</p>

<p>During this live ThinkHouse IT Masterclass webinar there will be an opportunity for you to ask questions to our speakers and we will endeavour to answer as many as possible in the available time.</p>

<p>This webinar is free of charge, but places are limited so please register to secure your place.</p>
","<p>This event is free of charge.</p>

<p>This event will run for 45 minutes. Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession.<br />
Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,00:00.0,https://reaction.gowlingwlg.com/reaction/RSGenPage.asp?RSID=zWNkXdyX7JBU7ENgZltGePAMQ61E89BEo4UephqJp0k,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,de517572-4373-4b36-844b-18be93f6f9bc;cbbbf9eb-a169-4053-8043-7085cfb8fd4a;3fc2ca8c-9d19-44ba-a3a9-ad1ecb11e900;f1e960f5-8231-4c56-b7bf-9898ebb538c5;06cecb4c-c959-4674-9047-d5d8ee8c673c;2cd1b5c0-8992-4c92-b8e8-d65d8b86dbed;5ad41b49-d460-489a-95b9-84c854eda6f1;a929915c-1d1f-4e9c-8c8b-f34a30e2ab4e;df411e0b-2c62-4a68-8456-2c7c1dd0b4da;049c8249-7ff3-4ee3-a439-590f45fd5cff;c0b8c1a8-73eb-4122-972f-dc5df852f68d;dede4518-e78c-4b48-a143-a2338be5d0ac;59be9dcd-e5f0-43e4-9d50-442a658eda18;0357076d-2635-451a-8d67-ec01f9f3082b;cdfc9b50-74c2-4af5-9508-342935f81ccd,2e9a87e2-3d2e-4d69-ba9c-06b4b358ca0d,6b906235-110b-475e-88cd-4ddef78eb8b8;a143cbfd-d333-42a0-89a6-7287894464f1,d3e0fa3e-1011-4fe0-b62a-88c920f62d49,NULL,Webinar,Helen Davenport,Webinar,34471,GWLG.Events,NULL,~/getmedia/d2b9ca59-d716-4c60-abb1-472dd7eeec23/thinkhouse-primary-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/0363a899-4ad3-4e9e-a428-fbf0ebf9f31d/thinkhouse-primary-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,NULL,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,9fbe191e-3bcf-45de-a2ba-338bb194fc9d;58076178-da60-4ab6-a07c-ef250971ebf7,"Automotive, Aviation, Aerospace & Defence, Construction & Engineering, Energy, Financial Institutions & Services, Food & Beverage, Government Contracting & Public Sector , Health & Care, Infrastructure, Life Sciences, Mining, Nuclear, Real Estate, Retail, Leisure & Hotels, Tech",Cyber Security & Data Protection Law,"COVID-19: How will coronavirus impact your business?, ThinkHouse","London, Birmingham",NULL,NULL,NULL
248,/Events/2020/Ask-our-lawyers-Employment-law-COVID-19,en-GB,88BB3302-FC93-4526-B040-946F0B61A824,Ask our lawyers: Employment law COVID-19,Ask our lawyers: Employment law & COVID-19,"The Employment, Labour and Equalities Group at Gowling WLG will be holding a live 'Ask our Lawyers' session on a variety of topics related to COVID-19 and the workplace challenges your business might be facing, whether you continue to operate as an essential business or have temporarily ceased operations voluntarily or pursuant to a government-mandated shutdown.",~/getmedia/ed41b8c4-4e70-478a-8d6b-98e8fe944466/200417-ask-our-lawyers.jpg.xml?width=930&height=450&ext=.jpg,person holding pen writing in notebook in front of laptop,GWLG.Webinar,00:00.0,00:00.0,12 noon,1 p.m.,EDT,0,NULL,"<p>The Employment, Labour and Equalities Group at Gowling WLG will be holding a live &#39;Ask our Lawyers&#39;&nbsp;session on a variety of topics related to COVID-19 and the workplace challenges your business might be facing, whether you continue to operate as an essential business or have temporarily ceased operations voluntarily or pursuant to a government-mandated shutdown. The session will also address the various government relief programs that have been introduced by provincial governments and by the federal government over the last several weeks. These are unchartered waters we all find ourselves in; allow us to help you and your organization navigate through and weather the storm.</p>

<p>You are invited to join us for a virtual panel discussion on&nbsp;<strong>Thursday, April 23, 2020</strong>&nbsp;at&nbsp;<strong>12:00 noon EDT.</strong></p>

<p>The purpose of this session is to respond to your inquiries. We ask that you please submit your questions in advance by completing the&nbsp;<a href=""https://www.surveymonkey.com/r/928XBVQ"" target=""_blank""><strong>quick pre-webinar survey which can be found at this link</strong></a>.</p>

<p>While the content of the session will be dictated primarily by the participants, you can expect that we will address the following topics:</p>

<ul>
	<li>Canada Emergency Response Benefit (CERB)</li>
	<li>Canada Emergency Wage Subsidy (CEWS)</li>
	<li>Temperature Screening and Wellness Checks in the workplace</li>
	<li>Temporary Layoffs</li>
	<li>Salary and/or hours of work reductions</li>
	<li>Positive COVID case protocol</li>
	<li>Considerations for foreign workers</li>
	<li>New leaves of absence and other changes to employment standards</li>
</ul>
",NULL,NULL,00:00.0,https://sites-gowlingwlg.vuturevx.com/103/5225/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,d8837737-40d2-4472-8a9e-ba4101ec2105,6b906235-110b-475e-88cd-4ddef78eb8b8,64c86b79-7dc4-409e-8260-f244f6349dc3;e72ca6ad-e2e0-446b-9914-9eb2ed87e5b9;8019d9ad-34b0-4cbd-8dfb-99a7578a4b6a,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/103/5225/landing-pages/event-registration-(blank-form).asp,Register for this webinar,GWLG.Canada,0,NULL,Speakers,NULL,NULL,NULL,"Employment, Labour & Equalities",COVID-19: How will coronavirus impact your business?,NULL,NULL,NULL,NULL
249,/Events/2020/Taking-control-in-uncertain-times,en-GB,B67A1146-4D76-418F-B3F1-FA55529EBCC7,Taking control in uncertain times,Taking control in uncertain times: preparing your business for sale,"Uncertainty can result in a deal being delayed, altered or cancelled. Gowling WLG's M&A team is hosting a series of webinars designed to explore, analyze and help clients and friends of our firm navigate the impacts uncertainty can have on transactions.",~/getmedia/a68b94cc-3aba-46da-a5ac-30015b62f572/200417-M-A-Webinar-2-Prepare-to-sell-business.jpg.xml?width=930&height=450&ext=.jpg,thumbnail for M&A April 21 webinar,GWLG.Webinar,00:00.0,00:00.0,13:00,14:00,EDT,0,NULL,"<p>Uncertainty can result in a deal being delayed, altered or cancelled. Gowling WLG&#39;s M&amp;A team is hosting a series of webinars designed to explore, analyze and help clients and friends of our firm navigate the impacts uncertainty can have on transactions.</p>

<p>COVID-19 has devastated the global economy, caused many companies to freeze or significantly curtail operations, and impacted many M&amp;A transactions. However, if you are a Canadian small or medium enterprise (SME) contemplating a sale of your business in the near future, this is the perfect time to prepare your company for a successful sale. Our panel of M&amp;A practitioners will provide practical tips on how best to use a slowdown in operations to prepare your business for a future M&amp;A transaction.</p>

<p>Topics in this session will include:</p>

<ul>
	<li>Preparing for Legal Due Diligence and Disclosure Schedules, including reviewing minute books, employee and contractor documentation, material contracts, intellectual property, and more</li>
	<li>Organization of Due Diligence Materials</li>
	<li>Tax-Efficient Structuring of the Transaction</li>
</ul>
",NULL,NULL,00:00.0,https://sites-gowlingwlg.vuturevx.com/103/5196/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,60bb1a30-82de-4038-aa38-9b01a87215c6;04411fac-dc23-4861-bd0c-aada44efcdeb;56646cda-20d7-43d4-b13c-886e1cd90c52;5e7a4c28-1f41-45d6-9485-1a23041b34f6,6b906235-110b-475e-88cd-4ddef78eb8b8,a2b7b2e1-b2ce-441b-8021-2c65bd258ef7;f6ee971c-f01b-439f-b38e-6c457844400f;4b827bd7-79e3-4db7-9446-950eaf10c14f;d2ac71e9-ae95-4802-98de-8a666d3d7255;fd18093c-efbc-448f-a1ff-bc60d993287f,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,Gowling WLG hosts,NULL,NULL,NULL,"Capital Markets, Corporate Commercial, Mergers & Acquisitions, Tax",COVID-19: How will coronavirus impact your business?,NULL,NULL,NULL,NULL
250,/Events/2020/COVID-19-survival-guide-Commercial-leasing,en-GB,27F34E0E-4855-4632-9C19-D52F92EF0124,COVID-19 survival guide: Commercial leasing,COVID-19 survival guide: Commercial leasing,The COVID-19 pandemic is wreaking havoc on the commercial leasing industry and posing challenges for both landlords and tenants.,~/getmedia/a90d70bd-2550-48ca-acc7-d052cb45881a/200417-commercial-leasing-event.jpg.xml?width=930&height=450&ext=.jpg,skyscrapers at night,GWLG.Webinar,00:00.0,00:00.0,12 noon,1 p.m.,PDT,0,NULL,"<p style=""clear:both;"">The COVID-19 pandemic is wreaking havoc on the commercial leasing industry and posing challenges for both landlords and tenants.</p>

<p style=""clear:both;"">Join a group of leading authorities from Gowling WLG for an informative webinar on&nbsp;<strong>Monday, April 27</strong>&nbsp;at&nbsp;<strong>12:00 p.m. (PT)</strong>&nbsp;and&nbsp;<strong>3:00 p.m. (ET)</strong>. The speakers from various regions across the country will share their insights to help you navigate the commercial leasing landscape in these unprecedented times.</p>

<p style=""clear:both;"">Topics of the one-hour session include commercial property closures, operating costs, the changing economic picture, and rent deferral or abatement. The panelists will provide clarity on these issues as well as strategies to deal with challenges in the face of the ongoing pandemic.</p>

<p style=""clear:both;"">Landlords, tenants and brokers will all benefit from the practical lessons and tips offered during this virtual panel discussion, the first in a two-part series.</p>
",NULL,NULL,00:00.0,https://sites-gowlingwlg.vuturevx.com/104/5158/landing-pages/event-registration-(blank-form).asp,NULL,Register for this webinar,2AC31727-4C97-4C05-A86C-595D3554B185,59be9dcd-e5f0-43e4-9d50-442a658eda18,894fab50-b948-4d2f-a516-86150d34de04,6b906235-110b-475e-88cd-4ddef78eb8b8,0be2c139-c465-4e30-ab0d-82bb70c7dd5d;28adebbb-5239-4131-b123-eb860852ce0c;39fa448e-ef09-4648-aa5d-6ea433daf825;bc07051b-1c39-4819-814f-b0175074d5d6,NULL,Webinar,"Susan D. Rosen, Joel Camley, Julie Desrochers, Darren J. Taylor",Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/104/5158/landing-pages/event-registration-(blank-form).asp,Register now,GWLG.Canada,0,NULL,Gowling WLG hosts,NULL,NULL,Real Estate,Commercial Leasing,COVID-19: How will coronavirus impact your business?,NULL,NULL,NULL,NULL
252,/Events/2020/Qualifying-for-government-COVID-19-funding,en-GB,FB4B4389-121F-4039-B8D8-20598651D1B6,Qualifying for government COVID-19 funding,A practical overview and example of qualifying for government COVID-19 funding,"As the economic fallout continues from the COVID-19 pandemic, organizations across the country are facing financial challenges and asking about government support. Join us for a virtual panel discussion on Wednesday, April 29 at 12 noon EDT.",~/getmedia/b6d51f2b-42b8-4c5a-ab08-c6716d34219c/200422-government-funding-qualifying.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Webinar,00:00.0,00:00.0,12 noon,1 p.m.,EDT,1,1 hour,"<p>As the economic fallout continues from the COVID-19 pandemic, organizations across the country are facing financial challenges and asking about government support. Join us for a virtual panel discussion on&nbsp;<strong>Wednesday, April 29</strong>&nbsp;at&nbsp;<strong>12 noon EDT</strong>.</p>

<p>This webinar will be co-hosted by lawyers at Gowling WLG and <a href=""https://www.ggfl.ca"" target=""_blank"">GGFL Chartered Professional Accountants</a>. Our leading authorities will provide a practical overview of the legal, accounting and payroll issues that are frequently arising in these difficult times.</p>

<p>Our panelists will:&nbsp;</p>

<ul>
	<li>Provide an overview of the Canadian Emergency Wage Subsidy (CEWS), the Canadian Emergency Response Benefit (CERB) and the Canada Emergency Business Account (CEBA)</li>
	<li>Review hypothetical examples for relief programs available</li>
	<li>Discuss cash flow management commentary &ndash; what will cash flow look like?</li>
	<li>Discuss risk management in general: force majeure clauses, employment contractual considerations, etc.</li>
</ul>

<h2>GGFL&nbsp;speakers</h2>

<ul>
	<li><a href=""https://www.ggfl.ca/ourteam/natalie-evans/"" target=""_blank"">Natalie Evans, Partner, Head of Assurance, Advisory Services</a></li>
	<li><a href=""https://www.ggfl.ca/ourteam/chad-saikaley/"" target=""_blank"">Chad Saikaley, Partner, Head of Tax, Advisory Services</a></li>
</ul>
",NULL,NULL,00:00.0,https://sites-gowlingwlg.vuturevx.com/103/5237/landing-pages/event-registration-(blank-form).asp,NULL,Register for this webinar,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,39ca3d7e-072f-42c5-ad32-ee659513b4b3;04411fac-dc23-4861-bd0c-aada44efcdeb,6b906235-110b-475e-88cd-4ddef78eb8b8,55398393-306d-4c8d-8b10-048503c07707;2e40348a-4da4-4219-b4ba-374e08ace0a5,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/103/5237/landing-pages/event-registration-(blank-form).asp,Register for this event,GWLG.Canada,0,NULL,Gowling WLG speakers,NULL,NULL,NULL,"Government Affairs, Corporate Commercial",COVID-19: How will coronavirus impact your business?,NULL,NULL,NULL,NULL
253,/Events/2020/VR-AR-IP-Portfolios-during-COVID-19-Webinar,en-GB,9790FA44-636B-4780-B191-6F304A4D0132,VR/AR IP Portfolios during COVID-19 Webinar,Managing your VR/AR IP portfolio during COVID-19,"Partners Scott Foster, leader of the firm's Vancouver IP litigation group, and Roch Ripley, head of Vancouver's IP department, will host a one-hour webinar on managing your VR/VR IP portfolio during the pandemic.",~/getmedia/bb3b9397-68fb-4835-a92b-02968703be39/200514-VR-AR-IP-Portfolio-COVID-19-Webinar.jpg.xml?width=930&height=450&ext=.jpg,Person using VR goggles - presented beside webinar title and date information,GWLG.Webinar,28:37.0,28:46.0,12:00,13:00,PDT,1,1 hour,"<p>Calling all <abbr title=""Virtual Reality"">VR</abbr>/<abbr title=""Augmented Reality"">AR</abbr> companies.</p>

<p>Join the <strong>Vancouver VR/AR Association</strong> and <strong>Gowling WLG</strong> on <strong>Thursday, May 14</strong>&nbsp; for an informative webinar on how to manage your <abbr title=""Intellectual Property"">IP</abbr> portfolio during this challenging time.</p>

<p>Virtual reality (<abbr title=""Virtual Reality"">VR</abbr>) and augmented reality (<abbr title=""Augmented Reality"">AR</abbr>) companies are facing uneven cash flow and financial challenges during the current pandemic. In these times of crisis, spending money on your intellectual property (<abbr title=""Intellectual Property"">IP</abbr>) portfolio may be difficult when you face payroll or liquidity issues. However, even in these stressful times, prudent management of your <abbr title=""Intellectual Property"">IP</abbr> portfolio can benefit you and your company greatly.</p>

<p>Partners <a href=""~/en/people/scott-foster/"">Scott Foster</a>, leader of the firm&rsquo;s Vancouver <abbr title=""Intellectual Property"">IP</abbr> litigation group, and <a href=""~/en/people/roch-ripley/"">Roch Ripley</a>, head of Vancouver&rsquo;s <abbr title=""Intellectual Property"">IP</abbr> department, will host a <strong>one-hour webinar</strong> on managing your <abbr title=""Virtual Reality"">VR</abbr>/<abbr title=""Augmented Reality"">AR</abbr> <abbr title=""Intellectual Property"">IP</abbr> portfolio during the pandemic, with a focus on strategies and best practices. They will share insights, and answer your questions, on navigating financial challenges and deferring IP-related costs without sacrificing your portfolio&rsquo;s value so that you can benefit financially when this crisis is over.</p>

<p>RSVP now to reserve your spot.</p>

<p><em>*This webinar counts for up to 1 hour of Substantive credits toward the mandatory annual CPD requirement.</em></p>
",NULL,NULL,29:44.0,https://sites-gowlingwlg.vuturevx.com/104/5249/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,90A71CC3-07A3-4265-B0C4-C31612546237,NULL,08b9a44c-bb26-4255-9779-296a124fcbee;82f237a8-0da3-46f1-86b5-4392a020f41a,6b906235-110b-475e-88cd-4ddef78eb8b8,5846f9f5-b661-4da5-8573-0f0081e3c11b;b90b93dd-dfd5-4115-9af8-148b313aa426,NULL,Webinar,NULL,Gowling WLG Webinar,44232,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/104/5249/landing-pages/event-registration-(blank-form).asp,Register now,GWLG.Canada,0,63387DF2-25F3-4268-9B20-2D4323F1E706,Speakers,NULL,afd10be7-206c-4f2d-9094-257d6b5e7bcc,NULL,"Intellectual Property Law, IP Litigation & Strategy",COVID-19: How will coronavirus impact your business?,Vancouver,NULL,NULL,NULL
254,/Events/2020/Managing-Cleantech-IP-Webinar,en-GB,98A1FE10-010A-42B9-AD60-BB969A8C7570,Managing Cleantech IP Webinar,Managing Cleantech IP in a challenging economy,"In celebration of World Intellectual Property Day and this year's ""Innovate for a Green Future"" theme, Gowling WLG invites you to a live webinar exploring the major opportunities and challenges that surround the protection of clean technologies in Canada.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,56:49.0,56:59.0,10 a.m.,11 a.m.,PST,1,1 hour,"<p><strong>In celebration of World Intellectual Property Day and this year&#39;s &quot;Innovate for a Green Future&quot; theme, Gowling WLG invites you to a live webinar exploring the major opportunities and challenges that surround the protection of clean technologies in Canada.</strong></p>

<p>On <strong>April 30</strong>, join our partners Brian Lee and Roch Ripley as they discuss a number of key topics in this area, including:</p>

<ul>
	<li>Innovation and patent trends in Canada&#39;s clean technology sector</li>
	<li>Available financial and other resources in support of clean technology innovation</li>
	<li>Clean technology IP protection in times of crisis and challenging economic conditions</li>
	<li>Portfolio managements tips and strategies to control costs and preserve rights</li>
</ul>

<p><br />
<em>*This webinar counts for up to 1 hour of <strong>Substantive credits </strong>toward the mandatory annual CPD requirement.</em></p>
",NULL,NULL,57:55.0,https://sites-gowlingwlg.vuturevx.com/103/5248/landing-pages/event-registration-(blank-form).asp?sid=blankform,NULL,Register for this webinar,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,08b9a44c-bb26-4255-9779-296a124fcbee,NULL,9a7a979c-500a-45ae-b4fd-1fed3f6bd376;b90b93dd-dfd5-4115-9af8-148b313aa426,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,Speakers,NULL,NULL,NULL,Intellectual Property,NULL,NULL,NULL,NULL,NULL
255,/Events/2020/To-patent-or-keep-secret,en-GB,9B47D4C8-0D85-45CB-99A6-E08649960885,To patent or keep secret?,To patent or keep secret?,"Given the frenetic pace of today's innovation lifecycle, do patents always afford the best protection of proprietary inventions? Or, with increasingly strong trade secret laws around the world, should innovators instead consider keeping their smart ideas under wraps indefinitely?",~/getmedia/05bcb24e-f86d-4030-b73a-a6413fb07bdb/200428-patent-or-secret.jpg.xml?width=930&height=450&ext=.jpg,drawer with keys hanging from the lock,GWLG.Webinar,00:00.0,00:00.0,09:00,10:00,EDT,1,1 hour,"<p>Given the frenetic pace of today&#39;s innovation lifecycle, do patents always afford the best protection of proprietary inventions? Or, with increasingly strong trade secret laws around the world, should innovators instead consider keeping their smart ideas under wraps indefinitely?</p>

<p>On <strong>May 13</strong>, join members of Gowling WLG&#39;s global intellectual property team for a live webinar that explores how IP owners can approach these questions strategically. Over the course of their discussion and Q&amp;A, our panel will highlight the key market and regulatory forces at play across multiple jurisdictions, while providing tactical tips to help you unlock the full potential of your IP assets.</p>

<p>This is the first installment of our <em>Lifecycle of a Smart Idea</em> series, dedicated to helping you maximise opportunity and minimise risk when taking innovative ideas to the global market.</p>

<p><em>*This webinar counts for up to 1 hour of Substantive credits toward the mandatory annual CPD requirement.</em></p>
",NULL,NULL,00:00.0,https://sites-gowlingwlg.vuturevx.com/103/5254/landing-pages/event-registration-(blank-form).asp,NULL,Register for this webinar,2AC31727-4C97-4C05-A86C-595D3554B185,de517572-4373-4b36-844b-18be93f6f9bc;cbbbf9eb-a169-4053-8043-7085cfb8fd4a;3fc2ca8c-9d19-44ba-a3a9-ad1ecb11e900;f1e960f5-8231-4c56-b7bf-9898ebb538c5;06cecb4c-c959-4674-9047-d5d8ee8c673c;2cd1b5c0-8992-4c92-b8e8-d65d8b86dbed;5ad41b49-d460-489a-95b9-84c854eda6f1;a929915c-1d1f-4e9c-8c8b-f34a30e2ab4e;df411e0b-2c62-4a68-8456-2c7c1dd0b4da;049c8249-7ff3-4ee3-a439-590f45fd5cff;c0b8c1a8-73eb-4122-972f-dc5df852f68d;dede4518-e78c-4b48-a143-a2338be5d0ac;59be9dcd-e5f0-43e4-9d50-442a658eda18;0357076d-2635-451a-8d67-ec01f9f3082b;cdfc9b50-74c2-4af5-9508-342935f81ccd,08b9a44c-bb26-4255-9779-296a124fcbee;85764222-db69-43cf-af79-2c6fcbda9589;82f237a8-0da3-46f1-86b5-4392a020f41a;b27944db-178f-4382-8db7-7f29f749de1c,471a00a2-e109-4e85-8152-8a92a4982d19;6b906235-110b-475e-88cd-4ddef78eb8b8,6767b2fc-7817-42ae-a54e-05595fe6c1cd;30cca9c9-eb77-425a-91fc-d88d492318e6;a21f77d5-b08e-4dac-9b34-efe5dddc9db1;5cea012b-601b-4c39-b759-4e4aac772877;573d1455-ea45-45db-a443-9b45707a1db2;49370d7b-1121-45da-90e6-96dcc50c1710,4d80633e-e9fd-4f36-8b08-807385b0f4e4,Webinar,"Gordon Harris, Michael Crichton, Huw Evans, Evgeniya Gizatullina, Thomas Mayer, Ivy Liang",Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/103/5254/landing-pages/event-registration-(blank-form).asp,Register for this webinar,GWLG.Canada,0,NULL,Gowling WLG hosts,NULL,NULL,"Automotive, Aviation, Aerospace & Defence, Construction & Engineering, Energy, Financial Institutions & Services, Food & Beverage, Government Contracting & Public Sector , Health & Care, Infrastructure, Life Sciences, Natural Resources, Nuclear, Real Estate, Retail, Leisure & Hotels, Tech","Intellectual Property, Patents, IP Litigation & Strategy, Intellectual Property Transactions","Intellectual property and disruptive technology, COVID-19: How will coronavirus impact your business?",NULL,NULL,NULL,NULL
256,/Events/2020/Canada-Asia-business-Preparing-Canadian-companies,en-GB,D46D8A2A-4D79-401F-9D11-B0D46CB76ED6,Canada-Asia business: Preparing Canadian companies,Canada-Asia business update: Preparing Canadian companies for the new normal,"Gowling WLG, the Hong Kong Economic & Trade Office (Toronto) and the Hong Kong Trade Development Council invite you to an online discussion on Canada-Asia business and the early emergence of the ""new normal.""",~/getmedia/94840380-68d5-4008-b166-45c9b40a72a5/200424-canada-asia-post-covid-recovery_1.jpg.xml?width=930&height=450&ext=.jpg,busy intersection at night,GWLG.Webinar,43:22.0,43:30.0,10:30 a.m.,11:30 a.m.,EDT,0,NULL,"<p>Gowling WLG, the&nbsp;<a href=""https://www.hketotoronto.gov.hk/"">Hong Kong Economic &amp; Trade Office (Toronto)</a>&nbsp;and the&nbsp;<a href=""https://www.hktdc.com/"">Hong Kong Trade Development Council</a>&nbsp;invite you to an online discussion on Canada-Asia business and the early emergence of the &quot;new normal.&quot;</p>

<p>COVID-19 has placed a tremendous humanitarian burden on the world, disrupted global commerce and shaken the world economy to its very foundations.</p>

<p>As Hong Kong and other leading Asian economies begin the early and still tenuous stages of recovery, our panel of experts will attempt to answer crucial questions including:</p>

<ul>
	<li>What lessons can Canadian companies learn from Asian markets?</li>
	<li>What challenges and opportunities lay ahead?</li>
	<li>How can Canadian companies reduce risk, find opportunities and prepare to operate in the post-COVID world?</li>
</ul>

<p>Join us for this timely webinar. Register now!</p>

<h2>Guest panelists</h2>

<ul>
	<li>Emily Mo - Director, Hong Kong Economic &amp; Trade Office (Toronto)</li>
	<li>Jeff Nankivell - Consul General, Consulate General of Canada in Hong Kong</li>
	<li>Kris Panday - Executive Director, Asian Development Bank</li>
	<li>Andrew Yui - Director, Canada, Hong Kong Trade Development Council</li>
</ul>
",NULL,NULL,30:00.0,https://sites-gowlingwlg.vuturevx.com/103/5244/landing-pages/event-registration-(blank-form).asp,NULL,Register for this webinar,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,04411fac-dc23-4861-bd0c-aada44efcdeb,NULL,4c3c2534-e644-427f-9b61-e7cd1aec53cf;9207f6c6-40a1-4fba-994e-c96d4a7ab4da,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/103/5244/landing-pages/event-registration-(blank-form).asp,Register now,GWLG.Canada;GWLG.China,0,NULL,Gowling WLG hosts,NULL,NULL,NULL,Corporate Commercial,NULL,NULL,NULL,NULL,NULL
257,/Events/2020/Managing-Cleantech-IP-in-a-challenging-economy,en-GB,7757671B-5903-4A95-BD5F-45D851D73246,Managing Cleantech IP in a challenging economy,Managing Cleantech IP in a challenging economy,"In celebration of World Intellectual Property Day and this year’s ""Innovate for a Green Future"" theme, Gowling WLG invites you to a live webinar exploring the major opportunities and challenges that surround the protection of clean technologies in Canada.",~/getmedia/d46ef328-49d6-436f-aab3-9b56faddf659/200427-Cleantech-IP-webinar.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Webinar,00:00.0,00:00.0,1 p.m.,2 p.m.,EDT,1,1 hour,"<p>In celebration of World Intellectual Property Day and this year&rsquo;s &quot;Innovate for a Green Future&quot;&nbsp;theme, Gowling WLG invites you to a live webinar exploring the major opportunities and challenges that surround the protection of clean technologies in Canada.</p>

<p>On&nbsp;<strong>April 30</strong>, join our partners Brian Lee and Roch Ripley as they discuss a number of key topics in this area, including:</p>

<ul>
	<li>Innovation and patent trends in Canada&rsquo;s clean technology sector</li>
	<li>Available financial and other resources in support of clean technology innovation</li>
	<li>Clean technology IP protection in times of crisis and challenging economic conditions</li>
	<li>Portfolio managements tips and strategies to control costs and preserve rights</li>
</ul>

<p><em>*This webinar counts for up to 1 hour of Substantive credits toward the mandatory annual CPD requirement.</em></p>
",NULL,NULL,31:42.0,https://sites-gowlingwlg.vuturevx.com/103/5248/landing-pages/event-registration-(blank-form).asp,NULL,Register for this webinar,2AC31727-4C97-4C05-A86C-595D3554B185,cdfc9b50-74c2-4af5-9508-342935f81ccd,08b9a44c-bb26-4255-9779-296a124fcbee,6b906235-110b-475e-88cd-4ddef78eb8b8,9a7a979c-500a-45ae-b4fd-1fed3f6bd376;b90b93dd-dfd5-4115-9af8-148b313aa426,NULL,Webinar,"Brian Y. Lee, Roch J. Ripley",Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,Speakers,NULL,NULL,Tech,Intellectual Property,COVID-19: How will coronavirus impact your business?,NULL,NULL,NULL,NULL
258,/Events/2020/Frustration-and-force-majeure-impact-of-COVID-19,en-GB,782F7604-064A-4F08-B384-B5A382D86342,Frustration and force majeure impact of COVID-19,Frustration and force majeure - the impact of COVID-19,"Tom Cox and Alex Wrixon will host a live ThinkHouse Foundations webinar on frustration and force majeure, considering in particular the likely legal effects of COVID-19 and Brexit on contracts.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,00:18.0,45:36.0,10:00,10:45,BST,1,0.75,"<p><strong>ThinkHouse Foundations runs exclusively for paralegals, trainees and lawyers of up to five years&#39; PQE.</strong></p>

<p>Tom Cox and Alex Wrixon will host a live ThinkHouse Foundations webinar on frustration and force majeure, considering in particular the likely legal effects of COVID-19 and Brexit on contracts.</p>

<p>They will also discuss how standard boiler-plate clauses might now be adapted in light of recent events, touch on the types of coverage issues that our insurance team are seeing, and look to take your questions on the subject.</p>

<p>This webinar is free of charge, but places are limited so please register to secure your place.</p>
","<p>This event is free of charge.</p>

<p>This event will run for 45 minutes. Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession.<br />
Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.<br />
&nbsp;</p>
",NULL,00:00.0,https://reaction.gowlingwlg.com/reaction/RSGenPage.asp?RSID=fpW_GSPL5WTdN3v68AP2gdB0h72N3Q1xvHx3VUELJbQ,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,de517572-4373-4b36-844b-18be93f6f9bc;cbbbf9eb-a169-4053-8043-7085cfb8fd4a;3fc2ca8c-9d19-44ba-a3a9-ad1ecb11e900;f1e960f5-8231-4c56-b7bf-9898ebb538c5;06cecb4c-c959-4674-9047-d5d8ee8c673c;2cd1b5c0-8992-4c92-b8e8-d65d8b86dbed;5ad41b49-d460-489a-95b9-84c854eda6f1;a929915c-1d1f-4e9c-8c8b-f34a30e2ab4e;df411e0b-2c62-4a68-8456-2c7c1dd0b4da;049c8249-7ff3-4ee3-a439-590f45fd5cff;c0b8c1a8-73eb-4122-972f-dc5df852f68d;dede4518-e78c-4b48-a143-a2338be5d0ac;59be9dcd-e5f0-43e4-9d50-442a658eda18;0357076d-2635-451a-8d67-ec01f9f3082b;cdfc9b50-74c2-4af5-9508-342935f81ccd,549cbe28-f188-44cd-85c0-0f4e23a23817;5027bdff-5a12-4e06-a0ca-809c3002882c;c774be76-80ec-4195-83a3-5850b5e2a4a2;04411fac-dc23-4861-bd0c-aada44efcdeb,6b906235-110b-475e-88cd-4ddef78eb8b8;a143cbfd-d333-42a0-89a6-7287894464f1,ca67aa19-bd53-48e1-97b2-b3dec72a50c8;73e21e2c-c353-4385-b087-4e589f60a3e4,NULL,Webinar,"Tom Cox, Alexander Wrixon",Webinar,34471,GWLG.Events,NULL,~/getmedia/5c73cf2c-5ac2-465b-9dff-9377774e4d9b/thinkhouse-foundations-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/a1bd54ac-e5a3-4c45-8585-8ccbdce9e524/thinkhouse-foundations-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK;GWLG.Global,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,NULL,"Automotive, Aviation, Aerospace & Defence, Construction & Engineering, Energy, Financial Institutions & Services, Food & Beverage, Government Contracting & Public Sector , Health & Care, Infrastructure, Life Sciences, Natural Resources, Nuclear, Real Estate, Retail, Leisure & Hotels, Tech","Commercial, Commercial Disputes, Commercial Litigation, Corporate Commercial","COVID-19: How will coronavirus impact your business?, ThinkHouse",NULL,NULL,NULL,NULL
259,/Events/2020/Estate-planning-in-the-COVID-era,en-GB,9D0B3B45-BE58-43A6-8784-4C10E909EBF2,Estate planning in the COVID era,Estate planning in the COVID era,"The global pandemic has brought heightened awareness of the need for individuals to revisit and update their estate plans. Join the lawyers of Gowling WLG for a virtual panel discussion on estate planning in the era of COVID-19 on Wednesday, May 6 at 12 noon.",~/getmedia/345c8800-62cc-4e61-b2d9-8af762047a01/200429-Estate-Planning-COVID-Era.jpg.xml?width=930&height=450&ext=.jpg,thumbnail for May 6 estate planning webinar,GWLG.Webinar,00:00.0,00:00.0,12 noon,1 p.m.,EDT,1,1 hour,"<p>The global pandemic has brought heightened awareness of the need for individuals to revisit and update their estate plans.</p>

<p>Join the lawyers of Gowling WLG for a virtual panel discussion on estate planning in the era of COVID-19 on&nbsp;<strong>Wednesday, May 6</strong>&nbsp;at&nbsp;<strong>12 noon EDT</strong>.</p>

<p>In this one-hour webinar, our leading authorities will discuss a range of issues related to tax and estate planning. Topics include: issues to consider in updating your Will; watching for signs of undue influence in estate planning; risks and considerations in the designation of powers of attorney; Canadian tax and probate planning; and principal residence planning for US citizens.</p>

<p><em>*This webinar counts for up to 1 hour of Substantive credits toward the mandatory annual CPD requirement.</em></p>
",NULL,NULL,33:00.0,https://sites-gowlingwlg.vuturevx.com/103/5264/landing-pages/event-registration-(blank-form).asp,NULL,Register now,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,NULL,6b906235-110b-475e-88cd-4ddef78eb8b8,e38a0711-3996-414c-947a-fbb07364d884;4eef1fbf-3df9-4a75-a931-75a938845276;87d8d2be-c711-4fa9-811e-f75267805656;9f6a1b6e-e804-4c2d-b166-61f2648fd66b;63544b26-b05f-4ac3-8b34-2b036dcb240f,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/103/5264/landing-pages/event-registration-(blank-form).asp,Register for the webinar,GWLG.Canada,0,NULL,Speakers,NULL,NULL,NULL,NULL,COVID-19: How will coronavirus impact your business?,NULL,NULL,NULL,NULL
260,/Events/2020/Climate-risk-opportunities-the-role-of-the-boar,en-GB,18D696A6-7A46-475F-BF65-45025C4B5EC3,"Climate risk, opportunities & the role of the boar","Climate risk, opportunities & the role of the board","Climate change is a global issue, as shown by the scientific consensus on human-caused warning, elevated impacts of acute weather events and the development of new government policies addressing climate change, from carbon pricing to major project approvals.",~/getmedia/1124aa7c-f177-4b26-a021-9e62cfcccc2a/200430-climate-change-webinar.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Webinar,30:00.0,30:00.0,4:30 p.m.,5:30 p.m.,EDT,0,NULL,"<p>Climate change is a global issue, as shown by the scientific consensus on human-caused warning, elevated impacts of acute weather events and the development of new government policies addressing climate change, from carbon pricing to major project approvals. These trends suggest there will be major transitions in the energy sector, transportation, infrastructure, and cities &ndash; anything and everything that affects Canadian business. But, what should boards and pension funds be doing to manage climate risk? How can boards proactively identify opportunities given the changing legal and regulatory landscape to mitigate and adapt to climate change?</p>

<p>Jennifer King, a Partner in the Gowling WLG Environmental Law Group &nbsp;and Environmental Law Group associate, Liane Langstaff explored these and other questions at <a href=""https://womengetonboard.ca/news/event-blog/"" target=""_blank"">Women Get on Board&#39;s</a> event, &quot;ESG &amp; the Role of the Board&quot; on February 26, 2020 in Toronto. Joined by business law partner, <a href=""https://gowlingwlg.com/en/people/stephen-pike/#panel-button1"" target=""_blank"">Stephen Pike</a>, who discussed how the board can tackle modern slavery, they spoke to a group of more than 100 corporate directors, executives and governance professionals about the major environmental, social and governance trends shaping boardroom discussions today.</p>

<p>Both Jennifer and Liane are Climate Governance Experts with the <a href=""https://ccli.ubc.ca/list-of-canadian-climate-governance-experts/"" target=""_blank"">Canada Climate Law Initiative</a>; a program that offers free sessions on effective corporate governance to address climate-related financial risks and opportunities to corporate boards of directors and Canadian pension fund boards. Incorporating some of the key learnings from this program, Jennifer and Liane shared how the current state of climate science relates to boards, and the duties of directors, officers and pension fiduciaries in Canada. They also spoke to the practical questions boards can ask themselves in order to adopt best practices around climate change. For more details, see Women Get on Board&#39;s <a href=""https://womengetonboard.ca/news/event-blog/"" target=""_blank"">blog post</a> by Ellen Perkins, summarizing the February 26 event.</p>

<p>Following the success of the sold-out Toronto event, Jennifer, Liane and Stephen will be presenting their topics with a webinar on May 26, 2020.</p>

<p>The May 26, 2020 webinar will build on the Toronto event, with new insights that are relevant for boards weathering the current COVID-19 crisis, including:</p>

<ul>
	<li>How has the COVID-19 crisis affected the imperative to address climate change?</li>
	<li>What key learnings from the COVID-19 crisis may assist boards in overcoming climate risk in the future?</li>
	<li>How can the board make the most of low carbon opportunities in the post-COVID recovery?</li>
</ul>

<p>Register for this webinar <a href=""https://www.eventbrite.ca/e/89793214923"" target=""_blank"">here</a>.</p>

<p><strong>Canada Climate Law Initiative</strong></p>

<p>Jennifer King and Liane Langstaff are Canadian Climate Governance Experts with the Canada Climate Law Initiative, an initiative directed by Dr. Janis Sarra (University of British Columbia Law) and Professor Cynthia Williams (Osgoode Hall Law). To learn more about the Climate Change Law Initiative, please contact Liane or Jennifer, or program manager Joanne Forbes <a href=""mailto:forbes@allard.ubc.ca"">forbes@allard.ubc.ca</a>.</p>

<p><strong>Women Get on Board</strong></p>

<p>Women Get On Board is a leading member-based company that connects, promotes and empowers women to corporate boards. They do this through an engaged community of women and men in Canada committed to advancing gender diversity in the boardroom. Gowling WLG LLP is Women Get on Board&#39;s National Strategic Partner.</p>
",NULL,NULL,24:13.0,https://www.eventbrite.ca/e/esg-and-the-role-of-the-board-webinar-on-tuesday-may-26th-2020-registration-89793214923,NULL,Register now,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,064c02f0-ff64-42f8-8a71-c8dece3600fd,NULL,253ecee1-50cf-4b3c-b21d-2a672a89946d;f63465af-154c-4d26-b2ab-6bc7cc79f913;03d6dce1-2df8-4f24-8e6b-d7bcda0b6509,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://www.eventbrite.ca/e/esg-and-the-role-of-the-board-webinar-on-tuesday-may-26th-2020-registration-89793214923,Register for this webinar,GWLG.Canada,0,NULL,Gowling WLG speakers,NULL,NULL,NULL,Climate Change and Environmental Law,NULL,NULL,NULL,NULL,NULL
262,/Events/2020/Rightsizing-as-we-come-out-of-lockdown,en-GB,A51D8E74-6151-43D2-B2D9-42F0FB44928D,Rightsizing as we come out of lockdown,Rightsizing as we come out of lockdown – what employers need to know,Gowling WLG's employment team explore rightsizing as we come out of lockdown.,~/getmedia/3ef8a241-79f0-47b2-bea8-ad548a88e09e/200507-rightsizing-lockdown.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Webinar,58:44.0,NULL,11:00,NULL,BST,0,NULL,"<p>With the Chancellor, Rishi Sunak, set to announce the scaling back of the furlough scheme, employers are thinking about what they need to do as the economy gets back on its feet. Some will be looking to recruit but many will need to be more cautious.<br />
<br />
If you want to minimise cost, protect employee relations and your employer brand, you need to understand the pitfalls. Can you make employees redundant on furlough? Do you have to consult? If so, how? Will HMRC help with the cost?<br />
<br />
On&nbsp;<strong>Tuesday 12th May at 11am</strong>,&nbsp;Gowling WLG Employment Partners, Jane Fielding and Martin Chitty, will answer these questions and more that employers are already asking.&nbsp;</p>
","<p>This event is free of charge.<br />
<br />
Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,05:51.0,https://reaction.gowlingwlg.com/reaction/RSGenPage.asp?RSID=20GDy5QNBPvsCnFPdSCjdw1l4Gg4WmnrYK8JI3J5IKc,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,d8837737-40d2-4472-8a9e-ba4101ec2105,6b906235-110b-475e-88cd-4ddef78eb8b8,799cf040-59c7-4986-825a-e4b909364823;fb60329f-6333-4f7e-b26b-4f9b106a32e7;79205c59-28cb-4630-bd62-bf070ba732b0,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,40ECBAEA-9783-479A-8EB9-9D39F577C01D,Speaker(s),NULL,NULL,NULL,"Employment, Labour & Equalities",COVID-19: How will coronavirus impact your business?,NULL,NULL,NULL,NULL
263,/Events/2020/Getting-back-to-work-safely-legally-productivel,en-GB,8D8B30E6-6DEF-428F-9988-3A5E89CD3D49,"Getting back to work: safely, legally, productivel","Getting back to work: safely, legally, productively ",,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,00:00.0,45:27.0,15:00,15:45,BST,1,0.75,"<p>Slowly, cautiously &ndash; and perhaps a little vaguely &ndash; the Prime Minister on Sunday evening told the country it could open for business. Footage the next day showed a rush-hour tube train packed with commuters. It seems we have started to get back to work. How then can businesses reopen?<br />
<br />
Can employers tell their staff they have to return? What measures will employers have to take to continue to fight against COVID-19? Faced with difficult decisions, what happens if they get them wrong?</p>

<p>David Lowe will be joined on a live ThinkHouse webinar by partners Andrew Lichfield from our regulatory team, and Jonathan Chamberlain on the employment side to help you make sense of some 50 pages of government guidance and various ministerial announcements, all overlaid onto existing legal frameworks. The Chancellor&#39;s announcement yesterday has perhaps bought business some time to think and plan.&nbsp;This webinar will help you do just that.<br />
<br />
<strong>This webinar is free to attend but numbers are limited so please register to secure your place.</strong><br />
&nbsp;</p>
","<p><span style=""display: inline !important; float: none; background-color: transparent; color: rgb(51, 51, 51); cursor: text; font-family: sans-serif,Arial,Verdana,&quot;Trebuchet MS&quot;; font-size: 13px; font-style: normal; font-variant: normal; font-weight: 400; letter-spacing: normal; line-height: 20.8px; orphans: 2; text-align: left; text-decoration: none; text-indent: 0px; text-transform: none; -webkit-text-stroke-width: 0px; white-space: normal; word-spacing: 0px;"">This event is free of charge.</span><br style=""background-color: transparent; color: rgb(51, 51, 51); cursor: text; font-family: sans-serif,Arial,Verdana,&amp;quot;trebuchet ms&amp;quot;; font-size: 13px; font-style: normal; font-variant: normal; font-weight: 400; letter-spacing: normal; line-height: 20.8px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; orphans: 2; text-align: left; text-decoration: none; text-indent: 0px; text-transform: none; -webkit-text-stroke-width: 0px; white-space: normal; word-spacing: 0px;"" />
<br style=""background-color: transparent; color: rgb(51, 51, 51); cursor: text; font-family: sans-serif,Arial,Verdana,&amp;quot;trebuchet ms&amp;quot;; font-size: 13px; font-style: normal; font-variant: normal; font-weight: 400; letter-spacing: normal; line-height: 20.8px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; orphans: 2; text-align: left; text-decoration: none; text-indent: 0px; text-transform: none; -webkit-text-stroke-width: 0px; white-space: normal; word-spacing: 0px;"" />
<span style=""display: inline !important; float: none; background-color: transparent; color: rgb(51, 51, 51); cursor: text; font-family: sans-serif,Arial,Verdana,&quot;Trebuchet MS&quot;; font-size: 13px; font-style: normal; font-variant: normal; font-weight: 400; letter-spacing: normal; line-height: 20.8px; orphans: 2; text-align: left; text-decoration: none; text-indent: 0px; text-transform: none; -webkit-text-stroke-width: 0px; white-space: normal; word-spacing: 0px;"">Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</span></p>
",NULL,45:00.0,https://reaction.gowlingwlg.com/reaction/RSGenPage.asp?RSID=zWNkXdyX7JBU7ENgZltGeP4A27C8gEZaBDWZZAw9smo,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,de517572-4373-4b36-844b-18be93f6f9bc;cbbbf9eb-a169-4053-8043-7085cfb8fd4a;3fc2ca8c-9d19-44ba-a3a9-ad1ecb11e900;f1e960f5-8231-4c56-b7bf-9898ebb538c5;06cecb4c-c959-4674-9047-d5d8ee8c673c;2cd1b5c0-8992-4c92-b8e8-d65d8b86dbed;5ad41b49-d460-489a-95b9-84c854eda6f1;a929915c-1d1f-4e9c-8c8b-f34a30e2ab4e;df411e0b-2c62-4a68-8456-2c7c1dd0b4da;049c8249-7ff3-4ee3-a439-590f45fd5cff;c0b8c1a8-73eb-4122-972f-dc5df852f68d;dede4518-e78c-4b48-a143-a2338be5d0ac;59be9dcd-e5f0-43e4-9d50-442a658eda18;0357076d-2635-451a-8d67-ec01f9f3082b;cdfc9b50-74c2-4af5-9508-342935f81ccd,d8837737-40d2-4472-8a9e-ba4101ec2105,6b906235-110b-475e-88cd-4ddef78eb8b8;a143cbfd-d333-42a0-89a6-7287894464f1,79205c59-28cb-4630-bd62-bf070ba732b0;3d0d2ba1-fe4c-43cd-81d1-f7265baecea0;ad056fcd-7211-4da7-a9e2-30612d332954,NULL,Webinar,"Jonathan Chamberlain, Andrew Litchfield, David Lowe",Webinar,34471,GWLG.Events,NULL,~/getmedia/5d57b23c-f4d3-44e3-a08e-7ee56360fd71/thinkhouse-snr-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/27fda93c-8849-4d7e-a292-bcc5eb1e7896/thinkhouse-snr-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,NULL,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,NULL,"Automotive, Aviation, Aerospace & Defence, Construction & Engineering, Energy, Financial Institutions & Services, Food & Beverage, Government Contracting & Public Sector , Health & Care, Infrastructure, Life Sciences, Natural Resources, Nuclear, Real Estate, Retail, Leisure & Hotels, Tech","Employment, Labour & Equalities","COVID-19: How will coronavirus impact your business?, ThinkHouse",NULL,NULL,NULL,NULL
264,/Events/2020/COVID-19-implications-for-performing-arts-webinar,en-GB,070F903E-4DDE-4A43-913E-714D0B1D9B5B,COVID-19 implications for performing arts webinar,Webinar: Q&A on COVID-19 implications for performing arts,"If you have questions about the legal issues that COVID-19 poses for the performing arts business, join us for a Q&A webinar on Thursday, May 21 2020.",~/getmedia/940776be-edf0-461c-9e4c-101f9fba3fc3/200521-performing-arts-covid-webinar.jpg.xml?width=930&height=486&ext=.jpg,NULL,GWLG.Webinar,22:21.0,22:26.0,11:00,11:45,EST,0,NULL,"<p>The performing arts world is confronting some of the harshest challenges of any industry in the wake of the global pandemic. Cancelled and postponed events, potential repurposing of venues and a dramatic drop in revenue are among the many issues raising concerns.</p>

<p>If you have questions about the legal issues that COVID-19 poses for the performing arts business, join us for a Q&amp;A webinar on&nbsp;<strong>Thursday, May 2</strong><strong>1</strong>. Hosted by the Entertainment and Sports Law Group at Gowling WLG in partnership with the Canadian Association for the Performing Arts/l&#39;Association canadienne des organismes artistiques (<a href=""https://capacoa.ca/en/"" target=""_blank"">CAPACOA</a>), our leading authorities, including Susan Abramovitch and Alexis Vaughan, will answer your concerns.</p>

<p>We ask that you submit questions in advance by&nbsp;<a href=""https://www.surveymonkey.com/r/SF26967"" target=""_blank""><strong>completing the quick pre-webinar survey which can be found at this link</strong></a> by&nbsp;Wednesday&nbsp;May 13.</p>

<p>Your questions will help curate the bulk of discussions, plus we will aim to cover the following topics:</p>

<ul>
	<li>Dealing with cancelled or postponed events</li>
	<li>Accessing support from the federal and/or provincial governments</li>
	<li>Dealing with staffing changes</li>
	<li>Maintaining event spaces</li>
</ul>

<p>Don&#39;t miss this timely event.&nbsp;</p>

<p><a class=""c-button"" href=""https://sites-gowlingwlg.vuturevx.com/103/5290/compose-email/ask-our-lawyers--entertainment-and-covid-19-oft.asp"" target=""_blank""><strong>RSVP now to reserve your spot</strong></a></p>
",NULL,NULL,24:34.0,https://sites-gowlingwlg.vuturevx.com/103/5290/compose-email/ask-our-lawyers--entertainment-and-covid-19-oft.asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,1262c308-04fd-4608-835b-a7950aba17be,6b906235-110b-475e-88cd-4ddef78eb8b8,38313a1e-07be-4fe8-b61e-008316e36186;73663252-4c3e-4767-a058-a3076ff1465b;64c86b79-7dc4-409e-8260-f244f6349dc3;45d428c7-9d45-468f-8091-9523238f1cf4,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,Speakers,NULL,NULL,NULL,Entertainment & Sports Law,COVID-19: How will coronavirus impact your business?,NULL,NULL,NULL,NULL
265,/Events/2020/M-A-Webinar-Spotlight-on-private-equity,en-GB,E81B44AE-5846-490D-878C-3BD02A86ED92,M&A Webinar: Spotlight on private equity,M&A in uncertain times: Spotlight on private equity,,~/getmedia/79ceb957-b7a1-4511-96c3-839d2d1c030b/200526-ma-webinar-private-equity.jpg.xml?width=930&height=486&ext=.jpg,NULL,GWLG.Webinar,37:13.0,37:16.0,1 p.m.,2 p.m.,EST,0,NULL,"<p>insert content here</p>
",NULL,NULL,41:53.0,https://sites-gowlingwlg.vuturevx.com/103/5196/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,90A71CC3-07A3-4265-B0C4-C31612546237,NULL,56646cda-20d7-43d4-b13c-886e1cd90c52;fc6b9a02-14ad-48cf-829a-375dc13f44ac,6b906235-110b-475e-88cd-4ddef78eb8b8,NULL,NULL,NULL,NULL,NULL,NULL,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,Speakers,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
266,/Events/2020/COVID-19-Advertising-and-regulatory-issues,en-GB,10AC1E37-F4C0-4FFE-BB6E-4E409ABE1E08,COVID-19 Advertising and regulatory issues,COVID-19 Advertising and regulatory issues,Join Gowling WLG and Ad Standards for an informative webinar on advertising and regulatory issues that have arisen in response to COVID-19.,~/getmedia/25b712db-2c28-4a1c-96b6-e4a3d91813a9/200526-covid-advertising-webinar.jpg.xml?width=930&height=486&ext=.jpg,NULL,GWLG.Webinar,47:34.0,47:38.0,2 p.m.,3 p.m.,EST,1,1 hour,"<p><strong>Join Gowling WLG and Ad Standards for an informative webinar on advertising and regulatory issues that have arisen in response to COVID-19.</strong></p>

<p>Our panel of leading authorities will discuss Health Canada&#39;s guidance on ad claims about consumer products such as antiseptic cleansers, hard surface disinfectants, soaps and masks. Further, the panelists will summarize expedited approval pathways and exemptions that may facilitate the supply of these products. The speakers will also explore the pitfalls that arise in ads related to pandemic concerns around safety, scientific claims and misleading representation. A Q&amp;A session will follow the discussion.</p>

<h2>Guest speaker</h2>

<p><strong>Catherine Bate</strong>,&nbsp;Chief Legal &amp; Policy Officer, Ad Standards</p>

<h2>CPD/CLE</h2>

<p><strong>LSO:</strong>&nbsp;This program is eligible for up to 1 hour of Substantive content<br />
<strong>Quebec:</strong>&nbsp;A certificate of attendance will be issued to professionals after this session<br />
<strong>LSBC:</strong>&nbsp;This program is eligible for up to 1 hour toward the LSBC&#39;s CPD requirement<br />
<strong>LSAB:</strong>&nbsp;This program is eligible for up to 1 hour of credit toward the CPD program</p>
",NULL,NULL,49:02.0,https://sites-gowlingwlg.vuturevx.com/103/5314/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,65c34333-2a1a-4fba-8d2a-65496d535f64,6b906235-110b-475e-88cd-4ddef78eb8b8,b57f236a-ccfd-4a95-bc8a-efaeb1deea0d;9b9ae971-5e77-434c-ab69-7192c6cb65b6,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,Speakers,NULL,NULL,NULL,Advertising & Product Regulatory,COVID-19: How will coronavirus impact your business?,NULL,NULL,NULL,NULL
267,/Events/2020/CMHC-Everything-you-need-to-know,en-GB,ECA8F013-674F-4048-9CB1-CA42A953A567,CMHC - Everything you need to know,Canadian Mortgage Housing Corporation (CMHC): Everything you need to know,,~/getmedia/994fc2bc-530f-42c5-ba25-6c131ef0ba3a/200527-cmhc-webinar.jpg.xml?width=930&height=486&ext=.jpg,NULL,GWLG.Webinar,04:34.0,04:37.0,12 p.m.,1 p.m. MST,Local time,0,NULL,"<p>Join us on Wednesday, May 27 for an in-depth look at CMHC-insured real estate financings during these tumultuous times. Gowling WLG hosts a panel of experts who will discuss how to take advantage of CMHC&#39;s favourable rates and programs. Our leading authorities making up our panel will answer a range of questions related to CMHC&#39;s programs.</p>

<h2>SPEAKERS</h2>

<ul>
	<li>Josh Barker,&nbsp;People&rsquo;s Trust - VP and Regional Manager</li>
	<li>Jessica Harland, CMSI Pacific - Managing Director</li>
	<li>Damir Jesic,&nbsp;First National Financial - AVP of Commercial Finance</li>
	<li>TJ Lee,&nbsp;MCAP - Director - Commercial Mortgages</li>
</ul>

<h2>MODERATOR</h2>

<ul>
	<li>Mike Hrabok, Gowling WLG - Partner</li>
</ul>

<p><a class=""c-button"" href=""https://sites-gowlingwlg.vuturevx.com/95/5307/compose-email/webinar-invitation-cmhc-2020-05-27--oft.asp"" id=""lnkRegister"" target=""_blank"">Register for this event</a></p>
",NULL,NULL,06:17.0,https://sites-gowlingwlg.vuturevx.com/95/5307/compose-email/webinar-invitation-cmhc-2020-05-27--oft.asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,NULL,NULL,NULL,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,Speakers,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
268,/Events/2020/Commercial-Leasing-Part-2,en-GB,7E855E87-1FA6-4F48-B0F3-906CD3EDBAF5,Commercial Leasing Part 2,COVID-19 Survival Guide: Commercial Leasing Part 2,"Join our real estate, business and employment lawyers at Gowling WLG for Part 2 of an informative webinar on Thursday, May 28 at 9:00 a.m. (PT) and 12 noon (ET).",~/getmedia/f4754309-9b64-4310-84ff-da43dff0c9cb/200528-commercial-leasing-part2.jpg.xml?width=930&height=486&ext=.jpg,NULL,GWLG.Webinar,18:04.0,18:08.0,9 a.m. ,10 a.m.,PST,1,1 hour,"<p><strong>The COVID-19 pandemic continues to wreak havoc on the commercial leasing industry and poses challenges for landlords, tenants and employers.</strong></p>

<p>Join our real estate, business and employment lawyers at Gowling WLG for&nbsp;<strong>Part 2</strong>&nbsp;of an informative webinar on&nbsp;<strong>Thursday</strong><strong>, May 28</strong>&nbsp;at&nbsp;<strong>9:00 a.m. (PT) and 12 noon (ET)</strong>. These leading authorities will share their insights to help you navigate the commercial leasing landscape in these unprecedented times.</p>

<p>The panelists will provide a cross-Canada update on the implementation of the Canada Emergency Commercial Rent Assistance program.&nbsp;They will also address the impact of construction stop-work orders on Landlord and Tenant work including how this is affecting fixturing periods, rent commencement, overholding and force majeure claims. Issues surrounding the return of staff to the workplace will also be discussed.</p>

<p>Employers, landlords, tenants, and brokers will all benefit from the practical lessons and tips offered during this event.</p>

<p><a class=""c-button"" href=""https://sites-gowlingwlg.vuturevx.com/104/5299/landing-pages/event-registration-(blank-form).asp"" target=""_blank"">RSVP today</a></p>

<h2>CPD/CLE</h2>

<p><em>*This webinar qualifies for up to 1 hour of Substantive Credits toward the mandatory annual CPD requirement. For further inquiries, please contact the Event Organizer.</em></p>
",NULL,NULL,19:18.0,https://sites-gowlingwlg.vuturevx.com/104/5299/compose-email/covid-19-survival-guide--commercial-leasing--part-2---webinar-invitation-2020-05-28-webinar-invitation---oft.asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,59be9dcd-e5f0-43e4-9d50-442a658eda18,c27f9d3f-c358-48fb-b057-9a291fea02aa;894fab50-b948-4d2f-a516-86150d34de04,6b906235-110b-475e-88cd-4ddef78eb8b8,6a16b886-f67c-4bbd-ba9c-7c006c5f32bc;26fb12df-b407-4553-9451-a9880a4c2e8b;82694c2b-be27-40b8-8e83-3d2c1f7b4c38;17b9b843-d3e4-4d2b-9dfc-b53292e050dc;bc07051b-1c39-4819-814f-b0175074d5d6,NULL,Webinar,"Laurie J. Sanderson, Maxwell J. Brunette, Stacey J. Handley, Julie Lanteigne, Darren J. Taylor",Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,Speakers,NULL,NULL,Real Estate,"Real Estate, Commercial Leasing",COVID-19: How will coronavirus impact your business?,NULL,NULL,NULL,NULL
269,/Events/2020/Raising-private-capital-in-challenging-circumstanc,en-GB,F379688C-11CB-46E8-92BF-1761FBE5ABB0,Raising private capital in challenging circumstanc,"Raising private capital in challenging circumstances – Down rounds, pay to play scenarios and bridging to better economic times","Gowling WLG is hosting a series of webinars designed to explore, analyze and help our clients and friends understand some of the alternate sources of financing available and how to access them.",~/getmedia/7bd3a49b-9857-4e61-b847-c16c4e088634/200521-raising-private-capital-webinar.jpg.xml?width=930&height=486&ext=.jpg,NULL,GWLG.Webinar,34:46.0,34:53.0,13:00,14:00,EDT,0,1 hour,"<p>The uncertainty unleashed by the pandemic has lead to challenges for businesses and their investors. Financings are being delayed or cancelled, valuations reduced and the size of investment rounds are down. There are opportunities too. Creative businesses and investors are getting deals done. Gowling WLG is hosting a series of webinars designed to explore, analyze and help our clients and friends understand some of the alternate sources of financing available and how to access them.&nbsp;</p>

<p>While provinces are in the first phase of reopening, many startups are determining the impact of COVID-19 on their business operations and what the &quot;new normal&quot; may look like. For many founders and entrepreneurs the pandemic has lead to the possibility of declining revenues and increased costs which result in an even greater challenge to obtain early stage funding for their innovative businesses. Our panel of experts will provide insight into the resulting financing implications for companies experiencing downward pressure on valuations including discussion on down rounds financings, pay to play scenarios and considerations for directors.</p>

<h2><span data-mce-style=""color: #005aa9;"">CPD/CLE Details</span></h2>

<p><strong>LSO:</strong>&nbsp;This program is eligible for up to 1 hour of Substantive content<br />
<strong>Quebec:</strong>&nbsp;A certificate of attendance will be issued to professionals after this session<br />
<strong>LSBC:</strong>&nbsp;This program is eligible for up to 1 hour toward the LSBC&#39;s CPD requirement<br />
<strong>LSAB:</strong>&nbsp;This program is eligible for up to 1 hour of credit toward the CPD program</p>
",NULL,NULL,37:14.0,https://sites-gowlingwlg.vuturevx.com/103/5293/compose-email/financing-in-uncertain-times-webinar-series---may-21-oft.asp,NULL,Register for this webinar,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,NULL,6b906235-110b-475e-88cd-4ddef78eb8b8,425a9689-d70c-46ff-b7b6-8994bb782c5f;a35b6e11-960d-4e45-9c01-d0abd0a78ec2;f27e3ee7-2048-496a-a66c-f80bd12333b1;98820947-c486-42b9-a2b0-914a2aed48a4;71b36166-89c4-4d85-a946-a3a0c4fe78dd,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,Speakers,NULL,NULL,NULL,NULL,COVID-19: How will coronavirus impact your business?,NULL,NULL,NULL,NULL
270,/Events/2020/Emergency-capital-raising-for-public-companies,en-GB,052F2586-2CB1-4F7D-A6DD-CCCC217C021A,Emergency capital raising for public companies ,Emergency capital raising for public companies – Rights offerings & private placements,,~/getmedia/bfe922b2-af9c-49fc-a020-ea2beb5827d1/200528-emergency-capital-webinarjpg.jpg.xml?width=930&height=486&ext=.jpg,NULL,GWLG.Webinar,52:39.0,52:42.0,1 p.m.,2 p.m.,EDT,0,NULL,"<p>The uncertainty unleashed by the pandemic has lead to challenges for businesses and their investors. Financings are being delayed or cancelled, valuations reduced and the size of investment rounds are down. There are opportunities too. Creative businesses and investors are getting deals done. Gowling WLG is hosting a series of webinars designed to explore, analyze and help our clients and friends understand some of the alternate sources of financing available and how to access them.</p>

<p>While public companies can attempt prospectus offerings, and certainly some are during the pandemic, others are looking for alternatives given the time and cost to clear a prospectus and the impact that relying on the emergency blanket relief provided by Canadian securities regulators has had on pursuing prospectus offerings.</p>

<p>Join our panel of seasoned practitioners who will discuss alternative capital raising methods, such as rights offerings and private placements, and some of the advantages and drawbacks issuers may face in this market with each alternative. Our panel will also explore equity, debt and convertible security offerings (under private placements and prospectus offerings) and the evolution of key terms in the context of the pandemic. Industry specific developments for mining, oil &amp; gas and cannabis issuers will also be covered.</p>
",NULL,NULL,53:43.0,https://sites-gowlingwlg.vuturevx.com/103/5293/landing-pages/event-registration-(blank-form).asp,NULL,Register for this webinar,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,NULL,NULL,NULL,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,Speakers,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
271,/Events/2020/Perspectives-on-a-COVID-19-sustainable-recovery,en-GB,BB99F84C-5EE6-4964-B2B4-CD325ED1B9D3,Perspectives on a COVID-19 sustainable recovery ,Perspectives on a Sustainable Recovery from COVID-19,"Our experts discuss the policy and regulatory drivers for businesses to reduce emissions, adapt to the effects of climate change, and to best position themselves for a sustainable recovery.",~/getmedia/2afeb336-372e-4663-b71a-492ccda9837a/green-series-thinkhouse-desktop.jpg.xml?width=1200&height=463&ext=.jpg,NULL,GWLG.Webinar,24:34.0,24:41.0,10:00,10:45,BST,1,0.75,"<p>Sustainability was at the top of the agenda for many businesses at the start of this year. Last year, the Government legislated for net-zero emissions by 2050 and declared a climate emergency. Across the globe, many parliaments began to take similar steps. 2020 was expected to be the year of climate action. Momentum was building: business leaders were increasingly focussing on ESG (environmental, social and governance) issues; and pressure to improve sustainability credentials was coming from all stakeholders - employees, investors and customers alike.</p>

<p>However in recent months, managing the COVID-19 crisis has understandably taken centre stage as businesses have focussed on ensuring the safety and wellbeing of their colleagues and taken all steps that they can to continue trading. But as we see glimpses of lockdown being lifted, there is increasing discussion as to whether sustainability and environmental factors will continue to stay on the agenda and if so, what might green growth look like and how might businesses respond to new opportunities as our environment and society evolves?</p>

<p>For many businesses and institutions, we expect sustainability will be much more than a compliance issue and it is likely to become ingrained in their business model. Whatever your current position, there are opportunities now to &#39;reset&#39; and consider how your business can be better aligned to sustainability goals.</p>

<p>ThinkHouse is starting a series of monthly webinars to help you consider how to manage the risks and opportunities in the emerging green economy. Join us at <strong>10:00 on Thursday 28 May</strong> for the first live webinar in this new series of sustainability-focused events. Michael Luckman, co-chair of ThinkHouse, will be joined by partners Ben Stansfield and Gareth Baker to discuss the policy and regulatory drivers for businesses to reduce emissions, adapt to the effects of climate change, and to best position themselves for a sustainable recovery.</p>

<p>During the webinar we will discuss the legislative steps taken by Government to hit the net-zero target so far and share our views on what may come next and where that may present opportunities as well as pitfalls</p>

<p>Throughout the webinar there will be the opportunity to raise questions with our speakers, and we will cover as many as possible in the time available.</p>

<p><strong>Please register to secure your place on this free webinar.</strong></p>

<p>Not going to make it? Register anyway to receive a copy of the recording to watch at a time to suit you.</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,00:57.0,https://reaction.gowlingwlg.com/reaction/RSGenPage.asp?RSID=zWNkXdyX7JBU7ENgZltGeKHylwhzDtyHTjLoWzSMcmY,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,de517572-4373-4b36-844b-18be93f6f9bc;cbbbf9eb-a169-4053-8043-7085cfb8fd4a;3fc2ca8c-9d19-44ba-a3a9-ad1ecb11e900;f1e960f5-8231-4c56-b7bf-9898ebb538c5;06cecb4c-c959-4674-9047-d5d8ee8c673c;2cd1b5c0-8992-4c92-b8e8-d65d8b86dbed;5ad41b49-d460-489a-95b9-84c854eda6f1;a929915c-1d1f-4e9c-8c8b-f34a30e2ab4e;df411e0b-2c62-4a68-8456-2c7c1dd0b4da;049c8249-7ff3-4ee3-a439-590f45fd5cff;c0b8c1a8-73eb-4122-972f-dc5df852f68d;dede4518-e78c-4b48-a143-a2338be5d0ac;59be9dcd-e5f0-43e4-9d50-442a658eda18;0357076d-2635-451a-8d67-ec01f9f3082b;cdfc9b50-74c2-4af5-9508-342935f81ccd,1607dc53-f5fc-4b61-b336-411d7614df2f;064c02f0-ff64-42f8-8a71-c8dece3600fd,6b906235-110b-475e-88cd-4ddef78eb8b8;a143cbfd-d333-42a0-89a6-7287894464f1;002053f2-d69a-4ea6-b3d3-7c764821c000,532e53ff-a7e9-451d-ad5d-5dfdfc681712;a9daf1f3-b2ff-43d9-b76e-b815bb73aace;1a0f69ce-d1e7-42e2-96d6-0dbdd570161e,NULL,Webinar,"Gareth Baker, Michael J Luckman, Ben Stansfield",Webinar,34471,GWLG.Events,NULL,~/getmedia/2afeb336-372e-4663-b71a-492ccda9837a/green-series-thinkhouse-desktop.jpg.xml?width=1200&height=463&ext=.jpg,~/getmedia/7e4db12f-6d80-43e3-8eec-bfd4fba89a7f/thinkhouse-green-series-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,NULL,"Automotive, Aviation, Aerospace & Defence, Construction & Engineering, Energy, Financial Institutions & Services, Food & Beverage, Government Contracting & Public Sector , Health & Care, Infrastructure, Life Sciences, Natural Resources, Nuclear, Real Estate, Retail, Leisure & Hotels, Tech","Climate Change, Climate Change and Environmental Law","COVID-19: How will coronavirus impact your business?, ThinkHouse, Environmental, Social and Governance (ESG)",NULL,NULL,NULL,NULL
272,/Events/2020/Disclosure-obligations-regulatory-relief-AGMs,en-GB,BBD62DCF-740E-4490-93A9-580EA8571850,"Disclosure obligations, regulatory relief & AGMs","Canadian public companies and COVID-19: Disclosure obligations, regulatory relief & virtual AGMs",The pandemic lockdown has occurred during the annual disclosure and proxy season for many Canadian public companies. What has happened and what’s next?,~/getmedia/a1ff656f-f9b9-4ecb-b471-831e4a11ec4b/200522-canadian-public-companies-webinar-series.jpg.xml?width=930&height=450&ext=.jpg,nighttime view of downtown toronto,GWLG.Webinar,00:00.0,00:00.0,4 p.m.,5 p.m.,EDT,0,NULL,"<p>The pandemic lockdown has occurred during the annual disclosure and proxy season for many Canadian public companies. What has happened and what&rsquo;s next?</p>

<p>To learn more, join us for a timely panel discussion hosted by Gowling WLG on <strong>Wednesday, May 27</strong>. Our seasoned practitioners will discuss:</p>

<ul>
	<li>How disclosure has evolved since early March, including guidance from Canadian securities regulators on MD&amp;A, forward-looking statements and material change reporting</li>
	<li>How issuers are relying on blanket regulatory relief from Canadian securities regulators and the impact of this relief</li>
	<li>How to conduct a virtual annual general meeting of shareholders and the potential challenges of this format</li>
</ul>

<h2>CPD/CLE Details</h2>

<p><strong>LSO:</strong>&nbsp;This program is eligible for up to 1 hour of Substantive content<br />
<strong>Quebec:</strong>&nbsp;A certificate of attendance will be issued to professionals after this session<br />
<strong>LSBC:</strong>&nbsp;This program is eligible for up to 1 hour toward the LSBC&#39;s CPD requirement<br />
<strong>LSAB:</strong>&nbsp;This program is eligible for up to 1 hour of credit toward the CPD program</p>
",NULL,NULL,00:00.0,https://sites-gowlingwlg.vuturevx.com/103/5331/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,90A71CC3-07A3-4265-B0C4-C31612546237,NULL,60bb1a30-82de-4038-aa38-9b01a87215c6;04411fac-dc23-4861-bd0c-aada44efcdeb,6b906235-110b-475e-88cd-4ddef78eb8b8,3c773c26-47cd-47af-9864-e8d48e548087;e82bac0e-f421-45e2-b38c-eacabbb741a6;3464c653-fa4d-43dd-99c9-db0a2dd57faf;b96f9f26-ad00-49b9-8fea-6b25184e4d08;ede5ead0-1723-4206-be45-ecf0ae1db2b4,NULL,Webinar,NULL,Gowling WLG Webinar,44232,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/103/5331/landing-pages/event-registration-(blank-form).asp,Register now,GWLG.Canada,0,NULL,Speakers,NULL,NULL,NULL,"Capital Markets, Corporate Commercial",COVID-19: How will coronavirus impact your business?,NULL,NULL,NULL,NULL
273,/Events/2020/Equity-crowdfunding-developments,en-GB,2D08F42F-E029-41EA-99FF-8AFD4CA66B5D,Equity crowdfunding developments,Equity crowdfunding developments,"The uncertainty unleashed by the pandemic has lead to challenges for businesses and their investors. Financings are being delayed or cancelled, valuations reduced and the size of investment rounds are down. ",~/getmedia/94344726-3219-4c45-8a78-550d2ea1c1f1/200618-equity-crowdfunding-webinar.jpg.xml?width=930&height=486&ext=.jpg,NULL,GWLG.Webinar,19:34.0,19:38.0,1 p.m.,2 p.m.,EST,0,NULL,"<h2>&nbsp;Webinar Series: Financing in Uncertain Times</h2>

<p>The uncertainty unleashed by the pandemic has lead to challenges for businesses and their investors. Financings are being delayed or cancelled, valuations reduced and the size of investment rounds are down. There are opportunities too. Creative businesses and investors are getting deals done. Gowling WLG is hosting a series of webinars designed to explore, analyze and help our clients and friends understand some of the alternate sources of financing available and how to access them.</p>
",NULL,NULL,20:39.0,https://sites-gowlingwlg.vuturevx.com/103/5293/landing-pages/event-registration-(blank-form).asp,NULL,Register for this webinar,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,NULL,NULL,NULL,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,Speaker(s),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
274,/Events/2020/HR-Pensions-and-Benefits-in-a-COVID-19-world,en-GB,D4370458-E3DC-4620-91C3-4580ADFC0836,"HR, Pensions and Benefits in a COVID-19 world ","Reshaping HR, Pensions and Benefits in a COVID-19 world?",Join Gowling WLG's Pensions/Combined HR Solutions team in a live webinar on COVID-19.,~/getmedia/71fcb656-9996-4c26-8852-538fd36fc66e/20528-pensions-event.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Webinar,56:39.0,NULL,11,11:45,BST,0,NULL,"<p>We have all been through the first phase of COVID-19 working arrangements, including the Government&#39;s CJRS. Government funding is now available until the end of October for employers who are still facing financial challenges, but how will this function in practice as some employees &quot;return to work&quot;, but others do not? What does it mean for DB and DC pensions, including salary sacrifice and flex benefits? How does this next stage affect automatic enrolment and the difficult issues around other workplace benefits as providers adjust to new medical and financial risks? What is the meaning of &quot;actively at work&quot; and how much has the law actually changed?</p>

<p>Join Gowling WLG&#39;s Pensions/Combined HR Solutions team in a live webinar on Thursday 4 June 2020 at 11.00 a.m. which is free to attend. They&#39;ll be answering your pensions and benefits questions and you&#39;ll be learning not just from them, but from other employers as to what is happening on the ground. By the end, you&#39;ll be able to brief the Board, engage with Trustees, and provide your members and the Pensions Regulator with clear reasoned input at this difficult time.</p>
","<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,47:51.0,https://reaction.gowlingwlg.com/reaction/RSGenPage.asp?RSID=Na9fEnneWGxzHH3ALzogXPLTvdLyhnUI6v3BUA6pT1Y,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,a19c4c5e-c05a-4fa5-95aa-c5a274279d8c,NULL,d777c33f-30c3-4e9d-8ff5-3909d12ffa2a;a6b9248c-acc9-4e7b-847f-9e566931b8f9;78b949bf-8838-4a2c-aa74-aa3ad35e87e3,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,40ECBAEA-9783-479A-8EB9-9D39F577C01D,Speaker(s),NULL,NULL,NULL,Pensions,NULL,NULL,NULL,NULL,NULL
275,/Events/2020/Nuclear-resilience-in-Canada,en-GB,0EFBB0B9-3A3E-4E49-8097-000BCF220AD3,Nuclear resilience in Canada,Nuclear resilience in Canada,"The webinar will explore the positive steps operators are taking to manage staff and contractor safety, mitigate risks and maintain safe operations. ",~/getmedia/5504f8c0-ba68-408e-8187-eb602d01671c/200608-Nuclear-resilience-in-Canada-event.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Webinar,42:54.0,42:54.0,11:00 a.m.,12:30 p.m.,EDT,1,This webinar counts for up to 1.5 hours of Substantive credits toward the mandatory annual CPD requirement.,"<p>The safe operation of nuclear plants requires the expertise of highly trained operators following complex management processes and regulations.&nbsp;How has the Canadian nuclear industry successfully maintained these standards and processes in challenging times, including COVID-19?</p>

<p>Join the Canadian Nuclear Association and Gowling WLG for a special webinar on Friday, June 12 to explore the topic of nuclear resilience in Canada. Our panel of industry leaders will discuss:</p>

<ul>
	<li>Best practices to maintain safe operations from a regulatory framework perspective &ndash; including minimum staffing and operator certification requirements</li>
	<li>Positive steps that nuclear operators are taking to mitigate risks and manage staff and contractor safety</li>
	<li>How licensed regimes are leveraging innovation in adapting their operations to a pandemic environment</li>
	<li>The challenges of nuclear plant operations &ndash; from early pandemic recognition to the application of lessons learned as the global situation continues to evolve</li>
</ul>

<h3>Moderators:&nbsp;</h3>

<ul>
	<li><strong>John Gorman</strong>,<strong>&nbsp;</strong>President and Chief Executive Officer, CNA</li>
	<li><strong>Ahab Abdel-Aziz</strong>,&nbsp;Global Director of Nuclear, Gowling WLG</li>
</ul>

<h3>Speakers:&nbsp;</h3>

<ul>
	<li><strong>Ingemar Engkvist</strong>, CEO, World Association of Nuclear Operators</li>
	<li><strong>Sean Granville</strong>, Chief Nuclear Officer, OPG</li>
	<li><strong>James Scongack</strong>,&nbsp;EVP Corporate Affairs and Operational Services, Bruce Power</li>
	<li><strong>Lisa Thiele</strong>,&nbsp;Senior General Counsel, Canadian Nuclear Safety Commission</li>
	<li><strong>Ramzi Jammal</strong>,&nbsp;Executive Vice-President and Chief Regulatory Operations Officer Regulatory Operations Branch, Canadian Nuclear Safety Commission</li>
</ul>

<p>The global nuclear industry and Canadian operators will continue to navigate the risks presented by this ongoing pandemic and beyond.&nbsp;To attend what promises to be an informative and engaging discussion, please RSVP now.</p>
","<p><strong>CPD/CLE Details</strong></p>

<p>LSO:&nbsp;This program is eligible for up to 1.5 hours of Substantive content<br />
Quebec:&nbsp;A certificate of attendance will be issued to professionals after this session<br />
LSBC:&nbsp;This program is eligible for up to 1.5 hours toward the LSBC&#39;s CPD requirement<br />
LSAB:&nbsp;This program is eligible for up to 1.5 hours of credit toward the CPD program</p>
",NULL,00:00.0,https://sites-gowlingwlg.vuturevx.com/103/5367/landing-pages/event-registration-(blank-form).asp,NULL,Register for this webinar,2AC31727-4C97-4C05-A86C-595D3554B185,dede4518-e78c-4b48-a143-a2338be5d0ac,NULL,6b906235-110b-475e-88cd-4ddef78eb8b8,NULL,NULL,Webinar,NULL,NULL,NULL,GWLG.Events,"<p>Webinar</p>
",~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/103/5367/landing-pages/event-registration-(blank-form).asp,Register for this webinar,GWLG.Canada,0,0CDA2C7E-BFD7-48AD-991D-C46DBB4E55AB,Speaker(s),NULL,NULL,Nuclear,NULL,COVID-19: How will coronavirus impact your business?,NULL,NULL,NULL,NULL
276,/Events/2020/Developments-in-blockchain-financing,en-GB,7423E7CE-D5B3-416E-B47B-3B6EB08C3971,Developments in blockchain financing,Blockchain financing and other key related developments,"The uncertainty unleashed by the pandemic has lead to challenges for businesses and their investors. Financings are being delayed or cancelled, valuations reduced and the size of investment rounds are down. ",~/getmedia/33955192-d06d-4828-8075-6fcfa634c896/200611-blockchain-financing-webianr.jpg.xml?width=930&height=486&ext=.jpg,NULL,GWLG.Webinar,19:34.0,19:38.0,1 p.m.,2 p.m.,EST,0,NULL,"<h2>Webinar Series: Financing in Uncertain Times</h2>

<p>The uncertainty unleashed by the pandemic has led to challenges for businesses and their investors. Financings are being delayed or cancelled, valuations reduced and the size of investment rounds are down. There are opportunities too. Creative businesses and investors are getting deals done. Gowling WLG is hosting a series of webinars designed to explore, analyze and help our clients and friends understand some of the alternate sources of financing available and how to access them.</p>

<p>In this webinar, Gowling practitioners will discuss the impact of the pandemic on the blockchain industry and financings. Like other emerging sectors, the blockchain industry has been significantly impacted by the uncertainty of the pandemic. Access to finance has become increasingly difficult for blockchain companies, particularly start-ups. At the same time, the industry has seen a resurgence, given the stronger societal push towards a digital-reality, efforts by central banks towards realizing central bank digital currencies, and also strengthened crypto assets.</p>

<p>Join our panellists in a discussion of how the emergence of COVID-19 has impacted the blockchain sector. Our panelists will provide an overview of financing trends in this space, discuss the unique challenges and opportunities facing blockchain businesses, and also discuss relief options available to start-ups as a result of the pandemic. Our panelists will also outline other key developments, including litigation trends, that may impact the blockchain sector.</p>

<h2>CPD/CLE Details</h2>

<p><strong>LSO:</strong>&nbsp;This program is eligible for up to 1 hour of Substantive content<br />
<strong>Quebec:</strong>&nbsp;A certificate of attendance will be issued to professionals after this session<br />
<strong>LSBC:</strong>&nbsp;This program is eligible for up to 1 hour toward the LSBC&#39;s CPD requirement<br />
<strong>LSAB:</strong>&nbsp;This program is eligible for up to 1 hour of credit toward the CPD program</p>
",NULL,NULL,20:39.0,https://sites-gowlingwlg.vuturevx.com/103/5293/landing-pages/event-registration-(blank-form).asp,NULL,Register for this webinar,2AC31727-4C97-4C05-A86C-595D3554B185,06cecb4c-c959-4674-9047-d5d8ee8c673c,20e41ca2-b15a-4815-bb5c-7cf60c18278f;6ecd1574-34c3-42ca-a28b-70a10b61221e,NULL,300e471b-5cfe-45e3-bb75-6cc00bbdf27b;e82bac0e-f421-45e2-b38c-eacabbb741a6;e5e6f4ba-f865-4b3d-987b-9e424d58c21e;ce0436af-a09a-4d50-ad14-b0ab61f796ec;2e157dcc-2fdf-42d1-8dd5-f9350a946928,NULL,Webinar,"Usman M. Sheikh, Warren Cass, Gordon Chmilar, Thomas K. Hunter, Shaela W. Rae",Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,Gowling WLG hosts,NULL,NULL,Financial Institutions & Services,"Blockchain & Smart Contracts, Financial Institutions Regulatory",NULL,NULL,NULL,NULL,NULL
277,/Events/2020/Spotlight-on-private-equity,en-GB,995E2381-B47E-4814-AAD9-83366D4CE14A,Spotlight on private equity,Spotlight on private equity,,~/getmedia/0681f197-78ea-4322-a62e-d8b6bad5c476/200609-spotlight-on-private-equity.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Webinar,41:45.0,41:48.0,1 p.m.,2 p.m.,EST,0,NULL,"<h2>M&amp;A in Uncertain Times - Webinar Series</h2>

<p>Uncertainty can result in a deal being delayed, altered or cancelled. Gowling WLG&rsquo;s M&amp;A team is hosting a series of webinars designed to explore, analyze and help clients and friends of our firm navigate the impacts uncertainty can have on transactions.</p>

<p><a class=""c-button"" href=""https://sites-gowlingwlg.vuturevx.com/103/5196/landing-pages/event-registration-(blank-form).asp"" target=""_blank"">Register for our upcoming webinar</a></p>
",NULL,NULL,42:13.0,https://sites-gowlingwlg.vuturevx.com/103/5196/landing-pages/event-registration-(blank-form).asp,NULL,Register for this webinar,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,NULL,NULL,NULL,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,Speaker(s),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
278,/Events/2020/Corporate-governance-in-uncertain-times,en-GB,1C2B6B02-DEF6-4EC6-962E-C6C08655B443,Corporate governance in uncertain times,Corporate governance in uncertain times,"After a couple of months of managing through the initial repercussions of the pandemic, boards of directors have accepted that uncertainty is the new “normal” and are asking what’s next?",~/getmedia/bc63908a-7f1b-4605-87ba-932b4f41c076/200605-governance-uncertain-times.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Webinar,00:00.0,00:00.0,4 p.m.,5 p.m.,EST,0,NULL,"<p>After a couple of months of managing through the initial repercussions of the pandemic, boards of directors have accepted that uncertainty is the new &ldquo;normal&rdquo; and are asking what&rsquo;s next?</p>

<p>Join us for a timely panel discussion hosted by Gowling WLG on&nbsp;<strong>Thursday, June 11</strong>. Our seasoned practitioners and guest panellist will discuss:</p>

<ul>
	<li>How to approach being a director in uncertain times, including duties and liabilities and critical priorities and deliverables</li>
	<li>The role of the board when a company is on the cusp of insolvency</li>
	<li>Setting up special committees in uncertain times</li>
	<li>New challenges for the board and board decision-making in the next phase of the pandemic, including addressing new COVID-related issues and pivoting for optimal board effectiveness</li>
</ul>

<h2>Guest speaker</h2>

<p><strong>Deborah Rosati - Founder and CEO, Women Get on Board</strong></p>
",NULL,NULL,55:00.0,https://sites-gowlingwlg.vuturevx.com/103/5331/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,90A71CC3-07A3-4265-B0C4-C31612546237,NULL,04411fac-dc23-4861-bd0c-aada44efcdeb,6b906235-110b-475e-88cd-4ddef78eb8b8,ede5ead0-1723-4206-be45-ecf0ae1db2b4;03d6dce1-2df8-4f24-8e6b-d7bcda0b6509;5ae5a269-9c5f-4332-920e-28b31ec9066e;f52c18f0-f75d-443c-8edf-8eb8851b7f75,NULL,Webinar,NULL,Gowling WLG Webinar,44232,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/103/5331/landing-pages/event-registration-(blank-form).asp,Register now,GWLG.Canada,0,NULL,Gowling WLG hosts,NULL,NULL,NULL,Corporate Commercial,COVID-19: How will coronavirus impact your business?,NULL,NULL,NULL,NULL
280,/Events/2020/Resetting-trade-arrangements-in-North-America,en-GB,46E110E4-DD9F-41A0-8BA0-E336EB6F3704,Resetting trade arrangements in North America,USMCA: Resetting tri-lateral trade arrangements in North America,"The Agreement between the United States of America, the United Mexican States, and Canada (USMCA), which has been characterized as ""NAFTA 2.0,"" comes into effect on July 1, 2020.",~/getmedia/29a67bf9-e683-4d66-a743-91c63049bad3/200617-usmca-webinar.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Webinar,35:05.0,35:08.0,10 a.m.,11 a.m.,EDT,0,NULL,"<p style=""clear:both;""><strong>The&nbsp;<em>Agreement between the United States of America, the United Mexican States, and Canada</em>&nbsp;(USMCA), which has been characterized as &quot;NAFTA 2.0,&quot; comes into effect on July 1, 2020.</strong></p>

<p style=""clear:both;"">To help your business prepare for the attendant changes to North America&rsquo;s trade regime,&nbsp;<strong>BakerHostetler</strong>,&nbsp;<strong>Gowling WLG</strong>&nbsp;and&nbsp;<strong>MGPS</strong>&nbsp;cordially invite you to a live webinar featuring a panel of leading trade lawyers representing each signatory nation. Together, the panel will explore a number of timely topics, including:</p>

<ul>
	<li>Changes to intellectual property protection, including heightened protections for copyright, trademarks, patents and trade secrets and an entirely new digital trade chapter</li>
	<li>Changes in the traditional trade of goods, including rules of origin, categories of products that are most affected, and implications for certificates of origin</li>
	<li>Rule of origin considerations for importers that have rerouted supply chains through Canada and Mexico in response to U.S.-China Section 301 duties</li>
</ul>

<p style=""clear:both;""><a href=""https://sites-gowlingwlg.vuturevx.com/103/5326/landing-pages/event-registration-(blank-form).asp"" target=""_blank"">Register today</a> for what promises to be an instructive and insightful forum. We look forward to having you join us.</p>

<h2 style=""clear: both;"">Speakers</h2>

<ul>
	<li><a href=""https://www.mgps.com.mx/en/portfolio/Valentina_Gutierrez.html"" target=""_blank"">Valentina&nbsp;Gutíerrez Díaz</a> -&nbsp;Attorney, MGPS (Mexico City, Mexico)</li>
	<li><a href=""https://gowlingwlg.com/en/people/scott-jolliffe/#panel-button1"" target=""_blank"">R. Scott&nbsp;Jolliffe</a> -&nbsp;Partner, Gowling WLG (Toronto, Canada)</li>
	<li><a href=""https://www.bakerlaw.com/JacquelineMLesser"" target=""_blank"">Jacqueline&nbsp;Lesser</a> -&nbsp;Counsel, BakerHostetler (Philadelphia, USA)</li>
	<li><a href=""https://www.mgps.com.mx/en/portfolio/Luis_Gerardo_Ramirez.html"" target=""_blank"">Luis G.&nbsp;Ramirez Villela</a> -&nbsp;Partner, MGPS (Mexico City, Mexico)</li>
	<li><a href=""https://www.bakerlaw.com/MichaelSSnarr"" target=""_blank"">Michael&nbsp;Snarr</a> -&nbsp;Partner, BakerHostetler (Washington D.C., USA)</li>
	<li><a href=""https://www.mgps.com.mx/portfolio/Ana_Esther_Urquizo.html"" target=""_blank"">Ana Esther&nbsp;Urquizo Gómez</a> -&nbsp;Senior Attorney, MGPS, (Mexico City, Mexico)</li>
	<li><a href=""~/en/people/wendy-wagner/"">Wendy&nbsp;Wagner</a>- Partner, Gowling WLG (Ottawa, Canada)</li>
</ul>

<h2>Event Partners</h2>

<p><a href=""https://www.bakerlaw.com/"" target=""_blank""><strong>BakerHostetler</strong></a>,&nbsp;<a href=""https://gowlingwlg.com/en/"" target=""_blank""><strong>Gowling WLG</strong></a>&nbsp;and&nbsp;<a href=""https://www.mgps.com.mx/en/home.html"" target=""_blank""><strong>MGPS</strong></a></p>
",NULL,NULL,40:24.0,https://sites-gowlingwlg.vuturevx.com/103/5326/landing-pages/event-registration-(blank-form).asp,NULL,Register for this webinar,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,bac2f2f8-09c0-4d06-b0c8-98d9567adfc7;39ca3d7e-072f-42c5-ad32-ee659513b4b3,NULL,NULL,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada;GWLG.UnitedStates;GWLG.LatinAmerica,0,NULL,NULL,NULL,NULL,NULL,"International Trade and Customs, Government Affairs",NULL,NULL,NULL,NULL,NULL
281,/Events/2020/Funding-programs-for-US-businesses-in-Canada-UK,en-GB,0A409A24-F110-4190-ACFF-4E42B550EAB0,Funding programs for US businesses in Canada & UK,Overview of government funding programs for US based businesses operating in Canada and the UK,This webinar will review various government funding programs to which Canadian and UK businesses can apply.,~/getmedia/4d3c69c0-cc0c-400f-a599-0f049bab3e4c/200616-government-programs-canada-uk-webinar.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Webinar,47:55.0,47:57.0,11 a.m.,12 p.m.,EDT,1,1 hour,"<p>On&nbsp;<strong>Tuesday, June 16</strong>, join the global professionals at Gowling WLG for an insightful live webinar that reviews various government funding programs to which Canadian and UK businesses can apply. This includes businesses controlled by a US parent corporation. These programs take the form of either directed loans through financial intermediaries or direct government funding.</p>

<p>The speakers will also review the capacity of US companies operating in Canada and the UK via a branch to apply for the above programs. A Q&amp;A session will follow the discussion.</p>

<h2>CPD/CLE Details</h2>

<p><strong>LSO:</strong>&nbsp;This program is eligible for up to 1 hour of Substantive content<br />
<strong>Quebec:</strong>&nbsp;A certificate of attendance will be issued to professionals after this session<br />
<strong>LSBC:</strong>&nbsp;This program is eligible for up to 1 hour toward the LSBC&#39;s CPD requirement<br />
<strong>LSAB:</strong>&nbsp;This program is eligible for up to 1 hour of credit toward the CPD program</p>
",NULL,NULL,49:17.0,https://sites-gowlingwlg.vuturevx.com/103/5360/landing-pages/event-registration-(blank-form).asp,NULL,Register for this webinar,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,NULL,6b906235-110b-475e-88cd-4ddef78eb8b8,55398393-306d-4c8d-8b10-048503c07707;79205c59-28cb-4630-bd62-bf070ba732b0;2e40348a-4da4-4219-b4ba-374e08ace0a5;b54eaed8-bca8-4861-959f-7b4e7e9bf8c4,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada;GWLG.UK;GWLG.UnitedStates;GWLG.Global,0,NULL,Speakers,NULL,NULL,NULL,NULL,COVID-19: How will coronavirus impact your business?,NULL,NULL,NULL,NULL
282,/Events/2020/Webinar-Employment-Law-Mid-Year-Review,en-GB,EEA23EA0-4F3F-48B1-9D76-37E4E9E1A672,Webinar: Employment Law Mid-Year Review,Webinar: Employment Law Mid-Year Review,Each webinar will last for 40 minutes with the opportunity to ask questions via Zoom chat. We hope that spreading out the topics in this way means as many people as possible can join all of them.,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,00:00.0,00:00.0,11:00,11:40,BST,0,NULL,"<p>As you may know, we usually host an Employment mid-year seminar over a morning in June bringing you up to speed with developments since the start of the year. Despite the impact of COVID-19 on our businesses and a whole new employment law in the furlough scheme, we want to make sure that you are also up to date with other things happening in employment law. Life goes on, but not as we knew it!</p>

<p>As we can&#39;t host you in person this year, we will be doing the event digitally instead. We will put on a series of four interactive live webinars via Zoom, over two weeks starting on 23rd June. Each webinar will last for 40 minutes with the opportunity to ask questions via Zoom chat. We hope that spreading out the topics in this way means as many people as possible can join all of them.</p>

<h2>A round up on holiday entitlement and pay - Tuesday 23rd June at 11am</h2>

<p><a href=""https://gowlingwlg.com/en/people/anna-fletcher"">Anna Fletcher</a> will provide a round up on holiday entitlement and pay including where we are on overtime, the new pay reference period and calculating holiday pay, part year workers and how to manage holiday during and after the pandemic.</p>

<h2>Confidentiality obligations for employees and ex-employees - Thursday 25th June at 11am</h2>

<p><a href=""https://gowlingwlg.com/en/people/james-hall/#panel-button1"">James Hall</a> will review confidentiality obligations for employees and ex-employees including a review of a recent high court case looking at a confidentiality clause within a COT3.</p>

<h2>Managing tricky ER cases in a COVID-19 context, whistleblowing and health and safety issues - Tuesday 30th June at 11am</h2>

<p><a href=""https://gowlingwlg.com/en/people/simon-stephen/#panel-button1"">Simon Stephen</a> will discuss managing tricky ER cases in a COVID-19 context, including best practice on handling investigations and hearings including ill health/disability, whistleblowing and health and safety issues.</p>

<h2>Overview of what is a redundancy and who is redundant post Covid-19 - Thursday 2nd July at 11am</h2>

<p><a href=""https://gowlingwlg.com/en/people/martin-chitty/#panel-button1"">Martin Chitty</a> will give an overview of what is a redundancy and who is redundant post Covid-19; how to avoid the pitfalls and de-risk your process in right-sizing.</p>
",NULL,NULL,30:58.0,https://reaction.gowlingwlg.com/reaction/RSGenPage.asp?RSID=XzV0cypd3j34LKqrhtzKwkYUZS-qLlTadVFK07uo6xA,NULL,Register for these webinars,90A71CC3-07A3-4265-B0C4-C31612546237,NULL,d8837737-40d2-4472-8a9e-ba4101ec2105,NULL,799cf040-59c7-4986-825a-e4b909364823;06098c5e-87c7-4c91-805f-3ad029667752;6ad4fe15-41cb-46d7-98f9-5349159e2bf2;2d03f2db-bf91-45db-a827-470484fe7ddb;fb60329f-6333-4f7e-b26b-4f9b106a32e7,NULL,Webinar,NULL,Gowling WLG Webinar,44232,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,NULL,Speaker(s),NULL,NULL,NULL,"Employment, Labour & Equalities",NULL,NULL,NULL,NULL,NULL
283,/Events/2020/Sustainability-International-Trade-and-State-Aid,en-GB,0619330B-7B84-43D7-8A4C-F737E28703B8,Sustainability: International Trade and State Aid,Sustainability: International Trade and State Aid,In the second live webinar of our new series of sustainability-focussed ThinkHouse events we discuss sustainability in the context of international trade and State aid. ,~/getmedia/2afeb336-372e-4663-b71a-492ccda9837a/green-series-thinkhouse-desktop.jpg.xml?width=1400&height=540&ext=.jpg,NULL,GWLG.Webinar,13:05.0,13:13.0,11:00,11:45,BST,1,0.75,"<p>In the second live webinar of our new series of sustainability-focussed <a href=""~/en/thinkhouse/"">ThinkHouse</a> events Ben Stansfield, Partner will be joined by members of our EU, Trade and Competition team Bernardine Adkins, Partner and Head of the Team, Ursula Johnston, Director for Customs and Export Controls and Savannah Would, Trainee Solicitor, to discuss sustainability in the context of international trade and State aid.</p>

<p>We will discuss some of the conflicts between trade and globalisation, and sustainability. It is common for free trade agreements (FTAs) to include provisions on environmental matters, and we will consider to what extent these provisions protect and support environmental protectionism.</p>

<p>With the end of the Brexit transition period in December 2020 fast approaching, the UK government is consulting on the establishment of freeports in the UK, which would have different customs rules than the rest of the country. We will consider the impact that the changes to freeports may have on trade and sustainability within the UK.</p>

<p>Additionally, from a State aid perspective, there has been an increasing focus on sustainability in line with the EU&#39;s &#39;green&#39; policy objectives. We will look at how this may shape the rules and the availability of State aid in the future, along with the impact that this could have on businesses.</p>

<p>Throughout the webinar there will be the opportunity to raise questions with our speakers, and we will cover as many as possible in the time available.</p>

<p>Please register to secure your place on this webinar.</p>

<p><strong>Not going to make it? Register anyway to receive a copy of the recording to watch at a time to suit you.</strong></p>
","<p>This event is free of charge.</p>

<p>This event will run for 0.75 hours. Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession.</p>

<p>Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,55:33.0,https://reaction.gowlingwlg.com/reaction/RSGenPage.asp?RSID=zWNkXdyX7JBU7ENgZltGeBe9bbVrc67LCi2bMpAaLHc,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,de517572-4373-4b36-844b-18be93f6f9bc;cbbbf9eb-a169-4053-8043-7085cfb8fd4a;3fc2ca8c-9d19-44ba-a3a9-ad1ecb11e900;f1e960f5-8231-4c56-b7bf-9898ebb538c5;06cecb4c-c959-4674-9047-d5d8ee8c673c;2cd1b5c0-8992-4c92-b8e8-d65d8b86dbed;5ad41b49-d460-489a-95b9-84c854eda6f1;a929915c-1d1f-4e9c-8c8b-f34a30e2ab4e;df411e0b-2c62-4a68-8456-2c7c1dd0b4da;049c8249-7ff3-4ee3-a439-590f45fd5cff;c0b8c1a8-73eb-4122-972f-dc5df852f68d;dede4518-e78c-4b48-a143-a2338be5d0ac;59be9dcd-e5f0-43e4-9d50-442a658eda18;0357076d-2635-451a-8d67-ec01f9f3082b;cdfc9b50-74c2-4af5-9508-342935f81ccd,064c02f0-ff64-42f8-8a71-c8dece3600fd;b3f9fce6-b77c-4e15-978e-eaa664c609dc;bac2f2f8-09c0-4d06-b0c8-98d9567adfc7,948836f4-4fb4-4214-b0db-ff9a3d0d00fa;a143cbfd-d333-42a0-89a6-7287894464f1,2563a6d6-5f45-46c5-8698-e572a35f100b;e33531f3-9132-4365-bdfc-fe6df95bab54;1a0f69ce-d1e7-42e2-96d6-0dbdd570161e,bb99f84c-5ee6-4964-b2b4-cd325ed1b9d3,Webinar,"Bernardine Adkins, Ursula Johnston, Ben Stansfield",Webinar,34471,GWLG.Events,NULL,~/getmedia/2afeb336-372e-4663-b71a-492ccda9837a/green-series-thinkhouse-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/7e4db12f-6d80-43e3-8eec-bfd4fba89a7f/thinkhouse-green-series-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,NULL,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,58076178-da60-4ab6-a07c-ef250971ebf7;9fbe191e-3bcf-45de-a2ba-338bb194fc9d,"Automotive, Aviation, Aerospace & Defence, Construction & Engineering, Energy, Financial Institutions & Services, Food & Beverage, Government Contracting & Public Sector , Health & Care, Infrastructure, Life Sciences, Natural Resources, Nuclear, Real Estate, Retail, Leisure & Hotels, Tech","Climate Change and Environmental Law, Competition Law & Antitrust, International Trade and Customs","Customs & Trade Updates , ThinkHouse","Birmingham, London",NULL,NULL,NULL
288,/Events/2020/ESG-What-next-for-pension-schemes,en-GB,3CD7B70E-6C45-45B6-ACC8-7ECE5ADAB987,ESG – What next for pension schemes?,ESG – What next for pension schemes?,"An unexpected consequence of the Covid-19 pandemic has been a reduction in pollution and companies focusing away from pure profit to social responsibility. “Greener” investment funds, with their focus on sustainability, have generally outperformed their peers since the start of this year.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,00:00.0,00:00.0,11:00,12:00,BST,0,NULL,"<p style=""text-align: center;""><img alt="""" src=""~/getmedia/7a648adf-6f14-4935-bbc0-44e45e7a8eed/gowlingwlg-logo.png.xml"" /><img alt="""" src=""~/getmedia/d2885280-2299-4c69-ba02-aa3e19d41733/LCP_standard_RGB_one_colour.png.xml?width=320&amp;height=100"" style=""width: 320px; height: 100px;"" /></p>

<p>An unexpected consequence of the COVID-19 pandemic has been a reduction in pollution and companies focusing away from pure profit to social responsibility. &ldquo;Greener&rdquo; investment funds, with their focus on sustainability, have generally outperformed their peers since the start of this year.</p>

<p>At the same time, new legislation affecting UK pension schemes and general regulatory and societal pressure, mean that pension scheme trustees have to ensure that Environmental, Social and Governance (ESG) considerations are an integral part of investment decision-making. Some schemes are quite some way along in their ESG integration. Other schemes&#39; progress on ESG is in its infancy.</p>

<p>LCP and Gowling WLG are running a two-part webinar series to help trustees and corporate sponsors understand why ESG matters, how it adds value, and some practical actions to get on the front-foot when dealing with the issues. Expert panels of actuaries, lawyers and independent trustees will cover the major considerations in this important area. This is an invitation to the first webinar on Thursday 16th July. The follow-up session will be in September (details to be confirmed nearer the time).</p>

<h2>Part one - Starting your ESG journey: an introduction to the requirements and issues<br />
Thursday 16 July 2020 at 11.00am</h2>

<p>An introduction to the requirements and issues relating to ESG so that you understand them in the context of your investment responsibilities.</p>

<p>Chair:&nbsp;<a href=""https://gowlingwlg.com/en/people/jason-coates/"">Jason Coates (Gowling WLG)</a><br />
<br />
Speakers:&nbsp;<a href=""https://gowlingwlg.com/en/people/mary-verity/"">Mary Verity (Gowling WLG)</a>,&nbsp;<a href=""https://www.bestrustees.co.uk/our-team/rachel-brougham"">Rachel Brougham (BESTrustees)</a>,<br />
<a href=""https://www.lcp.uk.com/our-experts/i/ian-gamon/"">Ian Gamon (LCP)</a><br />
<br />
<strong>Please&nbsp;<a href=""https://event.on24.com/wcc/r/2440505/73550405A3765EBFFCB2033291ED73CE"">RSVP to register your attendance at this webinar</a></strong>.</p>

<h2>Part two - ESG best practice: making it happen in a meaningful way<br />
September 2020</h2>

<p>We will cover best practice in the practical implementation of ESG into investment decision-making so that you can take meaningful actions that you can report to members with confidence.</p>
","<p>By registering for this webinar, your personal information will be shared with the webinar organisers and speakers from Gowling WLG and LCP, who will use it to communicate with you regarding this event. Data regarding your usage of the webinar may also be shared between Gowling WLG and LCP.</p>
",NULL,06:28.0,https://event.on24.com/eventRegistration/EventLobbyServlet?target=reg20.jsp&referrer=&eventid=2440505&sessionid=1&key=73550405A3765EBFFCB2033291ED73CE&regTag=&sourcepage=register,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,a19c4c5e-c05a-4fa5-95aa-c5a274279d8c,NULL,NULL,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,NULL,0,NULL,Speaker(s),NULL,NULL,NULL,Pensions,NULL,NULL,NULL,NULL,NULL
291,/Events/2020/Legal-Leaders-for-Diversity-Trust-Fund-Webinar,en-GB,DE6B2638-4F62-4971-9CAB-40781F359563,Legal Leaders for Diversity Trust Fund Webinar,Legal Leaders for Diversity Trust Fund Webinar,"We invite you to join us for a Zoom webcast Award Presentation and reception to honour the award recipients on Thursday, July 16 at 4:00 p.m. We would be delighted to have you and your colleagues join us.",~/getmedia/2989f0ef-bcb3-4935-8fc7-1d75beaa7c8a/200716-legal-leaders-diversity-awards-webinar.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Webinar,16:18.0,16:24.0,4 p.m.,5 p.m.,EDT,0,NULL,"<p><strong>As legal leaders in Canada, we are duty-bound to act to generate the positive impact we want to see in our businesses, institutions and communities. With this conviction, we have established, through the generosity of general counsels and law firm managing partners across Canada, The Legal Leaders for Diversity Trust Fund which aims to promote equal access to legal education and diversity in Canadian law faculties through the award of scholarships to students with physical, mental, intellectual or sensory impairment.</strong></p>

<p>Through these scholarships, we wish to foster inclusion within the Canadian legal community, to secure its sustainability and the long-term success of our organizations and the communities in which we do business.</p>

<p>This year more than forty Canadian law students have applied for one of the scholarships offered by the Fund. Given this important number of applications, which emphasized the pressing need for support, the Fund allowed the granting of nine scholarships this year.</p>

<p>It is our pleasure to announce that we have recently contacted this year&#39;s scholarship recipients to inform them that they have been selected by the Fund to each receive a $3,000 scholarship. This endeavour would not have been possible without our generous donors. With their help, the Fund is able to financially assist these remarkable law students in pursuing their law studies and overcoming social barriers and discrimination.</p>

<p><strong>We invite you to join us for a Zoom webcast&nbsp;Award Presentation&nbsp;and reception to honour the award recipients on Thursday, July 16 at 4:00 p.m. We would be delighted to have you and your colleagues join us.</strong></p>

<ul class=""o-lined-list is-list-unstyled list-of-links"">
	<li><a href=""https://sites-gowlingwlg.vuturevx.com/103/5399/landing-pages/event-registration-(blank-form).asp"">Please confirm your attendance by registering your participation here</a>.</li>
</ul>

<p>If you have any questions regarding the event, or would like to have a special Zoom link to enable you to say a few words at the event, please send a note directly to&nbsp;<a data-mce-href=""mailto:danield@bombardier.com"" href=""mailto:danield@bombardier.com"">Daniel Desjardins</a>&nbsp;or&nbsp;<a data-mce-href=""mailto:scott.jolliffe@gowlingwlg.com"" href=""mailto:scott.jolliffe@gowlingwlg.com"">Scott Jolliffe</a>. If you have any difficulty registering for the event, please contact&nbsp;<a data-mce-href=""mailto:shannon.wadsworth@gowlingwlg.com"" href=""mailto:shannon.wadsworth@gowlingwlg.com"">Shannon Wadsworth</a>.</p>

<p>We hope to see you there.&nbsp;</p>

<p align=""center""><img alt=""Legal Leaders for Diversity Trust Fund logo"" src=""~/getmedia/0d66a24b-6033-4d4d-a5a2-deee3428847d/legal-leaders-for-diversity_1.jpg.xml?width=595&amp;height=118"" style=""width: 595px; height: 118px; vertical-align: middle;"" /></p>
",NULL,NULL,17:00.0,https://sites-gowlingwlg.vuturevx.com/103/5399/landing-pages/event-registration-(blank-form).asp,NULL,Register to attend this webinar,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,NULL,NULL,NULL,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/4a56ba7f-1292-4bbb-86ca-eb799c11a732/200716-legal-leaders-diversity-awards-webinar-banner-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,Speaker(s),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
292,/Events/2020/ThinkHouse-Greening-your-supply-chain,en-GB,F353A287-65B5-4664-B356-6E9719A28854,ThinkHouse: Greening your supply chain,ThinkHouse: Greening your supply chain - how to embed sustainability measures for the long-term,The criticality of greening the supply chain has never been more pressing. Supply-chain sustainability has gained pace over the last few years especially with new requirements being legislated by governments globally. ,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,00:00.0,45:00.0,11:00,11:45,BST,1,0.75,"<p>The criticality of greening the supply chain has never been more pressing. Supply-chain sustainability has gained pace over the last few years especially with new requirements being legislated by governments globally. Many organisations are realising that to truly focus on meeting sustainability agendas the greatest challenges often lie outside their own internal premises and processes. To embrace sustainability objectives the focus must be on greening their whole supply chain. Integrating environmentally sound choices into supply chain management not only meets environmental challenges but is also instrumental in delivering profitability and creating significant competitive advantages for early adopters and process innovators.</p>

<p>COVID-19 has resulted in fragile supply chains. As businesses emerge there is an immediate focus on maximising supply chains and ensuring that they are resilient. Risks are heightened during crises such as COVID-19 and sustainability drivers are at a high risk of being compromised to deal with increased demands or reduced capacity. This also however creates a window of opportunity which should not be overlooked in terms of using this renewed focus on improving supply chains to place sustainability firmly back on the agenda. Complacency is a threat and building sustainable resilient supply chains will provide a much stronger platform for companies going forward.</p>

<p>During this live webinar partners Sarah Riding and Ben Stansfield will discuss issues and steps around sustainability which can be taken at each stage of the supply chain to make it much greener. They will also consider how the legislative backdrop is evolving and impacting on each stage. They will share practical guidance to help companies maximise the opportunities created by this renewed focus on supply chains and to help capture the window of opportunity presented to embed sustainability measures.</p>

<p>Throughout the webinar there will be the opportunity to raise questions with our speakers, and we will cover as many as possible in the time available.</p>

<p>Please register to secure your place on this webinar.</p>
","<p>This webinar is free of charge.</p>

<p>This event will run for 0.75 hours. Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession.</p>

<p>Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,45:56.0,https://reaction.gowlingwlg.com/reaction/RSGenPage.asp?RSID=NCmU147FsqMYgOe8RezNLKVTK6GAQcaYvbrEzJthb48,NULL,Register for this webinar,2AC31727-4C97-4C05-A86C-595D3554B185,de517572-4373-4b36-844b-18be93f6f9bc;cbbbf9eb-a169-4053-8043-7085cfb8fd4a;3fc2ca8c-9d19-44ba-a3a9-ad1ecb11e900;f1e960f5-8231-4c56-b7bf-9898ebb538c5;06cecb4c-c959-4674-9047-d5d8ee8c673c;2cd1b5c0-8992-4c92-b8e8-d65d8b86dbed;5ad41b49-d460-489a-95b9-84c854eda6f1;a929915c-1d1f-4e9c-8c8b-f34a30e2ab4e;df411e0b-2c62-4a68-8456-2c7c1dd0b4da;049c8249-7ff3-4ee3-a439-590f45fd5cff;c0b8c1a8-73eb-4122-972f-dc5df852f68d;dede4518-e78c-4b48-a143-a2338be5d0ac;59be9dcd-e5f0-43e4-9d50-442a658eda18;0357076d-2635-451a-8d67-ec01f9f3082b;cdfc9b50-74c2-4af5-9508-342935f81ccd,549cbe28-f188-44cd-85c0-0f4e23a23817,6b906235-110b-475e-88cd-4ddef78eb8b8;002053f2-d69a-4ea6-b3d3-7c764821c000;a143cbfd-d333-42a0-89a6-7287894464f1,6965a192-e42d-4e06-af1e-a4ebb072b416;334a7f26-44f4-4a26-9d0d-0ddd5e499b12;1a0f69ce-d1e7-42e2-96d6-0dbdd570161e,NULL,Webinar,"Emma Bufton, Sarah Riding, Ben Stansfield",Webinar,34471,GWLG.Events,NULL,~/getmedia/2afeb336-372e-4663-b71a-492ccda9837a/green-series-thinkhouse-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/7e4db12f-6d80-43e3-8eec-bfd4fba89a7f/thinkhouse-green-series-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,NULL,"Automotive, Aviation, Aerospace & Defence, Construction & Engineering, Energy, Financial Institutions & Services, Food & Beverage, Government Contracting & Public Sector , Health & Care, Infrastructure, Life Sciences, Natural Resources, Nuclear, Real Estate, Retail, Leisure & Hotels, Tech",Commercial,"COVID-19: How will coronavirus impact your business?, Environmental, Social and Governance (ESG), ThinkHouse",NULL,NULL,NULL,NULL
293,/Events/2020/DC-to-DC-transfers,en-GB,BBA18B6F-D189-4BF6-B6A4-B560FCAF492D,DC to DC transfers,DC to DC transfers,Whilst the legislative framework for these types of transfers has been simplified there are still some thorny issues both employers and trustees need to consider. Join our pensions team and experts from Isio for a panel discussion.,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,21:17.0,NULL,11:00,12:00,BST,0,NULL,"<p>With the increase in regulatory requirements for defined contribution schemes, we have seen a significant increase in the volume of transfers to Master Trust arrangements. We expect this trend to continue.</p>

<p>Whilst the legislative framework for these types of transfers has been simplified there are still some thorny issues both employers and trustees need to consider. Joined by experts from Isio, our panel discussion will cover:</p>

<ul>
	<li>The transfer process - the facts</li>
	<li>Pitfalls to avoid</li>
	<li>Investment decisions</li>
	<li>The future of the Master Trust market</li>
</ul>
","<p>By registering for this webinar, you agree that your data (i.e. your name and email address) will be shared with the webinar organisers and speakers from Gowling WLG, who will use it to communicate with you regarding this event. You also agree that data regarding your usage of the webinar may be shared between Gowling WLG and Isio.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,16:59.0,mailto:joy.litchfield@gowlingwlg.com?subject=DC to DC transfers webinar,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,a19c4c5e-c05a-4fa5-95aa-c5a274279d8c,NULL,a6b9248c-acc9-4e7b-847f-9e566931b8f9;c35a7ba7-40bb-474d-8a7a-a7897e0c7332;03c7dd08-0f53-4088-95ca-a02cf34564e9,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,95EC9477-4594-4332-A463-E612BD16CA0C,Speaker(s),NULL,NULL,NULL,Pensions,NULL,NULL,NULL,NULL,NULL
294,/Events/2020/German-IP-Insights-Pharma-Life-Sciences-part-1,en-GB,2A4D8F6D-DA39-43D4-BBB8-6EFB92851695,German IP Insights: Pharma & Life Sciences part 1,German patent law webinar - IP Insights: Pharma & Life Sciences Part 1,"German patent law webinars on the protection of know-how and innovation in the areas of pharma, life sciences, biotechnology and health care",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,00:00.0,00:00.0,17:00,18:00,CET,0,NULL,"<p>Protection of know-how and innovation especially in a fast moving environment is the key to success. Join our German IP experts on this insightful mini webinar series, where we will be discussing IP hot topics for companies active in the Life Sciences, Pharma, Biotechnology, and Health Care industries. The first webinar is taking place on 15th October and will cover the following topics:</p>

<ul>
	<li>Arrow Declarations: The rise of a litigation defence tool in the UK and similar possibilities in Germany
	<ul>
		<li>Background to and basis for the relief</li>
		<li>Possibilities for this form of relief being granted in Germany.</li>
	</ul>
	</li>
	<li>Compulsory licenses
	<ul>
		<li>Overview of recent case law and its impact on companies</li>
		<li>Compulsory licenses - Essential for the development of a corona vaccine?</li>
	</ul>
	</li>
</ul>

<p><a href=""~/en/insights-resources/events/2020/german-ip-insights-pharma-life-sciences-part-2/"" target=""_blank"">The second webinar will take place on 29 October</a>.</p>

<hr />
<p>The webinar will be held in German, except for the presentation on Arrow Declarations.</p>
",NULL,NULL,49:33.0,mailto:events.munich@gowlingwlg.com,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,a929915c-1d1f-4e9c-8c8b-f34a30e2ab4e;049c8249-7ff3-4ee3-a439-590f45fd5cff,85764222-db69-43cf-af79-2c6fcbda9589;08b9a44c-bb26-4255-9779-296a124fcbee;82f237a8-0da3-46f1-86b5-4392a020f41a;b27944db-178f-4382-8db7-7f29f749de1c,471a00a2-e109-4e85-8152-8a92a4982d19,573d1455-ea45-45db-a443-9b45707a1db2;50260439-3478-44dc-a940-987d3e0c030b;f3cd8bc4-37c5-4d8f-b2ff-eb4b97b8b140,9b47d4c8-0d85-45cb-99a6-e08649960885,Webinar,"Thomas Mayer, Jonathan Konietz, Paul Inman",Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Global;GWLG.Germany,0,F650DC48-3ED1-4629-819D-C89BA6D3E2F0,Speaker(s),NULL,a1545ae9-a498-4b1d-b5e5-a71093fb7f2b;9fbe191e-3bcf-45de-a2ba-338bb194fc9d,"Health & Care, Life Sciences","Patents, Intellectual Property, IP Litigation & Strategy, Intellectual Property Transactions",Intellectual property and disruptive technology,"Munich, London",NULL,NULL,NULL
295,/Events/2020/German-IP-Insights-Pharma-Life-Sciences-Part-2,en-GB,EF62A492-16B2-4861-9852-00C063594112,German IP Insights: Pharma & Life Sciences Part 2,German patent law webinar - IP Insights: Pharma & Life Sciences Part 2,"German patent law webinars on the protection of know-how and innovation in the areas of pharma, life sciences, biotechnology and health care",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,00:20.0,00:00.0,17:00,18:00,CET,0,NULL,"<p>In a fast moving environment the protection of know-how and innovation is the key to success. In our 2nd webinar for companies active in the Life Sciences, Pharma, Biotechnology, and Health Care industries our German IP experts will be discussing the following IP hot topics :</p>

<ul>
	<li>Infringement of &quot;Second-Medical-Use&quot;-patents
	<ul>
		<li>New developments in the area of second medical use</li>
		<li>Liability risks and SPCs</li>
	</ul>
	</li>
	<li>Article 3(a) and Article 3(c) of the SPC Regulation - Has the CJEU finally clarified the conditions to be met by applicants?
	<ul>
		<li>What is meant by &quot;the product is protected by a basic patent in force&quot;?</li>
		<li>Are second medical use SPCs admissible?</li>
	</ul>
	</li>
</ul>

<hr />
<p>The webinar will be held in German.</p>
",NULL,NULL,07:57.0,mailto:events.munich@gowlingwlg.com,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,a929915c-1d1f-4e9c-8c8b-f34a30e2ab4e;049c8249-7ff3-4ee3-a439-590f45fd5cff,85764222-db69-43cf-af79-2c6fcbda9589;08b9a44c-bb26-4255-9779-296a124fcbee;82f237a8-0da3-46f1-86b5-4392a020f41a;b27944db-178f-4382-8db7-7f29f749de1c,471a00a2-e109-4e85-8152-8a92a4982d19,573d1455-ea45-45db-a443-9b45707a1db2;50260439-3478-44dc-a940-987d3e0c030b,293da8dc-5c8f-4df5-ad16-ba58f070a761;9b47d4c8-0d85-45cb-99a6-e08649960885,Webinar,"Thomas Mayer, Jonathan Konietz",Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Global;GWLG.Germany,0,F650DC48-3ED1-4629-819D-C89BA6D3E2F0,Speaker(s),NULL,a1545ae9-a498-4b1d-b5e5-a71093fb7f2b,"Health & Care, Life Sciences","Patents, Intellectual Property, IP Litigation & Strategy, Intellectual Property Transactions",Intellectual property and disruptive technology,Munich,NULL,NULL,NULL
300,/Events/2020/London-Design-Festival-2020,en-GB,977FCFCF-E056-4765-9C22-9486BF73E036,London Design Festival 2020,Designer panel: is being copied ever good news?,"Join our webinar, where leaders of design-led businesses join Gowling WLG's UK Head of Brands and Designs for a discussion on how designers can use intellectual property to help the business side of design.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,00:00.0,45:00.0,11:00,11:45,GMT,0,NULL,"<p style=""text-align: center;""><img alt="""" src=""~/getmedia/3a4bb674-97fd-4903-8321-1bc8652ae3b0/tangerine_black_logo_RGB_Large_Digital.png.xml?width=320&amp;height=70"" style=""width: 320px; height: 70px;"" /><img alt="""" src=""~/getmedia/7a648adf-6f14-4935-bbc0-44e45e7a8eed/gowlingwlg-logo.png.xml"" /></p>

<p>When does &#39;taking inspiration&#39; cross the line? Panel with John Ayton MBE (Links of London,&nbsp;<a href=""https://www.annoushka.com/uk"" target=""_blank"">Annoushka</a>), Martin Darbyshire (<a href=""https://tangerine.net/en/"" target=""_blank"">tangerine</a>) and Sam Jacob (<a href=""https://www.samjacob.com/"" target=""_blank"">Sam Jacob Studio</a>), hosted by intellectual property lawyer John Coldham (Gowling WLG), to discuss how designers can use IP to help the business side of design.</p>

<p>&quot;Imitation is the sincerest form of flattery that mediocrity can pay to greatness&quot;. That was Oscar Wilde&#39;s view, but for designers, being ripped off risks being very harmful indeed. Is being copied ever good news?</p>

<p>Join our webinar, where leaders of design-led businesses join Gowling WLG&#39;s UK Head of Brands and Designs for a discussion on how designers can use intellectual property to help the business side of design.</p>

<h2>Speakers</h2>

<p><img alt="""" src=""~/getmedia/38ab6e97-cd52-430a-b417-fcf3d0cf54e5/john-coldham.jpg.xml?width=249&amp;height=249"" style=""padding: 0px 10px 10px 0px; width: 249px; height: 249px; float: left;"" /></p>

<h3><a href=""https://gowlingwlg.com/en/people/john-coldham/"">John Coldham</a></h3>

<p>John Coldham is the UK Head of Brands and Designs. The team is the MIP Designs Firm of the Year 2020, having also won the award in 2019, and was nominated for the Trademark Contentious Firm of the Year award.</p>

<p>John is a recognised expert in all types of intellectual property (IP) strategy and litigation. He won the Client Choice Award 2019 for Designs, and has been recognised as a &#39;star lawyer&#39; by the Acritas Stars database each year since 2017. John also has MIP&#39;s &#39;IP Star&#39; status in both trademarks and designs.</p>

<p><img alt="""" src=""~/getmedia/e2531b1b-0737-4311-8738-bfc38d2f4c11/John_Ayton.jpg.xml"" style=""padding: 0px 10px 10px 0px; float: left;"" /></p>

<h3>John Ayton</h3>

<p>John co-founded Annoushka, the fine jewellery brand with his wife&nbsp;@AnnoushkaDucas&nbsp;in 2009 and continues to serve as Executive Chairman.</p>

<p>In September 2018, as seed investor and Chairman of Orlebar Brown, John oversaw the sale to Chanel SA. In March 2019 John stepped down as Chairman of Bremont Watch Company after the sale of his shareholding. John was a seed investor in Bremont and the largest single shareholder.</p>

<p>In the past John has founded luxury businesses such as Links of London and Annoushka and has seen them grow internationally. John has invested in tech related start ups including the telematics business Wejo, the photo printing app Printastic, Pi-Top, fintech pioneer Revolut, Feast-It, Vinterior and Lovecrafts.</p>

<p>John has also invested in new consumer and luxury brands founded by others acting as a mentor to new entrepreneurs. John hopes to bring very practical advice to a founder, supporting them through some of the challenges that John himself has been through.</p>

<p><img alt="""" class=""image_fix"" src=""~/getmedia/b95c5c2c-1038-48e5-b85b-1e9804425f64/Martin_landscape_color.jpg.xml"" style=""padding: 0px 10px 10px 0px; float: left;"" /></p>

<h3>Martin Darbyshire</h3>

<p>Martin has been inspiring groundbreaking innovation and design at tangerine since co-founding the company in 1989. Under his stewardship the company has grown into an international design consultancy with offices in the UK, South Korea and Brazil; from which, tangerine exports design services to leading retailers, service providers and manufactures.</p>

<p>Tangerine design every touchpoint a customer can have with a brand and, in many cases, the brand itself. Their reach extends from foresight within trend and creative direction, to design-led strategy and rethinking companies&rsquo; business models.</p>

<p>Martin has served two terms as a board member of the ICSID (now the World Design Organization). He is honoured to be a trustee of the UK Design Council, a fellow of the Royal Society of Arts and the Chartered Society of Designers and represents design on IE:UK, the Infrastructure Exports board of the UK Government&rsquo;s Department for International Trade.</p>

<p><img alt="""" src=""~/getmedia/9f8aac92-45f5-4911-b2d6-7cf3d3e146e7/Sam_Jacobs.jpg.xml?width=249&amp;height=224"" style=""padding: 0px 10px 10px 0px; float: left;"" /></p>

<h3>Sam Jacob</h3>

<p>Sam Jacob is principal of Sam Jacob Studio for architecture and design, a practice whose work spans scales and disciplines from urban design through architecture, design, art and curatorial projects.</p>

<p>He has worked internationally on award winning projects and has exhibited at major museums such as the V&amp;A, MAK, and The Art Institute of Chicago as well as cultural events including the Venice Architecture Biennale. He is Professor of Architecture at UIC, Chicago, and columnist for Art Review. Previously he was a founding director of FAT Architecture.</p>
",NULL,NULL,36:54.0,https://reaction.gowlingwlg.com/reaction/RSGenPage.asp?RSID=DSV5Q-mOSnpqOI3p-Y8czBpa2LMwoxqo-3x77e9FpDc,NULL,Register for this webinar,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,aa72ea93-20f8-455a-8e77-6f6cea510684;08b9a44c-bb26-4255-9779-296a124fcbee,NULL,NULL,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/a0c48cb4-85cd-4f7b-aa91-d17d94443af5/london-design-festival-2020-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/f97f18c7-785e-4a09-8b72-40de82298a36/london-design-festival-2020-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,NULL,NULL,NULL,NULL,NULL,"Trademarks, Brands & Designs, Intellectual Property",NULL,NULL,NULL,NULL,NULL
303,/Events/2020/Dealing-with-commercial-disputes,en-GB,27F84029-9D0D-4CFA-A9F7-729B08A50B5A,Dealing with commercial disputes,ThinkHouse Unlocked - Dealing with commercial disputes: a litigation survival guide,This event is part of our ThinkHouse Unlocked series. Follow the registration link to attend this or any of the other sessions being delivered throughout September.,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,30:00.0,15:00.0,10:30,11:15,BST,1,0.75,"<p>In this practical session Catherine Naylor will discuss:</p>

<ul>
	<li><strong>Responding to a claim</strong> - dos and don&#39;ts</li>
	<li><strong>Enforcing contractual obligations</strong> - court proceedings or the winding up route</li>
	<li><strong>Contract termination</strong> - contractual termination and your rights at common law</li>
	<li><strong>Privilege</strong> - some practical tips for maintaining privilege so that difficult documents are kept out of court</li>
	<li><strong>Without prejudice</strong> - what does it mean and when and why should you use it</li>
	<li><strong>Funding</strong> - a word on the products to help pay for litigation</li>
</ul>

<p>Throughout the webinar there will be the opportunity to raise questions with our speakers, and we will cover as many as possible in the time available.</p>

<p>This event is part of our <strong>ThinkHouse Unlocked</strong> series. Follow the registration link to attend this or any of the other sessions being delivered throughout September.</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,30:00.0,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?rsid=qmT_TrCB8Tl7H5PlbBEvi3kAlou9FHcWdcwxg7zjshj98EOv0C0Mnh7Dy7kC-VL1&react=All%20Reactions,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,de517572-4373-4b36-844b-18be93f6f9bc;cbbbf9eb-a169-4053-8043-7085cfb8fd4a;3fc2ca8c-9d19-44ba-a3a9-ad1ecb11e900;f1e960f5-8231-4c56-b7bf-9898ebb538c5;06cecb4c-c959-4674-9047-d5d8ee8c673c;2cd1b5c0-8992-4c92-b8e8-d65d8b86dbed;5ad41b49-d460-489a-95b9-84c854eda6f1;a929915c-1d1f-4e9c-8c8b-f34a30e2ab4e;df411e0b-2c62-4a68-8456-2c7c1dd0b4da;049c8249-7ff3-4ee3-a439-590f45fd5cff;c0b8c1a8-73eb-4122-972f-dc5df852f68d;dede4518-e78c-4b48-a143-a2338be5d0ac;59be9dcd-e5f0-43e4-9d50-442a658eda18;0357076d-2635-451a-8d67-ec01f9f3082b;cdfc9b50-74c2-4af5-9508-342935f81ccd,82475447-1cf2-4aa7-9a23-24e5b1a7b3bd,a143cbfd-d333-42a0-89a6-7287894464f1,3110a84a-f993-4c98-b2f3-54f983a40915;ad056fcd-7211-4da7-a9e2-30612d332954,NULL,Webinar,"Catherine Naylor, David Lowe",Webinar,34471,GWLG.Events,NULL,~/getmedia/e937d887-2512-44cf-bb60-5269b5bb596b/DESIGN0001725_ThinkHouse_Unlocked_Series_Website_Event_Banner_1400-x-540.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/502e805a-3b10-4275-ba94-98e6e288b99c/DESIGN0001725_ThinkHouse_Unlocked_Series_Website_Event_Banner_500-x-550.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,58076178-da60-4ab6-a07c-ef250971ebf7;9fbe191e-3bcf-45de-a2ba-338bb194fc9d,"Automotive, Aviation, Aerospace & Defence, Construction & Engineering, Energy, Financial Institutions & Services, Food & Beverage, Government Contracting & Public Sector , Health & Care, Infrastructure, Life Sciences, Natural Resources, Nuclear, Real Estate, Retail, Leisure & Hotels, Tech",Litigation & Dispute Resolution,ThinkHouse,"Birmingham, London",NULL,NULL,NULL
304,/Events/2020/Climate-change-litigation,en-GB,023D6FE9-CE95-4DF7-A275-18C524F77494,Climate change litigation,ThinkHouse Unlocked - Climate change litigation,"In this live webinar our experts will discuss recent climate change litigation developments across North America, the UK and Europe and identify future trends which could impact businesses at home and abroad.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,45:53.0,46:03.0,14:30,15:15,BST,1,0.75,"<p>In this live webinar our experts Ben Stansfield, Elsie Blackshaw-Crosby and Liane Langstaff will discuss recent climate change litigation developments across North America, the UK and Europe and identify future trends which could impact businesses at home and abroad.</p>

<p>Throughout the webinar there will be the opportunity to raise questions with our speakers, and we will cover as many as possible in the time available.</p>

<p>This event is part of our <strong>ThinkHouse Unlocked </strong>series. Follow the registration link to attend this or any of the other sessions being delivered throughout September.</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession.</p>

<p>Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,30:00.0,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?rsid=qmT_TrCB8Tl7H5PlbBEvi3kAlou9FHcWdcwxg7zjshj98EOv0C0Mnh7Dy7kC-VL1&react=All%20Reactions,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,de517572-4373-4b36-844b-18be93f6f9bc;cbbbf9eb-a169-4053-8043-7085cfb8fd4a;3fc2ca8c-9d19-44ba-a3a9-ad1ecb11e900;f1e960f5-8231-4c56-b7bf-9898ebb538c5;06cecb4c-c959-4674-9047-d5d8ee8c673c;2cd1b5c0-8992-4c92-b8e8-d65d8b86dbed;5ad41b49-d460-489a-95b9-84c854eda6f1;a929915c-1d1f-4e9c-8c8b-f34a30e2ab4e;df411e0b-2c62-4a68-8456-2c7c1dd0b4da;049c8249-7ff3-4ee3-a439-590f45fd5cff;c0b8c1a8-73eb-4122-972f-dc5df852f68d;dede4518-e78c-4b48-a143-a2338be5d0ac;59be9dcd-e5f0-43e4-9d50-442a658eda18;0357076d-2635-451a-8d67-ec01f9f3082b;cdfc9b50-74c2-4af5-9508-342935f81ccd,064c02f0-ff64-42f8-8a71-c8dece3600fd;1607dc53-f5fc-4b61-b336-411d7614df2f;e652eb3b-cd9c-4c1e-9991-a4b38e5e1cd3,002053f2-d69a-4ea6-b3d3-7c764821c000;a143cbfd-d333-42a0-89a6-7287894464f1,e2821f18-a02b-4857-b87f-cda1d9c39957;1a0f69ce-d1e7-42e2-96d6-0dbdd570161e;253ecee1-50cf-4b3c-b21d-2a672a89946d;3d0d2ba1-fe4c-43cd-81d1-f7265baecea0,NULL,Webinar,"Elsie Blackshaw-Crosby, Ben Stansfield, Liane Langstaff, Andrew Litchfield",Webinar,34471,GWLG.Events,NULL,~/getmedia/e937d887-2512-44cf-bb60-5269b5bb596b/thinkhouse_unlocked_series_website_event_banner_desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/502e805a-3b10-4275-ba94-98e6e288b99c/thinkhouse_unlocked_series_website_event_banner_mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.Austria;GWLG.BalticStates;GWLG.Belgium;GWLG.CentralEasternEurope;GWLG.ChannelIslands;GWLG.Cyprus;GWLG.France;GWLG.Germany;GWLG.Ireland;GWLG.Italy;GWLG.Luxembourg;GWLG.Malta;GWLG.Monaco;GWLG.Netherlands;GWLG.NordicRegion;GWLG.Portugal;GWLG.Spain;GWLG.Switzerland;GWLG.UK;GWLG.UnitedStates,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,58076178-da60-4ab6-a07c-ef250971ebf7;9fbe191e-3bcf-45de-a2ba-338bb194fc9d;b2dc4461-dc66-4f96-9ae6-32bc2b14259d,"Automotive, Aviation, Aerospace & Defence, Construction & Engineering, Energy, Financial Institutions & Services, Food & Beverage, Government Contracting & Public Sector , Health & Care, Infrastructure, Life Sciences, Natural Resources, Nuclear, Real Estate, Retail, Leisure & Hotels, Tech","Climate Change and Environmental Law, Climate Change, Environmental Litigation","Environmental, Social and Governance (ESG), ThinkHouse","Birmingham, London, Toronto",NULL,NULL,NULL
305,/Events/2020/Creating-mentally-healthy-workplaces,en-GB,213F00D2-7E39-4C07-8385-7596C1F4CF0D,Creating mentally healthy workplaces,ThinkHouse Unlocked - Creating mentally healthy workplaces,Join us on this interactive webinar to share and listen to a discussion on why it’s crucial to ensure mental health is part of the renew and rebuild process for all businesses. ,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,38:44.0,40:15.0,14:30,15:30,BST,0,NULL,"<p>The pandemic has made new patterns of working a normal part of life, and this transition has had different impact on different people. The health inequalities surfaced by the disproportionate impact of the COVID-19 has meant that we have all had to review the way we interact the with the world, and workplaces have been forced to change and prioritise health.</p>

<p>Every manger has asked the question &#39;how are you?&#39; and listened intently to the response from colleagues. This is one of the culture changes we hope lasts beyond the pandemic because this question is the foundation for creating mentally healthy workplaces.</p>

<p>Join us on this interactive webinar to share and listen to a discussion on why it&#39;s crucial to ensure mental health is part of the renew and rebuild process for all businesses.</p>

<p>Michael Luckman and <a href=""http://citymha.org.uk/cmha-team/"" target=""_blank"">Poppy Jaman OBE</a>, CEO of the <a href=""http://citymha.org.uk/"" target=""_blank"">City Mental Health Alliance</a> will lead the conversation, and will welcome audience participation to share thoughts, experiences and questions throughout this live session.</p>

<p>This event is part of our <strong>ThinkHouse Unlocked</strong> series. Follow the registration link to attend this or any other of the sessions being delivered throughout September.</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession.</p>

<p>Please do get in touch if you have any further queries about this event and CPD.<br />
Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,30:00.0,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?rsid=qmT_TrCB8Tl7H5PlbBEvi3kAlou9FHcWdcwxg7zjshj98EOv0C0Mnh7Dy7kC-VL1&react=All%20Reactions,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,de517572-4373-4b36-844b-18be93f6f9bc;cbbbf9eb-a169-4053-8043-7085cfb8fd4a;3fc2ca8c-9d19-44ba-a3a9-ad1ecb11e900;f1e960f5-8231-4c56-b7bf-9898ebb538c5;06cecb4c-c959-4674-9047-d5d8ee8c673c;2cd1b5c0-8992-4c92-b8e8-d65d8b86dbed;5ad41b49-d460-489a-95b9-84c854eda6f1;a929915c-1d1f-4e9c-8c8b-f34a30e2ab4e;df411e0b-2c62-4a68-8456-2c7c1dd0b4da;049c8249-7ff3-4ee3-a439-590f45fd5cff;c0b8c1a8-73eb-4122-972f-dc5df852f68d;dede4518-e78c-4b48-a143-a2338be5d0ac;59be9dcd-e5f0-43e4-9d50-442a658eda18;0357076d-2635-451a-8d67-ec01f9f3082b;cdfc9b50-74c2-4af5-9508-342935f81ccd,NULL,6b906235-110b-475e-88cd-4ddef78eb8b8;a143cbfd-d333-42a0-89a6-7287894464f1,NULL,NULL,Webinar,NULL,NULL,NULL,GWLG.Events,NULL,~/getmedia/e937d887-2512-44cf-bb60-5269b5bb596b/design0001725_thinkhouse_unlocked_series_website_event_banner_1400-x-540.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/502e805a-3b10-4275-ba94-98e6e288b99c/design0001725_thinkhouse_unlocked_series_website_event_banner_500-x-550.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,NULL,"Automotive, Aviation, Aerospace & Defence, Construction & Engineering, Energy, Financial Institutions & Services, Food & Beverage, Government Contracting & Public Sector , Health & Care, Infrastructure, Life Sciences, Natural Resources, Nuclear, Real Estate, Retail, Leisure & Hotels, Tech",NULL,"COVID-19: How will coronavirus impact your business?, ThinkHouse",NULL,NULL,NULL,NULL
307,/Events/2020/L-Atelier-Legal,fr-CA,2123F8B9-6E98-4EF2-AD35-6243E5043B38,L'Atelier Légal,L'Atelier Légal – un rendez-vous proposé par Gowling WLG et ACC Québec,"Gowling WLG et ACC Québec vous invitent à leur nouveau rendez-vous, L'Atelier légal, dans le cadre duquel des experts présentent et expliquent les nouvelles tendances touchant le milieu juridique.",~/getmedia/79e3e828-9341-4840-9208-c6f21d1828a6/Lag_Legal_23_septembre_V4.jpg.xml?width=600&height=180&ext=.jpg,NULL,GWLG.Webinar,00:00.0,30:00.0,9 h ,11 h 30,EST,0,NULL,"<p>Gowling WLG et ACC Québec vous invitent à leur nouveau rendez-vous,&nbsp;L&#39;Atelier légal,&nbsp;dans le cadre duquel des experts présentent et expliquent les nouvelles tendances touchant le milieu juridique.</p>

<p>Au cours des derniers mois, la pandémie a changé la pratique juridique telle que nous la connaissons. Nous avons dû rapidement nous adapter à des façons de travailler nouvelles et surtout, virtuelles. Ce virage technologique apporte son lot d&#39;enjeux, et les avocats/avocates en entreprise n&rsquo;y échappent pas. Quelles sont les bonnes mesures à adopter afin de s&#39;assurer du respect du secret professionnel? Comment garder un lien solide avec ses clients en contexte de télétravail? Que doit-on savoir avant de signer un contrat avec un fournisseur de services technologiques?</p>

<p>Joignez-vous à nos experts pour cet événement participatif durant lequel vous aurez la chance de poser vos questions, réseauter avec vos pairs et échanger sur vos défis quotidiens.</p>

<p>Places limitées, réservez la vôtre sans tarder!&nbsp;</p>

<h2>Programme</h2>

<ul>
	<li>9 h : <strong>Introduction&nbsp;</strong></li>
	<li>9 h 10 : <strong>La pratique juridique en mode virtuel</strong>&nbsp;
	<ul>
		<li>Le secret professionnel de l&#39;avocat en télétravail</li>
		<li>Le secret commercial en télétravail&nbsp;</li>
		<li>Les choses importantes à savoir avant de signer un contrat avec un fournisseur de services technologiques&nbsp;</li>
	</ul>
	</li>
	<li>9 h 50 : <strong>Pause</strong></li>
	<li>10 h : <strong>Ateliers collaboratifs : la relation à distance entre les avocats en entreprise et leurs clients</strong>
	<ul>
		<li>Les clés du succès pour ne pas se faire oublier et garder un lien solide avec ses clients</li>
		<li>La communication virtuelle : trucs et astuces&nbsp;</li>
	</ul>
	</li>
	<li>10 h 25 : <strong>Réflexion sur les ateliers</strong></li>
	<li>10 h 30 : <strong>Cultiver sa créativité : une présentation par Philippe Meunier</strong>
	<ul>
		<li>Une invitation à se promener dans le jardin de la créativité, un endroit où l&#39;on sème les idées et récolte les fruits de la créativité qui nous permettront de transformer l&#39;économie de demain&nbsp;</li>
	</ul>
	</li>
	<li>11 h 10 : <strong>Période de questions et réponses</strong></li>
	<li>11 h 30 : <strong>Conclusion</strong></li>
</ul>

<h2>Inscriptions fermées&nbsp;</h2>

<p>Nous avons atteint le nombre d&#39;inscriptions maximales pour cette conférence. Nous vous invitons à envoyer un courriel à <a href=""mailto:julie-han.angers@gowlingwlg.com"">julie-han.angers@gowlingwlg.com</a> afin d&#39;être le ou la première informé(e) si une place se libère!</p>

<h2>Pour nous joindre</h2>

<p>Julie-Han Angers<br />
Spécialiste, Événements<br />
<a href=""tel:+1%20514%20392-9553"" id=""lnkEventContactPhone"">T: +1 514 392-9553</a><br />
<a href=""mailto:julie-han.angers@gowlingwlg.com"" id=""lnkEventContactEmail"">julie-han.angers@gowlingwlg.com</a></p>
",NULL,NULL,00:00.0,NULL,NULL,NULL,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,NULL,NULL,NULL,NULL,Webinaires,NULL,Webinaire,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,Conférenciers,NULL,4eebbc16-5ec7-4186-b6bb-a7f0cf2f7ca4,NULL,NULL,NULL,Montréal,NULL,NULL,NULL
308,/Events/2020/Arbitrating-mediating-IP-disputes-around-the-world,en-GB,DD1243DB-D44F-48D7-9769-55EFE9A2D233,Arbitrating mediating IP disputes around the world,A better way? Arbitrating & mediating IP disputes around the world,"More and more intellectual property disputes are multi-national in nature, and many involve jurisdictions where the IP courts are inexperienced or sometimes untrusted. In consequence, many would-be litigants are increasingly turning to Alternative Dispute Resolution (ADR) methods to resolve their disputes – whether through informal mediation or a full arbitration procedure.",~/getmedia/ad4a6360-04f6-4767-bdb8-9802aaee4706/200916-Artibrating-webinar.png.xml?width=930&height=450&ext=.png,NULL,GWLG.Webinar,00:00.0,NULL,9:00 a.m.,10:00 a.m.,EST,0,NULL,"<p>More and more intellectual property disputes are multi-national in nature, and many involve jurisdictions where the IP courts are inexperienced or sometimes untrusted. In consequence, many would-be litigants are increasingly turning to Alternative Dispute Resolution (ADR) methods to resolve their disputes &ndash; whether through informal mediation or a full arbitration procedure.</p>

<p>On Sept. 16, join members of Gowling WLG&rsquo;s global IP team as they share best practices and international strategies surrounding the use of ADR in countries around the world. Harnessing their years of combined experience, the panel will touch on a number of timely topics over the course of their discussion, including:</p>

<ul>
	<li>Why ADR might be the right solution</li>
	<li>How to draft your contracts to ensure that ADR is required</li>
	<li>The practical issues involved in making the key choices about how the arbitration might run</li>
	<li>ADR issues specific to IP disputes and how to resolve them</li>
	<li>Jurisdiction-specific issues and obstables around the world</li>
</ul>

<p>This webinar series is designed to give you great insight into the lifecycle of a smart idea, and to enable you to plan ahead to maximise benefits and opportunities. Visit our website,&nbsp;<a href=""https://gowlingwlg.com/en/?utm_source=vuture&amp;utm_medium=email&amp;utm_campaign=vuture%2F"">gowlingwlg.com</a>, or our dedicated digital IP platform,&nbsp;<a href=""https://apps.fliplet.com/gowling-goxl?"">goxl.gowlingwlg.com</a>, to register for these events and view past events from this series, as well as a host of further IP information, news and updates.</p>

<p>-----</p>

<p><strong>CPD/CLE Details</strong></p>

<div>
<p><strong>LSO:</strong>&nbsp;This program is eligible for up to 1 hour of Substantive content<br />
<strong>Quebec:</strong>&nbsp;A certificate of attendance will be issued to professionals after this session<br />
<strong>LSBC:</strong>&nbsp;This program is eligible for up to 1 hour toward the LSBC&#39;s CPD requirement<br />
<strong>LSAB:</strong>&nbsp;This program is eligible for up to 1 hour of credit toward the CPD program</p>
</div>
",NULL,NULL,00:00.0,https://sites-gowlingwlg.vuturevx.com/106/5589/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,08b9a44c-bb26-4255-9779-296a124fcbee;3ebdb6e8-188b-473e-8cc5-7a24e0c040fe,NULL,6767b2fc-7817-42ae-a54e-05595fe6c1cd;ad4cc2a0-5825-4d92-930d-64226a7659b3;a3dc0a48-dabc-4038-957e-d23bab4d345b;7daffdf3-ccec-45a0-9a0e-0b8811e00398;4bcdddc1-a500-4dd4-ac52-fd05abee5ef7;324b94dc-effd-40f6-9b4b-de402aa7d013,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/106/5589/landing-pages/event-registration-(blank-form).asp,Register for this event,GWLG.Canada,0,0CDA2C7E-BFD7-48AD-991D-C46DBB4E55AB,Speakers,NULL,NULL,NULL,"Intellectual Property, Mediation",NULL,NULL,NULL,NULL,NULL
309,/Events/2020/ThinkHouse-Changes-to-insolvency-law,en-GB,326B2527-7E19-40E6-ACA3-EFA5B793E3B3,ThinkHouse - Changes to insolvency law,ThinkHouse Unlocked: Changes to insolvency law,"In this on-demand webinar, Jasvir Jootla will provide an overview of the recent changes to the Corporate Insolvency and Governance Act. ",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,40:35.0,40:48.0,NULL,NULL,GMT,0,NULL,"<p>In this on-demand webinar, Jasvir Jootla will provide an overview of the recent changes to the Corporate Insolvency and Governance Act. She will highlight the differences within the Act and discuss the impact it will have if you are dealing with insolvent businesses.</p>

<p>This event is part of our <strong>ThinkHouse Unlocked</strong> series. Follow the registration link to attend this or any of the other sessions being delivered throughout September.</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,42:55.0,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?rsid=qmT_TrCB8Tl7H5PlbBEvi3kAlou9FHcWdcwxg7zjshj98EOv0C0Mnh7Dy7kC-VL1&react=All%20Reactions,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,de517572-4373-4b36-844b-18be93f6f9bc;cbbbf9eb-a169-4053-8043-7085cfb8fd4a;3fc2ca8c-9d19-44ba-a3a9-ad1ecb11e900;f1e960f5-8231-4c56-b7bf-9898ebb538c5;06cecb4c-c959-4674-9047-d5d8ee8c673c;2cd1b5c0-8992-4c92-b8e8-d65d8b86dbed;5ad41b49-d460-489a-95b9-84c854eda6f1;a929915c-1d1f-4e9c-8c8b-f34a30e2ab4e;df411e0b-2c62-4a68-8456-2c7c1dd0b4da;049c8249-7ff3-4ee3-a439-590f45fd5cff;c0b8c1a8-73eb-4122-972f-dc5df852f68d;dede4518-e78c-4b48-a143-a2338be5d0ac;59be9dcd-e5f0-43e4-9d50-442a658eda18;0357076d-2635-451a-8d67-ec01f9f3082b;cdfc9b50-74c2-4af5-9508-342935f81ccd,ccb3b009-ba81-4ff5-8e8a-9200813a2a54,a143cbfd-d333-42a0-89a6-7287894464f1,c87f99c4-6d5c-4e17-8e93-2a857c86682a,NULL,Webinar,Jasvir Jootla,Webinar,34471,GWLG.Events,NULL,~/getmedia/e937d887-2512-44cf-bb60-5269b5bb596b/DESIGN0001725_ThinkHouse_Unlocked_Series_Website_Event_Banner_1400-x-540.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/502e805a-3b10-4275-ba94-98e6e288b99c/DESIGN0001725_ThinkHouse_Unlocked_Series_Website_Event_Banner_500-x-550.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,58076178-da60-4ab6-a07c-ef250971ebf7;9fbe191e-3bcf-45de-a2ba-338bb194fc9d,"Automotive, Aviation, Aerospace & Defence, Construction & Engineering, Energy, Financial Institutions & Services, Food & Beverage, Government Contracting & Public Sector , Health & Care, Infrastructure, Life Sciences, Natural Resources, Nuclear, Real Estate, Retail, Leisure & Hotels, Tech",Banking & Finance,ThinkHouse,"Birmingham, London",NULL,NULL,NULL
310,/Events/2020/ThinkHouse-Fraud-in-times-of-crisis,en-GB,D531EC56-5ABB-49FB-84B6-1CD6F461D506,ThinkHouse - Fraud in times of crisis ,ThinkHouse Unlocked: Fraud in times of crisis ,"In this on-demand webinar, Alex Jay and Brid Holden will discuss the some of these risks and how potential pitfalls can be avoided.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,54:32.0,54:41.0,NULL,NULL,GMT,0,NULL,"<p>Many businesses are feeling the economic repercussions of COVID-19. This means that often businesses are seeking new trade and business opportunities, and offers of such are therefore hard to turn down. This can, however, leave businesses at serious risk of fraud.</p>

<p>In this on-demand webinar, Alex Jay and Brid Holden will discuss the some of these risks and how potential pitfalls can be avoided.</p>

<p>This event is part of our <strong>ThinkHouse Unlocked</strong> series. Follow the registration link to attend this or any of the other sessions being delivered throughout September.</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,56:25.0,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?rsid=qmT_TrCB8Tl7H5PlbBEvi3kAlou9FHcWdcwxg7zjshj98EOv0C0Mnh7Dy7kC-VL1&react=All%20Reactions,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,de517572-4373-4b36-844b-18be93f6f9bc;cbbbf9eb-a169-4053-8043-7085cfb8fd4a;3fc2ca8c-9d19-44ba-a3a9-ad1ecb11e900;f1e960f5-8231-4c56-b7bf-9898ebb538c5;06cecb4c-c959-4674-9047-d5d8ee8c673c;2cd1b5c0-8992-4c92-b8e8-d65d8b86dbed;5ad41b49-d460-489a-95b9-84c854eda6f1;a929915c-1d1f-4e9c-8c8b-f34a30e2ab4e;df411e0b-2c62-4a68-8456-2c7c1dd0b4da;049c8249-7ff3-4ee3-a439-590f45fd5cff;c0b8c1a8-73eb-4122-972f-dc5df852f68d;dede4518-e78c-4b48-a143-a2338be5d0ac;59be9dcd-e5f0-43e4-9d50-442a658eda18;0357076d-2635-451a-8d67-ec01f9f3082b;cdfc9b50-74c2-4af5-9508-342935f81ccd,20b4abdb-b2ff-4890-a225-b432bd7b664a,6b906235-110b-475e-88cd-4ddef78eb8b8;a143cbfd-d333-42a0-89a6-7287894464f1,7c91aabd-360a-4f49-b094-7f9f51c78092;85cab9cc-17ba-4e73-934a-3ab33ea692fe,NULL,Webinar,"Alex Jay, Brid Holden",Webinar,34471,GWLG.Events,NULL,~/getmedia/e937d887-2512-44cf-bb60-5269b5bb596b/DESIGN0001725_ThinkHouse_Unlocked_Series_Website_Event_Banner_1400-x-540.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/502e805a-3b10-4275-ba94-98e6e288b99c/DESIGN0001725_ThinkHouse_Unlocked_Series_Website_Event_Banner_500-x-550.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,58076178-da60-4ab6-a07c-ef250971ebf7;9fbe191e-3bcf-45de-a2ba-338bb194fc9d,"Automotive, Aviation, Aerospace & Defence, Construction & Engineering, Energy, Financial Institutions & Services, Food & Beverage, Government Contracting & Public Sector , Health & Care, Infrastructure, Life Sciences, Natural Resources, Nuclear, Real Estate, Retail, Leisure & Hotels, Tech",Fraud and Asset Recovery,"COVID-19: How will coronavirus impact your business?, ThinkHouse","Birmingham, London",NULL,NULL,NULL
311,/Events/2020/ThinkHouse-Lessons-on-directors-duties,en-GB,F5596AF9-F381-4381-B296-737453DDD47E,ThinkHouse - Lessons on directors' duties ,ThinkHouse Unlocked: Lessons on directors' duties ,"In this on-demand webinar, Sharon Ayres will provide a short overview of the lessons that we can learn around directors duties' from the BEIS Committee enquiries and conclusions on the collapses of Carillion and Thomas Cook.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,01:39.0,01:46.0,NULL,NULL,GMT,0,NULL,"<p>In this on-demand webinar, Sharon Ayres will provide a short overview of the lessons that we can learn around directors duties&#39; from the BEIS Committee enquiries and conclusions on the collapses of Carillion and Thomas Cook.</p>

<p>This event is part of our <strong>ThinkHouse Unlocked</strong> series. Follow the registration link to attend this or any of the other sessions being delivered throughout September.</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,02:53.0,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?rsid=qmT_TrCB8Tl7H5PlbBEvi3kAlou9FHcWdcwxg7zjshj98EOv0C0Mnh7Dy7kC-VL1&react=All%20Reactions,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,de517572-4373-4b36-844b-18be93f6f9bc;cbbbf9eb-a169-4053-8043-7085cfb8fd4a;3fc2ca8c-9d19-44ba-a3a9-ad1ecb11e900;f1e960f5-8231-4c56-b7bf-9898ebb538c5;06cecb4c-c959-4674-9047-d5d8ee8c673c;2cd1b5c0-8992-4c92-b8e8-d65d8b86dbed;5ad41b49-d460-489a-95b9-84c854eda6f1;a929915c-1d1f-4e9c-8c8b-f34a30e2ab4e;df411e0b-2c62-4a68-8456-2c7c1dd0b4da;049c8249-7ff3-4ee3-a439-590f45fd5cff;c0b8c1a8-73eb-4122-972f-dc5df852f68d;dede4518-e78c-4b48-a143-a2338be5d0ac;59be9dcd-e5f0-43e4-9d50-442a658eda18;0357076d-2635-451a-8d67-ec01f9f3082b;cdfc9b50-74c2-4af5-9508-342935f81ccd,NULL,a143cbfd-d333-42a0-89a6-7287894464f1,d7a64117-fe8d-47a0-ace6-75c8607bfcdd,NULL,Webinar,Sharon Ayres,Webinar,34471,GWLG.Events,NULL,~/getmedia/e937d887-2512-44cf-bb60-5269b5bb596b/DESIGN0001725_ThinkHouse_Unlocked_Series_Website_Event_Banner_1400-x-540.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/502e805a-3b10-4275-ba94-98e6e288b99c/DESIGN0001725_ThinkHouse_Unlocked_Series_Website_Event_Banner_500-x-550.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,58076178-da60-4ab6-a07c-ef250971ebf7;9fbe191e-3bcf-45de-a2ba-338bb194fc9d,"Automotive, Aviation, Aerospace & Defence, Construction & Engineering, Energy, Financial Institutions & Services, Food & Beverage, Government Contracting & Public Sector , Health & Care, Infrastructure, Life Sciences, Natural Resources, Nuclear, Real Estate, Retail, Leisure & Hotels, Tech",NULL,ThinkHouse,"Birmingham, London",NULL,NULL,NULL
312,/Events/2020/ThinkHouse-Commercial-contract-law-update,en-GB,8035FE51-AF07-4EF3-A7EF-1DE68B7808A3,ThinkHouse - Commercial contract law update,ThinkHouse Unlocked: Commercial contract law update,"In this on-demand webinar, David Lowe will discuss elements in the updated Insolvency Act that will impact commercial contracts and he will highlight some recent cases which should be at the top of your reference list.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,07:24.0,07:29.0,NULL,NULL,GMT,0,NULL,"<p>In this on-demand webinar, David Lowe will discuss elements in the updated Insolvency Act that will impact commercial contracts, he will reflect on how the COVID-19 pandemic has tested features of contracts such as Force Majeure, and he will highlight some recent cases which should be at the top of your reference list.</p>

<p>This event is part of our <strong>ThinkHouse Unlocked</strong> series. Follow the registration link to attend this or any of the other sessions being delivered throughout September.</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,00:06.0,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?rsid=qmT_TrCB8Tl7H5PlbBEvi3kAlou9FHcWdcwxg7zjshj98EOv0C0Mnh7Dy7kC-VL1&react=All%20Reactions,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,de517572-4373-4b36-844b-18be93f6f9bc;cbbbf9eb-a169-4053-8043-7085cfb8fd4a;3fc2ca8c-9d19-44ba-a3a9-ad1ecb11e900;f1e960f5-8231-4c56-b7bf-9898ebb538c5;06cecb4c-c959-4674-9047-d5d8ee8c673c;2cd1b5c0-8992-4c92-b8e8-d65d8b86dbed;5ad41b49-d460-489a-95b9-84c854eda6f1;a929915c-1d1f-4e9c-8c8b-f34a30e2ab4e;df411e0b-2c62-4a68-8456-2c7c1dd0b4da;049c8249-7ff3-4ee3-a439-590f45fd5cff;c0b8c1a8-73eb-4122-972f-dc5df852f68d;dede4518-e78c-4b48-a143-a2338be5d0ac;59be9dcd-e5f0-43e4-9d50-442a658eda18;0357076d-2635-451a-8d67-ec01f9f3082b;cdfc9b50-74c2-4af5-9508-342935f81ccd,549cbe28-f188-44cd-85c0-0f4e23a23817,a143cbfd-d333-42a0-89a6-7287894464f1,ad056fcd-7211-4da7-a9e2-30612d332954,NULL,Webinar,David Lowe,Webinar,34471,GWLG.Events,NULL,~/getmedia/e937d887-2512-44cf-bb60-5269b5bb596b/DESIGN0001725_ThinkHouse_Unlocked_Series_Website_Event_Banner_1400-x-540.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/502e805a-3b10-4275-ba94-98e6e288b99c/DESIGN0001725_ThinkHouse_Unlocked_Series_Website_Event_Banner_500-x-550.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,58076178-da60-4ab6-a07c-ef250971ebf7;9fbe191e-3bcf-45de-a2ba-338bb194fc9d,"Automotive, Aviation, Aerospace & Defence, Construction & Engineering, Energy, Financial Institutions & Services, Food & Beverage, Government Contracting & Public Sector , Health & Care, Infrastructure, Life Sciences, Natural Resources, Nuclear, Real Estate, Retail, Leisure & Hotels, Tech",Commercial,ThinkHouse,"Birmingham, London",NULL,NULL,NULL
313,/Events/2020/Preparing-for-Brexit-and-responding-to-COVID-19,en-GB,C5EC81FD-7D45-4F33-B781-A5D5284D4A11,Preparing for Brexit and responding to COVID-19,Preparing for Brexit and responding to COVID-19: the FCA's response and its international priorities ,"Ian Mason, Partner and Head of UK Financial Services Regulatory Team will be chairing our next webinar with guest Nausicaa Delfas from the FCA on Wednesday 16th September at 10:00 am.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,00:00.0,00:00.0,10:00,11:00,BST,0,NULL,"<p>Ian Mason, Partner and Head of UK Financial Services Regulatory Team will be chairing our next webinar with guest Nausicaa Delfas from the FCA on Wednesday 16th September at 10:00 am.</p>

<p>Nausicaa will be speaking about:</p>

<ul>
	<li>Preparations for the end of the EU withdrawal transition period</li>
	<li>The FCA&#39;s international priorities - and the impact of COVID-19 on the international agenda</li>
	<li>The future of regulation after the transition period.</li>
</ul>

<p>We will also have a live Q&amp;A session.</p>

<h3>External Speaker</h3>

<p><img alt=""Photo of Nausicaa Delfas"" src=""~/getmedia/3c793c44-1ba8-4cfc-ae4f-f0d96f9326f8/nausicaa-delfas.jpg.xml"" style=""padding: 0px 5px 5px 0px; float: left;"" />Nausicaa Delfas, Executive Director of International and a member of the Executive Committee at the UK Financial Conduct Authority, is responsible for setting and leading the delivery of the FCA&#39;s strategy for international policy and engagement and will lead the FCA&#39;s response throughout the process of withdrawal from the EU.</p>

<p>Email: <a href=""mailto:nausicaa.delfas@fca.org.uk"">nausicaa.delfas@fca.org.uk</a></p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,21:30.0,mailto:joy.litchfield@gowlingwlg.com?subject=Preparing for Brexit and responding to COVID-19: the FCA's response and its international priorities,NULL,Register for this event,C41373B4-86B9-4F74-8894-0B0BB7DDBD18,06cecb4c-c959-4674-9047-d5d8ee8c673c,ccb3b009-ba81-4ff5-8e8a-9200813a2a54,NULL,af5005a2-4ec9-49ba-b7bd-262bb191b111,NULL,Webinar,Ian Mason,Online event,694,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,mailto:joy.litchfield@gowlingwlg.com?subject=Preparing for Brexit and responding to COVID-19: the FCA's response and its international priorities,Register for this event,GWLG.UK,0,95EC9477-4594-4332-A463-E612BD16CA0C,Speaker(s),NULL,NULL,Financial Institutions & Services,Banking & Finance,NULL,NULL,NULL,NULL,NULL
314,/Events/2020/OEA-First-Nations-Partnership-Series,en-GB,4C840662-B1D1-4222-B9E1-AE288F44CED2,OEA First Nations Partnership Series,OEA First Nations Partnership Series - Part 1,The Ontario Energy Association (OEA) is hosting a webinar series focusing on opportunities for increased participation of First Nations in the energy sector. ,~/getmedia/b364e667-af40-4906-b4bd-c23c477be2d3/200909-oae-first-nations-partnership-series-webinar.jpg.xml?width=900&height=450&ext=.jpg,NULL,GWLG.Webinar,54:42.0,55:00.0,10 a.m.,11:30 a.m.,EST,0,NULL,"<h2>Focusing on learnings and opportunities for the participation of First Nations in the energy sector.</h2>

<p>The Ontario Energy Association (OEA) is hosting a webinar series focusing on opportunities for increased participation of First Nations in the energy sector. The series will explore learnings from existing energy sector partnerships, and further opportunities for partnership between First Nations and the energy sector.</p>

<h2>Who should attend?</h2>

<p>First nations communities, energy sector companies, government, consulting firms and financial institutions.</p>

<p><a class=""c-button"" href=""https://mailchi.mp/energyontario/announcing-oea-first-nations-partnership-series-starting-on-september-16-registration-is-open"" target=""_blank"">More information &amp; registration</a></p>
",NULL,NULL,56:59.0,https://mailchi.mp/energyontario/announcing-oea-first-nations-partnership-series-starting-on-september-16-registration-is-open,NULL,Click here for more information & registration,2AC31727-4C97-4C05-A86C-595D3554B185,f1e960f5-8231-4c56-b7bf-9898ebb538c5,264f3cac-2ddb-4c4e-8048-ee0d63d1e68d,NULL,e0268da4-43c7-45b9-bb3c-919f51d7f25f,NULL,Webinar,Jaimie Lickers,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,Speakers,NULL,NULL,Energy,Indigenous Law,NULL,NULL,NULL,NULL,NULL
315,/Events/2020/Energy-storage,en-GB,610E32D5-0EF8-4D6E-991A-493FB4BC9F3D,Energy storage,Energy Innovators Roundtable Series: Energy storage,Curious about this developing trend? Join Gowling WLG as we reconvene our Energy Innovators Roundtable Series to discuss the state of energy storage in Canada.,~/getmedia/ac41f719-0e82-4170-9c4f-2012261e4ce2/200909-Energy-roundtable-one.jpg.xml?width=930&height=450&ext=.jpg,Webinar banner,GWLG.Webinar,00:00.0,30:00.0,2 p.m.,3:30 p.m.,EST,0,NULL,"<p>The energy storage industry is growing rapidly in Canada, with new technologies providing both direct and indirect benefits to existing grid assets. These advancements are in turn driving regulatory progress, and as distributed energy system costs continue to plummet, exciting new business opportunities for combined technologies are emerging.</p>

<p>Curious about this developing trend? Join Gowling WLG as we reconvene our Energy Innovators Roundtable Series to discuss the state of energy storage in Canada.</p>

<p>RSVP today to reserve your spot!</p>

<h2>Speakers</h2>

<p><a href=""http://renewablesassociation.ca/team/"" target=""_blank"">Brandy Giannetta</a> - Senior Director, Ontario &amp; Atlantic Canada, Canadian Renewable Energy Association</p>

<p><a href=""http://poweradvisoryllc.com/power-advisory-staff/"" target=""_blank"">Travis Lusney</a> - Manager of Procurement and Power Systems, Power Advisory LLC</p>

<p><em><span style=""color: #005aa9;"">More details to come as we host other virtual Energy Innovators Roundtable discussions this fall.</span></em></p>
",NULL,NULL,38:46.0,https://sites-gowlingwlg.vuturevx.com/106/5507/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,90A71CC3-07A3-4265-B0C4-C31612546237,f1e960f5-8231-4c56-b7bf-9898ebb538c5,NULL,NULL,NULL,NULL,Webinar,NULL,NULL,NULL,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/106/5507/landing-pages/event-registration-(blank-form).asp,Register now,GWLG.Canada,0,NULL,NULL,NULL,NULL,Energy,NULL,NULL,NULL,NULL,NULL,NULL
316,/Events/2020/L-octroi-de-dommages-moraux-contexte-d-emploi,fr-CA,AD0995F5-45A3-4C50-BDA1-257F7037CA6F,L'octroi de dommages moraux contexte d'emploi,L'octroi de dommages moraux dans un contexte d'emploi : quand et combien?,"Vieillissement de la population. Santé et sécurité au travail. Rareté de la main-d’œuvre. Ces concepts propres au domaine de l’emploi nous sont familiers, car on en a souvent entendu parler au cours des dernières années.",~/getmedia/2f787b7f-262e-486b-8da7-ad20759e9f56/200915-droit-travail-webinaires-serie.jpg.xml?width=930&height=450&ext=.jpg,event thumbnail,GWLG.Webinar,00:00.0,00:00.0,9 h,10 h,EST,0,NULL,"<p>Vieillissement de la population. Santé et sécurité au travail. Rareté de la main-d&rsquo;œuvre. Ces concepts propres au domaine de l&rsquo;emploi nous sont familiers, car on en a souvent entendu parler au cours des dernières années. Aujourd&rsquo;hui, la pandémie a transformé radicalement le travail tel que nous le connaissions. Aux enjeux de prévention du harcèlement en milieu de travail, de diversité et d&rsquo;équité salariale se sont ajoutés la santé psychologique, le virage numérique et la conciliation famille-travail qui sont désormais au cœur des préoccupations des travailleurs de ce monde. Grâce à la médiatisation et aux mouvements sociaux, la population est plus sensibilisée que jamais à ces sujets qui n&rsquo;auraient peut-être jamais été abordés dans le passé. Or, ils ont une grande incidence à l&rsquo;heure actuelle sur les structures des entreprises, petites ou grandes.</p>

<p>Le monde du travail est en pleine transformation et, à titre d&rsquo;employeur, vous devez vous ajuster à cette nouvelle réalité. Pour en savoir plus sur les dernières tendances de l&rsquo;année en droit du travail et de l&rsquo;emploi, ne manquez pas les présentations de nos experts dans le cadre de notre série de webinaires sur le sujet.</p>

<p><a href=""https://sites-gowlingwlg.vuturevx.com/107/5606/landing-pages/event-registration-(blank-form).asp"" target=""_blank"">Places limitées, réservez la vôtre sans tarder!</a></p>

<h2>Prochains webinaires</h2>

<p>Joignez-vous à Gowling WLG cet automne pour sa série de webinaires en droit du travail et de l&#39;emploi : les dernières tendances.</p>

<p>Places limitées, réservez la vôtre sans tarder!</p>

<ul>
	<li>Employeurs : votre contrat d&#39;emploi vous protège-t-il vraiment? Mercredi 21 octobre | 9 h à 10&nbsp;h</li>
	<li>Revue jurisprudentielle&nbsp;&ndash;&nbsp;les développements récents<strong> -&nbsp;</strong>Mercredi 11 novembre | 9 h à 10 h</li>
</ul>
","<p>Cette conférence comptera pour un maximum d&#39;une heure de formation continue conformément aux exigences du Barreau du Québec.</p>
",NULL,30:00.0,https://sites-gowlingwlg.vuturevx.com/107/5606/landing-pages/event-registration-(blank-form).asp,NULL,RSVP,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,d8837737-40d2-4472-8a9e-ba4101ec2105,NULL,4b614dcf-e7c9-466c-b39c-dae0dee147fc;6afdd62d-3166-4623-98dc-e0cdea6d1b74,NULL,Webinaires,NULL,Webinaire,34471,GWLG.Events,"<p>Série webinaires - droit du travail et de l&#39;emploi : les dernières tendances</p>
",~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/107/5606/landing-pages/event-registration-(blank-form).asp,"Places limitées, réservez la vôtre sans tarder!",GWLG.Canada,0,NULL,Conférenciers,NULL,NULL,NULL,"Travail, emploi et droits de la personne",NULL,NULL,NULL,NULL,NULL
317,/Events/2020/Employeurs-votre-contrat-d-emploi,fr-CA,A4D11745-C974-4CCD-8B3E-98DB107AA44F,Employeurs : votre contrat d'emploi ,Employeurs : votre contrat d'emploi vous protège-t-il vraiment?,"Le monde du travail est en pleine transformation et, à titre d’employeur, vous devez vous ajuster à cette nouvelle réalité. Pour en savoir plus sur les dernières tendances de l’année en droit du travail et de l’emploi, ne manquez pas les présentations de nos experts dans le cadre de notre série de webinaires sur le sujet.",~/getmedia/426beed2-ea6a-49ae-9030-86bce9f6b716/Invitation_Colloque_V3.jpg.xml?width=600&height=180&ext=.jpg,NULL,GWLG.Webinar,00:00.0,00:00.0,9 h ,10 h,EST,0,NULL,"<p>Vieillissement de la population. Santé et sécurité au travail. Rareté de la main-d&rsquo;œuvre. Ces concepts propres au domaine de l&rsquo;emploi nous sont familiers, car on en a souvent entendu parler au cours des dernières années. Aujourd&rsquo;hui, la pandémie a transformé radicalement le travail tel que nous le connaissions. Aux enjeux de prévention du harcèlement en milieu de travail, de diversité et d&rsquo;équité salariale se sont ajoutés la santé psychologique, le virage numérique et la conciliation famille-travail qui sont désormais au cœur des préoccupations des travailleurs de ce monde. Grâce à la médiatisation et aux mouvements sociaux, la population est plus sensibilisée que jamais à ces sujets qui n&rsquo;auraient peut-être jamais été abordés dans le passé. Or, ils ont une grande incidence à l&rsquo;heure actuelle sur les structures des entreprises, petites ou grandes.</p>

<p>Le monde du travail est en pleine transformation et, à titre d&rsquo;employeur, vous devez vous ajuster à cette nouvelle réalité. Pour en savoir plus sur les dernières tendances de l&rsquo;année en droit du travail et de l&rsquo;emploi, ne manquez pas les présentations de nos experts dans le cadre de notre série de webinaires sur le sujet.</p>

<p><a href=""https://sites-gowlingwlg.vuturevx.com/107/5606/landing-pages/event-registration-(blank-form).asp"" target=""_blank"">Places limitées, réservez la vôtre sans tarder!</a></p>

<h2>Prochain&nbsp;webinaire</h2>

<p>Joignez-vous à Gowling WLG cet automne pour sa série de webinaires en droit du travail et de l&#39;emploi : les dernières tendances.</p>

<p>Places limitées, réservez la vôtre sans tarder!</p>

<ul>
	<li>Revue jurisprudentielle&nbsp;&ndash;&nbsp;les développements récents<strong> -&nbsp;</strong>Mercredi 11 novembre | 9 h à 10 h</li>
</ul>
","<p>Cette conférence comptera pour un maximum d&#39;une heure de formation continue conformément aux exigences du Barreau du Québec.</p>
",NULL,30:00.0,https://sites-gowlingwlg.vuturevx.com/107/5606/landing-pages/event-registration-(blank-form).asp,NULL,RSVP,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,d8837737-40d2-4472-8a9e-ba4101ec2105,NULL,f40a057d-bc71-4dce-8996-e5bd67b7a089;55fe5486-16b8-4eff-8d24-4d3c9963bb7d,NULL,Webinaires,NULL,Webinaire,34471,GWLG.Events,"<p>Série webinaires - droit du travail et de l&#39;emploi : les dernières tendances</p>
",~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/107/5606/landing-pages/event-registration-(blank-form).asp,"Places limitées, réservez la vôtre sans tarder!",GWLG.Canada,0,NULL,Conférencières,NULL,NULL,NULL,"Travail, emploi et droits de la personne",NULL,NULL,NULL,NULL,NULL
318,/Events/2020/Revue-jurisprudentielle,fr-CA,29056A1D-4960-4389-880A-A611440BBC97,Revue jurisprudentielle,Revue jurisprudentielle - les développements récents,"Le monde du travail est en pleine transformation et, à titre d’employeur, vous devez vous ajuster à cette nouvelle réalité. Pour en savoir plus sur les dernières tendances de l’année en droit du travail et de l’emploi, ne manquez pas les présentations de nos experts dans le cadre de notre série de webinaires sur le sujet.",~/getmedia/426beed2-ea6a-49ae-9030-86bce9f6b716/Invitation_Colloque_V3.jpg.xml?width=600&height=180&ext=.jpg,NULL,GWLG.Webinar,00:00.0,00:00.0,9 h ,10 h ,EST,0,NULL,"<p>Vieillissement de la population. Santé et sécurité au travail. Rareté de la main-d&rsquo;œuvre. Ces concepts propres au domaine de l&rsquo;emploi nous sont familiers, car on en a souvent entendu parler au cours des dernières années. Aujourd&rsquo;hui, la pandémie a transformé radicalement le travail tel que nous le connaissions. Aux enjeux de prévention du harcèlement en milieu de travail, de diversité et d&rsquo;équité salariale se sont ajoutés la santé psychologique, le virage numérique et la conciliation famille-travail qui sont désormais au cœur des préoccupations des travailleurs de ce monde. Grâce à la médiatisation et aux mouvements sociaux, la population est plus sensibilisée que jamais à ces sujets qui n&rsquo;auraient peut-être jamais été abordés dans le passé. Or, ils ont une grande incidence à l&rsquo;heure actuelle sur les structures des entreprises, petites ou grandes.</p>

<p>Le monde du travail est en pleine transformation et, à titre d&rsquo;employeur, vous devez vous ajuster à cette nouvelle réalité. Pour en savoir plus sur les dernières tendances de l&rsquo;année en droit du travail et de l&rsquo;emploi, ne manquez pas les présentations de nos experts dans le cadre de notre série de webinaires sur le sujet.</p>

<p><a href=""https://sites-gowlingwlg.vuturevx.com/107/5606/landing-pages/event-registration-(blank-form).asp"" target=""_blank"">Places limitées, réservez la vôtre sans tarder!</a></p>
","<p>Cette conférence comptera pour un maximum d&#39;une heure de formation continue conformément aux exigences du Barreau du Québec.</p>
",NULL,30:00.0,https://sites-gowlingwlg.vuturevx.com/107/5606/landing-pages/event-registration-(blank-form).asp,NULL,RSVP,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,d8837737-40d2-4472-8a9e-ba4101ec2105,NULL,e72ca6ad-e2e0-446b-9914-9eb2ed87e5b9;aac7181f-061a-4203-86bf-3d3c742afce5,NULL,Webinaires,NULL,Webinaire,34471,GWLG.Events,"<p>Série webinaires - droit du travail et de l&#39;emploi : les dernières tendances</p>
",~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/107/5606/landing-pages/event-registration-(blank-form).asp,"Places limitées, réservez la vôtre sans tarder!",GWLG.Canada,0,NULL,Conférenciers,NULL,NULL,NULL,"Travail, emploi et droits de la personne",NULL,NULL,NULL,NULL,NULL
319,/Events/2020/Conduct-risk-SMCR-post-COVID-19,en-GB,CEC131B0-EF27-4524-9AC2-F77C4550476F,Conduct risk & SMCR post COVID-19,Conduct risk & SMCR post COVID-19 – the FCA's expectations,"Sushil Kuner, Principal Associate in our UK Financial Services Regulatory Team, will be chairing our forthcoming webinar with guest speaker David Blunt from the FCA on Tuesday 29 September at 10am.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,15:03.0,NULL,10:00,NULL,BST,0,NULL,"<p>Sushil Kuner, Principal Associate in our UK Financial Services Regulatory Team, will be chairing our forthcoming webinar with guest speaker David Blunt from the FCA on Tuesday 29 September at 10am.</p>

<p>David will be speaking about:</p>

<ul>
	<li>The FCA&#39;s culture agenda</li>
	<li>The Covid-19 pandemic -lessons learned and pointers for the future</li>
	<li>Diversity and inclusion as part of culture</li>
	<li>Implementing the Certification Regime and the Conduct Rules</li>
</ul>

<p>There will be ample time for a Q&amp;A session and if you would like to send any questions in advance we will cover these during the webinar. Please send your questions to&nbsp;<a href=""mailto:Joy.litchfield@gowlingwlg.com"">Joy.litchfield@gowlingwlg.com</a></p>

<h2>Speakers</h2>

<p><img alt="""" src=""~/getmedia/423d4842-d25c-461c-89d8-ee3585df8a91/sushil-kuner.jpg.xml?width=224&amp;height=224"" style=""padding: 0px 10px 10px 0px; float: left;"" /></p>

<h3>Sushil Kuner</h3>

<p>Sushil Kuner advises on all aspects of financial services regulatory law, having spent eight years working within the Supervision and Enforcement Divisions of the FCA.</p>

<p>She has extensive regulatory experience and advises on a broad range of contentious and non-contentious financial services regulatory issues including anti-money laundering and anti-bribery controls, perimeter issues, conflicts of interest, suitability of investment advice/discretionary investment management decisions, conduct of business, e-commerce and payment services, consumer credit, mortgage regulation, financial promotions, treatment of customers, client asset rules, funds, market misconduct, product governance, corporate governance, personal culpability of senior individuals and conduct risk.</p>

<p><img alt="""" src=""~/getmedia/49a8b55f-dc50-4e10-8e0e-6f47cb7b111c/david-blunt.jpg.xml?width=224&amp;height=224"" style=""padding: 0px 10px 10px 0px; float: left;"" /></p>

<h3>David Blunt</h3>

<p>David is Head of the Conduct Specialists Department in Supervision at the FCA. David is responsible for the extension of the senior managers and certification regimes to all FCA authorised firms - one of the key FCA workstreams focusing on culture and governance at firms. David also oversees the FCA&#39;s specialists on financial promotions and consumer contracts issues, as well as specialists in remuneration at firms and the FCAs use of its powers under s166 FSMA (&#39;skilled persons&#39;).</p>

<p>&nbsp;</p>

<p>&nbsp;</p>
",NULL,NULL,40:15.0,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?RSID=1tVDY_1_VK8hFTLFECosBPCU6oiXnvC_vlRZgtebXtqw1UK4roDBCysAbl4BGgA_,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,06cecb4c-c959-4674-9047-d5d8ee8c673c,aa5dcce5-fbe3-48b0-8a5c-b653c134f240,6b906235-110b-475e-88cd-4ddef78eb8b8,0ccc4841-f8a1-4356-853e-e2ad6f7e230c,NULL,Webinar,Sushil Kuner,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,NULL,0,95EC9477-4594-4332-A463-E612BD16CA0C,Speaker(s),NULL,NULL,Financial Institutions & Services,Financial Services Regulation,COVID-19: How will coronavirus impact your business?,NULL,NULL,NULL,NULL
320,/Events/2020/The-Israel-UAE-deal,en-GB,57E95D49-F777-4730-A902-30F619C16B80,The Israel-UAE deal,The Israel-UAE deal: Implications for international business,"On October 14, join members of Gowling WLG’s global team, as well as distinguished guests, as they explore how this historic treaty promises to reshape the investment and trade landscape in the Middle East for generations to come.",~/getmedia/516bcf49-5dcb-4e00-8c8f-3f7f87661809/200917-israel-uae-deal.jpg.xml?width=930&height=450&ext=.jpg,event thumbnail,GWLG.Webinar,00:00.0,00:00.0,"16:00 IDT, 17:00 GST, 09:00",NULL,EST,0,NULL,"<p>The UAE officially normalised relations with Israel on 15 September. Although the peace treaty is of huge historic value for a number of reasons, the real importance lies within the untold economic opportunities for the both countries.</p>

<p>The breakthrough in diplomatic relations has opened the gates for businesses to explore new collaborations with the most significant to be seen within the technology sectors of which both countries are so highly regarded for. The scene has now been set for investment and trade to evolve in the Middle East.</p>

<p>On 14 October, our Gowling WLG professionals from the Dubai office and award winning Israel desk will delve into the detail from a business perspective sharing their expertise in tech, corporate and M&amp;A in an interactive panel discussion. We are pleased to welcome Eliav Benjamin, Director of the Coordination Department of the Israeli Ministry of Foreign Affairs to the panel to assist us in unpacking the significant opportunities to come for the UAE and Israel. We are also delighted to have Oded Orgil, President of the Canada Israel Chamber of Commerce join us to provide a welcome, followed by Galit Baram, the Israeli Consul General in Toronto and Western Canada who will provide some opening remarks at the outset of our discussion.</p>

<p>We hope you will join us for what will be a very interesting and valuable webinar.</p>

<p><strong>Introductory &amp; Welcome Remarks</strong></p>

<ul>
	<li>Oded Orgil - President of the Canada Israel Chamber of Commerce<br />
	&nbsp;</li>
	<li>Galit Baram - Israeli Counsul General in Toronto and Western Canada</li>
</ul>

<p><strong data-mce-style=""color: #005aa9;"">Keynote Speaker</strong></p>

<ul>
	<li>Eliav Benjamin - Director of the Coordination Department of the Israeli Ministry of Foreign Affairs</li>
</ul>

<p><strong>Panelists</strong></p>

<ul>
	<li>Moderator:&nbsp;<a data-mce-href=""https://gowlingwlg.com/en/people/jason-a-saltzman/#panel-button1"" href=""https://gowlingwlg.com/en/people/jason-a-saltzman/#panel-button1"">Jason Saltzman</a>&nbsp;- Partner and Co-lead of the Gowling WLG Israel country desk (Toronto)<br />
	&nbsp;</li>
	<li><a data-mce-href=""https://gowlingwlg.com/en/people/suhail-mirza/#panel-button1"" href=""https://gowlingwlg.com/en/people/suhail-mirza/#panel-button1"">Suhail Mirza</a>&nbsp;- Partner, Gowling WLG (Dubai)<br />
	&nbsp;</li>
	<li><a data-mce-href=""https://gowlingwlg.com/en/people/tony-fielding/#panel-button1"" href=""https://gowlingwlg.com/en/people/tony-fielding/#panel-button1"">Tony Fielding</a>&nbsp;- Partner, Gowling WLG (Dubai)<br />
	&nbsp;</li>
	<li>Eliav Benjamin - Director of the Coordination Department of the Israeli Ministry of Foreign Affairs<br />
	&nbsp;</li>
</ul>

<p><em>This event is being presented in conjunction with the Canada Israel Chamber of Commerce.&nbsp;</em></p>

<p><em><img alt="""" src=""~/getmedia/f6736645-5266-4a98-ac5f-8a7e4e107473/canada-israel-chamber-of-commerce.jpg.xml"" /></em></p>
",NULL,NULL,00:00.0,https://sites-gowlingwlg.vuturevx.com/103/5608/landing-pages/event-registration-(blank-form).asp,NULL,Register for this webinar,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,NULL,NULL,NULL,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/103/5608/landing-pages/event-registration-(blank-form).asp,Register now,GWLG.Canada;GWLG.Global;GWLG.Israel;GWLG.UAEDubai,0,NULL,Speaker(s),t-white,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
321,/Events/2020/Building-out-a-global-trademark-design-portfolio,en-GB,179882B7-6C31-415D-B469-18626F897425,Building out a global trademark design portfolio,Starting strong: Building out a global trademark and design portfolio,"Presented by Gowling WLG’s international team of IP professionals, the series explores the full range of IP rights, all while giving you the tips and perspectives you need to maximise opportunity and minimise risk when taking your smart idea to the global market.",~/getmedia/b273bccd-c6b0-48a4-8d80-6f6d23b0931c/200930-IP-Building-a-global-trademark-and-design-portfolio.jpg.xml?width=930&height=450&ext=.jpg,group of designers selecting colour swatches,GWLG.Webinar,00:00.0,00:00.0,9,10 a.m.,EST,0,NULL,"<p>Lifecycle of a Smart Idea is a live webinar series offering a fresh look at the field of intellectual property by tracing the options and steps that occur over the lifetime of a &quot;smart idea&quot; &ndash; from the laboratory or the &quot;eureka moment,&quot; to the branding, promotion, exploitation and beyond.</p>

<p>Presented by Gowling WLG&rsquo;s international team of IP professionals, the series explores the full range of IP rights, all while giving you the tips and perspectives you need to maximise opportunity and minimise risk when taking your smart idea to the global market.</p>

<p>Register for upcoming events in the series below.</p>

<h2>Starting strong: Building out a global trademark and design portfolio</h2>

<p>From counterfeiting threats to multi-jurisdictional enforcement actions, to compete in today&rsquo;s perilous global brand landscape requires a clear and considered approach from day one.</p>

<p>To help ensure your brand assets have the best chance of success, join our international team of IP professionals on Sept. 30 as they use a case study to map out key trademark and design filing strategies your business needs to thrive &ndash; both at home and abroad.</p>

<p><a href=""http://sites-gowlingwlg.vuturevx.com/106/5598/landing-pages/event-registration-(blank-form).asp"" target=""_blank""><em>Register now &raquo;</em></a></p>

<p><strong>CPD/CLE Details</strong></p>

<p><strong>LSO:</strong>&nbsp;This program is eligible for up to 1 hour of Substantive content<br />
<strong>Quebec:</strong>&nbsp;A certificate of attendance will be issued to professionals after this session<br />
<strong>LSBC:</strong>&nbsp;This program is eligible for up to 1 hour toward the LSBC&#39;s CPD requirement<br />
<strong>LSAB:</strong>&nbsp;This program is eligible for up to 1 hour of credit toward the CPD program</p>

<h2>Upcoming webinar</h2>

<p><em><strong>Nov. 4: Global trademark and design enforcement | <a href=""http://sites-gowlingwlg.vuturevx.com/106/5598/landing-pages/event-registration-(blank-form).asp"" target=""_blank"">RSVP now &raquo;</a></strong></em></p>
",NULL,NULL,50:00.0,https://sites-gowlingwlg.vuturevx.com/106/5598/landing-pages/event-registration-(blank-form).asp,NULL,Register now,90A71CC3-07A3-4265-B0C4-C31612546237,NULL,08b9a44c-bb26-4255-9779-296a124fcbee;85764222-db69-43cf-af79-2c6fcbda9589;aa72ea93-20f8-455a-8e77-6f6cea510684,NULL,8ad0e3f6-68e6-45b9-a509-c5811ebc77af;a075ae2f-22f9-410b-a22d-f1d24159c336;d655adb5-c73e-4a6c-90be-5fed57086964;3fd4913d-3096-46ba-93b4-f365a5b14944;5f39b2b0-1232-4c03-abce-300149d85f9b;bb6e4e98-2d11-42a4-a949-3c3e7a8225f0,NULL,Webinar,NULL,Gowling WLG Webinar,44232,GWLG.Events,"<p>Lifecycle of a Smart Idea</p>
",~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/106/5598/landing-pages/event-registration-(blank-form).asp,Register now,GWLG.Canada;GWLG.Global;GWLG.UK,0,NULL,Speakers,NULL,NULL,NULL,"Intellectual Property, Patents, Trademarks, Brands & Designs",NULL,NULL,NULL,NULL,NULL
322,/Events/2020/Employment-and-labour-law-in-BC-pandemic-era,en-GB,4C0A1813-CD33-486E-95C1-D9743812C470,Employment and labour law in BC pandemic era,Business <em>un</em>-usual: Employment and labour law in BC’s pandemic era,These are challenging times for employers and employees everywhere. The economic and health implications of the COVID-19 pandemic are affecting multiple aspects of working life. This webinar will address issues faced by essential businesses and those that have ceased operations temporarily or as part of a government-mandated shutdown.,~/getmedia/ff2d05e6-dd00-41c8-8438-9d54c75be175/200923-Employment-BC-webinar.png.xml?width=930&height=450&ext=.png,colleagues talking standing by a desk ,GWLG.Webinar,00:00.0,NULL,11 a.m.,12 p.m.,PST,1,1 hour,"<p>These are challenging times for employers and employees everywhere. The economic and health implications of the COVID-19 pandemic are affecting multiple aspects of working life. These include layoffs, salary reductions, and terminations, employees who can&rsquo;t work or refuse to appear, and plans and policies needed to navigate the current landscape.</p>

<p>Join <a href=""https://gowlingwlg.com/en/people/maxwell-j-brunette/#panel-button1"" target=""_blank""><strong>Max Brunette</strong></a> and <a href=""https://gowlingwlg.com/en/people/amy-lynn-kosick/#panel-button1"" target=""_blank""><strong>Amy-Lynn Kosick</strong></a> for a timely webinar on employment and labour law issues on <strong>Wednesday, October 28</strong>.</p>

<p>Our speakers will also host a live &ldquo;Ask our lawyers&rdquo; session on a variety of topics related to COVID-19 and the workplace challenges your business is facing. They&nbsp;will address issues faced by essential businesses and those that have ceased&nbsp;operations temporarily or as part of a government-mandated shutdown.</p>
",NULL,NULL,50:00.0,https://sites-gowlingwlg.vuturevx.com/104/5617/landing-pages/event-registration-(blank-form).asp,NULL,Register now,90A71CC3-07A3-4265-B0C4-C31612546237,NULL,d8837737-40d2-4472-8a9e-ba4101ec2105,NULL,26fb12df-b407-4553-9451-a9880a4c2e8b;ddc317a8-0a23-4e9e-88d7-d56bdf68612d,NULL,Webinar,NULL,Gowling WLG Webinar,44232,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/104/5617/landing-pages/event-registration-(blank-form).asp,Register now,GWLG.Canada,0,63387DF2-25F3-4268-9B20-2D4323F1E706,Speakers,NULL,NULL,NULL,"Employment, Labour & Equalities",NULL,NULL,NULL,NULL,NULL
323,/Events/2020/Successful-implementation-of-5G,en-GB,75781BB6-8E90-4B7D-802C-C64367127DC5,Successful implementation of 5G,Successful implementation of 5G,"5G underpins many of the technologies that will drive business digitalisation, facilitating communication between a vast range of devices and the wireless transfer of data produced by these new devices as they communicate with each other.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,24:50.0,24:56.0,10:30,11:15,BST,1,0.75,"<p>5G underpins many of the technologies that will drive business digitalisation, facilitating communication between a vast range of devices and the wireless transfer of data produced by these new devices as they communicate with each other.</p>

<p>In this live webinar Tony Fielding will highlight the issues and challenges for the successful implementation of 5G.</p>

<p>This event is the first in of a series of <a href=""h/en/thinkhouse/"">ThinkHouse</a> IT Masterclass webinars developed specifically for in-house counsel. Follow the registration link to attend this or any of the other webinars in the series.</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,30:00.0,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?rsid=qmT_TrCB8Tl7H5PlbBEvi3kAlou9FHcWdcwxg7zjshgykgsGdphNME-X3CyIDE97&react=All%20Reactions,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,cdfc9b50-74c2-4af5-9508-342935f81ccd,5d5bf1f5-9750-4592-8ca8-7c4628c450ff,471a00a2-e109-4e85-8152-8a92a4982d19;a143cbfd-d333-42a0-89a6-7287894464f1,34e4f40d-a7d6-4a3c-80e5-a3aa69943fa7;d3e0fa3e-1011-4fe0-b62a-88c920f62d49,NULL,Webinar,"Tony Fielding, Helen Davenport",Webinar,34471,GWLG.Events,NULL,~/getmedia/5d57b23c-f4d3-44e3-a08e-7ee56360fd71/thinkhouse-snr-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/27fda93c-8849-4d7e-a292-bcc5eb1e7896/thinkhouse-snr-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,NULL,Tech,Information Technology,"Intellectual property and disruptive technology, ThinkHouse",NULL,NULL,NULL,NULL
325,/Events/2020/Mitigating-risks-of-cloud-services,en-GB,CB0EE1CB-94AA-4B0C-A9B6-35EB85F063DE,Mitigating risks of cloud services ,Mitigating risks of cloud services ,"The pandemic has shown us how much we all rely on online services to work, socialise and do 'life admin'. The benefits seem very clear. But what are the risks of relying on cloud services?",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,41:12.0,41:21.0,10:30,11:15,BST,1,0.75,"<p>The pandemic has shown us how much we all rely on online services to work, socialise and do &#39;life admin&#39;. The benefits seem very clear. But what are the risks of relying on cloud services?</p>

<p>Jocelyn Paulley will look at risks when contracting for cloud services and how to mitigate them.</p>

<p>This event is the second in a series of <a href=""~/en/thinkhouse/"">ThinkHouse</a> IT Masterclass webinars developed specifically for in-house counsel. Follow the registration link to attend this or any of the other webinars in the series.</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,30:55.0,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?rsid=qmT_TrCB8Tl7H5PlbBEvi3kAlou9FHcWdcwxg7zjshgykgsGdphNME-X3CyIDE97&react=All%20Reactions,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,cdfc9b50-74c2-4af5-9508-342935f81ccd,5d5bf1f5-9750-4592-8ca8-7c4628c450ff,a143cbfd-d333-42a0-89a6-7287894464f1,75a219e7-ea84-4ba2-9990-61b83de62877;d3e0fa3e-1011-4fe0-b62a-88c920f62d49,NULL,Webinar,"Jocelyn S Paulley, Helen Davenport",Webinar,34471,GWLG.Events,NULL,~/getmedia/5d57b23c-f4d3-44e3-a08e-7ee56360fd71/thinkhouse-snr-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/27fda93c-8849-4d7e-a292-bcc5eb1e7896/thinkhouse-snr-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,NULL,Tech,Information Technology,ThinkHouse,NULL,NULL,NULL,NULL
326,/Events/2020/Intellectual-property-strategies-for-data-and-AI,en-GB,08049D8D-833C-461B-98E0-20FC42E2A67F,Intellectual property strategies for data and AI,Intellectual property strategies for data and artificial intelligence,Machine learning based on large datasets is disrupting fundamental business models across multiple industries and is expected to affect all sectors and society as a whole. There will be winners and losers.,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,41:12.0,41:21.0,10:30,11:15,GMT,1,0.75,"<p>Machine learning based on large datasets is disrupting fundamental business models across multiple industries and is expected to affect all sectors and society as a whole. There will be winners and losers.</p>

<p>Matt Hervey will look at best practices for protecting investments in AI and unlocking the value in data.</p>

<p>This event is the last in a series of <a href=""~/en/thinkhouse/"">ThinkHouse</a> IT Masterclass webinars developed specifically for in-house counsel. Follow the registration link to attend this or any of the other webinars in the series.</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,00:00.0,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?rsid=qmT_TrCB8Tl7H5PlbBEvi3kAlou9FHcWdcwxg7zjshgykgsGdphNME-X3CyIDE97&react=All%20Reactions,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,cdfc9b50-74c2-4af5-9508-342935f81ccd,5d5bf1f5-9750-4592-8ca8-7c4628c450ff;09ef8b8d-ebb3-4643-89b1-7781cc96a384;08b9a44c-bb26-4255-9779-296a124fcbee,a143cbfd-d333-42a0-89a6-7287894464f1;471a00a2-e109-4e85-8152-8a92a4982d19,a198222e-fff0-47b3-bbca-b7c042e76a69;75a219e7-ea84-4ba2-9990-61b83de62877,NULL,Webinar,"Matt Hervey, Jocelyn S Paulley",Webinar,34471,GWLG.Events,NULL,~/getmedia/5d57b23c-f4d3-44e3-a08e-7ee56360fd71/thinkhouse-snr-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/27fda93c-8849-4d7e-a292-bcc5eb1e7896/thinkhouse-snr-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,NULL,Tech,"Information Technology, Artificial Intelligence (AI) Law, Intellectual Property","ThinkHouse, Intellectual property and disruptive technology",NULL,NULL,NULL,NULL
327,/Events/2020/Mitigating-cyber-risks-through-insurance,en-GB,4850D5A6-249D-4657-BCF7-0592B0389F74,Mitigating cyber risks through insurance,Mitigating cyber risks through insurance,Over recent years cyber security has risen up the board room agenda. New ways of working during the pandemic have exacerbated the risks and we have also seen examples of cyber criminals seeking to exploit the current situation.,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,41:12.0,41:21.0,10:30,11:15,GMT,1,0.75,"<p>Over recent years cyber security has risen up the board room agenda. New ways of working during the pandemic have exacerbated the risks and we have also seen examples of cyber criminals seeking to exploit the current situation.</p>

<p>Susannah Fink and Helen Davenport will look in particular at whether organisations should have a specific cyber insurance policy as part of their cyber security strategy, what is covered and common myths.</p>

<p>This event is the third in a series of <a href=""~/en/thinkhouse/"">ThinkHouse</a> IT Masterclass webinars developed specifically for in-house counsel. Follow the registration link to attend this or any of the other webinars in the series.</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,30:55.0,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?rsid=qmT_TrCB8Tl7H5PlbBEvi3kAlou9FHcWdcwxg7zjshgykgsGdphNME-X3CyIDE97&react=All%20Reactions,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,cdfc9b50-74c2-4af5-9508-342935f81ccd,5d5bf1f5-9750-4592-8ca8-7c4628c450ff;2e9a87e2-3d2e-4d69-ba9c-06b4b358ca0d;7f4ab5eb-9a2c-48a1-89d0-126bfcdad7ac,a143cbfd-d333-42a0-89a6-7287894464f1,9c1e5d85-61f3-41ce-821b-f68dd18ccbb1;d3e0fa3e-1011-4fe0-b62a-88c920f62d49;75a219e7-ea84-4ba2-9990-61b83de62877,NULL,Webinar,"Susannah E Fink, Helen Davenport, Jocelyn S Paulley",Webinar,34471,GWLG.Events,NULL,~/getmedia/5d57b23c-f4d3-44e3-a08e-7ee56360fd71/thinkhouse-snr-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/27fda93c-8849-4d7e-a292-bcc5eb1e7896/thinkhouse-snr-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,NULL,Tech,"Information Technology, Cyber Security & Data Protection Law, Insurance and Reinsurance",ThinkHouse,NULL,NULL,NULL,NULL
328,/Events/2020/Unlocking-strategic-value-of-freedom-to-operate,en-GB,6BCDD985-5600-49BC-9259-22D0CA304823,Unlocking strategic value of freedom to operate,Unlocking the strategic value of freedom to operate,"For any organization invested in research and development, IP landscaping and Freedom to Operate (FTO) analysis can serve as a vital roadmap as you bring your product to life – and finally to market.",~/getmedia/5a8c6067-38a3-4fbb-9db2-3f451438d010/200925-strategic-value-of-freedom-to-operate.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Webinar,00:00.0,00:00.0,10:00 a.m.,11:00 a.m.,PST,0,NULL,"<p>For any organization invested in research and development, IP landscaping and Freedom to Operate (FTO) analysis can serve as a vital roadmap as you bring your product to life &ndash; and finally to market.</p>

<p>On October&nbsp;15,&nbsp;join&nbsp;<a href=""https://lifesciencesbc.ca/"" target=""_blank"">LifeSciences BC</a>&nbsp;and&nbsp;members of Gowling WLG&rsquo;s Life Sciences Group along with Ben Thiede of Stemcell Technologies, as together they explore strategies for managing IP risks and opportunities in an innovative life sciences enterprise.</p>

<p><strong>Introduction:</strong> <a href=""https://www.linkedin.com/in/wendy-hurlburt/?originalSubdomain=ca"" target=""_blank"">Wendy Hurlburt</a>, CEO, LSBC</p>

<p><strong>Moderator:</strong> <a href=""https://gowlingwlg.com/en/people/lisa-thorne/#panel-button1"">Lisa Thorne</a></p>

<p><strong>Panel members: </strong><a href=""https://gowlingwlg.com/en/people/brian-kingwell/#panel-button1"">Brian Kingwell</a>, <a href=""https://gowlingwlg.com/en/people/edith-penty-geraets/#panel-button1"">Edith Penty Geraets</a> and <a href=""https://www.linkedin.com/in/ben-thiede-ph-d-clp-8449bb43/?originalSubdomain=ca"">Ben Thiede</a> from Stemcell Technologies</p>

<h2><a class=""c-button"" href=""https://gowlingwlg.com/en/insights-resources/on-demand-webinars/2020/unlocking-the-strategic-value-of-freedom-to-operat/"" target=""_self"">Missed the webinar? View it on-demand now &raquo;</a></h2>
",NULL,NULL,39:42.0,https://www.eventbrite.ca/e/unlocking-the-strategic-value-of-freedom-to-operate-tickets-122735004703,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,NULL,NULL,d9a834e2-7b85-4089-b241-ed2e95e1b3d6;09384fee-e32a-4187-a414-c9d17129c184;f801a2a1-89ec-4986-8030-70e2352aa794,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,NULL,0,63387DF2-25F3-4268-9B20-2D4323F1E706,Speakers,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
329,/Events/2020/ESG-and-the-role-of-the-board,en-GB,B3A0B213-7FB5-4302-92EA-927E99857A87,ESG and the role of the board,ESG and the role of the board,"Driving sustainable business practices in companies requires oversight, insight & foresight from the board of directors. Today there is an imperative that sustainability be added to the board's agenda as part of the board's critical role to consider Environmental, Social and Governance (ESG) risks and opportunities.",~/getmedia/14255f74-8083-4174-85cc-5125ba778515/200924-ESG-webinar.png.xml?width=930&height=450&ext=.png,Audience of business people attending an event,GWLG.Webinar,00:00.0,NULL,09:00,10:00,PST,0,NULL,"<p><a class=""c-button-white"" href=""https://gowlingwlg.com/en/insights-resources/on-demand-webinars/2020/esg-and-the-role-of-the-board/"" target=""_blank"">Missed the webinar? View it on-demand now &raquo;</a></p>

<p>In partnership with <a href=""https://womengetonboard.ca/"" target=""_blank"">Women Get On Board</a>, we are pleased to present &ldquo;ESG and the role of the board&rdquo; on <strong>Thursday, October 29</strong>.</p>

<p>Driving sustainable business practices in companies requires oversight, insight &amp; foresight from the board of directors. Today there is an imperative that sustainability be added to the board&#39;s agenda as part of the board&#39;s critical role to consider Environmental, Social and Governance (ESG) risks and opportunities.</p>

<p>The speakers for this session will focus on the following key areas in ESG:</p>

<ul>
	<li>Environmental: climate change, sustainability report, community/environment, renewable energy and waste avoidance/diversion;</li>
	<li>Social: internal human-capital management, board diversity, external stakeholders, human rights issues in a business and its supply chains and the social license to operate; and</li>
	<li>Governance: what processes does the board need to put in place to ensure board accountability on sustainable business practices?</li>
</ul>

<p><strong>Moderator</strong> :</p>

<p>- <a href=""~/en/people/caireen-hanert/#panel-button1"" target=""_blank"">Caireen Hanert</a>, partner Gowling WLG</p>

<p><strong>Speakers</strong>:</p>

<p>- <a href=""~/en/people/linda-hogg/#panel-button1"" target=""_blank"">Linda Hogg</a>, partner Gowling WLG<br />
- <a href=""~/en/people/elizabeth-burton/#panel-button1"" target=""_blank"">Elizabeth Burton</a>, partner Gowling WLG<br />
- Geeta Sankappanavar, CEO and Founder, Akira Impact</p>
",NULL,NULL,50:00.0,https://app.glueup.com/event/esg-and-the-role-of-the-board-26665/,NULL,Register now,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,064c02f0-ff64-42f8-8a71-c8dece3600fd;e652eb3b-cd9c-4c1e-9991-a4b38e5e1cd3,002053f2-d69a-4ea6-b3d3-7c764821c000,46503468-daa2-4925-9e67-563efcae08f8;2e743440-df8d-4a5d-b652-cdbce8339713;e1fcdf49-26d1-491c-8fd4-d7cc34fdcfb8,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://app.glueup.com/event/esg-and-the-role-of-the-board-26665/,Register now,GWLG.Canada,0,NULL,Speakers,NULL,NULL,NULL,"Climate Change and Environmental Law, Environmental Litigation","Environmental, Social and Governance (ESG)",NULL,NULL,NULL,NULL
330,/Events/2020/DC-Excellence-Financial-Education-in-Workplace,en-GB,D3FD15BF-17C1-49BA-802E-826FA03F33BD,DC Excellence: Financial Education in Workplace,DC Excellence: Financial Education in the Workplace – An Employer's Approach for Achieving Successful Member Outcomes,Please join us for our webinar: DC Excellence: Financial Education in the Workplace – An Employer's Approach for Achieving Successful Member Outcomes.,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,00:00.0,00:00.0,11:00,12:00,BST,0,NULL,"<p>Employee engagement in DC schemes has always been a challenge &ndash; even more so during the COVID-19 pandemic where employees are reducing their contributions as their personal finances tighten.</p>

<p>We are all grappling with new ways of working, with some employees on reduced hours and pay, whilst others are on furlough. Employers are trying to ensure that their businesses emerge from this period with a sustainable future. While operating within these (hopefully short-term) budgetary challenges, how can employers look to the longer-term and benefit from the rewards of helping employees meet their retirement income needs? Is there a way to help employees navigate the complexity that Freedom and Choice now offers, without employers straying into financial advice?</p>

<p>Our DC Excellence team is joined by Rachelle Trueman, Pensions Manager, from Molson Coors and Rob Harper, Partner, from Hymans Robertson for a panel discussion which will cover:</p>

<ul>
	<li>Financial education in the workplace &ndash; employers&#39; obligations and solutions</li>
	<li>An employer&#39;s experience of offering a financial wellbeing programme</li>
	<li>Freedom &amp; Choice &ndash; current industry practice</li>
	<li>Pension scams &ndash; good practice for employers, employees and trustees</li>
	<li>Diversity &amp; pensions &ndash; The Pensions Pay Gap: engaging employee groups with low pension savings</li>
</ul>
","<p>By registering for this webinar, you agree that your data (i.e. your name and email address) will be shared with the webinar organisers and speakers from Gowling WLG, who will use it to communicate with you regarding this event. You also agree that data regarding your usage of the webinar may be shared between Gowling WLG and Isio.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,00:00.0,https://reaction.gowlingwlg.com/reaction/RSGenPage.asp?RSID=Vlalm3mOAH_4MCrfiCy6v77oiF5IRP8aszYD6Gncw_I,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,a19c4c5e-c05a-4fa5-95aa-c5a274279d8c,NULL,c35a7ba7-40bb-474d-8a7a-a7897e0c7332,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,95EC9477-4594-4332-A463-E612BD16CA0C,Speaker(s),NULL,NULL,NULL,Pensions,NULL,NULL,NULL,NULL,NULL
331,/Events/2020/How-the-pandemic-is-changing-the-advertising-lands,en-GB,B036C5F3-769D-43E3-9CC5-5CAE8D1A5E9C,How the pandemic is changing the advertising lands,Influencer marketing: how the pandemic is changing the advertising landscape,"So what do brands do in this new era of advertising? In this session we'll cover considerations for influencer marketing, and some other helpful tips when it comes to advertising during the pandemic.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,18:37.0,18:45.0,10:30,11:30,BST,1,1,"<p>Join us for the first in a series of four <a href=""~/en/thinkhouse/"">ThinkHouse</a> Brands &amp; Designs webinars.</p>

<p>It will come as no surprise that social media usage has continued to climb since COVID-19 hit. As the R-rate increases and lockdown measures are re-introduced, it seems likely that major ad production will be curtailed again. Influencers offer brands the opportunity to engage with wider audiences, quickly, with content being recorded at home more easily. But it&#39;s important to remember (and plan for) the legal and reputational risks.</p>

<p>So what do brands do in this new era of advertising? In this session we&#39;ll cover considerations for influencer marketing, and some other helpful tips when it comes to advertising during the pandemic.</p>

<p>During the webinar we will answer as many questions as possible in the time available.</p>

<p>Please register to secure your place on this free webinar.</p>
","<p>This event is free of charge.</p>

<p>This event will run for one hour. Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession.<br />
Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,30:00.0,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?RSID=wJobi2y_w6KN6DYarRn4_mcVCstILJrlyHXxKd5CwkLxymFMsPbbeNtsN3M1LYFIimhfroQYdV7nxTEEfNuGcw,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,de517572-4373-4b36-844b-18be93f6f9bc;cbbbf9eb-a169-4053-8043-7085cfb8fd4a;3fc2ca8c-9d19-44ba-a3a9-ad1ecb11e900;f1e960f5-8231-4c56-b7bf-9898ebb538c5;06cecb4c-c959-4674-9047-d5d8ee8c673c;2cd1b5c0-8992-4c92-b8e8-d65d8b86dbed;5ad41b49-d460-489a-95b9-84c854eda6f1;a929915c-1d1f-4e9c-8c8b-f34a30e2ab4e;df411e0b-2c62-4a68-8456-2c7c1dd0b4da;049c8249-7ff3-4ee3-a439-590f45fd5cff;c0b8c1a8-73eb-4122-972f-dc5df852f68d;dede4518-e78c-4b48-a143-a2338be5d0ac;59be9dcd-e5f0-43e4-9d50-442a658eda18;0357076d-2635-451a-8d67-ec01f9f3082b;cdfc9b50-74c2-4af5-9508-342935f81ccd,65c34333-2a1a-4fba-8d2a-65496d535f64;08b9a44c-bb26-4255-9779-296a124fcbee,a143cbfd-d333-42a0-89a6-7287894464f1,9ff8fd1a-c2f5-4084-b72e-4aa02fdf3312;c679dec4-f5f8-4a7c-b72b-57821a83da25;897543f6-1036-4499-934c-adf5f5afeaf4,NULL,Webinar,"John Coldham, Kate Hawkins, Dan Smith",Webinar,34471,GWLG.Events,NULL,~/getmedia/d2b9ca59-d716-4c60-abb1-472dd7eeec23/thinkhouse-primary-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/0363a899-4ad3-4e9e-a428-fbf0ebf9f31d/thinkhouse-primary-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,NULL,"Automotive, Aviation, Aerospace & Defence, Construction & Engineering, Energy, Financial Institutions & Services, Food & Beverage, Government Contracting & Public Sector , Health & Care, Infrastructure, Life Sciences, Natural Resources, Nuclear, Real Estate, Retail, Leisure & Hotels, Tech","Advertising & Product Regulatory, Intellectual Property",ThinkHouse,NULL,NULL,NULL,NULL
332,/Events/2020/2nd-Annual-Cross-Institutional-Lending-Conference,en-GB,CD25C361-DD97-4D5A-A2A1-7593A3C5C62E,2nd Annual Cross-Institutional Lending Conference,2nd Annual Cross-Institutional Lending Conference,This event will empower attendees with the knowledge needed to more effectively structure security for lending transactions. It will also provide valuable insights for difficult decisions and conversations that may need to take place in the months ahead.,~/getmedia/22050f20-0bf5-4137-b846-4c539e252c51/201005-lending-conference.jpg.xml?width=930&height=450&ext=.jpg,Lending conference thumbnail,GWLG.Conference,00:00.0,00:00.0,1 p.m.,5 p.m.,EST,0,NULL,"<p><a class=""c-button"" href=""#details"">Conference resources and full agenda is included below</a>&nbsp;or <a class=""c-button-white"" href=""~/en/insights-resources/on-demand-webinars/2020/2nd-annual-cross-institutional-lending-conference/"" target=""_self"">go to our conference on-demand webinar page</a></p>

<p>This event will empower attendees with the knowledge needed to more effectively structure security for lending transactions. It will also provide valuable insights for difficult decisions and conversations that may need to take place in the months ahead.</p>

<p><strong>Presentations will cover a broad range of timely topics relevant to mid-market lending transactions, including:</strong></p>

<ul>
	<li>Mistakes that Impact Debt Recovery</li>
	<li>M&amp;A in Uncertain Times</li>
	<li>Priority Arrangements</li>
	<li>Taking Security 101</li>
	<li>Construction Loans and the New Construction Act</li>
	<li>The Future of Lending</li>
	<li>Estate Planning Ideas to Share with your Clients</li>
	<li>COVID-19 Financial Liquidity Issues&nbsp;</li>
</ul>

<h2>Keynote presentation</h2>

<h3>{^widget|(videoid)ZQtFHrl4IKA|(name)GWLG.Video|(image_guid)0e502820-04ca-4904-bb36-27eed2f52336|(title)Strategies+to+help+Businesses+Deal+with+COVID-19+Liquidity+Issues|(widget_displayname)Video|(width)|(height)^}</h3>

<p>In times of economic uncertainty, lenders might be reluctant to provide loans to businesses at times when access to liquidity is most needed. As the fallout from COVID-19 continues, market observers are watching closely as governments, financial institutions and corporations navigate these economic hurdles.</p>

<p>Gowling WLG&rsquo;s <a href=""~/en/people/david-cohen/#panel-button1"" target=""_blank"">David Cohen</a> and Scott Sinclair (President, Sinclair Range) will provide valuable and practical insights from a wide range of perspectives on the topic of liquidity support to small and medium sized companies, and the steps needed to meet their operational cash flow requirements.</p>

<h2><a name=""details""></a>{^widget|(path)%2fGlobal-Objects%2fCTAs%2fEvents%2fLending-Conference-Hamilton%2fDetailed-Agenda-Resources%2f%2525|(name)GWLG.Widgets.FAQList|(image_guid)884cd42b-93de-40b9-9f7f-cf7e3608a676|(headingtext)Conference+resources+and+detailed+agenda|(widget_displayname)FAQ+List|(width)|(height)^}</h2>

<h2>Agenda at-a-glance</h2>

<table border=""0"" cellpadding=""0"" cellspacing=""0"">
	<thead>
		<tr>
			<th scope=""col"" valign=""top"" width=""108"">Time</th>
			<th scope=""col"" valign=""top"" width=""261"">Session</th>
			<th scope=""col"" valign=""top"" width=""197"">Speakers</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td rowspan=""2"" valign=""top"" width=""108"">1:00 p.m.</td>
			<td valign=""top"" width=""261"">M&amp;A in Uncertain Times</td>
			<td valign=""top"" width=""197"">Faran Umar-Khitab &amp; Marcus Hinkley</td>
		</tr>
		<tr>
			<td valign=""top"" width=""261"">Surviving Execution: The Who &amp; How of Signing Loan Documents</td>
			<td valign=""top"" width=""197"">Eric Rockefeller &amp; Travis Evens</td>
		</tr>
		<tr>
			<td rowspan=""2"" valign=""top"" width=""108"">1:30 p.m.</td>
			<td valign=""top"" width=""261"">Fast Four: Things You May Not Know</td>
			<td valign=""top"" width=""197"">Alex Ross, Tim Ross, Paul Wilson, Mark Giavedoni</td>
		</tr>
		<tr>
			<td valign=""top"" width=""261"">Introduction to Open Banking</td>
			<td valign=""top"" width=""197"">Emily Dies</td>
		</tr>
		<tr>
			<td rowspan=""2"" valign=""top"" width=""108"">2:00 p.m.</td>
			<td valign=""top"" width=""261"">Pitfalls of Debt Recovery</td>
			<td valign=""top"" width=""197"">Stephanie Harvey &amp; Emma Dalziel</td>
		</tr>
		<tr>
			<td valign=""top"" width=""261"">Estate Planning: The Implications of <em>Calmusky v. Calmusky</em> on Retirement Income Fund (RIF) Designations</td>
			<td valign=""top"" width=""197"">Karen Watters</td>
		</tr>
		<tr>
			<td valign=""top"" width=""108"">2:30 p.m.</td>
			<td colspan=""2"" valign=""top"" width=""457"">Live Q&amp;A</td>
		</tr>
		<tr>
			<td rowspan=""3"" valign=""top"" width=""108"">3:00 p.m.</td>
			<td valign=""top"" width=""261"">Is Philanthropy Part of Your Business &amp; Estate Plan?</td>
			<td valign=""top"" width=""197"">Mark Halpern &amp; Karen Watters</td>
		</tr>
		<tr>
			<td valign=""top"" width=""261"">Arrangements with Third Party Creditors:&nbsp; When and How You Need to Deal with Them</td>
			<td valign=""top"" width=""197"">Matthijs van Gaalen &amp; Richard Dusome</td>
		</tr>
		<tr>
			<td valign=""top"" width=""261"">Changes to the Construction Act: A Lender&rsquo;s Update</td>
			<td valign=""top"" width=""197"">Mark Giavedoni &amp; Kevin Kolumbus</td>
		</tr>
		<tr>
			<td valign=""top"" width=""108"">3:30 p.m.</td>
			<td valign=""top"" width=""261"">Strategies to Help Businesses Deal with COVID-19 Liquidity Issues</td>
			<td valign=""top"" width=""197"">David Cohen &amp; Scott Sinclair</td>
		</tr>
		<tr>
			<td valign=""top"" width=""108"">4:30 p.m.</td>
			<td colspan=""2"" valign=""top"" width=""457"">Live Q&amp;A</td>
		</tr>
	</tbody>
</table>

<p>&nbsp;</p>

<h2>2019 Lending Conference highlights</h2>

<ul>
	<li>100+ attendees</li>
	<li>20+ Financial Institutions</li>
	<li>7 insightful presentations</li>
	<li>100% of survey respondents said they would attend this event again</li>
</ul>

<h3>Attendee Feedback</h3>

<ul>
	<li><em>&quot;The topics were so relevant! I learned so much.&quot;</em></li>
	<li><em>&quot;A great event that flowed well, with interesting topics and speakers.&quot;</em></li>
</ul>
",NULL,NULL,00:00.0,https://sites-gowlingwlg.vuturevx.com/96/5634/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,06cecb4c-c959-4674-9047-d5d8ee8c673c;3fc2ca8c-9d19-44ba-a3a9-ad1ecb11e900,56646cda-20d7-43d4-b13c-886e1cd90c52;6ecd1574-34c3-42ca-a28b-70a10b61221e,6b906235-110b-475e-88cd-4ddef78eb8b8,5eef2bbf-b67f-4703-96ac-e8afa97f05fa;4b827bd7-79e3-4db7-9446-950eaf10c14f;b1a1b208-ac53-4ad5-9a3e-12e168384a2f;4e43996f-25b7-4da5-bf84-6a334414638e;e7440021-23c5-406e-8b1c-35d20b07cf59;7a3dc7c1-92e7-47f5-b53f-c887609f124e;ebe9e779-afc4-4e2d-9ebd-57d4b49a25ea;aa7f72bc-6c00-4c8c-811a-d7567f35fc6a;b48e07c0-4d50-4827-b87f-a3af4bf08144;ed1099ae-0656-44f9-b5cf-ad59fe8d5d89;3c3c9590-7871-4de3-8f48-e8a67f3b6089;1b5d097a-8b1c-451a-9dee-83d075ce27fd;86af7e57-3fd0-44d9-81b4-234f0854e7c6,NULL,Conference,"Faran Umar-Khitab, Marcus Hinkley, Mark Giavedoni, Kevin Kolumbus, Alex Ross, Tim Ross, Emily Dies, Stephanie Harvey, Emma Dalziel, Karen Watters, Eric Rockefeller, Travis Evens, Richard C. Dusome",Webinar,34471,GWLG.Events,"<p><img alt=""Second annual cross institutional lending conference"" src=""~/getmedia/54874527-a5a6-46fa-87ee-0e35d22bbf5f/2nd-Annual-Cross-Institutional-Lending-Conference-logo-Transparent-Inverse.png.xml?width=249&amp;height=128"" style=""width: 249px; height: 128px;"" /></p>
",~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/96/5634/landing-pages/event-registration-(blank-form).asp,Register now,GWLG.Canada,0,AAC12E19-9639-4AE9-96FB-2454136F57BA,Gowling WLG presenters,NULL,99ff96bc-6649-4ada-8d31-93d1e5409024,"Financial Institutions & Services, Construction & Engineering","Mergers & Acquisitions, Financial Institutions Regulatory",COVID-19: How will coronavirus impact your business?,Hamilton,NULL,NULL,NULL
333,/Events/2020/Taking-charge-after-a-cyber-attack-Webinar,en-GB,46540B4F-C625-49A4-B40D-797FC6F39B5D,Taking charge after a cyber attack - Webinar,Taking charge after a cyber attack - Webinar,"The potential for a cyber attack is an ongoing concern for all companies. Despite implementing the strictest measures, an organization can still find itself the victim of a security breach.",~/getmedia/916633eb-5f88-4297-94d6-cea3fea438ec/081020-taking-charge-cyber-attack.jpg.xml?width=930&height=450&ext=.jpg,Oct. 27 webinar thumbnail,GWLG.Webinar,00:00.0,00:00.0,11:00,12:00,EST,0,NULL,"<p>The potential for a cyber attack is an ongoing concern for all companies. Despite implementing the strictest measures, an organization can still find itself the victim of a security breach. As a high-level leader or director, you need to know what steps to take after a suspected or actual attack or breach, the role of counsel and other expert service providers, and the best approach to obtain or contract for these external services and to manage crisis communications.</p>

<p>Join us for a webinar on <strong>Tuesday, Oct. 27</strong> from 11 a.m. to 12 noon EDT to learn more about the heightened risks of, and appropriate responses to and management of, cyber breaches and attacks as well as potential litigation arising from such breaches or attacks. Professionals from <a href=""http://www.accenture.com/ca-en"" target=""_blank""><strong>Accenture</strong></a> and <strong>Gowling WLG</strong> will co-host this webinar that examines the technical and legal considerations involved in a cyber security incident.</p>

<p>Our panelists will discuss:</p>

<ul>
	<li>Trends in cyber attacks - with reference to Accenture&#39;s Threatscape report</li>
	<li>Incident protocols including a technical investigation, notification requirements and crisis communications</li>
	<li>The role of the security firm in investigating, containing and remediating the breach</li>
	<li>The role of legal counsel, including incidents in multiple jurisdictions, preparation for possible litigation, class actions implications and the regulatory landscape</li>
	<li>Ways to contract for external services to maintain legal privilege</li>
</ul>

<h2>Accenture speakers</h2>

<ul>
	<li>
	<p>Yaz Alattia, Managing Director &ndash; Canada Lead, Accenture Security</p>
	</li>
	<li>
	<p>Annette Honan, Senior Manager &ndash; Global Legal Lead, Accenture Security</p>
	</li>
	<li>
	<p>Mark Raeburn, Managing Director - Global Cyber Investigation Forensics &amp; Response Lead, Accenture Security</p>
	</li>
</ul>

<p><strong>RSVP using the button above.</strong></p>
",NULL,NULL,00:00.0,https://sites-gowlingwlg.vuturevx.com/106/5629/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,cdfc9b50-74c2-4af5-9508-342935f81ccd,NULL,NULL,7c982ff4-2b05-446c-9f31-9d84cd6e9912;afc382e9-2b75-4a26-9e20-0a8c68694164,NULL,Webinar,"Brent J. Arnold, Wendy J. Wagner",Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/106/5629/landing-pages/event-registration-(blank-form).asp,Register now,GWLG.Canada;GWLG.Global,0,0CDA2C7E-BFD7-48AD-991D-C46DBB4E55AB,Gowling WLG speakers,NULL,NULL,Tech,NULL,NULL,NULL,NULL,NULL,NULL
334,/Events/2020/What-s-going-on-with-SMRs-in-Canada,en-GB,77815117-3581-425B-8E1C-030E0B24EB7F,What's going on with SMRs in Canada,Energy Innovators Roundtable Series: What's going on with SMRs in Canada,"Join us to hear from those in the industry on the opportunity presented by SMR technology. Our speakers will take a look back at the SMR Roadmap released in 2018, inform us about steps taken since then to develop the technological, commercial and regulatory ecosystem for SMRs, and describe some of the challenges that lie ahead on the road to commercialization, whether technological, commercial, regulatory or political.",~/getmedia/4a3a5283-032d-4d96-b336-282ab24d3a1b/201008-Energy-roundtable-two.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Webinar,00:00.0,30:00.0,2 p.m.,3:30 p.m.,EDT,0,NULL,"<p>Join us to hear from those in the industry on the opportunity presented by SMR technology. Our speakers will take a look back at the SMR Roadmap released in 2018, inform us about steps taken since then to develop the technological, commercial and regulatory ecosystem for SMRs, and describe some of the challenges that lie ahead on the road to commercialization, whether technological, commercial, regulatory or political.</p>

<p>RSVP using the button above.</p>

<h2>Speakers</h2>

<ul>
	<li>
	<p>KUN CHEN, Head of Licensing &amp; Regulatory Affairs, Moltex Energy</p>
	</li>
	<li>
	<p>JOHN GORMAN, President &amp; CEO, Canadian Nuclear Association</p>
	</li>
	<li>
	<p>BOB TEMPLE, General Counsel, NuScale</p>
	</li>
	<li>
	<p>LAURA VAN SOELEN,&nbsp;Partner, Gowling WLG</p>
	</li>
	<li>
	<p>KATHERINE MOSHONAS COLE, Canada Country Manager, X-Energy</p>
	</li>
	<li>
	<p>ERIC MCGOEY, Director, Remote Generation Development, Ontario Power Generation</p>
	</li>
</ul>

<p><em>More details to come as we host other virtual Energy Innovators Roundtable discussions this fall.</em></p>
",NULL,NULL,00:00.0,https://sites-gowlingwlg.vuturevx.com/106/5507/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,f1e960f5-8231-4c56-b7bf-9898ebb538c5,NULL,NULL,65d8a6ad-19dd-47c8-a59f-216e4b6e4e4b,NULL,Webinar,Laura Van Soelen,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/106/5507/landing-pages/event-registration-(blank-form).asp,Register now,GWLG.Canada,0,NULL,Gowling WLG speaker,NULL,NULL,Energy,NULL,NULL,NULL,NULL,NULL,NULL
335,/Events/2020/Energy-Innovators-Roundtable-Series-3,en-GB,9406E2C8-6CF7-4623-B38D-8E01198E6C35,Energy Innovators Roundtable Series 3,Energy Innovators Roundtable Series: Driving Diversity & Inclusion in the power sector,Please join Gowling WLG this fall as we host other virtual Energy Innovators Roundtable discussions.,~/getmedia/a323e4ce-a89f-4f21-86d4-9e0ba134f201/200909-Energy-roundtable-three.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Webinar,00:00.0,30:00.0,2 p.m.,3:30 p.m.,EST,0,NULL,"<p>Many Canadian power sector organizations are taking a proactive approach to hiring and developing talent more reflective of the diverse communities they serve. In an increasingly globalized, digitized, and interconnected world, the power sector will need to draw upon skills and expertise from diverse sources, particularly as the world strives to meet the challenge of delivering clean, reliable energy in the years ahead.</p>

<p>Expanding diversity is key, but there is much more work to do.</p>

<p>Join Gowling WLG&#39;s Neena Gupta and three Canadian power industry thought leaders as we take a look at the challenges and opportunities presented in this landmark shift. We&#39;ll examine what the future looks like, where things need to go and what lessons the power sector has learned from the social and cultural shifts which occurred during the past year.</p>

<h2>Guest speakers</h2>

<ul>
	<li>
	<p>EMILY THORN CORTHAY, Chair of the Board of Directors, StepUp</p>
	</li>
	<li>
	<p>FARAH ALEXIS, Vice President - Talent Management, Hydro One Networks Inc.</p>
	</li>
	<li>
	<p>ANNETTE HOLLAS, Manager - International Engagement, Equal by 3</p>
	</li>
	<li>
	<p>ANNA KLIMBOVSKAIA, COO &amp; Co-Founder, Diversio</p>
	</li>
</ul>

<hr />
<p><a class=""c-button"" href=""~/en/insights-resources/on-demand-webinars/2020/energy-innovators-roundtable-energy-storage/"" target=""_blank""><strong>Missed our first roundtable? View it on-demand &raquo;</strong></a></p>

<p><a href=""~/en/insights-resources/on-demand-webinars/2020/energy-innovators-roundtable-smrs-in-canada/"" target=""_self""><strong>Our second roundtable is also available on-demand: What&#39;s going on with SMRs in Canada &raquo;</strong></a></p>
",NULL,NULL,00:00.0,https://sites-gowlingwlg.vuturevx.com/106/5507/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,90A71CC3-07A3-4265-B0C4-C31612546237,f1e960f5-8231-4c56-b7bf-9898ebb538c5,NULL,NULL,39410df1-425d-4c6f-bea0-54d5e41e744a,NULL,Webinar,P.A. Neena Gupta,Gowling WLG Webinar,44232,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/106/5507/landing-pages/event-registration-(blank-form).asp,Register now,GWLG.Canada,0,NULL,Gowling WLG speakers,NULL,NULL,Energy,NULL,NULL,NULL,NULL,NULL,NULL
336,/Events/2020/Defending-your-trademarks-and-designs,en-GB,94CFE753-2567-43E9-BFA6-0B33AC107E93,Defending your trademarks and designs,Defending your trademarks and designs: Global enforcement strategies,"On Nov. 4 2020, join members of Gowling WLG’s global IP team as they highlight the critical considerations that help shape a winning trademark and design enforcement strategy.",~/getmedia/5d08369e-861d-4bc3-8025-99d968c7b52c/201104-IP-Defending-trademarks-designs-new-image.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Webinar,00:00.0,00:00.0,"2 p.m. BT, 3 p.m. CET, 9 p.m. CST, 9 a.m.",NULL,EST,0,NULL,"<p>Even the most careful cultivation of a global brand can present serious threats at every turn. For organisations across all sectors, such threats must be met with coordinated and creative solutions underpinned by a thorough understanding of the legal, cultural and business IP landscapes across different jurisdictions.</p>

<p>On Nov. 4, join members of Gowling WLG&rsquo;s global IP team as they highlight the critical considerations that help shape a winning trademark and design enforcement strategy.&nbsp;Immediately following the webinar, we invite you to connect one-on-one with members of our team in our virtual breakout rooms.</p>

<p>Register today using the buttons above.</p>

<p>&nbsp;</p>
",NULL,NULL,00:00.0,https://sites-gowlingwlg.vuturevx.com/106/5598/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,08b9a44c-bb26-4255-9779-296a124fcbee;aa72ea93-20f8-455a-8e77-6f6cea510684,NULL,b759b57f-50e6-4a7d-bde3-c1eedaa1eada;9ff8fd1a-c2f5-4084-b72e-4aa02fdf3312;bc89113e-4507-4a3d-812a-d8d8a9d9573e;d655adb5-c73e-4a6c-90be-5fed57086964;3fd4913d-3096-46ba-93b4-f365a5b14944;538a936e-b130-4df1-b42e-bdd98442edb4;49370d7b-1121-45da-90e6-96dcc50c1710,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,"<p><em>Lifecycle of a Smart Idea</em></p>
",~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/106/5598/landing-pages/event-registration-(blank-form).asp,Register now,GWLG.Canada;GWLG.China;GWLG.CentralEasternEurope;GWLG.Global,0,NULL,Gowling WLG hosts,NULL,NULL,NULL,"Intellectual Property Law, Trademarks, Brands & Designs",NULL,NULL,NULL,NULL,NULL
337,/Events/2020/Presidentielle-Americaine,fr-CA,F4C85461-FA78-413E-9928-668E4B4F0DC1,Présidentielle Américaine,Présidentielle Américaine: une élection pas comme les autres,"L’élection présidentielle américaine aura lieu le 3 novembre prochain. À bien des égards, il s’agit d’une édition unique en son genre, et nous ne pouvons échapper au flot de nouvelles et rebondissements quotidiens à ce sujet.",~/getmedia/1c1f0eaf-3a55-4e1e-bfbd-b80bbf3bc42e/elections_americaines_2020_V4.jpg.xml?width=600&height=180&ext=.jpg,NULL,GWLG.Webinar,00:00.0,00:00.0,13 h ,14 h ,EST,0,NULL,"<p>L&rsquo;élection présidentielle américaine aura lieu le 3 novembre prochain. À bien des égards, il s&rsquo;agit d&rsquo;une édition unique en son genre, et nous ne pouvons échapper au flot de nouvelles et rebondissements quotidiens à ce sujet.</p>

<p>En pleine pandémie et récession, dans un pays profondément divisé et marqué par des tensions raciales et sociales inédites, la campagne électorale se déroule dans un climat tendu.</p>

<p>Les enjeux sont de taille à l&rsquo;approche de ce scrutin crucial : un deuxième mandat pour l&rsquo;administration Trump ou l&rsquo;arrivée de Joe Biden à la Maison-Blanche auront des conséquences fort différentes pour l&rsquo;avenir des relations Canada-États-Unis.</p>

<p>Toujours soucieux de vous fournir des conseils d&rsquo;experts, nous avons fait appel à deux spécialistes qui suivent l&rsquo;actualité américaine de près pour vous donner un éclairage fort utile : <strong>Yves Boisvert</strong> est journaliste et chroniqueur en affaires politiques et judiciaires à La Presse depuis 1990, et <strong>John Parisella</strong> est un homme d&#39;affaires, chroniqueur politique et homme politique québécois. De 2009 à 2012, il a servi le Québec à titre de Délégué général du Québec à New York &ndash; Washington. Depuis janvier 2017, ce dernier agit comme conseiller spécial, Stratégie et rayonnement du Cabinet de relations publiques National.</p>

<p>À quoi faut-il s&#39;attendre de cette cinquante-neuvième élection présidentielle américaine? Joignez-vous à nos experts qui se pencheront sur les questions importantes entourant cette campagne et discuteront de plusieurs enjeux entourant ce moment historique.</p>

<p>Places limitées, réservez la vôtre sans tarder!&nbsp;</p>

<h2>Programme</h2>

<ul>
	<li>13 h : Accueil&nbsp;</li>
	<li>13 h 05 : Début de la présentation&nbsp;</li>
	<li>13 h 45 : Période de questions</li>
	<li>14 h : Conclusion&nbsp;</li>
</ul>

<h2>Panélistes&nbsp;</h2>

<p><img alt="""" src=""~/getmedia/ce6ba8c8-1f71-43c3-b0d3-b5d6f0734286/Conferenciers_Presidentielle-americaine.png.xml?width=600&amp;height=275"" style=""width: 600px; height: 275px;"" /></p>

<h2>Pour nous joindre</h2>

<p>Julie-Han Angers<br />
Spécialiste, Événements<br />
<a href=""tel:+1%20514%20392-9553"" id=""lnkEventContactPhone"">T: +1 514 392-9553</a><br />
<a href=""mailto:julie-han.angers@gowlingwlg.com"" id=""lnkEventContactEmail"">julie-han.angers@gowlingwlg.com</a></p>
",NULL,NULL,00:00.0,mailto:julie-han.angers@gowlingwlg.com,NULL,RSVP,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,NULL,NULL,NULL,NULL,Webinaires,NULL,Webinaire,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,mailto:julie-han.angers@gowlingwlg.com,"Places limitées, réservez la vôtre sans tarder!",GWLG.Canada,0,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
338,/Events/2020/Environmental-Law-in-Review-2020-Hot-topics,en-GB,3D63AA42-49D5-4EF8-AC1D-27904C022780,Environmental Law in Review 2020 Hot topics,Environmental Law in Review 2020: Hot topics,"On October 29, join our professionals to keep up-to-date on environmental law's hot topics of 2020 - including the impact of COVID-19 on local government, environmental law issues in insolvency matters, and the recent Ontario environmental assessment reforms enacted in Bill 197.",~/getmedia/61d6ebad-0b4f-4fa0-8750-8386b5a4d446/201020-Environmental-law-year-in-review.jpg.xml?width=930&height=450&ext=.jpg,view of green forest between a river,GWLG.Webinar,30:00.0,00:00.0,12:30,2:00 p.m.,EDT,1,1.5 hours,"<p>As we enter the final months of this unprecedented year, Gowling WLG&#39;s Environmental Law Group invites you to a three part webinar series highlighting recent changes in Canadian environmental law.</p>

<p>On October 29, join our professionals to keep up-to-date on environmental law&rsquo;s &quot;hot topics&quot;&nbsp;of 2020 -&nbsp;including the impact of COVID-19 on local government, environmental law issues in insolvency matters, and the recent Ontario environmental assessment reforms enacted in Bill 197.</p>

<p>Register for the October 29 webinar today, and see below for more information about the November 5 and November 12 webinars.</p>

<h2>Guest speaker</h2>

<p>Jody Johnson - Director of Legal Services, Halton Region</p>

<h2>CPD/CLE Details</h2>

<p><strong>LSO:</strong>&nbsp;This program is eligible for up to 1.5 hours of Substantive content<br />
<strong>Quebec:</strong>&nbsp;A certificate of attendance will be issued to professionals after this session<br />
<strong>LSBC:</strong>&nbsp;This program is eligible for up to 1.5 hours toward the LSBC&#39;s CPD requirement<br />
<strong>LSAB:</strong>&nbsp;This program is eligible for up to 1.5 hours of credit toward the CPD program</p>

<hr />
<h2>Upcoming webinars</h2>

<p><a href=""~/en/events/2020/resource-development-in-nunavut/"" target=""_blank"">November 5:&nbsp;Resource development in Nunavut &raquo;</a></p>

<p><a href=""~/en/events/2020/current-trends-in-climate-change-regulation/"" target=""_blank"">November 12:&nbsp;Current trends in climate change regulation and mitigation &raquo;</a></p>
",NULL,NULL,30:00.0,https://sites-gowlingwlg.vuturevx.com/106/5658/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,064c02f0-ff64-42f8-8a71-c8dece3600fd,6b906235-110b-475e-88cd-4ddef78eb8b8,f63465af-154c-4d26-b2ab-6bc7cc79f913;0efee052-a0c0-4bdb-9de2-1227c5fa1551;b8a82bd2-8273-4c44-b992-5214d19e0bc3;16cf5398-6bf8-473c-b6a8-88461a57e071,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/106/5658/landing-pages/event-registration-(blank-form).asp,Register now,GWLG.Canada,0,NULL,Gowling WLG speakers,NULL,NULL,NULL,Climate Change and Environmental Law,COVID-19: How will coronavirus impact your business?,NULL,NULL,NULL,NULL
339,/Events/2020/Resource-development-in-Nunavut,en-GB,7E2BEE44-4AE5-4CBE-8121-57614C09D42F,Resource development in Nunavut, Environmental Law Year in Review 2020: Resource development in Nunavut - Indigenous and regulatory issues,"On November 5, join Gowling WLG partner Adam Chamberlain in conversation with Senator Dennis Patterson (Nunavut) and former Nunavut Impact Review Board (NIRB) Executive Director, Ryan Barry. ",~/getmedia/61d6ebad-0b4f-4fa0-8750-8386b5a4d446/201020-Environmental-law-year-in-review.jpg.xml?width=930&height=450&ext=.jpg,view of green forest between a river,GWLG.Webinar,00:00.0,00:00.0,12:00,1:00 p.m.,EST,1,1 hour,"<p><a class=""c-button-white"" href=""~/en/insights-resources/on-demand-webinars/2020/resource-development-in-nunavut-webinar/"" target=""_self"">Missed the webinar? View it on-demand now &raquo;</a></p>

<p>As we enter the final months of this unprecedented year, Gowling WLG&#39;s Environmental Law Group invites you to a three part webinar series highlighting recent changes in Canadian environmental law.</p>

<p>On November 5, join Gowling WLG partner Adam Chamberlain in conversation with Senator Dennis Patterson (Nunavut) and former Nunavut Impact Review Board (NIRB) Executive Director, Ryan Barry. The Senator and Ryan will discuss the current state of the resource industry in Nunavut as well as the implications for Nunavut and Nunavummiut of the apparent trend toward the implementation of UNDRIP and ethical standards for the resource sector in Canada.</p>

<h2>CPD/CLE Details</h2>

<p><strong>LSO:</strong>&nbsp;This program is eligible for up to 1 hour of Substantive content<br />
<strong>Quebec:</strong>&nbsp;A certificate of attendance will be issued to professionals after this session<br />
<strong>LSBC:</strong>&nbsp;This program is eligible for up to 1 hour toward the LSBC&#39;s CPD requirement<br />
<strong>LSAB:</strong>&nbsp;This program is eligible for up to 1 hour of credit toward the CPD program</p>

<hr />
<h2>Upcoming webinar</h2>

<p><a href=""~/en/events/2020/current-trends-in-climate-change-regulation/"" target=""_blank"">November 12:&nbsp;Current trends in climate change regulation and mitigation &raquo;</a></p>
",NULL,NULL,00:00.0,https://sites-gowlingwlg.vuturevx.com/106/5658/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,064c02f0-ff64-42f8-8a71-c8dece3600fd,NULL,29d7e340-a6af-49b5-b223-993a69997a78,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,Gowling WLG speaker,NULL,NULL,NULL,Climate Change and Environmental Law,NULL,NULL,NULL,NULL,NULL
340,/Events/2020/Current-trends-in-climate-change-regulation,en-GB,57DF1628-7FD9-4AFE-BEB7-3E92593AC1FE,Current trends in climate change regulation, Environmental Law Year in Review 2020: Current trends in climate change regulation and mitigation,"Gowling WLG’s Jennifer King and Liane Langstaff will be joined by leading US environmental lawyers, Brook Detterman and Eric Christensen of Beveridge & Diamond to discuss cross-border issues in a low carbon world, including greenhouse gas regulation, offset programs and carbon disclosure.",~/getmedia/61d6ebad-0b4f-4fa0-8750-8386b5a4d446/201020-Environmental-law-year-in-review.jpg.xml?width=930&height=450&ext=.jpg,view of green forest between a river,GWLG.Webinar,30:00.0,30:00.0,12:30,1:30 p.m.,EST,1,1 hour,"<p>Gowling WLG&rsquo;s Jennifer King and Liane Langstaff will be joined by leading US environmental lawyers, <a href=""https://www.bdlaw.com/brook-detterman/"" target=""_blank"">Brook Detterman</a> and <a href=""https://www.bdlaw.com/eric-l-christensen/"" target=""_blank"">Eric Christensen</a> of Beveridge &amp; Diamond to discuss cross-border issues in a low carbon world, including greenhouse gas regulation, offset programs and carbon disclosure. The session will be moderated by <a href=""https://www.sussex-strategy.com/people/robyn-gray"" target=""_blank"">Robyn Gray</a>, Vice President, Environment of Sussex Strategy Group.</p>

<h2>CPD/CLE Details</h2>

<p><strong>LSO:</strong>&nbsp;This program is eligible for up to 1 hour of Substantive content<br />
<strong>Quebec:</strong>&nbsp;A certificate of attendance will be issued to professionals after this session<br />
<strong>LSBC:</strong>&nbsp;This program is eligible for up to 1 hour toward the LSBC&#39;s CPD requirement<br />
<strong>LSAB:</strong>&nbsp;This program is eligible for up to 1 hour of credit toward the CPD program</p>
",NULL,NULL,30:00.0,https://sites-gowlingwlg.vuturevx.com/106/5658/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,e652eb3b-cd9c-4c1e-9991-a4b38e5e1cd3,NULL,f63465af-154c-4d26-b2ab-6bc7cc79f913;253ecee1-50cf-4b3c-b21d-2a672a89946d,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/106/5658/landing-pages/event-registration-(blank-form).asp,Register now,GWLG.Canada,0,NULL,Gowling WLG panelists,NULL,NULL,NULL,Environmental Litigation,NULL,NULL,NULL,NULL,NULL
341,/Events/2020/Developing-a-global-anti-counterfeiting-program,en-GB,8B2A3A66-9FCC-4F6A-8D47-EE85D04871F3,Developing a global anti-counterfeiting program,The genuine article: Developing a global anti-counterfeiting program for the first time,"The availability in the market of counterfeit products can pose a major threat to the brand equity you’ve worked hard to establish. For organizations, both new and old, that have just begun to consider building a dedicated global anti-counterfeiting program, we know the task can seem daunting at first.",~/getmedia/ae0ac82b-788d-426c-9735-535302f36fe5/201020-IP-anti-counterfeiting-program.jpg.xml?width=930&height=450&ext=.jpg,street vendors selling accessories,GWLG.Webinar,00:00.0,00:00.0,"2 p.m. BT, 3 p.m. CET, 9 p.m. CST, 9 a.m.",NULL,EST,0,NULL,"<p>The availability in the market of counterfeit products can pose a major threat to the brand equity you&rsquo;ve worked hard to establish. For organizations, both new and old, that have just begun to consider building a dedicated global anti-counterfeiting program, we know the task can seem daunting at first. Indeed, from identifying &ldquo;at risk&rdquo; products to learning how to work with Customs authorities around the world, it can be difficult to know where to start.</p>

<p>Gowling WLG&rsquo;s global Intellectual Property Group is here to help. On Dec. 2, join members of our team as together they outline the key considerations that underpin an effective anti-counterfeiting program &ndash; one that is tailored to your business, wherever in the world you go.&nbsp;Immediately following the webinar, we invite you to connect one-on-one with members of our team in our virtual breakout rooms.</p>
",NULL,NULL,00:00.0,https://sites-gowlingwlg.vuturevx.com/106/5598/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,08b9a44c-bb26-4255-9779-296a124fcbee,NULL,2c25a2d7-1ea3-479b-8b72-0ca6d897a8d4;640695b8-5daf-4a5e-81d8-733c20d088e2;cba60c6d-eb6d-4fa1-b4b4-a4b8c0d0c080;8881287e-24c9-49cc-9a9b-985ad209d75d;49370d7b-1121-45da-90e6-96dcc50c1710;3fd4913d-3096-46ba-93b4-f365a5b14944;5f39b2b0-1232-4c03-abce-300149d85f9b,94cfe753-2567-43e9-bfa6-0b33ac107e93,Webinar,NULL,Webinar,34471,GWLG.Events,"<p><em>Lifecycle of a smart idea</em></p>
",~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/106/5598/landing-pages/event-registration-(blank-form).asp,Register now,GWLG.Canada;GWLG.Global;GWLG.UK,0,NULL,Gowling WLG hosts,NULL,NULL,NULL,Intellectual Property,NULL,NULL,NULL,NULL,NULL
342,/Events/2020/ThinkHouse-Foundations-Privilege-what-you-need,en-GB,A19F4EA1-A9B3-48A2-ACF2-8BC83E51F2D9,ThinkHouse Foundations - Privilege: what you need ,Privilege: what you need to know ThinkHouse Foundations,,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,09:46.0,09:53.0,10:00,11:00,GMT,1,1,"<p>Privilege can be something of a minefield to navigate and to maintain, particularly when in the throes of litigation.</p>

<p>In this session, Joanna Rhodes will run through the the main types of privilege as well as giving some hints and tips as to how it can best be managed within an organisation.</p>

<p>During this live webinar we will answer as many audience questions as possible in the time available.</p>

<p>This event is part of a series of webinars being delivered by the <a href=""https://gowlingwlg.com/en/topics/thinkhouse/junior-in-house-counsel/"">ThinkHouse Foundations</a> programme. Sign up to this or any of the other webinars via the registration button.</p>

<p><em>ThinkHouse Foundations is Gowling WLG&#39;s tailored programme for in-house lawyers starting out in their careers. Drawing on the topics and insights focused on in ThinkHouse, we explore the opportunities and challenges faced by paralegals, trainees and lawyers of up to five years&#39; PQE.</em></p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,00:00.0,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?RSID=68srZY1G1pwUMb9We9TqQuQ31W7AbEkVKYAExtqY0oPQBhr5iqrckTlV04zxjydG,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,de517572-4373-4b36-844b-18be93f6f9bc;cbbbf9eb-a169-4053-8043-7085cfb8fd4a;3fc2ca8c-9d19-44ba-a3a9-ad1ecb11e900;f1e960f5-8231-4c56-b7bf-9898ebb538c5;06cecb4c-c959-4674-9047-d5d8ee8c673c;2cd1b5c0-8992-4c92-b8e8-d65d8b86dbed;5ad41b49-d460-489a-95b9-84c854eda6f1;a929915c-1d1f-4e9c-8c8b-f34a30e2ab4e;df411e0b-2c62-4a68-8456-2c7c1dd0b4da;049c8249-7ff3-4ee3-a439-590f45fd5cff;c0b8c1a8-73eb-4122-972f-dc5df852f68d;dede4518-e78c-4b48-a143-a2338be5d0ac;59be9dcd-e5f0-43e4-9d50-442a658eda18;0357076d-2635-451a-8d67-ec01f9f3082b;cdfc9b50-74c2-4af5-9508-342935f81ccd,5027bdff-5a12-4e06-a0ca-809c3002882c;c774be76-80ec-4195-83a3-5850b5e2a4a2,a143cbfd-d333-42a0-89a6-7287894464f1,9765839f-5255-4c73-842f-67128c9fb24d;ca67aa19-bd53-48e1-97b2-b3dec72a50c8,NULL,Webinar,"Joanna Rhodes, Tom Cox",Webinar,34471,GWLG.Events,NULL,~/getmedia/5c73cf2c-5ac2-465b-9dff-9377774e4d9b/thinkhouse-foundations-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/a1bd54ac-e5a3-4c45-8585-8ccbdce9e524/thinkhouse-foundations-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,NULL,"Automotive, Aviation, Aerospace & Defence, Construction & Engineering, Energy, Financial Institutions & Services, Food & Beverage, Government Contracting & Public Sector , Health & Care, Infrastructure, Life Sciences, Natural Resources, Nuclear, Real Estate, Retail, Leisure & Hotels, Tech","Commercial Disputes, Commercial Litigation",ThinkHouse,NULL,NULL,NULL,NULL
343,/Events/2020/ThinkHouse-Foundations-Delivering-Excellence-in,en-GB,E1C4D30A-6DA7-49FD-91D1-70BE522ACFF3,ThinkHouse Foundations - Delivering Excellence in ,Delivering Excellence in the New Landscape of Online Communications ThinkHouse Foundations,,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,09:46.0,09:53.0,10:00,11:30,GMT,1,1.5,"<p>In the current climate, it is imperative that you&rsquo;re able to effectively communicate in a virtual setting. <a href=""https://www.strevas.com/team/alicia-sutton"">Alicia Sutton</a> from Strevas, who ran the skills session on effective communication and influencing at last year&rsquo;s ThinkHouse Foundations, is back this year with an online offering.</p>

<p>Using video demonstrations, exercises and breakout room discussions, this interactive and engaging session will explore how to deliver excellence in the new landscape of online communications. Topics explored will be maintaining energy and focus, managing your environment and distractions, and effective online communication, which includes on-screen personal impact as well as managing meetings successfully.</p>

<p>In addition to receiving topical learning and development, you will also have opportunities to network throughout the session.</p>

<p>This event is part of a series of webinars being delivered by the <a href=""https://gowlingwlg.com/en/topics/thinkhouse/junior-in-house-counsel/"">ThinkHouse Foundations</a> programme. Sign up to this or any of the other webinars via the registration button.</p>

<p><em>ThinkHouse Foundations is Gowling WLG&#39;s tailored programme for in-house lawyers starting out in their careers. Drawing on the topics and insights focused on in ThinkHouse, we explore the opportunities and challenges faced by paralegals, trainees and lawyers of up to five years&#39; PQE.</em></p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,00:00.0,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?RSID=68srZY1G1pwUMb9We9TqQuQ31W7AbEkVKYAExtqY0oPQBhr5iqrckTlV04zxjydG,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,NULL,a143cbfd-d333-42a0-89a6-7287894464f1,NULL,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/5c73cf2c-5ac2-465b-9dff-9377774e4d9b/thinkhouse-foundations-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/a1bd54ac-e5a3-4c45-8585-8ccbdce9e524/thinkhouse-foundations-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,NULL,NULL,NULL,ThinkHouse,NULL,NULL,NULL,NULL
344,/Events/2020/Whistleblowing-in-the-COVID-19-era,en-GB,B5EB1F1D-F951-4EA4-B1A9-A31DD3EE6DFB,Whistleblowing in the COVID-19 era,Whistleblowing in the COVID-19 era - ThinkHouse Foundations,"As our response to the pandemic continues to evolve, there is emerging evidence of an increase in whistleblowing reports made by employees since it began.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,09:46.0,09:53.0,10:00,11:00,GMT,1,1.5,"<p>The onset of the pandemic meant usual working practices for many employees changed almost overnight. As our response to the pandemic continues to evolve, there is emerging evidence of an increase in whistleblowing reports made by employees since it began.</p>

<p>Kiran Gosal will take you through the basics, highlight the challenges facing employers when responding to whistleblowing reports during the pandemic and offer some practical tips for addressing them.</p>

<p>This event is part of a series of webinars being delivered by the <a href=""~/en/topics/thinkhouse/junior-in-house-counsel/"">ThinkHouse Foundations</a> programme. Sign up to this or any of the other webinars via the registration button.</p>

<p><em>ThinkHouse Foundations is Gowling WLG&#39;s tailored programme for in-house lawyers starting out in their careers. Drawing on the topics and insights focused on in ThinkHouse, we explore the opportunities and challenges faced by paralegals, trainees and lawyers of up to five years&#39; PQE.</em></p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,00:00.0,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?RSID=68srZY1G1pwUMb9We9TqQuQ31W7AbEkVKYAExtqY0oPQBhr5iqrckTlV04zxjydG,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,de517572-4373-4b36-844b-18be93f6f9bc;cbbbf9eb-a169-4053-8043-7085cfb8fd4a;3fc2ca8c-9d19-44ba-a3a9-ad1ecb11e900;f1e960f5-8231-4c56-b7bf-9898ebb538c5;06cecb4c-c959-4674-9047-d5d8ee8c673c;2cd1b5c0-8992-4c92-b8e8-d65d8b86dbed;5ad41b49-d460-489a-95b9-84c854eda6f1;a929915c-1d1f-4e9c-8c8b-f34a30e2ab4e;df411e0b-2c62-4a68-8456-2c7c1dd0b4da;049c8249-7ff3-4ee3-a439-590f45fd5cff;c0b8c1a8-73eb-4122-972f-dc5df852f68d;dede4518-e78c-4b48-a143-a2338be5d0ac;59be9dcd-e5f0-43e4-9d50-442a658eda18;0357076d-2635-451a-8d67-ec01f9f3082b;cdfc9b50-74c2-4af5-9508-342935f81ccd,d8837737-40d2-4472-8a9e-ba4101ec2105,a143cbfd-d333-42a0-89a6-7287894464f1;6b906235-110b-475e-88cd-4ddef78eb8b8,5f449485-052b-475e-b601-b3cc9e729856;6ad4fe15-41cb-46d7-98f9-5349159e2bf2,NULL,Webinar,"Kiran Gosal, James Hall",Webinar,34471,GWLG.Events,NULL,~/getmedia/5c73cf2c-5ac2-465b-9dff-9377774e4d9b/thinkhouse-foundations-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/a1bd54ac-e5a3-4c45-8585-8ccbdce9e524/thinkhouse-foundations-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,NULL,"Automotive, Aviation, Aerospace & Defence, Construction & Engineering, Energy, Financial Institutions & Services, Food & Beverage, Government Contracting & Public Sector , Health & Care, Infrastructure, Life Sciences, Natural Resources, Nuclear, Real Estate, Retail, Leisure & Hotels, Tech","Employment, Labour & Equalities","ThinkHouse, COVID-19: How will coronavirus impact your business?",NULL,NULL,NULL,NULL
345,/Events/2020/Defending-your-trademarks-and-designs,fr-CA,94CFE753-2567-43E9-BFA6-0B33AC107E93,Defending your trademarks and designs,Stratégies de protection de vos marques de commerce et dessins industriels à l'échelle mondiale (webinaire en anglais),"Even the most careful cultivation of a global brand can present serious threats at every turn. For organisations across all sectors, such threats must be met with coordinated and creative solutions underpinned by a thorough understanding of the legal, cultural and business IP landscapes across different jurisdictions.",~/getmedia/5d08369e-861d-4bc3-8025-99d968c7b52c/201104-IP-Defending-trademarks-designs-new-image.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Webinar,00:00.0,00:00.0,"2 p.m. BT, 3 p.m. CET, 9 p.m. CST, 9 a.m.",NULL,EST,0,NULL,"<p>Even the most careful cultivation of a global brand can present serious threats at every turn. For organisations across all sectors, such threats must be met with coordinated and creative solutions underpinned by a thorough understanding of the legal, cultural and business IP landscapes across different jurisdictions.</p>

<p>On Nov. 4, join members of Gowling WLG&rsquo;s global IP team as they highlight the critical considerations that help shape a winning trademark and design enforcement strategy.</p>

<p>Register today using the buttons above.</p>

<hr />
<p><em>Upcoming webinar in this series</em></p>

<p><a href=""~/en/insights-resources/events/2020/developing-a-global-anti-counterfeiting-program/"" target=""_blank"">Dec 2: The genuine article: Developing a global anti-counterfeiting program for the first time &raquo;</a></p>
",NULL,NULL,00:00.0,https://sites-gowlingwlg.vuturevx.com/106/5598/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,08b9a44c-bb26-4255-9779-296a124fcbee;aa72ea93-20f8-455a-8e77-6f6cea510684,NULL,b759b57f-50e6-4a7d-bde3-c1eedaa1eada;9ff8fd1a-c2f5-4084-b72e-4aa02fdf3312;bc89113e-4507-4a3d-812a-d8d8a9d9573e;d655adb5-c73e-4a6c-90be-5fed57086964;3fd4913d-3096-46ba-93b4-f365a5b14944;538a936e-b130-4df1-b42e-bdd98442edb4;49370d7b-1121-45da-90e6-96dcc50c1710,NULL,Webinaires,NULL,Webinaire,34471,GWLG.Events,"<p><em>Lifecycle of a Smart Idea</em></p>
",~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/106/5598/landing-pages/event-registration-(blank-form).asp,Register now,GWLG.Canada;GWLG.China;GWLG.CentralEasternEurope;GWLG.Global,0,NULL,Conférenciers,NULL,NULL,NULL,"Propriété intellectuelle, Marques de commerce, marques et dessins",NULL,NULL,NULL,NULL,NULL
346,/Events/2020/Resource-development-in-Nunavut,fr-CA,7E2BEE44-4AE5-4CBE-8121-57614C09D42F,Resource development in Nunavut,Revue de l'année en droit de l'environnement : développement des ressources naturelles au Nunavut (webinaire en anglais),"As we enter the final months of this unprecedented year, Gowling WLG's Environmental Law Group invites you to a three part webinar series highlighting recent changes in Canadian environmental law.",~/getmedia/61d6ebad-0b4f-4fa0-8750-8386b5a4d446/201020-Environmental-law-year-in-review.jpg.xml?width=930&height=450&ext=.jpg,view of green forest between a river,GWLG.Webinar,00:00.0,00:00.0,12:00,1:00 p.m.,EST,1,1 hour,"<p>As we enter the final months of this unprecedented year, Gowling WLG&#39;s Environmental Law Group invites you to a three part webinar series highlighting recent changes in Canadian environmental law.</p>

<p>On November 5, join Gowling WLG partner Adam Chamberlain in conversation with Senator Dennis Patterson (Nunavut) and former Nunavut Impact Review Board (NIRB) Executive Director, Ryan Barry. The Senator and Ryan will discuss the current state of the resource industry in Nunavut as well as the implications for Nunavut and Nunavummiut of the apparent trend toward the implementation of UNDRIP and ethical standards for the resource sector in Canada.</p>

<h2>CPD/CLE Details</h2>

<p><strong>LSO:</strong>&nbsp;This program is eligible for up to 1 hour of Substantive content<br />
<strong>Quebec:</strong>&nbsp;A certificate of attendance will be issued to professionals after this session<br />
<strong>LSBC:</strong>&nbsp;This program is eligible for up to 1 hour toward the LSBC&#39;s CPD requirement<br />
<strong>LSAB:</strong>&nbsp;This program is eligible for up to 1 hour of credit toward the CPD program</p>

<hr />
<h2>Upcoming webinar</h2>

<p><a href=""~/en/insights-resources/events/2020/current-trends-in-climate-change-regulation/"" target=""_blank"">November 12:&nbsp;Current trends in climate change regulation and mitigation &raquo;</a></p>
",NULL,NULL,00:00.0,https://sites-gowlingwlg.vuturevx.com/106/5658/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,064c02f0-ff64-42f8-8a71-c8dece3600fd,NULL,29d7e340-a6af-49b5-b223-993a69997a78,NULL,Webinaires,NULL,Webinaire,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/106/5658/landing-pages/event-registration-(blank-form).asp,Register now,GWLG.Canada,0,NULL,Conférencier,NULL,NULL,NULL,Droit de l’environnement,NULL,NULL,NULL,NULL,NULL
347,/Events/2020/ThinkHouse-Navigating-brand-challenges,en-GB,D3EAC9EA-693A-479D-9608-6F777DFE2796,ThinkHouse - Navigating brand challenges,Navigating brand challenges - ThinkHouse ,"During the second in our series of four ThinkHouse Brands & Designs webinars, Kate Swaine and John Coldham will discuss the latest issues in-house counsel need to consider when implementing brand strategy.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,24:45.0,24:49.0,14:30,15:15,GMT,1,0.75,"<p>During the second in our series of four <a href=""~/en/thinkhouse/"">ThinkHouse</a> Brands &amp; Designs webinars, Kate Swaine and John Coldham will discuss the latest issues in-house counsel need to consider when implementing brand strategy.</p>

<p>Their conversation will consider issues such as:</p>

<ul>
	<li>How do brands respond to social change;</li>
	<li>COVID-19 - how does it impact brand strategy; and</li>
	<li>Geo-boundaries, what do they mean for brands?</li>
</ul>

<p>This webinar will be delivered in a conversational style between our speakers, we will welcome audience questions throughout the session and will answer as many as possible in the time available.</p>

<p>Please use the RSVP link to secure your place on this free webinar.</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession. Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,30:00.0,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?rsid=jDvpjO2nfcsIYwvYySyMPN8K3noj43eaTyj_wKCh560&react=All%20Reactions,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,08b9a44c-bb26-4255-9779-296a124fcbee,a143cbfd-d333-42a0-89a6-7287894464f1,5f39b2b0-1232-4c03-abce-300149d85f9b;9ff8fd1a-c2f5-4084-b72e-4aa02fdf3312,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/d2b9ca59-d716-4c60-abb1-472dd7eeec23/thinkhouse-primary-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/0363a899-4ad3-4e9e-a428-fbf0ebf9f31d/thinkhouse-primary-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,NULL,NULL,Intellectual Property,ThinkHouse,NULL,NULL,NULL,NULL
349,/Events/2020/Employment-Labour-Equalities-operation-update,en-GB,020EE47E-7629-48BE-B4E0-185779518B94,"Employment, Labour, Equalities operation update","Employment, Labour & Equalities Law operation update 2020",Join more than a dozen leading lawyers from Gowling WLG for an upcoming seminar that tackles a wide variety of topics of concern in workplaces today.,~/getmedia/8653dd17-db46-4406-91ce-afc14efd795e/201030-ELE-operation-update-2020.jpg.xml?width=930&height=450&ext=.jpg,group of employees working together,GWLG.Webinar,00:00.0,00:00.0,9 a.m.,12 p.m.,EST,0,NULL,"<p>Join more than a dozen leading lawyers from Gowling WLG for an upcoming seminar that tackles a wide variety of topics of concern in workplaces today, including:</p>

<ul>
	<li>What have the courts done in 2020?</li>
	<li>ESA changes in response to COVID-19 and what do they mean?</li>
	<li>Do we have to update our employment contracts&hellip; again?</li>
	<li>Are the borders really closed? Do I really have to quarantine? Isn&rsquo;t there an exemption somewhere?</li>
	<li>Accommodating employees in the COVID-19 era.</li>
	<li>Our popular &ldquo;stump the lawyers&rdquo; panel.</li>
</ul>

<p>Our Employment, Labour and Equalities (ELE) webinar will take place on&nbsp;<strong>Tuesday, November 10</strong>.</p>

<p>Keep your workplace robust in these changing times by staying current on the latest legal issues.</p>
",NULL,NULL,00:00.0,https://sites-gowlingwlg.vuturevx.com/106/5666/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,d8837737-40d2-4472-8a9e-ba4101ec2105,NULL,7ce8b1af-c935-483a-b2f6-ffbb3a925288;ee47b27a-a0ce-4a13-a5ba-1e54b31d123f;774be3cd-5497-4537-9523-ed855158a5bb;64c86b79-7dc4-409e-8260-f244f6349dc3;bbd690ea-a4bd-4cdf-85d3-ca0c7d862d99;daf683f6-91c3-40f6-850c-ed7502e1e569;39410df1-425d-4c6f-bea0-54d5e41e744a;2733c3c9-43b4-45f1-a164-ffdc7556ef2e;07075723-95e6-40b6-80e6-66a4d32ffcd9;aa6497d4-fce6-44ea-b34c-5e7e86382372;645ef482-5bb3-4909-a3b7-460f29738efb;ecb92429-a5ba-4eba-9bcd-3d1d4cfd236d;66a40e6b-2d18-4254-9585-8cc1f1dc597a;684ec3af-5e5f-4df1-99f6-3b3409004ba5;0692853f-b44e-4719-b7bd-aa9495c86f6e;c060a8eb-b8cd-4821-817d-e5e9b6677d5a;a510a502-96d3-4ad6-b74c-b3fb1df466af;dfd2f22e-7eea-46bd-8086-b7feb3bab9d0;dd5a2004-1aec-4071-b5b9-10794b5d5266,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/106/5666/landing-pages/event-registration-(blank-form).asp,Register now,GWLG.Canada,0,NULL,Speakers,NULL,NULL,NULL,"Employment, Labour & Equalities",NULL,NULL,NULL,NULL,NULL
350,/Events/2020/Toronto-Virtual-Open-House,en-GB,2DD698AD-B2FD-4E9D-A9AE-23A427174D52,Toronto Virtual Open House,Get to Know Gowling WLG,,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.SpecialEvents,03:10.0,03:20.0,Various,NULL,EST,0,NULL,"<h2>2021 Summer Student Recruitment</h2>

<p>As you prepare for the upcoming recruitment process, take the opportunity to find out what sets Gowling WLG apart.&nbsp; This year, we invite you to attend one of our virtual events where you will have the opportunity to meet our lawyers and learn more about our firm. Join us for one (or two!) of the events listed below to see what makes Gowling WLG a great place to work.</p>

<h2>Virtual Open House</h2>

<p>Panels will consist of Associates and Partners from the respective departments and will be moderated by Shemara Dadhisheth, Manager of Student Programs.</p>

<p>Please note that our events are intended for those candidates eligible for a 2021 second year summer student position.&nbsp;</p>

<p><a class=""c-button"" href=""https://sites-gowlingwlg.vuturevx.com/103/5669/landing-pages/event-registration-(blank-form).asp"" target=""_blank"">Register now</a></p>

<table border=""1"" cellpadding=""1"" cellspacing=""1"">
	<thead>
		<tr>
			<th scope=""col"">Date</th>
			<th scope=""col"">Event</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>Nov. 9 at 2 p.m.</td>
			<td>
			<p><strong>Coffee Chat</strong><br />
			<em>with our current Articling Students</em></p>
			</td>
		</tr>
		<tr>
			<td>Nov. 10 at 2 p.m.</td>
			<td>
			<p><strong>Virtual Panel &amp; Information Session - Intellectual Property</strong><br />
			<em>with members of our IP Department</em></p>
			</td>
		</tr>
		<tr>
			<td>Nov. 12 at 2 p.m.</td>
			<td><strong>Virtual Panel &amp; Information Session - Environmental</strong><br />
			<em>with members of our Environmental Group</em></td>
		</tr>
		<tr>
			<td>Nov. 17 at 2 p.m.&nbsp;<br />
			or<br />
			Nov. 23 at 3 p.m.</td>
			<td><strong>Virtual Panel &amp; Information Session - Advocacy</strong><br />
			<em>with our Advocacy Department</em></td>
		</tr>
		<tr>
			<td>Nov. 19 at 2 p.m.&nbsp;<br />
			or<br />
			Nov. 25 at 2 p.m.</td>
			<td><strong>Virtual Panel &amp; Information Session - Business</strong><br />
			<em>with members of our Business Law, Real Estate and Financial Services Departments</em></td>
		</tr>
		<tr>
			<td>
			<p>Nov. 26&nbsp;at 3 p.m.</p>
			</td>
			<td><strong>Mock Interviews &amp; Resume Tips</strong><br />
			<em>with Shemara Dadhisheth, Manager, Student Programs and Nicole Salama, Manager, Associate Programs</em></td>
		</tr>
	</tbody>
</table>

<h2>Questions?</h2>

<p>Please feel free to contact <a href=""mailto:Shemara.Dadhisheth@gowlingwlg.com"">Shemara Dadhisheth, Manager, Student Programs</a>.&nbsp;We look forward to having you join us!</p>
",NULL,NULL,07:50.0,https://sites-gowlingwlg.vuturevx.com/103/5669/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,C41373B4-86B9-4F74-8894-0B0BB7DDBD18,NULL,NULL,NULL,NULL,NULL,Special events,NULL,Online event,694,GWLG.Events,NULL,~/getmedia/ce6334bf-f101-4e35-8693-c3acc15d4917/shutterstock_1713325624-1.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/103/5669/landing-pages/event-registration-(blank-form).asp,Register now,GWLG.Canada,0,NULL,Speaker(s),NULL,b2dc4461-dc66-4f96-9ae6-32bc2b14259d,NULL,NULL,NULL,Toronto,NULL,NULL,NULL
351,/Events/2020/Competitive-Advantage-Legal-strategies-for-success,en-GB,3982D356-CBCE-46D9-A97A-6F1B8E7D163C,Competitive Advantage Legal strategies for success,"Competitive Advantage: Legal strategies for success in Canada's sports industry	","On January 27, 2021, join Gowling WLG’s Entertainment and Sports Law Group for a live one-hour Q&A-style webinar as they tackle your questions on a variety of topics, including the legal rights and responsibilities of elite athletes and their teams.",~/getmedia/d1a70576-1777-4562-82dd-6eac754987c3/210119-legal-strategies-sports-industry.jpg.xml?width=930&height=450&ext=.jpg,female athlete jumping hurdles ,GWLG.Webinar,00:00.0,00:00.0,7 p.m.,8 p.m.,EST,0,NULL,"<p>Kick your sports law knowledge into high gear because next year&rsquo;s international competitions, including the Birmingham 2022 Commonwealth Games, will be here before you know it!</p>

<p>On January 27, 2021, join Gowling WLG&rsquo;s Entertainment and Sports Law Group for a live one-hour Q&amp;A-style webinar as they tackle your questions on a variety of topics, including the legal rights and responsibilities of elite athletes and their teams.</p>

<p>This timely and informative event will be moderated by Canadian former Olympic medallist turned management consultant,&nbsp;<a href=""https://clearday.ca/about"">Claire Carver-Dias</a>.</p>
",NULL,NULL,00:00.0,https://sites-gowlingwlg.vuturevx.com/103/5657/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,1262c308-04fd-4608-835b-a7950aba17be,NULL,38313a1e-07be-4fe8-b61e-008316e36186;b57f236a-ccfd-4a95-bc8a-efaeb1deea0d;7c982ff4-2b05-446c-9f31-9d84cd6e9912;c741442a-d784-49cd-908a-b821d31383dd,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/103/5657/landing-pages/event-registration-(blank-form).asp,Register now,GWLG.Canada;GWLG.Global,0,NULL,Gowling WLG Speakers,NULL,NULL,NULL,Entertainment & Sports Law,NULL,NULL,NULL,NULL,NULL
352,/Events/2020/Cross-border-legal-considerations-COVID-19,en-GB,0047B9B8-2F08-4170-A8F8-CB824152F87B,Cross-border legal considerations COVID-19,Cross-border legal considerations in the COVID-19 era,"On November 19, join lawyers from Venable LLP and Gowling WLG as they offer timely strategies designed to help your business navigate these and other areas.",~/getmedia/722c26b0-c335-4701-919d-df33ff5493ae/201103-cross-border-legal-consideration-covid-19.jpg.xml?width=930&height=450&ext=.jpg,Businessman using a laptop with close up on world globe,GWLG.Webinar,00:00.0,00:00.0,2 p.m.,3 p.m.,EST,0,1 hour,"<p>For companies whose operations and workforces span the Canadian and United States border, COVID-19 has presented a range of new obstacles --&nbsp;particularly with respect to corporate transactions, commercial contracts and employment law. On&nbsp;<strong>November 19</strong>, join lawyers from <a href=""https://www.venable.com/"" target=""_blank"">Venable LLP</a> and Gowling WLG as they offer timely strategies designed to help your business navigate these and other areas.</p>

<p>Topics will include:</p>

<ul>
	<li>Telecommuting issues and the duty to accommodate employees with disabilities</li>
	<li>U.S. requirements for releases of age discrimination claims within separation agreements</li>
	<li>Common mistakes U.S. employers make when implementing temporary layoffs/furloughs and separations in Canada</li>
	<li>Force Majeure and Impossibility of Performance claims</li>
	<li>New considerations in cross-border M&amp;A transactions</li>
</ul>

<h2>Venable Speakers</h2>

<ul>
	<li>
	<p><a href=""https://www.venable.com/professionals/b/jessie-f-beeber"">JESSIE BEEBER</a>, Partner, Venable</p>
	</li>
	<li>
	<p><a href=""https://www.venable.com/professionals/r/nicholas-m-reiter"">NICHOLAS REITER</a>, Partner, Venable</p>
	</li>
</ul>

<p><img alt="""" src=""~/getmedia/7db85313-7db5-4257-8d9c-23461efd5cd5/venable-llp-navy.jpg.xml?width=248&amp;height=54"" style=""width: 248px; height: 54px;"" /></p>

<h2><br />
CPD/CLE Details</h2>

<p><strong>LSO:</strong>&nbsp;This program is eligible for up to 1 hour of Substantive content<br />
<strong>Quebec:</strong>&nbsp;If you require a certificate of attendance, please contact&nbsp;<a href=""mailto:shannon.wadsworth@gowlingwlg.com"">Shannon Wadsworth</a><br />
<strong>LSBC:</strong>&nbsp;This program is eligible for up to 1 hour toward the LSBC&#39;s CPD requirement<br />
<strong>LSAB:</strong>&nbsp;This program is eligible for up to 1 hour of credit toward the CPD program</p>
",NULL,NULL,00:00.0,https://sites-gowlingwlg.vuturevx.com/106/5680/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,d8837737-40d2-4472-8a9e-ba4101ec2105;56646cda-20d7-43d4-b13c-886e1cd90c52,6b906235-110b-475e-88cd-4ddef78eb8b8,NULL,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/106/5680/landing-pages/event-registration-(blank-form).asp,Register now,GWLG.Canada;GWLG.UnitedStates,0,NULL,Gowling WLG speakers,t-white,NULL,NULL,"Employment, Labour & Equalities, Mergers & Acquisitions",COVID-19: How will coronavirus impact your business?,NULL,NULL,NULL,NULL
353,/Events/2020/Prevention-des-differends,fr-CA,9F60F126-4F63-4580-9378-4F3D2610FE3C,Prévention des différends,Prévention et préparation des différends ,"Le secteur de la construction est souvent le théâtre de conflits ou litiges, car il peut impliquer divers intervenants dans des projets s’échelonnant parfois sur plusieurs années. ",~/getmedia/1abb3ea8-699f-410a-9bae-0b2e11927bd7/Conference_Construction_Vuture_Header_FR.jpg.xml?width=600&height=180&ext=.jpg,NULL,GWLG.Webinar,00:00.0,15:00.0,9 h,10 h 15,EST,0,NULL,"<p>Le secteur de la construction est souvent le théâtre de conflits ou litiges, car il peut impliquer divers intervenants dans des projets s&rsquo;échelonnant parfois sur plusieurs années. Compte tenu des enjeux de responsabilité et du nombre important d&rsquo;obligations légales et contractuelles à respecter, il peut en découler des situations délicates et coûteuses en temps et en argent en cas de bris de contrats. Comment prévenir les différends? Quelles sont les étapes essentielles à suivre en vue d&rsquo;une réclamation ou d&rsquo;une défense? Venez écouter nos experts qui vous conseilleront sur les meilleures pratiques à adopter pour éviter ou préparer un litige en construction.</p>

<p>Places limitées, réservez la vôtre sans tarder!</p>

<h2>Programme</h2>

<ul>
	<li>9 h : Introduction&nbsp;</li>
	<li>9 h 05 : Prévention des différends (avant le début du projet et pendant le projet)</li>
	<li>9 h 30 : Préparation en vue d&#39;un litige</li>
	<li>9 h 55 : Période de questions&nbsp;</li>
	<li>10 h 15 : Conclusion&nbsp;</li>
</ul>

<h2>Pour nous joindre</h2>

<p>Julie-Han Angers<br />
Spécialiste, Événements<br />
<a href=""tel:+1%20514%20392-9553"" id=""lnkEventContactPhone"">T: +1 514 392-9553</a><br />
<a href=""mailto:julie-han.angers@gowlingwlg.com"" id=""lnkEventContactEmail"">julie-han.angers@gowlingwlg.com</a></p>
",NULL,NULL,00:00.0,mailto:julie-han.angers@gowlingwlg.com,NULL,RSVP,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,82475447-1cf2-4aa7-9a23-24e5b1a7b3bd;9cebeaf8-d868-4884-b035-03f46770de62,NULL,72577eef-0b0e-4623-8171-b90cc03322d2;d48c0cf0-5df9-4ea2-b74e-49c18d819647;ad6eb09b-4b4a-4e09-8ef2-af77a4f52f46,NULL,Webinaires,NULL,Webinaire,34471,GWLG.Events,"<p>Droit de la construction&nbsp;</p>
",~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,mailto:julie-han.angers@gowlingwlg.com,"Places limitées, réservez la vôtre sans tarder!",GWLG.Canada,0,NULL,Conférenciers,NULL,NULL,NULL,Litige et règlement de différends,NULL,NULL,NULL,NULL,NULL
354,/Events/2020/ThinkHouse-Designs-protection-what-you-need-to,en-GB,A09A60AE-4EAE-4A69-A82C-B42BA5126F7C,ThinkHouse - Designs protection: what you need to ,Designs protection: what you need to know now - ThinkHouse,"Join us for our Designs protection webinar where John Coldham, UK Head of Brands and Designs, will provide a guide to various aspects of design law and practice.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,44:56.0,45:00.0,10:30,11:30,GMT,1,1,"<p>John Coldham, UK Head of Brands and Designs, will provide a guide to various aspects of design law and practice, including:</p>

<ul>
	<li>Discussing his latest case on designs, <em>Freddy v Hugz</em>, which went to trial in October 2020.&nbsp; The case was rather unusual both in subject matter and some of the legal points, so John will draw out the key points so that other designers can learn how best to protect and enforce their own designs;</li>
	<li>Looking at Brexit. Brexit will have an impact across all aspects of IP, and designs are likely to be one of the most disrupted areas of IP. John will help you prepare for what&#39;s ahead, from how to ensure you qualify for the new regime from 1 January 2021, to knowing what you might already have;</li>
	<li>Giving some practical tips on how to maximise what you might get for free with unregistered designs, and some reminders on how best to register designs so that they are actually useful in court proceedings.</li>
</ul>

<p>During this live webinar we will answer as many questions as possible in the time available.</p>

<p>This webinar is part of the <a href=""~/en/thinkhouse/"" target=""_blank"">ThinkHouse</a>, Gowling WLG&#39;s programme for in-house counsel.</p>
","<p>This event is free of charge.</p>

<p>This event will run for one hour. Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession.</p>

<p>Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,30:00.0,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?rsid=jDvpjO2nfcsIYwvYySyMPITCL1zRXacxVbLdvVXdGxE&react=All%20Reactions,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,08b9a44c-bb26-4255-9779-296a124fcbee;aa72ea93-20f8-455a-8e77-6f6cea510684,a143cbfd-d333-42a0-89a6-7287894464f1,9ff8fd1a-c2f5-4084-b72e-4aa02fdf3312;37185b90-dc8a-429c-afba-77785e65ec7e,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/d2b9ca59-d716-4c60-abb1-472dd7eeec23/thinkhouse-primary-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/0363a899-4ad3-4e9e-a428-fbf0ebf9f31d/thinkhouse-primary-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,NULL,NULL,"Intellectual Property, Trademarks, Brands & Designs",ThinkHouse,NULL,NULL,NULL,NULL
355,/Events/2020/Cross-border-e-commerce-and-payments,en-GB,F0D69201-B5E3-4BB5-9F77-F3A2562FAF57,Cross-border e-commerce and payments,Cross-border e-commerce and payments: Perspectives from the U.S. and Canada,Join payments and e-commerce lawyers from Gowling WLG (Canada) and Venable LLP (U.S.) on December 2nd for a one-hour webinar to examine current trends in law enforcement and litigation impacting e-commerce retailers and the payments platforms that support them.,~/getmedia/8c373078-39a9-4b47-be3a-322367bd2a12/201123-cross-border-e-commerce.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Webinar,00:00.0,00:00.0,2 p.m.,3 p.m.,EST,1,1 hour,"<p>Join payments and e-commerce lawyers from Gowling WLG (Canada) and Venable LLP (U.S.) on December 2nd for a one-hour webinar to examine current trends in law enforcement and litigation impacting e-commerce retailers and the payments platforms that support them.</p>

<p>This webinar is designed for companies on either side of the Canada-U.S. border and will provide a framework to understand, compare, and contrast different jurisdictional approaches to advertising, marketing, sales, payment processing, money transmission and more.</p>

<p>Our panelists will discuss:</p>

<ul>
	<li><strong>The regulators: </strong>Who are the financial services and consumer protection regulators that shape risk management efforts in each jurisdiction? What are their current law enforcement priorities?</li>
	<li><strong>Jurisdictional reach:</strong> How do U.S. and Canadian regulators enforce their laws against foreign companies? How do cross-border regulators work together? Is there a role for industry self-regulation and can it be effective in a cross-border context?</li>
	<li><strong>Latest cases:</strong> Which law enforcement cases over the last year deserve the most attention in each jurisdiction? What key compliance obligations can be derived from the cases?</li>
	<li><strong>Litigation trends:</strong> When private plaintiffs take matters into their own hands, what circumstances are likely to generate class actions, and what are the latest litigation trends?</li>
	<li><strong>On the horizon:</strong> How might law enforcement and litigation priorities change in 2021? How will these changes impact business, legal, and risk management strategies in e-commerce?</li>
</ul>

<h2>Venable LLP Speakers:</h2>

<ul>
	<li>
	<p><a href=""https://www.venable.com/professionals/b/ellen-traupman-berge"" target=""_blank"">ELLEN BERGE</a>, Partner, Venable LLP</p>
	</li>
	<li>
	<p><a href=""https://www.venable.com/professionals/g/leonard-l-gordon"" target=""_blank"">LEONARD GORDON</a>, Partner, Venable LLP</p>
	</li>
</ul>

<p><img alt="""" src=""~/getmedia/e5614377-249c-4ba8-83f0-a747d08a9bac/venable-llp-navy.jpg.xml?width=295&amp;height=64"" style=""width: 295px; height: 64px;"" /></p>

<h2>CPD/CLE Details</h2>

<p><strong>LSO:</strong> This program is eligible for up to 1 hour of Substantive content<br />
<strong>Quebec: </strong>This program could be eligible for up to 1 hour of Substantive credits. If you indicate that a certificate is required on your registration form, we will email you your certificate after the session.<br />
<strong>LSBC:</strong> This program is eligible for up to 1 hour toward the LSBC&#39;s CPD requirement</p>
",NULL,NULL,13:51.0,https://sites-gowlingwlg.vuturevx.com/106/5714/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,NULL,NULL,bdad9de9-7ee2-4acc-bee7-e9e5bae30ed7;c0e26628-975e-4b0f-9061-d50239be6dda,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/106/5714/landing-pages/event-registration-(blank-form).asp,Register now,GWLG.Canada;GWLG.UnitedStates;GWLG.Global,0,NULL,Gowling WLG  speakers,t-white,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
356,/Events/2020/Developing-a-global-anti-counterfeiting-program,fr-CA,8B2A3A66-9FCC-4F6A-8D47-EE85D04871F3,Developing a global anti-counterfeiting program,Élaborer un programme mondial anti-contrefaçon pour la première fois (en anglais),"The availability in the market of counterfeit products can pose a major threat to the brand equity you’ve worked hard to establish. For organizations, both new and old, that have just begun to consider building a dedicated global anti-counterfeiting program, we know the task can seem daunting at first.",~/getmedia/ae0ac82b-788d-426c-9735-535302f36fe5/201020-IP-anti-counterfeiting-program.jpg.xml?width=930&height=450&ext=.jpg,street vendors selling accessories,GWLG.Webinar,00:00.0,00:00.0,"2 p.m. BT, 3 p.m. CET, 9 p.m. CST, 9 a.m.",NULL,EST,0,NULL,"<p>The availability in the market of counterfeit products can pose a major threat to the brand equity you&rsquo;ve worked hard to establish. For organizations, both new and old, that have just begun to consider building a dedicated global anti-counterfeiting program, we know the task can seem daunting at first. Indeed, from identifying &ldquo;at risk&rdquo; products to learning how to work with Customs authorities around the world, it can be difficult to know where to start.</p>

<p>Gowling WLG&rsquo;s global Intellectual Property Group is here to help. On Dec. 2, join members of our team as together they outline the key considerations that underpin an effective anti-counterfeiting program &ndash; one that is tailored to your business, wherever in the world you go.&nbsp;Immediately following the webinar, we invite you to connect one-on-one with members of our team in our virtual breakout rooms.</p>
",NULL,NULL,00:00.0,https://sites-gowlingwlg.vuturevx.com/106/5598/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,08b9a44c-bb26-4255-9779-296a124fcbee,NULL,2c25a2d7-1ea3-479b-8b72-0ca6d897a8d4;640695b8-5daf-4a5e-81d8-733c20d088e2;cba60c6d-eb6d-4fa1-b4b4-a4b8c0d0c080;8881287e-24c9-49cc-9a9b-985ad209d75d;49370d7b-1121-45da-90e6-96dcc50c1710;3fd4913d-3096-46ba-93b4-f365a5b14944;5f39b2b0-1232-4c03-abce-300149d85f9b,94cfe753-2567-43e9-bfa6-0b33ac107e93,Webinaires,NULL,Webinaire,34471,GWLG.Events,"<p><em>Lifecycle of a smart idea</em></p>
",~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/106/5598/landing-pages/event-registration-(blank-form).asp,Register now,GWLG.Canada;GWLG.Global;GWLG.UK,0,NULL,Gowling WLG conférenciers,NULL,NULL,NULL,Propriété intellectuelle,NULL,NULL,NULL,NULL,NULL
357,/Events/2020/Cross-border-e-commerce-and-payments,fr-CA,F0D69201-B5E3-4BB5-9F77-F3A2562FAF57,Cross-border e-commerce and payments,Le commerce électronique et les paiements transfrontaliers : points de vue du Canada et des États-Unis (en anglais),Join payments and e-commerce lawyers from Gowling WLG (Canada) and Venable LLP (U.S.) on December 2nd for a one-hour webinar to examine current trends in law enforcement and litigation impacting e-commerce retailers and the payments platforms that support them.,~/getmedia/8c373078-39a9-4b47-be3a-322367bd2a12/201123-cross-border-e-commerce.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Webinar,00:00.0,00:00.0,2 p.m.,3 p.m.,EST,1,1 hour,"<p>Join payments and e-commerce lawyers from Gowling WLG (Canada) and Venable LLP (U.S.) on December 2nd for a one-hour webinar to examine current trends in law enforcement and litigation impacting e-commerce retailers and the payments platforms that support them.</p>

<p>This webinar is designed for companies on either side of the Canada-U.S. border and will provide a framework to understand, compare, and contrast different jurisdictional approaches to advertising, marketing, sales, payment processing, money transmission and more.</p>

<p>Our panelists will discuss:</p>

<ul>
	<li><strong>The regulators:&nbsp;</strong>Who are the financial services and consumer protection regulators that shape risk management efforts in each jurisdiction? What are their current law enforcement priorities?</li>
	<li><strong>Jurisdictional reach:</strong>&nbsp;How do U.S. and Canadian regulators enforce their laws against foreign companies? How do cross-border regulators work together? Is there a role for industry self-regulation and can it be effective in a cross-border context?</li>
	<li><strong>Latest cases:</strong>&nbsp;Which law enforcement cases over the last year deserve the most attention in each jurisdiction? What key compliance obligations can be derived from the cases?</li>
	<li><strong>Litigation trends:</strong>&nbsp;When private plaintiffs take matters into their own hands, what circumstances are likely to generate class actions, and what are the latest litigation trends?</li>
	<li><strong>On the horizon:</strong>&nbsp;How might law enforcement and litigation priorities change in 2021? How will these changes impact business, legal, and risk management strategies in e-commerce?</li>
</ul>

<h2 data-mce-style=""text-size-adjust: none;"">Venable LLP&nbsp;Speakers:</h2>

<ul>
	<li>
	<p><a href=""https://www.venable.com/professionals/b/ellen-traupman-berge"">ELLEN BERGE</a>, Partner, Venable LLP</p>
	</li>
	<li>
	<p><a href=""https://www.venable.com/professionals/g/leonard-l-gordon"">LEONARD GORDON</a>, Partner, Venable LLP</p>
	</li>
</ul>

<h2 data-mce-style=""text-size-adjust: none;""><img alt="""" src=""~/getmedia/e5614377-249c-4ba8-83f0-a747d08a9bac/venable-llp-navy.jpg.xml?width=295&amp;height=64"" style=""width: 295px; height: 64px;"" /></h2>

<h2 data-mce-style=""text-size-adjust: none;"">CPD/CLE Details</h2>

<p data-mce-style=""text-size-adjust: none;""><strong>LSO:</strong>&nbsp;This program is eligible for up to 1 hour of Substantive content<br />
<strong>Quebec:&nbsp;</strong>This program could be eligible for up to 1 hour of Substantive credits. If you indicate that a certificate is required on your registration form, we will email you your certificate after the session.<br />
<strong>LSBC:</strong>&nbsp;This program is eligible for up to 1 hour toward the LSBC&#39;s CPD requirement</p>
",NULL,NULL,13:51.0,https://sites-gowlingwlg.vuturevx.com/106/5714/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,NULL,NULL,bdad9de9-7ee2-4acc-bee7-e9e5bae30ed7;c0e26628-975e-4b0f-9061-d50239be6dda,NULL,Webinaires,NULL,Webinaire,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/106/5714/landing-pages/event-registration-(blank-form).asp,Register now,GWLG.Canada;GWLG.UnitedStates;GWLG.Global,0,NULL,Gowling WLG conférenciers,t-white,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
358,/Events/2021/Employment-Update-Series,en-GB,0D7F365B-D9BF-4114-93E5-375DA3214C17,Employment Update Series,Employment Update Series,"Join us for a series of live webinars from our employment team in January and February, developed specifically for anyone dealing with HR and ER matters within their organisation, whether HR professionals, in-house lawyers or others.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,00:00.0,40:00.0,11:00,11:40,GMT,1,4,"<p>As you may know, we usually start the year with an employment update seminar looking forward to what the year ahead holds. Despite the flurry of activity around the Coronavirus Job Retention Scheme and other support for employers, we want to make sure you are up to speed on other topics we see coming up regularly too so you are well-equipped for the HR and ER challenges which 2021 brings. We hoped that we would be able to host you in person but as COVID-19 remains with us, we will be doing a series of webinars instead. We hope that spreading out the topics in this way means as many people as possible can join all of them.<br />
<br />
Join us for a series of live webinars from our employment team in January and February, developed specifically for anyone dealing with HR and ER matters within their organisation, whether HR professionals, in-house lawyers or others.<br />
<!--[if !supportLineBreakNewLine]--><br />
<!--[endif]-->Speaker - Hannah Swindle: Tuesday 26 January 2021 at 11:00 - 11:40<br />
<strong>Insolvency update &ndash; a practical guide to insolvency issues affecting employees</strong><br />
<br />
In the current climate, more and more companies are facing financial distress and entering some form of insolvency proceedings. This update is aimed at in-house counsel, HR or other advisers of both potential buyers of insolvent businesses and the customers of services where the supplier becomes insolvent. This webinar will provide you with a practical guide to the employment law issues which arise in situations of insolvency in order to help you mitigate potentially significant risk and liabilities.<br />
<br />
Speaker - Alice Loughney: Thursday 28 January 2021 at 11:00 - 11:40<br />
<strong>COVID-19 workplace testing: navigating the legal risks</strong><br />
<br />
As businesses grapple (again) with how to&nbsp;safely reopen their physical premises to employees post-lockdown, many are considering the option of private COVID-19 testing or other health checks for staff. Whilst there&#39;s currently no requirement for employers to carry out COVID-19 tests on their workforce, many organisations are considering doing so anyway, recognising that it may reassure employees and customers and ultimately provide a safer workplace. In this webinar, we&#39;ll help you weigh up the benefits of workplace testing against the legal risks.<br />
<br />
Speaker - Simon Stephen: Tuesday 2 February 2021 at 11:00 - 11:40<br />
<strong>Internal investigations &ndash; reducing risk and adding value</strong><br />
<br />
Handling internal investigations properly is a key part of getting to the heart of an issue and mitigating risk from litigation, wider employee relations, PR and regulatory concerns. Properly run investigations can also identify learning points and areas for positive change. This session will cover the key aspects of conducting an investigation to help you get to the bottom of the issue and manage associated risks.<br />
<br />
Speaker - Jonathan Chamberlain: Thursday 4 February 2021 at 11:00 - 11:40<br />
<strong>Taking tough decisions in tough times - senior executive exits</strong><br />
<br />
In challenging times, organisations may need to make changes at the top to ensure their business gets the leadership it needs. Jonathan Chamberlain will use his many years&#39; experience advising on board room issues to provide an update on tips, trends and how COVID-19 (might) make a difference to handling senior exits.<br />
&nbsp;</p>

<p>During the sessions, the speakers will provide useful information and practical tips on their respective topics, and will answer as many questions as possible in the time available.<br />
<br />
Please use the&nbsp;registration link to sign up for the sessions that you would like to attend.</p>
","<p>This event is free of charge.<br />
<br />
Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession.<br />
Please do get in touch if you have any further queries about this event and CPD.<br />
<br />
Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,00:00.0,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?RSID=r5fKyXNb7DouYUvbRiEcsn0qEPdwWlmn9GolPNorK9s,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,d8837737-40d2-4472-8a9e-ba4101ec2105,NULL,799cf040-59c7-4986-825a-e4b909364823;5466df28-982a-4f78-92d0-6e464942cbc1;72aac45e-2255-44e9-9b86-1944df287a6e;2d03f2db-bf91-45db-a827-470484fe7ddb;79205c59-28cb-4630-bd62-bf070ba732b0,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,40ECBAEA-9783-479A-8EB9-9D39F577C01D,Speaker(s),NULL,NULL,NULL,"Employment, Labour & Equalities",NULL,NULL,NULL,NULL,NULL
360,/Events/2020/M-A-in-uncertain-times-Distressed-M-A,en-GB,385D37F9-6647-46D2-A6A1-8D8655E47719,M&A in uncertain times: Distressed M&A,M&A in uncertain times: Distressed M&A,"When it comes to challenged businesses, especially during these uncertain times, M&A transactions are often difficult to navigate as all stakeholders are trying their best to protect their respective interests and investments. In these dynamic and fast moving situations, strategic advice is key.",~/getmedia/bdf2b142-34a1-4106-94a8-758c4e7d777b/201215-MA-uncertain-times-distressed.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Webinar,00:00.0,00:00.0,13:00,14:00,EST,1,1 hour,"<p>Cirque du Soleil, Mountain Equipment Co-Op, Brooks Brothers, Hertz, and cannabis companies across the country: the news is full of high-profile distressed transactions!</p>

<p>When it comes to challenged businesses, especially during these uncertain times, M&amp;A transactions are often difficult to navigate as all stakeholders are trying their best to protect their respective interests and investments. In these dynamic and fast moving situations, strategic advice is key.</p>

<p>On December 15, join the Gowling WLG team alongside KPMG&rsquo;s Katherine Forbes for a one-hour webinar on the ins and outs of distressed M&amp;A transactions. Topics will include:</p>

<ul>
	<li>Top Industry Trends</li>
	<li>What to expect: &ldquo;Ordinary Course&rdquo; vs. Court-Supervised Distressed M&amp;A Acquisitions</li>
	<li>Reverse Vesting Orders and Other Novel Structures</li>
	<li>Practical Considerations for Potential Purchasers<br />
	&nbsp;</li>
</ul>

<h2>CPD/CLE Details</h2>

<p><strong>LSO:</strong>&nbsp;This program is eligible for up to 1 hour of Substantive content<br />
<strong>Quebec:&nbsp;</strong>This program could be eligible for up to 1 hour of Substantive credits. If you indicate that a certificate is required on your registration form, we will email you your certificate after the session.<br />
<strong>LSBC:</strong>&nbsp;This program is eligible for up to 1 hour toward the LSBC&#39;s CPD requirement</p>
",NULL,NULL,25:07.0,https://sites-gowlingwlg.vuturevx.com/106/5729/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,56646cda-20d7-43d4-b13c-886e1cd90c52,NULL,2b3cf686-083f-496c-9166-982b0466384d;31589b1d-8773-40f3-b07d-0b7a1a5eee2f;1b16d33b-6132-403b-96c8-413ae88eb1ef;5eef2bbf-b67f-4703-96ac-e8afa97f05fa,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,Gowling WLG hosts,NULL,NULL,NULL,Mergers & Acquisitions,NULL,NULL,NULL,NULL,NULL
362,/Events/2021/UK-Annual-Patents-Review,en-GB,7F7580F1-4CD0-40D1-8A13-2E121B94A5EF,UK Annual Patents Review,Gowling WLG UK Annual Patents Review,"2020 has been an interesting year to say the least but the patents world continues to move forward and so do we, even if it is in a slightly different format.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,13:13.0,13:13.0,14:30,16:00,GMT,0,NULL,"<p>2020 has been an interesting year to say the least but the patents world continues to move forward and so do we, even if it is in a slightly different format.<br />
<br />
We are going virtual so that you don&#39;t miss out on our&nbsp;annual review and summary of 2020&#39;s important patent cases. Alex Brodie and Michael Carter will be joining Gordon Harris&nbsp;to deliver the statistics, provide an expert view on one of the big judgments of the year, <em>Unwired Planet v Huawei</em>, and will also give you a helicopter view of the cases to watch out for in 2021.<br />
<br />
2020 has seen some blockbusting Supreme Court decisions and a lot of interest further down the scale. The courts are taking a bold but commercially pragmatic approach to the role of patents. We also have the early performance of a new Patents Court judge to look at. There is plenty to excite all patent aficionados and patent business people.<br />
<br />
Our interactive session will give you the freedom to ask those burning questions and test out some of those theories you may have been pondering, and our speakers will be available in break out rooms after the event if you want to linger and ask some questions direct.<br />
<br />
We will also have a follow up event later next year to look at some of the topics of particular interest and to cover the international angles we would normally have covered in the full seminar, followed by a well-deserved drinks reception so we can all catch up with old friends and colleagues in person.</p>
","<p>This event is free of charge.<br />
<br />
Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession.<br />
Please do get in touch if you have any further queries about this event and CPD.<br />
<br />
Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,17:40.0,mailto:joy.litchfield@gowlingwlg.com?subject=Gowling WLG Annual Patents Review,NULL,Email us to register interest in this event,90A71CC3-07A3-4265-B0C4-C31612546237,NULL,08b9a44c-bb26-4255-9779-296a124fcbee;85764222-db69-43cf-af79-2c6fcbda9589,NULL,6767b2fc-7817-42ae-a54e-05595fe6c1cd;d960a618-a196-404c-b795-b884bc90e603;51f9af12-8e5e-4dde-8079-d56d710232ff,NULL,Webinar,NULL,Gowling WLG Webinar,44232,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Africa;GWLG.AustraliaNewZealand;GWLG.Austria;GWLG.BalticStates;GWLG.Belgium;GWLG.Brazil;GWLG.Canada;GWLG.CentralEasternEurope;GWLG.ChannelIslands;GWLG.China;GWLG.Cuba;GWLG.Cyprus;GWLG.France;GWLG.Germany;GWLG.Global;GWLG.HongKong;GWLG.India;GWLG.Indonesia;GWLG.Ireland;GWLG.Israel;GWLG.Italy;GWLG.Japan;GWLG.LatinAmerica;GWLG.Luxembourg;GWLG.Malta;GWLG.Monaco;GWLG.Netherlands;GWLG.NordicRegion;GWLG.Portugal;GWLG.Russia;GWLG.Singapore;GWLG.SouthKorea;GWLG.Spain;GWLG.Switzerland;GWLG.UAEDubai;GWLG.UK;GWLG.UnitedStates,0,95EC9477-4594-4332-A463-E612BD16CA0C,Speaker(s),NULL,NULL,NULL,"Intellectual Property Law, Patents",NULL,NULL,NULL,NULL,NULL
363,/Events/2021/ThinkHouse-Public-Sector-2021,en-GB,FAE44D7A-BFA6-47CF-B032-ECD8B4AD3915,ThinkHouse - Public Sector 2021,ThinkHouse Public Sector Virtual Seminar 2021,"ThinkHouse Public Sector Virtual Seminar 2021 provides content specifically tailored to the needs of GCs, Heads of Legal and in-house counsel working in government organisations and their affiliates.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,59:56.0,00:05.0,10:30,11:30,GMT,0,NULL,"<p>ThinkHouse Public Sector provides content specifically tailored to the needs of GCs, Heads of Legal and in-house counsel working in government organisations and their affiliates.</p>

<p>This year we will deliver a virtual seminar through a series of topical webinars in January and February 2021.</p>

<p>Please use the button on the right to register your interest in receiving full details of the virtual seminar when they are announced.</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession. Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,00:00.0,mailto:thinkhouse@gowlingwlgmail.com?subject=Public Sector Virtual Seminar 2021,NULL,Register your interest,2AC31727-4C97-4C05-A86C-595D3554B185,5ad41b49-d460-489a-95b9-84c854eda6f1,NULL,a143cbfd-d333-42a0-89a6-7287894464f1,NULL,NULL,Webinar,NULL,NULL,NULL,GWLG.Events,NULL,~/getmedia/5d57b23c-f4d3-44e3-a08e-7ee56360fd71/thinkhouse-snr-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/27fda93c-8849-4d7e-a292-bcc5eb1e7896/thinkhouse-snr-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,NULL,Government Contracting & Public Sector ,NULL,ThinkHouse,NULL,NULL,NULL,NULL
365,/Events/2021/ThinkHouse-Foundations-Spring-2021,en-GB,F4E05D39-C386-412F-8C6A-FF6E63640F74,ThinkHouse - Foundations Spring 2021,ThinkHouse Foundations Spring Virtual Seminar 2021,"Providing an additional source of support and advice that lawyers don't always get when starting out in-house, the ThinkHouse Foundations programme is there to guide you in the early stages of your legal career. ",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,15:33.0,15:42.0,NULL,NULL,GMT,0,NULL,"<p>ThinkHouse Foundations is Gowling WLG&#39;s tailored programme for in-house lawyers starting out in their careers. Drawing on the topics and insights focused on in ThinkHouse, we explore the opportunities and challenges faced by paralegals, trainees and lawyers of up to five years&#39; PQE.</p>

<p>Providing an additional source of support and advice that lawyers don&#39;t always get when starting out in-house, the ThinkHouse Foundations programme is there to guide you in the early stages of your legal career. We aim to provide you with valuable knowledge and guidance together with practical tips that are relevant to your role.</p>

<p>Led and developed by own up-and-coming lawyers, the agenda is informed by the challenges that you are likely to face both now and in future roles.</p>

<p>This year we will deliver a virtual seminar through a series of topical webinars throughout May 2021.&nbsp;</p>

<p>Please use the button on the right to register your interest in recieveing full details of the virtual seminar when they are anounced.&nbsp;</p>
","<p>This event is free of charge.<br />
<br />
Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession. Please do get in touch if you have any further queries about this event and CPD.<br />
<br />
Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,17:39.0,mailto:thinkhouse@gowlingwlgmail.com?subject=ThinkHouse Foundations Virtual Seminar 2021,NULL,Register your interest,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,NULL,a143cbfd-d333-42a0-89a6-7287894464f1,NULL,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/5c73cf2c-5ac2-465b-9dff-9377774e4d9b/thinkhouse-foundations-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/a1bd54ac-e5a3-4c45-8585-8ccbdce9e524/thinkhouse-foundations-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,NULL,NULL,NULL,ThinkHouse,NULL,NULL,NULL,NULL
366,/Events/2021/Verifying-validity,en-GB,52A2FEA2-ED2B-4765-820F-50C53CD68383,Verifying validity,Second medical use patents: Verifying validity,"In this live webinar, we will look at the validity of second medical use patents across the UK, Canada, Russia and China, and help you understand what to expect when the validity of a second medical use patent is called into question.",~/getmedia/aa93a713-47a3-4a6d-a11a-b78ccad189e0/201221-second-medical-use-patents.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Webinar,00:00.0,00:00.0,09:00,10:00,EST,1,1 hour,"<p>What does it take for a second medical use to be sufficiently disclosed? A list of indications in the application? Clinical data? Or something in-between?</p>

<p>How do Courts address inventiveness of a second medical use patent in light of the first medical use? Also, what issues arise with disclosure of clinical trial protocols?</p>

<p>On&nbsp;<strong>January 26</strong>, join members of Gowling WLG&#39;s global intellectual property team for a live webinar to get answers to these questions and more. We will look at the validity of second medical use patents across the UK, Canada, Russia and China, and help you understand what to expect when the validity of a second medical use patent is called into question.</p>

<p>Have questions that you would like us to address during the live webinar? Please submit them&nbsp;<a href=""https://www.surveymonkey.com/r/RGRCPNS"">here</a>&nbsp;by&nbsp;<strong>January 19</strong>&nbsp;as they will help to direct the discussion during the live webinar. Our presenters will answer as many submitted questions as possible.</p>

<p><em>*This program is eligible for up to 1 hour of CPD credits with the LSO and LSBC, and may be eligible for up to 1 hour of CPD/CLE credits in other jurisdictions. If you indicate that a certificate is required on your registration form, we will email you your certificate after the session.</em></p>

<hr />
<p><a href=""~/en/events/2021/understanding-infringement-and-enforcement/""><em>Register for part 1 of the series &raquo;</em></a></p>
",NULL,NULL,00:00.0,https://sites-gowlingwlg.vuturevx.com/106/5701/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,049c8249-7ff3-4ee3-a439-590f45fd5cff,08b9a44c-bb26-4255-9779-296a124fcbee;85764222-db69-43cf-af79-2c6fcbda9589,NULL,870774bf-534e-466c-be9a-e89fb3fb38bf;74b9d0c7-28ad-4afc-8e4c-194a33906a90;bff395d8-c1a9-4b07-8efb-081b3c447b4c;afdd0917-8c31-4023-b2b8-3a046e0ea3fc;bb6e4e98-2d11-42a4-a949-3c3e7a8225f0,NULL,Webinar,"John Norman, PhD, Jenny Davies, Alex Gloor, Vladislav Ugryumov, Jian Xu",Webinar,34471,GWLG.Events,"<p>Part 2</p>
",~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/106/5701/landing-pages/event-registration-(blank-form).asp,Register now,GWLG.Canada,0,NULL,Gowling WLG hosts,NULL,NULL,Life Sciences,"Intellectual Property Law, Patents",NULL,NULL,NULL,NULL,NULL
367,/Events/2021/Understanding-infringement-and-enforcement,en-GB,21AE5ED1-E33E-4134-9C70-1C296B9FE463,Understanding infringement and enforcement,Second medical use patents: Understanding infringement and enforcement,"As the scientific community continues to tackle some of the world’s most challenging diseases, research and innovation has led to the discovery of new uses for previously known medicines. Patents that cover these new uses are often called ""second medical use"" patents.",~/getmedia/aa93a713-47a3-4a6d-a11a-b78ccad189e0/201221-second-medical-use-patents.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Webinar,00:00.0,00:00.0,9 a.m.,10 a.m.,EST,1,1 hour,"<p>As the scientific community continues to tackle some of the world&rsquo;s most challenging diseases, research and innovation has led to the discovery of new uses for previously known medicines. Patents that cover these new uses are often called &ldquo;second medical use&rdquo; patents.</p>

<p>This form of patent protection has drawn much attention in recent years as courts around the world continue to adjudicate the complex questions that underlie them:</p>

<ul>
	<li>What form can second medical use claims take?</li>
	<li>What must be established for a second medical use patent to be infringed?</li>
	<li>How do you enforce a second medical use patent?</li>
	<li>Can you prevent off-label use?</li>
</ul>

<p>On&nbsp;<strong>January 13</strong>, join members of Gowling WLG&#39;s global Intellectual Property Group as they explore these and other questions in a live webinar. Focusing chiefly on the UK, Canada, Russia and China, we outline the key opportunities and obstacles surrounding second medical use patent protection, and help you understand what to expect when a second medical use patent reaches the court.</p>

<p><em>*This program is eligible for up to 1 hour of CPD credits with the LSO and LSBC, and may be eligible for up to 1 hour of CPD/CLE credits in other jurisdictions. If you indicate that a certificate is required on your registration form, we will email you your certificate after the session.</em></p>
",NULL,NULL,00:00.0,https://sites-gowlingwlg.vuturevx.com/106/5701/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,08b9a44c-bb26-4255-9779-296a124fcbee;85764222-db69-43cf-af79-2c6fcbda9589,NULL,NULL,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/106/5701/landing-pages/event-registration-(blank-form).asp,Register now,GWLG.Canada,0,NULL,Gowling WLG hosts,NULL,NULL,NULL,"Intellectual Property Law, Patents",NULL,NULL,NULL,NULL,NULL
369,/Events/2021/A-History-of-Indigenous-non-Indigenous-relations,en-GB,8498CE2C-DE99-480D-B370-90BD812F911F,A History of Indigenous non-Indigenous relations,Full Circle: A History of Indigenous and Non-Indigenous Relations in Canada,"Through the Full Circle presentation, participants will gain a better understanding of Indigenous people and learn how to place current events in their broader historical, social and legal context.",~/getmedia/b371fe26-f07c-484f-8187-aaf43ce0fa6d/indigenous-law_desktop.jpg.xml?width=1400&height=540&ext=.jpg,NULL,GWLG.SpecialEvents,NULL,NULL,NULL,NULL,EST,1,NULL,"<p>Recent events in Canada and abroad have prompted individuals and organizations alike to consider ways in which they can re-double efforts to help combat systemic societal racism and discrimination, and further advance equity, diversity, and&nbsp;inclusion. A key component of these efforts is education, including a commitment to gain a greater understanding of Indigenous people and their history.</p>

<p>In view of that, we are pleased to offer our highly regarded virtual seminar entitled <em>Full Circle: A History of Indigenous and Non-Indigenous Relations in Canada</em>. Developed and presented by members of Gowling WLG&#39;s award-winning <a href=""~/en/services/indigenous-law/"">Indigenous Law Group</a>, this presentation was originally produced for Gowling WLG professionals and staff, and has now been adapted for the legal teams, executives and employees of our valued clients.</p>

<p>Through the <em>Full Circle</em> presentation, participants will gain a better understanding of Indigenous people and learn how to place current events in their broader historical, social and legal context. Participating organizations will also meet a key element of the Truth and Reconciliation Commission of Canada&#39;s &quot;Call to Action&quot; directed at the private sector&mdash;namely to &quot;provide education for management and staff on the history of Aboriginal peoples, including the history and legacy of residential schools, the United Nations Declaration on the Rights of Indigenous Peoples, Treaties and Aboriginal rights, Indigenous law, and Aboriginal&ndash;Crown relations.&quot;</p>

<h2>Testimonial:</h2>

<blockquote>
<p><em>Max Faille and Aaron Christoff bring the impressive and deep knowledge of the Gowling WLG Indigenous law practice to life through their Full Circle presentation. Throughout the presentation, they bring together the legal basis, political motives and facts, supplemented by lived experience in some instances, to re-tell the story of how Indigenous people and Canada relate and connect, in a manner that is accessible to any person interested in learning more. It is emotional. It is enraging. It is compelling.</em><br />
<cite>- Bindu Cudjoe, General Counsel and Corporate Secretary, Canadian Western Bank Financial Group</cite></p>
</blockquote>

<blockquote>
<p><em>In order to understand the current political and social realities of Indigenous peoples in Canada, you need to understand the history. The Full Circle presentation offers an excellent review of that history, and should be required viewing for anyone who wants to go down the path of learning, understanding and reconciliation. Even as someone engaged in Indigenous issues for over two decades, I learned a lot; I know others will as well.</em><br />
<cite>- Grand Chief Peter Johnston, Council of Yukon First Nations</cite></p>
</blockquote>

<h2>Credits:</h2>

<p>The presentation runs for 1.5 or 2 hours and can be tailored to the needs and interests of your organization. The program has been approved for Continued Professional Development/Continuing Legal Education credits, including professionalism &amp; ethics and D&amp;I credits by various Canadian law societies.</p>

<p><a class=""c-button-red"" href=""mailto:van-marketing@gowlingwlg.com?subject=Full%20Circle:%20A%20History%20of%20Indigenous%20and%20Non-Indigenous%20Relations%20in%20Canada"" style=""font-size: large""><strong>Contact us to learn more</strong></a></p>
",NULL,NULL,39:25.0,mailto:van-marketing@gowlingwlg.com?subject=Full%20Circle:%20A%20History%20of%20Indigenous%20and%20Non-Indigenous%20Relations%20in%20Canada,NULL,Contact us to learn more,D14F09DD-55D9-4549-82E3-F2232888EBEA,NULL,264f3cac-2ddb-4c4e-8048-ee0d63d1e68d,NULL,NULL,NULL,Special events,NULL,Special presentation,48462,GWLG.Events,NULL,~/getmedia/b371fe26-f07c-484f-8187-aaf43ce0fa6d/indigenous-law_desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/caddfd54-2a7e-457f-b590-f86fc693910b/indigenous-law_mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,mailto:van-marketing@gowlingwlg.com?subject=Full%20Circle:%20A%20History%20of%20Indigenous%20and%20Non-Indigenous%20Relations%20in%20Canada,Contact us to learn more,GWLG.Canada;GWLG.Global,0,NULL,Speaker(s),NULL,NULL,NULL,Indigenous Law,NULL,NULL,NULL,NULL,NULL
373,/Events/2021/Defending-your-brand-online,en-GB,C6D29997-04E4-435B-940F-AE1178A360E8,Defending your brand online,Lifecycle of a Smart Idea | Defending your brand online: Global enforcement strategies for a new era,"On February 3, join members of Gowling WLG's global IP team as they use a case study to highlight strategies that brand owners can use to protect and enforce their rights online.",~/getmedia/033beb12-5191-4cd5-8639-22bae12bc7e1/210106-IP-Defending-brand-online_updated.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Webinar,00:00.0,00:00.0,"2 p.m. BT, 3 p.m. CET, 10 p.m. CET, 9 a.m.",NULL,EST,1,1 hour,"<p>As COVID-19 continues to accelerate the growth of ecommerce and other forms of virtual activity, protecting one&rsquo;s brand online has never been so critical. There are many different ways that infringing parties can impact the control of a brand online - including by registering domain names, creating social media accounts and even masquerading as the brand owner.</p>

<p>On February 3, join members of Gowling WLG&#39;s global IP team as they use a case study to highlight strategies that brand owners can use to protect and enforce their rights online.</p>

<p><strong>Post-webinar breakout rooms</strong></p>

<p>Immediately following the webinar, we invite you to join our panelists in virtual break out rooms where you will have the opportunity to ask direct questions and participate in a discussion with other attendees&nbsp;(Note: breakout rooms require Zoom version 5.3 or higher. If you have an older version and are interested in attending the breakout sessions, please contact&nbsp;<a data-mce-href=""mailto:shannon.wadsworth@gowlingwlg.com"" href=""mailto:shannon.wadsworth@gowlingwlg.com"">Shannon Wadsworth</a>). Login details will be sent out a day before the webinar.&nbsp;</p>

<p><em>*This program is eligible for up to 1 hour of&nbsp; substantive CPD credits with the LSO and LSBC, and may be eligible for up to 1 hour of CPD/CLE credits in other jurisdictions. If you indicate that a certificate is required on your registration form, we will email you your certificate after the session.</em></p>

<p><strong>Moderator</strong></p>

<ul>
	<li>Melissa Tehrani, Partner&nbsp;</li>
</ul>

<p><strong>Panelists</strong></p>

<ul>
	<li>
	<p>Alexander Dovgalyuk, Associate</p>
	</li>
	<li>
	<p>Le Rong, Leal Director</p>
	</li>
	<li>
	<p>Eric Macramalla, Partner</p>
	</li>
	<li>
	<p>Zoe Pearman, Associate</p>
	</li>
	<li>
	<p>Jia Ling Quek, Senior Associate</p>
	</li>
	<li>
	<p>Clémence Lapotre, Principal Associate</p>
	</li>
</ul>
",NULL,NULL,00:00.0,https://sites-gowlingwlg.vuturevx.com/106/5758/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,08b9a44c-bb26-4255-9779-296a124fcbee;aa72ea93-20f8-455a-8e77-6f6cea510684;063a4663-15ff-4950-8946-3944ee403426,NULL,6e30f114-ee86-423f-9384-d8a75d75077c;9243bd08-04f3-4576-8d6a-adec101a614e;4bcdddc1-a500-4dd4-ac52-fd05abee5ef7;b21907a3-4bf4-44c8-872d-1a061bcec83f;d03f4474-15e0-41a7-a007-5fa3f7547a82;7d21b147-e2c8-4bcf-80d9-a11b7b145a45,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada;GWLG.Global;GWLG.UK;GWLG.China,0,NULL,NULL,NULL,NULL,NULL,"Intellectual Property Law, Trademarks, Brands & Designs, Brand Protection",NULL,NULL,NULL,NULL,NULL
374,/Events/2021/Adjudicating-construction-disputes,en-GB,16F839DE-AA79-496F-9318-EE519CB7F2B1,Adjudicating construction disputes,Adjudicating construction disputes: New strategies for success,"This event covers the latest developments in the construction adjudication landscape, all while highlighting timely strategies designed to help you resolve disputes on the best possible terms.",~/getmedia/18f3cc5d-c960-4d1a-9fd4-e68d2507f286/210505-adjudicating-construction-disputes.jpg.xml?width=930&height=450&ext=.jpg,Aerial view of construction on building,GWLG.Webinar,00:00.0,00:00.0,2 p.m.,3 p.m.,EST,1,1 hour,"<p>Join members of Gowling WLG&#39;s Infrastructure &amp; Construction Sector Group as they outline the latest developments in the construction adjudication landscape, all while highlighting timely strategies designed to help you resolve disputes on the best possible terms.</p>

<p><em>*This program is eligible for up to 1 hour of substantive CPD credits with the LSO and LSBC, and may be eligible for up to 1 hour of CPD/CLE credits in other jurisdictions. If you indicate that a certificate is required on your registration form, we will email you your certificate after the session.</em></p>

<h2>Agenda</h2>

<table>
	<thead>
		<tr>
			<th scope=""col"">Time</th>
			<th scope=""col"">Activity</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>2:00 p.m.</td>
			<td>Welcome &amp; introductions/</td>
		</tr>
		<tr>
			<td>2:05 p.m.</td>
			<td>Summary of adjudication rules and processes</td>
		</tr>
		<tr>
			<td>2:15 p.m.</td>
			<td>Summary of ODACC update</td>
		</tr>
		<tr>
			<td>2:20 p.m.</td>
			<td>Lessons learned from adjudications</td>
		</tr>
		<tr>
			<td>2:45 p.m.</td>
			<td>Adjudication contract drafting</td>
		</tr>
		<tr>
			<td>2:53 p.m.</td>
			<td>Alberta&#39;s Bill 37 &amp; adjudication laws across the country</td>
		</tr>
		<tr>
			<td>2:55 p.m.</td>
			<td>Questions &amp; conclusion</td>
		</tr>
	</tbody>
</table>
",NULL,NULL,17:02.0,https://sites-gowlingwlg.vuturevx.com/106/5783/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,3fc2ca8c-9d19-44ba-a3a9-ad1ecb11e900,NULL,NULL,8de9fbe6-53f4-4edf-916a-973cd916b47b;5d3ffd40-9f34-464a-ac35-74035908df13;dd6fafb1-ecf7-491d-ac34-0e0f405cea0d;09c21218-8c9c-4d9f-86c7-b259255aea7f;80ca47fc-2ac0-4d0b-b736-285d8344a27a;a4cf60c6-613e-4604-bc4d-aac55528b3e3;21b43a95-c33f-4ac5-8755-4a0799707d9a,NULL,Webinar,"Neil S. Abbott, Jacqueline Armstrong Gates, Edward (Ted) G. Betts, Karina Labelle, Patrick Lavoie, Sahil Shoor, Christopher M. Stanek",Webinar,34471,GWLG.Events,"<p>Third annual adjudication workshop</p>
",~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/106/5783/landing-pages/event-registration-(blank-form).asp,Register now,GWLG.Canada,0,NULL,Speakers,NULL,NULL,Construction & Engineering,NULL,NULL,NULL,NULL,NULL,NULL
375,/Events/2021/US-Tech-Webinar-Series,en-GB,D4BD7600-0365-4174-A359-343AC33F1DA1,US Tech Webinar Series,US Tech Webinar Series,"In this exciting new Gowling WLG webinar series, we will explore a number of emerging industry trends and issues related to advising tech companies. The series is presented in conjunction with the Silicon Valley Association of General Counsel All Hands Virtual Meeting.",~/getmedia/b7e79cd3-7183-4e36-a791-56df532cc957/210118-us-tech-webinar-series.jpg.xml?width=930&height=450&ext=.jpg,two coworkers viewing computer screen,GWLG.Webinar,33:35.0,33:39.0,26 January 2021 at 3 p.m. EST and 28 January 2021 at 2 p.m.,NULL,EST,0,NULL,"<p>In this exciting new Gowling WLG webinar series, we will explore a number of emerging industry trends and issues related to advising tech companies. The series is presented in conjunction with the Silicon Valley Association of General Counsel All Hands Virtual Meeting.</p>

<p>Details on each session are below.</p>

<h2>Session 1: Cyber security 2021 &ndash; Threatscape &amp; protecting your internal business client</h2>

<h3>Jan. 21, 2021 from 3-4 p.m. ET</h3>

<p>The continuing global pandemic has led to a heightened risk of familiar types of cyber attacks, as well as an influx of new cyber threats. In this session, we will review the cyber threat landscape for 2021 and the anatomy of a cyber breach and related responses. We will also discuss how law firms can protect themselves, and how to best advise and protect their clients.</p>

<h3>Speakers</h3>

<ul>
	<li><a href=""https://sites-gowlingwlg.vuturevx.com/email_handler.aspx?sid=blankform&amp;redirect=https%3a%2f%2fgowlingwlg.com%2fen%2fpeople%2fbrent-arnold%2f%23panel-button1&amp;checksum=ED3F34F0"">Brent Arnold</a> - Partner, Gowling WLG (Toronto)</li>
	<li><a href=""https://sites-gowlingwlg.vuturevx.com/email_handler.aspx?sid=blankform&amp;redirect=https%3a%2f%2fgowlingwlg.com%2fen%2fpeople%2fhenry-harris%2f%23panel-button1&amp;checksum=17AE1E11"">Henry Harris</a> - Partner, Gowling WLG (Toronto)</li>
</ul>

<h2>Session 2: Cross-border &amp; international data privacy issues</h2>

<h3>Jan. 26, 2021 from 3-4 p.m. ET</h3>

<p>In many jurisdictions, changes in privacy law were common throughout 2020. This gave rise to new concerns and compliance issues for companies doing business abroad. In this session, we&#39;ll review what&#39;s changed in several jurisdictions (from the new California statute to the EU&#39;s Schrems II decision, and proposed changes to Canada&#39;s PIPEDA) and discus what these changes mean for American companies and the lawyers who advise them.</p>

<h3>Speakers</h3>

<ul>
	<li><a href=""https://sites-gowlingwlg.vuturevx.com/email_handler.aspx?sid=blankform&amp;redirect=https%3a%2f%2fgowlingwlg.com%2fen%2fpeople%2fbrent-arnold%2f%23panel-button1&amp;checksum=ED3F34F0"">Brent Arnold</a> - Partner, Gowling WLG (Toronto)</li>
	<li><a href=""https://sites-gowlingwlg.vuturevx.com/email_handler.aspx?sid=blankform&amp;redirect=https%3a%2f%2fgowlingwlg.com%2fen%2fpeople%2fhenry-harris%2f%23panel-button1&amp;checksum=17AE1E11"">Henry Harris</a> - Partner, Gowling WLG (Toronto)</li>
</ul>

<h2>Session 3:&nbsp;IP law and strategy for AI - A European perspective</h2>

<h3>Jan. 28, 2021 from 2-3&nbsp;p.m. ET</h3>

<p>Matt Hervey, Gowling WLG&#39;s UK Head of Artificial Intelligence and co-editor of <em>The Law of Artificial Intelligence</em> (Sweet &amp; Maxwell), will talk about IP law and strategy for AI in the context of evolving commercial, technical, legal and regulatory environments.</p>

<h3>Speakers</h3>

<ul>
	<li><a href=""https://sites-gowlingwlg.vuturevx.com/email_handler.aspx?sid=blankform&amp;redirect=https%3a%2f%2fgowlingwlg.com%2fen%2fpeople%2fmatt-hervey%2f%23panel-button1&amp;checksum=9610E7F4"">Matt Hervey</a> - Partner &amp; Head of Artificial Intelligence, Gowling WLG (London)</li>
	<li><a href=""https://sites-gowlingwlg.vuturevx.com/email_handler.aspx?sid=blankform&amp;redirect=https%3a%2f%2fgowlingwlg.com%2fen%2fpeople%2fneil-hendron%2f%23panel-button1&amp;checksum=C4984EA7"">Neil Hendron</a> - Partner, Gowling WLG (London)</li>
</ul>
",NULL,NULL,30:44.0,https://sites-gowlingwlg.vuturevx.com/106/5787/landing-pages/event-registration-(blank-form).asp,NULL,Register now,2AC31727-4C97-4C05-A86C-595D3554B185,cdfc9b50-74c2-4af5-9508-342935f81ccd,NULL,NULL,7c982ff4-2b05-446c-9f31-9d84cd6e9912;e7699c32-3759-4e7e-b810-53eb248fab9f;a198222e-fff0-47b3-bbca-b7c042e76a69;d8e49641-362e-4dfc-ba16-657ae21a7760,NULL,Webinar,"Brent J. Arnold, Henry A. Harris, Matt Hervey, Neil Hendron",Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/106/5787/landing-pages/event-registration-(blank-form).asp,Register now,GWLG.Canada;GWLG.Global;GWLG.UnitedStates,0,NULL,Gowling WLG speakers,NULL,NULL,Tech,NULL,NULL,NULL,NULL,NULL,NULL
376,/Events/2021/M-and-A-in-Uncertain-Times,en-GB,6C5B209F-56AB-4573-B3A4-163B3C5FF0FE,M and A in Uncertain Times,M&A in Uncertain Times,"When it comes to challenged businesses, especially during these uncertain times, M&A transactions are often difficult to navigate as all stakeholders are trying their best to protect their respective interests and investments. ",~/getmedia/0724b71d-6658-4c32-b086-93eb59568d1a/210201-MA-uncertain-times-distressed.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Webinar,00:00.0,00:00.0,12:00 PM,1:00 PM,EST,1,*This program is eligible for up to 1 hour of substantive CPD credits,"<p>Cirque du Soleil, Mountain Equipment Co-Op, Brooks Brothers, Hertz, and cannabis companies across the country: 2020 had its share of high-profile distressed transactions!</p>

<p>When it comes to challenged businesses, especially during these uncertain times, M&amp;A transactions are often difficult to navigate as all stakeholders are trying their best to protect their respective interests and investments. In these dynamic and fast moving situations, strategic advice is key.</p>

<p>On February 10, join the Gowling WLG team alongside KPMG&#39;s Katherine Forbes for a one-hour webinar on the ins and outs of distressed M&amp;A transactions. Topics will include:</p>

<ul>
	<li>Top Industry Trends</li>
	<li>What to expect: &quot;Ordinary Course&quot; vs. Court-Supervised Distressed M&amp;A Acquisitions</li>
	<li>Reverse Vesting Orders and Other Novel Structures</li>
	<li>Practical Considerations for Potential Purchasers</li>
</ul>

<h2>Moderator</h2>

<p><a href=""~/en/people/lorne-segal/"" target=""_blank"">Lorne Segal</a>&nbsp;Partner, Gowling WLG</p>

<h2>Panelists</h2>

<p>Geneviève Cloutier, Partner, Gowling WLG</p>

<p><a href=""https://home.kpmg/ca/en/home/contacts/f/katherine-forbes.html"" target=""_blank"">Katherine Forbes</a>, Partner, KPMG in Canada</p>

<p>Virginie Gauthier, Partner, Gowling WLG</p>

<p><a href=""~/en/people/faran-umar-khitab/"" target=""_blank"">Faran Umar-Khitab</a> Partner, Gowling WLG</p>

<p><em>*This program is eligible for up to 1 hour of substantive CPD credits with the LSO and LSBC, and may be eligible for up to 1 hour of CPD/CLE credits in other jurisdictions. If you indicate that a certificate is required on your registration form, we will email you your certificate after the session.</em></p>
",NULL,NULL,00:00.0,https://sites-gowlingwlg.vuturevx.com/106/5729/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,56646cda-20d7-43d4-b13c-886e1cd90c52,NULL,2b3cf686-083f-496c-9166-982b0466384d;31589b1d-8773-40f3-b07d-0b7a1a5eee2f;1b16d33b-6132-403b-96c8-413ae88eb1ef;5eef2bbf-b67f-4703-96ac-e8afa97f05fa,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,"<p>Distressed M&amp;A</p>
",~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/106/5729/landing-pages/event-registration-(blank-form).asp,Register for Webinar,NULL,0,0CDA2C7E-BFD7-48AD-991D-C46DBB4E55AB,Speakers,NULL,NULL,NULL,Mergers & Acquisitions,NULL,NULL,NULL,NULL,NULL
378,/Events/2021/Accommodation-at-work,en-GB,EFC819D9-50BE-487A-A3F4-A11EEF8E1756,Accommodation at work,Accommodation at work: Fostering a welcoming and compliant work environment for people with disabilities,This interactive webinar will cover how workplaces can best accommodate individuals with physical disabilities.,~/getmedia/ed86d67f-cded-4cea-a433-1f4e3c82a6fb/210210-accommodation-at-work.jpg.xml?width=930&height=450&ext=.jpg,event thumbnail with date and time of webinar,GWLG.Webinar,19:52.0,19:55.0,1 p.m.,3 p.m.,EST,1,2 hours,"<p>Presented by Gowling WLG and led by Advocacy Research Centre for Disabilities (ARCH) lawyers Lila Refaei and Kerri Joffe, this interactive webinar will cover how workplaces can best accommodate individuals with physical disabilities. After reviewing the legal landscape, participants will learn how to create a welcoming and compliant environment for staff, clients, and guests with physical disabilities, as well as apply theory to practice through case scenarios. Topics will include:</p>

<ul>
	<li>An overview of federal and Ontario provincial law requiring accommodation/prohibiting discrimination</li>
	<li>A look at the Convention on the Rights of Persons with Disabilities (United Nations)</li>
	<li>Best practices for accommodation<br />
	&nbsp;</li>
</ul>

<p><strong>LSO:</strong>&nbsp;This program is eligible for 2.0 hours of&nbsp;<strong>EDI Professionalism&nbsp;</strong>credit<br />
<strong>LSBC:</strong>&nbsp;This program is eligible for up to 2.0 hours of&nbsp;<strong>Professional Responsibility</strong>&nbsp;credit</p>

<p align=""center""><img alt=""EDI logo"" src=""~/getmedia/abc03f09-5df7-45f5-a4a0-02a77057932f/EDI-logo.png.xml"" /></p>

<p><em>This organization has been approved as an Accredited Provider of Professionalism Content by the Law Society of Ontario.</em></p>

<h2>Speakers</h2>

<p><a href=""https://gowlingwlg.com/en/people/p-a-neena-gupta/#panel-button1""><strong>Neena Gupta - Partner, Gowling WLG</strong></a></p>

<p>Neena Gupta is a partner in Gowling WLG&#39;s Waterloo Region and Toronto offices. Her practice focuses on a broad range of employment and human rights matters. She is known for her practical, cost-effective and focused approach to employment law and litigation. Neena has advised a broad range of employers, from start-ups to world-renowned multinationals, on all aspects of employment law, including employment offers and contracts, policies, compensation plans, cross-border employment and regulatory compliance in Canada.</p>

<p>Neena regularly advises employers on both compliance and litigation involving the Ontario Human Rights Code, the Canada Labour Code, the Canadian Human Rights Act, Accessibility for Ontarians with Disabilities Act (AODA) and the Employment Standards Act, 2001 (Ontario).</p>

<p><strong>Lila Refaie -&nbsp;Bilingual Intake Lawyer and Student Programs Lead, ARCH</strong></p>

<p>Lila was called to the bar in 2012, and joined ARCH Disability Law Centre in July 2017 as a staff lawyer, offering legal services related to disability rights to persons with disabilities across Ontario. Since 2019, she is the Bilingual Intake Lawyer and Student Programs Lead at ARCH. In addition to providing direct legal services to persons with disabilities, she also delivers public legal education and presentations to members of the legal profession on a variety of topics. Before ARCH, she was a staff lawyer at a community legal clinic in Prescott-Russell, practicing in poverty law. She also briefly practiced in family law and immigration law. Throughout her legal career, Lila has appeared before several administrative tribunals, the Superior Court of Justice and Divisional Court.</p>

<p><strong>Kerri Joffe - Staff Lawyer, ARCH</strong></p>

<p>Kerri is a human rights lawyer at ARCH Disability Law Centre. She has been involved in disability rights litigation at various tribunals and courts, including the Supreme Court of Canada. Kerri has presented law reform and policy submissions about disability law issues to legislative committees, governments, administrative bodies and the United Nations Committee on the Rights of Persons with Disabilities. She has authored law reform reports for the Law Commission of Ontario, the Canadian Human Rights Commission and the Government of Canada. Kerri has delivered extensive public legal education to diverse disability communities, and has guest lectured on disability rights issues. Before joining ARCH, Kerri worked on housing rights, social assistance programs, immigration and refugee issues, human trafficking, and as a law clerk to Superior Court judges. Kerri holds degrees in law and social work from McGill University.</p>
",NULL,NULL,19:42.0,https://sites-gowlingwlg.vuturevx.com/106/5834/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,d8837737-40d2-4472-8a9e-ba4101ec2105,NULL,39410df1-425d-4c6f-bea0-54d5e41e744a,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/106/5834/landing-pages/event-registration-(blank-form).asp,Register now,GWLG.Canada,0,NULL,Gowling WLG speaker,NULL,NULL,NULL,"Employment, Labour & Equalities",NULL,NULL,NULL,NULL,NULL
379,/Events/2021/Adjudicating-construction-disputes-1,en-GB,AC8D3317-563E-4F8D-B5FB-9DAAC9E9FFB8,Adjudicating construction disputes,Adjudicating construction disputes,"Join members of Gowling WLG’s Infrastructure and Construction sector groups as they outline the latest developments in the construction adjudication landscape, all while highlighting timely strategies designed to help you resolve disputes on the best possible terms.",~/getmedia/c880b5a4-9946-454c-bbe7-4e24de3a763e/210210-oatmeal-seminar-construction-disputes.jpg.xml?width=930&height=450&ext=.jpg,event thumbnail with date and time of webinar,GWLG.Webinar,47:47.0,47:50.0,9 a.m.,10 a.m.,EST,0,NULL,"<p>Join members of Gowling WLG&#39;s Infrastructure and Construction sector groups as they outline the latest developments in the construction adjudication landscape, all while highlighting timely strategies designed to help you resolve disputes on the best possible terms.</p>

<p>Register today to reserve your spot.</p>

<h2>Agenda</h2>

<table>
	<thead>
		<tr>
			<th scope=""col"">Time</th>
			<th scope=""col"">Activity</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>9:00 a.m.</td>
			<td>Welcome and introduction</td>
		</tr>
		<tr>
			<td>9:05 a.m.</td>
			<td>Summary of adjudication rules and processes</td>
		</tr>
		<tr>
			<td>9:15 a.m.</td>
			<td>Summary of ODACC update</td>
		</tr>
		<tr>
			<td>9:20 a.m.</td>
			<td>Lessons learned from adjudications</td>
		</tr>
		<tr>
			<td>9:45 a.m.</td>
			<td>Adjudication contract drafting</td>
		</tr>
		<tr>
			<td>9:50 a.m.</td>
			<td>Questions &amp; conclusion</td>
		</tr>
	</tbody>
</table>
",NULL,NULL,48:04.0,https://sites-gowlingwlg.vuturevx.com/105/5791/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,3fc2ca8c-9d19-44ba-a3a9-ad1ecb11e900;df411e0b-2c62-4a68-8456-2c7c1dd0b4da,NULL,NULL,5d3ffd40-9f34-464a-ac35-74035908df13;ebd724a1-47e5-4614-99a2-77ca95c42760;a4cf60c6-613e-4604-bc4d-aac55528b3e3,NULL,Webinar,"Jacqueline Armstrong Gates, Tristan Neill, Sahil Shoor",Webinar,34471,GWLG.Events,"<p><em>Oatmeal webinar series</em></p>
",~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/105/5791/landing-pages/event-registration-(blank-form).asp,Register now,GWLG.Canada,0,NULL,Speakers,NULL,NULL,"Construction & Engineering, Infrastructure",NULL,NULL,NULL,NULL,NULL,NULL
380,/Events/2021/Navigating-trade-agreements,en-GB,DB569363-6529-4CDC-AD65-9EE5914C0C2E,Navigating trade agreements,Navigating trade agreements: Legal considerations for your business customs compliance,"On February 25, join international trade lawyers from Gowling WLG, Crowell & Moring and Sanchez Devanny as they highlight the defining traits common to all trade agreements, and explore the related areas of legal and business risk for your company.",~/getmedia/bfed8c8e-8af1-4c46-ad81-f58ba825b891/21-02-11-webinar_navigating-trade-agreements_social_media.png.xml?width=930&height=486&ext=.png,photo of two business people shaking hands,GWLG.Webinar,07:50.0,07:57.0,2 p.m.,3 p.m.,EST,1,1 hour,"<p>On February 25, join international trade lawyers from Gowling WLG, Crowell &amp; Moring and Sanchez Devanny as they highlight the defining traits common to all trade agreements, and explore the related areas of legal and business risk for your company. Over the course of their discussion, the panel will delve into a number of practical challenges, risks, and opportunities that general counsel routinely face when implementing or enforcing compliance programs within their own organizations.</p>

<p><em>*This program is eligible for up to 1 hour of substantive CPD credits with the LSO and LSBC, and may be eligible for up to 1 hour of CPD/CLE credits in other jurisdictions. If you require a certificate of participation, please contact&nbsp;<a data-mce-href=""mailto:shannon.wadsworth@gowlingwlg.com"" href=""mailto:shannon.wadsworth@gowlingwlg.com"">Shannon Wadsworth</a><a href=""mailto:shannon.wadsworth@gowlingwlg.com"">.</a></em></p>

<h2>Speakers</h2>

<ul>
	<li><a data-mce-href=""https://sanchezdevanny.com/en/portfolio-galleries/turenna-ramirez-ortiz-2/"" href=""https://sanchezdevanny.com/en/portfolio-galleries/turenna-ramirez-ortiz-2/"" target=""_blank"">Turenna&nbsp;Ramírez-Ortiz</a>, Partner,&nbsp;Sánchez Devanny</li>
	<li><a data-mce-href=""https://www.crowell.com/Professionals/Maria-Vanikiotis"" href=""https://www.crowell.com/Professionals/Maria-Vanikiotis"" target=""_blank"">Maria Vanikiotis</a>, Associate, Crowell &amp; Moring</li>
	<li><a data-mce-href=""https://gowlingwlg.com/en/people/wendy-wagner/#panel-button1"" href=""https://gowlingwlg.com/en/people/wendy-wagner/#panel-button1"" target=""_blank"">Wendy Wagner</a>, Partner, Gowling WLG</li>
</ul>
",NULL,NULL,11:36.0,https://event.on24.com/wcc/r/3010391/3156EDBC3ED50766D10F03C0F630172D?partnerref=Gowling,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,bac2f2f8-09c0-4d06-b0c8-98d9567adfc7,NULL,afc382e9-2b75-4a26-9e20-0a8c68694164,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://event.on24.com/wcc/r/3010391/3156EDBC3ED50766D10F03C0F630172D?partnerref=Gowling,Register,GWLG.Canada;GWLG.Global,0,0CDA2C7E-BFD7-48AD-991D-C46DBB4E55AB,Gowling WLG speaker,NULL,NULL,NULL,International Trade and Customs,NULL,NULL,NULL,NULL,NULL
381,/Events/2021/ThinkHouse-COVID-19-and-the-workforce,en-GB,14831BB1-3C99-4C90-AB4B-2827C20613CB,ThinkHouse - COVID-19 and the workforce ,COVID-19 and the workforce ThinkHouse Spring Seminar 2021,"Employers have already prepared for the 'Big Return' at least once before, but that was before widespread testing was available and before anyone had received the vaccine.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,43:43.0,43:51.0,10:30,11:30,GMT,1,1,"<p>The way many of us work has changed dramatically, probably permanently. Employers have already prepared for the &#39;Big Return&#39; at least once before, but that was before widespread testing was available and before anyone had received the vaccine. To what extent can employers take advantage of those developments in making new plans? Plus, now we have been working this way for a year, what are employees&#39; expectations, what are their rights and what are employers&#39; obligations? Jonathan Chamberlain will help keep you ahead of the headlines.</p>

<p>During the session, the speakers will provide useful information and practical tips, and will answer as many questions as possible in the time available.</p>

<p>This webinar is part of the <a href=""~/en/thinkhouse/"">ThinkHouse</a> Spring Seminar 2021, developed specifically for senior in-house counsel. To register for this webinar or any others in the virtual seminar please use the registration button above.</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession. Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,30:00.0,https://marketing.uk.gowlingwlg.com/reaction/Home?RSID=bdQCz4VYcgKuu_fE6ImLxSTXs_d2lGoPCrhZh4JN7U5x9kwJEnBWQnHJMgkPj5bx,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,d8837737-40d2-4472-8a9e-ba4101ec2105,6b906235-110b-475e-88cd-4ddef78eb8b8;a143cbfd-d333-42a0-89a6-7287894464f1,79205c59-28cb-4630-bd62-bf070ba732b0;a9daf1f3-b2ff-43d9-b76e-b815bb73aace,d9d81b53-7f5f-4afa-8adf-2e80a1ccffb0;a7634ad4-ea04-49c7-b9ea-1a122a16ab46;ade84616-8442-4aa1-a903-5e7f004efa27,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/5d57b23c-f4d3-44e3-a08e-7ee56360fd71/thinkhouse-snr-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/27fda93c-8849-4d7e-a292-bcc5eb1e7896/thinkhouse-snr-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,NULL,NULL,"Employment, Labour & Equalities","COVID-19: How will coronavirus impact your business?, ThinkHouse",NULL,NULL,NULL,NULL
382,/Events/2021/Data-sharing-and-international-data-transfers,en-GB,ADE84616-8442-4AA1-A903-5E7F004EFA27,Data sharing and international data transfers,Data sharing and international data transfers | ThinkHouse Spring Seminar 2021,Jocelyn Paulley and Rocio de la Cruz will provide an update on what you need to know about data sharing and international data transfers in these turbulent times. ,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,43:43.0,43:51.0,10:30,11:30,GMT,1,1,"<p>Jocelyn Paulley and Rocio de la Cruz will provide an update on what you need to know about data sharing and international data transfers in these turbulent times. They will take you through the latest developments in the UK and Europe and have a look at what is happening in some other areas of the world too.</p>

<p>During the session, the speakers will provide useful information and practical tips, and will answer as many questions as possible in the time available.</p>

<p>This webinar is part of the <a href=""~/en/thinkhouse/"">ThinkHouse</a> Spring Seminar 2021, developed specifically for senior in-house counsel. To register for this webinar or any others in the virtual seminar please use the registration button above.</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession. Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,30:00.0,https://marketing.uk.gowlingwlg.com/reaction/Home?RSID=bdQCz4VYcgKuu_fE6ImLxSTXs_d2lGoPCrhZh4JN7U5x9kwJEnBWQnHJMgkPj5bx,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,2e9a87e2-3d2e-4d69-ba9c-06b4b358ca0d,a143cbfd-d333-42a0-89a6-7287894464f1,75a219e7-ea84-4ba2-9990-61b83de62877;a1fc3780-83d6-4133-9ed0-6fa6f7fffbd2;ad056fcd-7211-4da7-a9e2-30612d332954,14831bb1-3c99-4c90-ab4b-2827c20613cb;a7634ad4-ea04-49c7-b9ea-1a122a16ab46;d9d81b53-7f5f-4afa-8adf-2e80a1ccffb0,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/5d57b23c-f4d3-44e3-a08e-7ee56360fd71/thinkhouse-snr-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/27fda93c-8849-4d7e-a292-bcc5eb1e7896/thinkhouse-snr-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,NULL,NULL,Cyber Security & Data Protection Law,ThinkHouse,NULL,NULL,NULL,NULL
383,/Events/2021/ThinkHouse-Customs-and-trade-post-Brexit,en-GB,A7634AD4-EA04-49C7-B9EA-1A122A16AB46,ThinkHouse - Customs and trade post-Brexit ,Customs and trade post-Brexit  ThinkHouse Spring Seminar 2021,"With the transition period over and the Brexit deal agreed, UK importers and exporters are discovering the impact of customs on the UK/EU border.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,43:43.0,43:51.0,10:30,11:30,GMT,1,1,"<p>With the transition period over and the Brexit deal agreed, UK importers and exporters are discovering the impact of customs on the UK/EU border. Members of our Trade and Customs team&nbsp;will look at the key challenges and the emerging landscape.</p>

<p>During the session, the speakers will provide useful information and practical tips, and will answer as many questions as possible in the time available.</p>

<p>This webinar is part of the <a href=""~/en/thinkhouse/"">ThinkHouse</a> Spring Seminar 2021, developed specifically for senior in-house counsel. To register for this webinar or any others in the virtual seminar please use the registration button above.</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession. Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,30:00.0,https://marketing.uk.gowlingwlg.com/reaction/Home?RSID=bdQCz4VYcgKuu_fE6ImLxSTXs_d2lGoPCrhZh4JN7U5x9kwJEnBWQnHJMgkPj5bx,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,bac2f2f8-09c0-4d06-b0c8-98d9567adfc7,a143cbfd-d333-42a0-89a6-7287894464f1;603d9889-cb72-431a-8d55-60d68706837b,ad056fcd-7211-4da7-a9e2-30612d332954;2563a6d6-5f45-46c5-8698-e572a35f100b,14831bb1-3c99-4c90-ab4b-2827c20613cb;d9d81b53-7f5f-4afa-8adf-2e80a1ccffb0;ade84616-8442-4aa1-a903-5e7f004efa27,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/5d57b23c-f4d3-44e3-a08e-7ee56360fd71/thinkhouse-snr-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/27fda93c-8849-4d7e-a292-bcc5eb1e7896/thinkhouse-snr-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,NULL,NULL,International Trade and Customs,"ThinkHouse, How will Brexit affect your business?",NULL,NULL,NULL,NULL
384,/Events/2021/ThinkHouse-Human-rights-and-companies,en-GB,D9D81B53-7F5F-4AFA-8ADF-2E80A1CCFFB0,ThinkHouse - Human rights and companies ,Human rights and companies  ThinkHouse Spring Seminar 2021,Business compliance with human rights principles is increasingly moving from something that was a nice CSR issue to mention in publicity documents to a crucial element on boards' governance and risk agendas.,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,43:43.0,43:51.0,10:30,11:30,GMT,1,1,"<p>Business compliance with human rights principles is increasingly moving from something that was a nice CSR issue to mention in publicity documents to a crucial element on boards&#39; governance and risk agendas. Kieran Laird will explain why private companies should be worried about the human rights effects of their businesses and supply chains - including moves in the EU and elsewhere to make human rights due diligence a legal obligation on certain companies. He will explain what frameworks are relevant and how companies can begin to think about the relevant issues.</p>

<p>During the session, the speakers will provide useful information and practical tips, and will answer as many questions as possible in the time available.</p>

<p>This webinar is part of the <a href=""~/en/thinkhouse/"">ThinkHouse</a> Spring Seminar 2021, developed specifically for senior in-house counsel. To register for this webinar or any others in the virtual seminar please use the registration button above.</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession. Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,30:00.0,https://marketing.uk.gowlingwlg.com/reaction/Home?RSID=bdQCz4VYcgKuu_fE6ImLxSTXs_d2lGoPCrhZh4JN7U5x9kwJEnBWQnHJMgkPj5bx,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,200fa82c-4bb5-48ad-bea1-2a574dfecdab,a143cbfd-d333-42a0-89a6-7287894464f1,a1a4c901-7400-490f-8357-9db439f7dfee;a9daf1f3-b2ff-43d9-b76e-b815bb73aace,ade84616-8442-4aa1-a903-5e7f004efa27;14831bb1-3c99-4c90-ab4b-2827c20613cb;a7634ad4-ea04-49c7-b9ea-1a122a16ab46,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/5d57b23c-f4d3-44e3-a08e-7ee56360fd71/thinkhouse-snr-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/27fda93c-8849-4d7e-a292-bcc5eb1e7896/thinkhouse-snr-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,NULL,NULL,"Governance, Risk and Compliance (GRC)",ThinkHouse,NULL,NULL,NULL,NULL
385,/Events/2021/Regulating-vehicle-emissions-UK-Canada,en-GB,9777AF56-FC14-4152-B78C-3352066383C9,Regulating vehicle emissions UK Canada,Not just smoke and mirrors: Regulating vehicle emissions in the UK & Canada,"On March 11, join Gowling WLG’s Adam Chamberlain, Ben Stansfield and Alex Sadvari as they examine the emissions regulatory regimes in Canada, the EU and the UK, and highlight how the current rules operate. ",~/getmedia/d42b88b3-230d-4fbe-8b1c-45603dd9afe5/210223-Regulating-vehicle-emissions.png.xml?width=930&height=450&ext=.png,event thumbnail,GWLG.Webinar,00:00.0,00:00.0,09:00,10:00,EST,1,1 hour,"<p>Canadian emissions regulations are currently aligned with American standards; and following its departure from the European Union (EU), which has regulated automotive emissions since 2009, the UK has introduced UK-specific emissions rules, albeit based on the EU system.</p>

<p>So, what does this mean when it comes to regulating vehicle emissions in multiple jurisdictions? On <strong>March 11</strong>, join Gowling WLG's Adam Chamberlain, Ben Stansfield and Alex Sadvari as they examine the emissions regulatory regimes in Canada, the EU and the UK, and highlight how the current rules operate. They will share practical measures that manufacturers can implement to secure compliance urgently, review the current requirements as well as Canadian inspections and enforcement, and briefly touch on possible changes to emissions standards post U.S. election.</p>

<p><em>*This program is eligible for up to 1 hour of substantive CPD credits with the LSO and LSBC, and may be eligible for up to 1 hour of CPD/CLE credits in other jurisdictions. If you indicate that a certificate is required on your registration form, we will email you your certificate after the session.</em></p>
",NULL,NULL,27:10.0,https://sites-gowlingwlg.vuturevx.com/106/5872/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,de517572-4373-4b36-844b-18be93f6f9bc,064c02f0-ff64-42f8-8a71-c8dece3600fd;e652eb3b-cd9c-4c1e-9991-a4b38e5e1cd3,603d9889-cb72-431a-8d55-60d68706837b,29d7e340-a6af-49b5-b223-993a69997a78;5c5c6ec0-2ad9-4d03-887d-f87ab99dc202;1a0f69ce-d1e7-42e2-96d6-0dbdd570161e,NULL,Webinar,"Adam Chamberlain, Alex Sadvari, Ben Stansfield",Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/106/5872/landing-pages/event-registration-(blank-form).asp,Register now,GWLG.Canada,0,NULL,Gowling WLG hosts,NULL,NULL,Automotive,"Climate Change and Environmental Law, Environmental Litigation",How will Brexit affect your business?,NULL,NULL,NULL,NULL
387,/Events/2021/Strategies-for-buying-or-selling-a-business,en-GB,5C772B6F-39CA-4E22-B69A-F3497744B502,Strategies for buying or selling a business,Strategies for buying or selling a business in 2021,2021 is expected to be just as volatile or more than last year. Private corporations are being bought or sold at record rates. ,~/getmedia/5eeea53c-f77d-4274-9d76-4d476d04da11/210225-strategies-buying-selling-2021.jpg.xml?width=930&height=450&ext=.jpg,city skyscrapers in the financial district,GWLG.Webinar,31:52.0,32:05.0,12:00 p.m.,1:00 p.m.,EST,0,NULL,"<p>2021 is expected to be just as volatile or more than last year. Private corporations are being bought or sold at record rates. If you&#39;re planning to raise financing, retire or expand domestically or globally, and are concerned about pending tax issues, join BDO Canada and Gowling WLG for an in-depth discussion about how to prepare and manage these key decisions.</p>

<p>We&#39;ve assembled an expert panel of accounting and legal professionals who, quite literally, wrote the book on taxation for private companies. We&#39;ll deliver valuable tips to consider when preparing to buy or sell a business.</p>

<p>On March 2, join Gowling WLG and BDO for a one-hour webinar and learn about tax optimization and valuation to improve your outcomes when buying or selling a business. Topics will include:</p>

<ul>
	<li>State of today&#39;s market</li>
	<li>Preparing your business for sale</li>
	<li>Proper business valuation tips</li>
	<li>Why legal due diligence is important</li>
</ul>

<h2>Speakers</h2>

<ul>
	<li>RACHEL GERVAIS, Partner - GTA Tax Service Line Leader, BDO Canada</li>
	<li>DAVID ELRICK, Partner - Tax, BDO Canada</li>
	<li>RYAN FARKAS, Partner - M&amp;A and Capital Advisory Services, BDO Canada</li>
	<li>DAVID STEVENS, Partner - Tax, Gowling WLG</li>
	<li>ANITA YUK, Associate - Tax, Gowling WLG</li>
</ul>
",NULL,NULL,36:21.0,https://go.bdo.ca/StrategiesBuyingSellingBusiness2021RegistrationPage.html,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,4f997fc2-8233-4465-a01d-e68205aef05c;60bb1a30-82de-4038-aa38-9b01a87215c6;5e7a4c28-1f41-45d6-9485-1a23041b34f6,NULL,159cc9f9-3c5b-460e-930b-1abbec4ed250;e4ed17d0-5e95-4b52-9b2f-be5ec83fcf02,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://go.bdo.ca/StrategiesBuyingSellingBusiness2021RegistrationPage.html,Register now,GWLG.Canada;GWLG.Global,0,NULL,Gowling WLG speakers,NULL,NULL,NULL,"Corporate, M&A and Capital Markets, Capital Markets, Tax",NULL,NULL,NULL,NULL,NULL
388,/Events/2021/Mining-opportunities-in-Colombia,en-GB,B582E56C-EDCA-4201-B133-84C9AFD07291,Mining opportunities in Colombia,PDAC | Mining opportunities in Colombia 2021,The Canada Colombia Chamber of Investment and Trade and Gowling WLG are hosting an exciting virtual event leading up to this year's PDAC conference to uncover the opportunities in mining in Colombia this year.,~/getmedia/95e9362a-0acc-4e82-93b7-7d553e908521/210225-PDAC-mining-opportunities-002.jpg.xml?width=930&height=450&ext=.jpg,Green hills,GWLG.Webinar,50:01.0,50:11.0,9 a.m.,11 a.m.,EST,0,NULL,"<p>The&nbsp;<a href=""http://www.canadacolombiachamber.org/"" target=""_blank"">Canada Colombia Chamber of Investment and Trade</a>&nbsp;and&nbsp;<a href=""https://gowlingwlg.com/en/"" target=""_blank"">Gowling WLG</a>&nbsp;are hosting an exciting virtual event leading up to this year&#39;s PDAC conference to&nbsp;uncover the opportunities in mining in Colombia this year.</p>

<p>Our keynote speakers,&nbsp;Colombian Minister of Mines and Energy,&nbsp;Diego Mesa Puyo&nbsp;and President of the National Mining Agency,&nbsp;Juan Manuel Duran Prieto&nbsp;will provide a high-level briefing of the current state of the sector.</p>

<p>To complement the government presentations,&nbsp;a panel of experts will provide their views&nbsp; on this sector&#39;s dynamics and shed light on what they believe are the most important opportunities for businesses this year.</p>

<h2>Keynote Speakers:</h2>

<ul>
	<li>Diego Mesa Puyo - Colombian Minister of Mines and Energy</li>
	<li>Juan Manuel Duran Prieto - President of the National Mining Agenc</li>
</ul>

<h2>Panel:</h2>

<ul>
	<li>Eugene C. McBurney - Chairman &amp; CEO at Canaccord Genuity Emerging Markets</li>
	<li>Dale Craig - Vice President, Operations at B2Gold and Country Manager at Gramalote Colombia</li>
	<li>Fernando E. Ganoza Durant - CEO at Atico Mining Corporation</li>
	<li>Sarah Armstrong - President at Minerales Cordoba and Vice-President &amp; General Counsel at Cordoba Minerals</li>
	<li>France Tenaille - Partner &amp; Leader, Latin America at Gowling WLG (Moderator)</li>
</ul>
",NULL,NULL,52:08.0,https://events.r20.constantcontact.com/register/eventReg?oeidk=a07ehle890c47961e34&oseq=&c=&ch=,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,c0b8c1a8-73eb-4122-972f-dc5df852f68d,NULL,NULL,d78233a4-45b3-42d2-97bc-0db06ee57cd2,NULL,Webinar,France M. Tenaille,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://events.r20.constantcontact.com/register/eventReg?oeidk=a07ehle890c47961e34&oseq=&c=&ch=,Register now,GWLG.Canada;GWLG.Global;GWLG.LatinAmerica,0,NULL,Gowling WLG Speaker,NULL,NULL,Mining,NULL,NULL,NULL,NULL,NULL,NULL
389,/Events/2021/Cross-border-international-data-privacy-issues,en-GB,CB7F1EF8-285C-4F67-8991-F4236BE666C5,Cross-border & international data privacy issues,Cross-border & international data privacy issues,"In this session, we'll review what's changed in several jurisdictions (from the EU's Schrems II decision, to the proposed changes to Canada's PIPEDA) and discuss what these changes mean for American companies and the lawyers who advise them.",~/getmedia/0669cb0e-899d-4ccf-a32e-830e789a77a1/webinar-social-cross-border.jpg.xml?width=930&height=450&ext=.jpg,Computer,GWLG.Webinar,33:52.0,33:58.0,11:00 a.m.,12:00 p.m.,CST,0,NULL,"<p>Big changes to privacy laws around the world in 2020 and 2021 are giving&nbsp;rise to new concerns and compliance issues for companies doing business abroad. In this session,&nbsp;we&#39;ll review what&#39;s changed in several jurisdictions (from the EU&#39;s Schrems II decision,&nbsp;to the proposed changes to Canada&#39;s PIPEDA) and discuss what these changes mean for American companies and the lawyers who advise them.</p>
",NULL,NULL,36:00.0,https://sites-gowlingwlg.vuturevx.com/106/5865/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,cdfc9b50-74c2-4af5-9508-342935f81ccd,2e9a87e2-3d2e-4d69-ba9c-06b4b358ca0d,NULL,7c982ff4-2b05-446c-9f31-9d84cd6e9912;3ae82526-329e-41d7-8e7e-7b14a7af12bc,NULL,Webinar,"Brent J. Arnold, Todd J. Burke",Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/106/5865/landing-pages/event-registration-(blank-form).asp,Register now,GWLG.Canada;GWLG.UnitedStates,0,NULL,Speakers,NULL,NULL,Tech,Cyber Security & Data Protection Law,NULL,NULL,NULL,NULL,NULL
390,/Events/2021/Pension-Schemes-Act-2021,en-GB,37B34F60-4FDC-46A8-AD9B-82A3116D43F4,Pension Schemes Act 2021,Pension Schemes Act 2021- new legal changes impacting on employers with defined benefit pension schemes,Our pensions team will be examining the key aspects of the new laws with a particular focus on how corporates with defined benefit schemes can manage their pension risk.,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,10:59.0,11:07.0,11:00,11:45,BST,0,NULL,"<p>Our pensions team will be examining the key aspects of the new laws with a particular focus on how corporates with defined benefit schemes can manage their pension risk:</p>

<ul>
	<li>The Pensions Regulator&#39;s new regulatory regime</li>
	<li>What this means for corporates, including both business as usual and corporate transactions</li>
	<li>The new scheme funding approach for employers</li>
	<li>How best to adapt to the new changes, taking into account your approach to corporate governance and ongoing trustee engagement</li>
</ul>

<p>Paul Carberry and Liz Wood will provide an insight into the new changes and how they may affect you.</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession. Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,11:36.0,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?RSID=YoXeWRTVWP1BZBxYIHIsGhwpprE4QEO0GgpVMIitmljZbRbCTxiZddGGP0b2oNNZ,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,a19c4c5e-c05a-4fa5-95aa-c5a274279d8c,NULL,1831387a-7fe4-4dae-a75d-beb91a4afbc8;78b949bf-8838-4a2c-aa74-aa3ad35e87e3,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,95EC9477-4594-4332-A463-E612BD16CA0C,Speaker(s),NULL,NULL,NULL,Pensions,NULL,NULL,NULL,NULL,NULL
391,/Events/2021/Corruption-related-offences-and-enforcement,en-GB,AD810881-0C14-4446-BAE0-51107C3CCFF8,Corruption-related offences and enforcement,Corruption-related offences and enforcement: Key takeaways for Canadian business in Romania,"What are considered corruptible offences in both Romania and Canada? What are the trends and repercussions? Join us for this webinar to learn more. 
",~/getmedia/dbcc5bfe-f66e-487b-b608-fb573bc81871/210317-corruption-enforcement-takeaways-event.jpg.xml?width=929&height=488&ext=.jpg,event thumbnail with date and time of webinar,GWLG.Webinar,20:35.0,20:38.0,"15:30 EET, 08:30",NULL,EDT,0,NULL,"<p>What are the relevant corruption offences in Romania and Canada? What are the trends and repercussions?</p>

<p>On March 31, join the Canadian Business Exchange Association (CBEX), Kinstellar, The Embassy of Canada and Gowling WLG for &quot;Corruption-Related Offences and Enforcement: Key Takeaways for Canadian Business in Romania&quot;. Moderated by Victor Constantinescu, Managing Partner, Kinstellar Romania, and Vice-President, CBEX, this webinar promises to offer a timely and informative focus on best practices for Canadian investors in Romania.</p>

<p>Speakers will include:</p>

<ul>
	<li>Her Excellency Annick Goulet, Ambassador of Canada to Romania, Bulgaria and Republic of Moldova</li>
	<li>John Saroudis, President, CBEX</li>
	<li>Remus Codreanu, Partner, Kinstellar Bucharest, and Head of Compliance, Risk and Special Investigations Practice</li>
	<li>Glen Jennings, Gowling WLG (Toronto), Partner and Leader of the White Collar Defence &amp; Investigations Group</li>
	<li>Marc Tassé, University of Ottawa, Corporate Ethics and Financial Crimes Expert</li>
</ul>

<p>Register today using the button above!</p>

<p><img alt=""even thumbnail with speaker details and date"" src=""~/getmedia/dbcc5bfe-f66e-487b-b608-fb573bc81871/210317-corruption-enforcement-takeaways-event.jpg.xml?width=929&amp;height=488"" style=""width: 929px; height: 488px;"" /></p>
",NULL,NULL,22:39.0,https://register.gotowebinar.com/register/7729524275868125195,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,e3c87db8-3809-4b15-864b-9a1aadcd1e81,NULL,1af96e1d-70ea-4127-a64b-5aa72590536d,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://attendee.gotowebinar.com/register/7729524275868125195,Register now,GWLG.Canada,0,NULL,Gowling WLG speaker,NULL,NULL,NULL,White Collar Defence & Investigations,NULL,NULL,NULL,NULL,NULL
392,/Events/2021/In-house-counsel-need-to-prepare-for-end-of-LIBOR,en-GB,696FF97E-AA1E-4A20-9618-47D74BB4B6E0,In-house counsel need to prepare for end of LIBOR,Why all in-house counsel need to prepare for the end of LIBOR,In-house counsel need to prepare for end of LIBOR,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,26:16.0,26:23.0,10:30,11:30,BST,1,1,"<p>On 5 March 2021, the Financial Conduct Authority announced that immediately after 31 December 2021, LIBOR, the benchmark rate used as a key component of interest, default interest and other calculations in a wide range of contracts, will cease to be published.</p>

<p>Any exceptions will be very limited.</p>

<p>To ensure that your agreements remain functional and robust, any references to LIBOR in contracts expiring after the end of this year will need to be sense checked and amended where necessary.</p>

<p>This applies not only to loan and financing documents. It also catches any of your contracts where LIBOR may have been either deliberately or inadvertently referred to.</p>

<p>Security and guarantee documents will also need to be checked where contracts are changed, to ensure that your collateral remains valid. Any knock on impact under other contracts needs to be thought through too, in case consents, waivers or other consequential changes are necessary.</p>

<p>With so much to think about and limited time to action these changes, where do you start and how can you plan effectively for the end of LIBOR? Fortunately, help is at hand.</p>

<p>In this ThinkHouse session members from our Banking and Finance team will explain:</p>

<ul>
	<li>the new SONIA and other new &#39;risk free rates&#39; (RFRs) that are replacing LIBOR;</li>
	<li>how RFRs based interest calculations work;</li>
	<li>the operational issues using RFRs might create and what you need to be aware of before amending documents;</li>
	<li>why LIBOR phase out affects both banking and non-banking documents and what you need to think about if you see a LIBOR reference in any contract;</li>
	<li>how to approach and plan your LIBOR re-papering exercise successfully.</li>
</ul>

<p>Throughout this live webinar there will be the opportunity for you to ask questions, and our speakers will answer as many as possible in the time available.</p>

<p>If you would like to approach the end of LIBOR with greater confidence, have more informed conversations with your key stakeholders and manage end of LIBOR risk more effectively, then this session is for you!</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession. Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,30:00.0,https://marketing.uk.gowlingwlg.com/reaction/Home?RSID=gKvQXAgTJRn4LYlEEryepBrEkkxBIGJQMvlCm6Hk4aD3qcuddooOio7NKAIIK8NN,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,ccb3b009-ba81-4ff5-8e8a-9200813a2a54;549cbe28-f188-44cd-85c0-0f4e23a23817,a143cbfd-d333-42a0-89a6-7287894464f1,18f2c7d9-63ca-4a51-86f6-b722e3b2d834;b93c62c6-92d7-4124-9643-a559d656cfdf;b54eaed8-bca8-4861-959f-7b4e7e9bf8c4,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/5d57b23c-f4d3-44e3-a08e-7ee56360fd71/thinkhouse-snr-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/27fda93c-8849-4d7e-a292-bcc5eb1e7896/thinkhouse-snr-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,NULL,NULL,"Banking & Finance, Commercial",ThinkHouse,NULL,NULL,NULL,NULL
393,/Events/2021/DC-Excellence-Diversity-in-DC,en-GB,BCFD2A6B-62BC-4830-9B08-0DBE9EF0B1D0,DC Excellence: Diversity in DC,DC Excellence: Diversity in DC,Our next webinar in the DC Excellence series will explore diversity in DC.,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,20:29.0,20:40.0,11:00,12:00,BST,0,1 CPD,"<p>In a DC context diversity touches all aspects of what we do from the investments that we offer our members, engaging them at all stages of their savings journey and identifying areas of focus including the gender pensions savings gap. It also affects how we operate as an industry and as trustee boards. Getting these things right will help us improve member outcomes. Join our guest speakers for what is going to be an interesting and informative discussion. We will be joined by:</p>

<ul>
	<li><strong>Khalid Iqbal</strong>, Group Pensions Manager, VW MAN Truck &amp; Bus UK Ltd</li>
	<li><strong>Sharon Bellingham</strong>, Master Trust Lead at Scottish Widows</li>
	<li><strong>Charlotte Whitehead</strong>, an Associate in the pensions team and a member of our firm&#39;s independence governance committee</li>
	<li>And our very own <strong>Elaine Hiles</strong>, a Senior Associate in the pensions team will chair the session.&nbsp;</li>
</ul>

<p>If you have missed any of our previous webinars we have included the links so you can view them on demand.</p>

<ul>
	<li><a href=""~/en/insights-resources/on-demand-webinars/2020/dc-excellence-exploring-dc-to-dc-transfers/"">DC Excellence - Exploring DC to DC Transfers</a></li>
	<li><a href=""~/en/insights-resources/on-demand-webinars/2020/dc-excellence-education-in-the-workplace/"">DC Excellence - Education in the workplace</a></li>
	<li><a href=""~/en/insights-resources/on-demand-webinars/2021/dc-excellence-what-s-next-for-dc-schemes/"">DC Excellence - What&#39;s next for DC schemes?</a></li>
</ul>
",NULL,NULL,21:25.0,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?RSID=hswI0KXP7WwBpxVlSbirRRIkjqLLqZIOQJWLfZ7a60QHwx2vPkFV09heK3qeLO06,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,28b9078c-383d-431a-b8a9-dacac4b8bfb0;a19c4c5e-c05a-4fa5-95aa-c5a274279d8c,NULL,NULL,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,95EC9477-4594-4332-A463-E612BD16CA0C,Speaker(s),NULL,NULL,NULL,"Defined Contribution Pensions, Pensions",NULL,NULL,NULL,NULL,NULL
394,/Events/2021/ThinkHouse-Foundations-A-new-era-for-environmental,en-GB,9ABEB9DD-564B-450A-8509-174DF1D2AD79,ThinkHouse Foundations A new era for environmental,A new era for environmental law | ThinkHouse Foundations,In this live webinar Sam Cooper will provide an update on the latest changes in the ever-changing field of environmental law and explain why sustainability and climate change should be one of the top issues facing in-house counsel.,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,31:15.0,31:24.0,10:30,11:30,BST,1,1,"<p>ThinkHouse Foundations is Gowling WLG&#39;s tailored programme for in-house lawyers starting out in their careers. Drawing on the topics and insights focused on in ThinkHouse, we explore the opportunities and challenges faced by paralegals, trainees and lawyers of up to five years PQE.</p>

<p>Drawing on our practical experience, we aim to provide you with relevant knowledge on a range of topics that you can apply to your everyday work.</p>

<p>In this live webinar Sam Cooper will provide an update on the latest changes in the ever-changing field of environmental law and explain why sustainability and climate change should be one of the top issues facing in-house counsel.</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession. Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,30:00.0,https://marketing.uk.gowlingwlg.com/reaction/Home?RSID=bdQCz4VYcgKuu_fE6ImLxSTXs_d2lGoPCrhZh4JN7U6VRRe1mV2VBiZJy8slLESp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,064c02f0-ff64-42f8-8a71-c8dece3600fd,a143cbfd-d333-42a0-89a6-7287894464f1;002053f2-d69a-4ea6-b3d3-7c764821c000,8ab797c3-1b1b-43ce-bfac-7be8ea5940b9;6ad4fe15-41cb-46d7-98f9-5349159e2bf2,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/5c73cf2c-5ac2-465b-9dff-9377774e4d9b/thinkhouse-foundations-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/a1bd54ac-e5a3-4c45-8585-8ccbdce9e524/thinkhouse-foundations-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,NULL,NULL,Climate Change and Environmental Law,"ThinkHouse, Environmental, Social and Governance (ESG)",NULL,NULL,NULL,NULL
395,/Events/2021/ThinkHouse-Foundations-Brexit-what-you-need-to-kno,en-GB,AD778AF0-7423-4F3A-864A-14A13E9CA7D2,ThinkHouse Foundations Brexit what you need to kno,Brexit - what you need to know | ThinkHouse Foundations,"With the transition period over and the Brexit deal agreed we have brought together a panel of lawyers from across the firm to discuss some of the key points arising from Brexit in their practice areas, followed by an open audience Q&A session.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,31:15.0,31:24.0,10:30,12:00,BST,1,1.5,"<p>ThinkHouse Foundations is Gowling WLG&#39;s tailored programme for in-house lawyers starting out in their careers. Drawing on the topics and insights focused on in ThinkHouse, we explore the opportunities and challenges faced by paralegals, trainees and lawyers of up to five years&#39; PQE.&nbsp;</p>

<p>Drawing on our practical experience, we aim to provide you with relevant knowledge on a range of topics that you can apply to your everyday work.</p>

<p>With the transition period over and the Brexit deal agreed we have brought together a panel of lawyers from across the firm to discuss some of the key points arising from Brexit in their practice areas, followed by an open audience Q&amp;A session.<br />
<!--[endif]--></p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession. Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,30:00.0,https://marketing.uk.gowlingwlg.com/reaction/Home?RSID=bdQCz4VYcgKuu_fE6ImLxSTXs_d2lGoPCrhZh4JN7U6VRRe1mV2VBiZJy8slLESp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,NULL,a143cbfd-d333-42a0-89a6-7287894464f1;603d9889-cb72-431a-8d55-60d68706837b,9765839f-5255-4c73-842f-67128c9fb24d;1b8f59a2-4597-42a7-bbc9-c7e27a8f49ba;af2de2e6-e7e0-48e3-9314-093088c00463;4150ff2c-c5a6-4bd9-ba4e-37c9567eb4f7;23b62899-1b35-4596-9523-a2823336c23e;6ad4fe15-41cb-46d7-98f9-5349159e2bf2,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/5c73cf2c-5ac2-465b-9dff-9377774e4d9b/thinkhouse-foundations-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/a1bd54ac-e5a3-4c45-8585-8ccbdce9e524/thinkhouse-foundations-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,NULL,NULL,NULL,"ThinkHouse, How will Brexit affect your business?",NULL,NULL,NULL,NULL
396,/Events/2021/ThinkHouse-Foundations-Contract-law-update,en-GB,772BC634-5D01-4ED3-8341-5229CE768F6F,ThinkHouse Foundations Contract law update,Contract law update | ThinkHouse Foundations,"In this live webinar Sarah Townsend will provide a roundup of commercial contract law, reviewing the developments of the last 12 months and highlighting cases which should be at the top of your reference list.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,31:15.0,31:24.0,10:30,11:30,BST,1,1,"<p>ThinkHouse Foundations is Gowling WLG&#39;s tailored programme for in-house lawyers starting out in their careers. Drawing on the topics and insights focused on in ThinkHouse, we explore the opportunities and challenges faced by paralegals, trainees and lawyers of up to five years PQE.</p>

<p>Drawing on our practical experience, we aim to provide you with relevant knowledge on a range of topics that you can apply to your everyday work.</p>

<p>In this live webinar Sarah Townsend will provide a roundup of commercial contract law, reviewing the developments of the last 12 months and highlighting cases which should be at the top of your reference list.</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession. Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,30:00.0,https://marketing.uk.gowlingwlg.com/reaction/Home?RSID=bdQCz4VYcgKuu_fE6ImLxSTXs_d2lGoPCrhZh4JN7U6VRRe1mV2VBiZJy8slLESp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,549cbe28-f188-44cd-85c0-0f4e23a23817,a143cbfd-d333-42a0-89a6-7287894464f1,NULL,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/5c73cf2c-5ac2-465b-9dff-9377774e4d9b/thinkhouse-foundations-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/a1bd54ac-e5a3-4c45-8585-8ccbdce9e524/thinkhouse-foundations-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,NULL,NULL,Commercial,ThinkHouse,NULL,NULL,NULL,NULL
397,/Events/2021/InsurTech-North-2021-Conference,en-GB,AA2D2129-A01E-4E78-B6D6-B8AEEE929C70,InsurTech North 2021 Conference,InsurTech North 2021 Conference,"Connect with experts, learn from others and build relaionships at InsurTech North's virtual conference on April 22-23, 2021. ",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Conference,31:53.0,31:59.0,23 April 2021 at 8:30 a.m.,NULL,EDT,0,NULL,"<p>Connect with experts, learn from others and build relationships at InsurTech North&#39;s virtual conference from April 22-23, 2021.</p>

<h2>Facilitating innovation through principles-based regulation: A conversation</h2>

<p>Gowling WLG&#39;s <a href=""~/en/people/parna-sabet-stephenson/"" target=""_blank"">Parna Sabet-Stephenson</a> will be moderating an engaging&nbsp;panel on April 22 at 10 a.m. EDT which will focus on FSRA&#39;s shift to principles-based regulation. The panel will also cover&nbsp;what exactly the new regulation means and how the FSRA team is creating a regulatory enviorment for business and consumer choice.</p>

<p>Learn more about the <a href=""https://insurtechnorth.com/"" target=""_blank"">InsurTech North virtual conference</a> and <a href=""https://register.insurtechnorth.com/"" target=""_blank"">register today</a> &raquo;</p>
","<p>Gowling WLG are general sponsors of the InsurTech North 2021 conference.</p>
",NULL,50:35.0,https://insurtechnorth.com/ ,NULL,Register for the conference,36382405-0067-4169-8969-FEECBA0163A7,NULL,2ef996ea-428e-4dff-b4e3-4e43f5b3ddfb,NULL,3cb7b903-24be-4d44-b671-e9e9bb0f7efd,NULL,Conference,NULL,Virtual conference,49461,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://insurtechnorth.com/ ,Register for the conference,GWLG.Canada,0,NULL,Moderator,NULL,NULL,NULL,InsurTech,NULL,NULL,NULL,NULL,NULL
398,/Events/2021/International-Day-of-Pink,en-GB,0592725E-AF4F-4C67-B2A4-3B8F9D3D8F21,International Day of Pink,International Day of Pink: Insights from LGBTQ+ Individuals & Allies,"In recognition of the International Day of Pink, Gowling WLG and its OpenHouse network invite you to a panel discussion on LGBTQ+ issues featuring prominent members and allies of the Canadian and international LGBTQ+ communities.",~/getmedia/a1ea65cf-7c0c-4d0c-8506-4536d8d3a5b2/210407-day-of-pink.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Webinar,00:00.0,30:44.0,1:00 p.m. ET / 11:00 a.m. MT / 10:00 a.m. PT / 6:00 p.m. UK,NULL,Local time,0,NULL,"<p>In recognition of the International Day of Pink, Gowling WLG and its OpenHouse network invite you to a panel discussion on LGBTQ+ issues featuring prominent members and allies of the Canadian and international LGBTQ+ communities.</p>

<p>During this 90-minute session, our panelists will apply their unique perspectives to examine the challenges faced &ndash; and progress made &ndash; by LGBTQ+ individuals, both in the workplace and broader society. You will have the opportunity to hear candid, forward-looking insights from:</p>

<ul>
	<li><strong>Aisling Chin-Yee&nbsp;</strong>&amp;<strong>&nbsp;Chase Joynt&nbsp;</strong>&ndash; Co-directors,&nbsp;<em>No Ordinary Man</em></li>
	<li><strong>Katie Daniels</strong>&nbsp;&ndash; Managing Director, Head of Compliance, Canada Pension Plan Investment Board</li>
	<li><strong>Al Ramsay</strong>&nbsp;&ndash; Associate Vice President, Customer Strategy and Sales Development, Wealth and Business Banking, TD</li>
	<li><strong>Peter Lukasiewicz</strong>&nbsp;&ndash; CEO, Gowling WLG, Canada</li>
	<li><strong>Usman M. Sheikh</strong>&nbsp;&ndash; Partner and Leader, Blockchain &amp; Smart Contracts Group, Gowling WLG, Canada</li>
	<li><strong>D</strong><strong>avid Pea</strong><strong>r</strong><strong>son&nbsp;</strong>&ndash; Head of Diversity &amp; Inclusion, Gowling WLG, United Kingdom</li>
	<li><strong>Rebecca Jaremko Bromwich</strong>&nbsp;&ndash; Diversity &amp; Inclusion Manager, Gowling WLG, Canada</li>
</ul>

<h2>Complimentary film screening:&nbsp;<em>No Ordinary Man</em></h2>

<p>To help you engage with the issues raised by our panel and the International Day of Pink, guests who register to attend our session will also be provided with an exclusive complimentary ticket to view the acclaimed documentary&nbsp;<em>No Ordinary Man</em>&nbsp;(<em><a data-mce-href=""https://www.youtube.com/watch?v=72zK9dDotQQ"" href=""https://www.youtube.com/watch?v=72zK9dDotQQ"" target=""_blank"">view trailer</a></em>&nbsp;|&nbsp;<em><a data-mce-href=""https://nationalpost.com/entertainment/movies/no-ordinary-man-documents-the-life-and-death-of-a-trans-jazz-man"" href=""https://nationalpost.com/entertainment/movies/no-ordinary-man-documents-the-life-and-death-of-a-trans-jazz-man"" target=""_blank"">read the National Post review</a></em>).&nbsp;</p>

<p>Co-directed by Canadian filmmakers Aisling Chin-Yee and Chase Joynt, both of whom are speaking on our panel,&nbsp;<em>No Ordinary Man</em>&nbsp;explores the life of jazz musician Billy Tipton, whose transgender identity was revealed only after his death. The film is currently streaming through the&nbsp;<a data-mce-href=""https://insideout.ca/"" href=""https://insideout.ca/"" target=""_blank"">Inside Out Film Festival</a>, which has been exhibiting films made by and about LGBTQ+ individuals for more than thirty years.&nbsp;</p>

<p>Guests will be able to stream&nbsp;<em>No Ordinary Man</em>&nbsp;at any time between April 7-25, 2021, but we encourage you to view the film in advance so that you can benefit fully from the insights that will be offered by the co-directors as part of our discussion.</p>

<h2>RSVP&nbsp;</h2>

<p>We hope you will join us for what is sure to be an impactful discussion. Access to stream&nbsp;<em>No Ordinary Man</em>&nbsp;will be shared with you upon registration.</p>

<h3><a data-mce-href=""../landing-pages/event-registration-(blank-form).asp"" href=""https://gowlingwlg.vuturevx.com/landing-pages/event-registration-(blank-form).asp"" target=""_blank"" title=""Landing Pages/ Event Registration (Blank Form)""><strong><em>RSVP now&nbsp; &raquo;</em></strong></a></h3>
",NULL,NULL,43:15.0,https://sites-gowlingwlg.vuturevx.com/15/5967/landing-pages/event-registration-(website).asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,NULL,NULL,NULL,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/bcf296b8-9adc-4676-8142-802d158e5059/maroon_desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/5107a7cd-d900-4cb0-854b-9664f92fa1e5/maroon_mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,https://sites-gowlingwlg.vuturevx.com/15/5967/landing-pages/event-registration-(website).asp,Register now,GWLG.Canada;GWLG.UK,0,NULL,Speaker(s),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
400,/Events/2021/ThinkHouse-TUPE-Back-to-Basics-Overview,en-GB,9A09F306-6E30-4443-BD90-290791E866E0,ThinkHouse - TUPE Back to Basics Overview  ,ThinkHouse TUPE Club: Back to Basics Overview  ,"The webinar will cover the key issues that arise in a business sale or outsourcing, practical issues and how to avoid liability under TUPE.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,25:31.0,25:38.0,10:00,11:00,BST,1,1,"<p>Join us for our next <a href=""~/en/thinkhouse/"">ThinkHouse</a> TUPE Club webinar for in-house lawyers and HR professionals. This webinar is designed to help you master the fundamental concepts of TUPE if it&#39;s not something you regularly deal with, or want a refresher on how TUPE works.</p>

<p>The webinar will cover the key issues that arise in a business sale or outsourcing, practical issues and how to avoid liability under TUPE.</p>

<p>The issues covered in the workshop will include:</p>

<ul>
	<li>When does TUPE apply?</li>
	<li>What is the effect of TUPE?</li>
	<li>What are the TUPE information and consultation obligations?</li>
	<li>How to mitigate TUPE risks and protect your organisation if TUPE may apply</li>
</ul>

<p>Our speakers, Jane Fielding and Hannah Swindle will help you understand the key principles of TUPE and will answer as many questions as possible in the time available.</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession. Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,00:00.0,https://marketing.uk.gowlingwlg.com/reaction/Home?RSID=hswI0KXP7WwBpxVlSbirRRIkjqLLqZIOQJWLfZ7a60Rso7aBWFDZr7rhsfBvjqy_,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,d8837737-40d2-4472-8a9e-ba4101ec2105,a143cbfd-d333-42a0-89a6-7287894464f1,799cf040-59c7-4986-825a-e4b909364823;5466df28-982a-4f78-92d0-6e464942cbc1,696ff97e-aa1e-4a20-9618-47d74bb4b6e0;ad778af0-7423-4f3a-864a-14a13e9ca7d2;9abeb9dd-564b-450a-8509-174df1d2ad79;772bc634-5d01-4ed3-8341-5229ce768f6f,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/5d57b23c-f4d3-44e3-a08e-7ee56360fd71/thinkhouse-snr-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/27fda93c-8849-4d7e-a292-bcc5eb1e7896/thinkhouse-snr-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,NULL,NULL,"Employment, Labour & Equalities",ThinkHouse,NULL,NULL,NULL,NULL
401,/Events/2021/Canadian-ESG-for-In-House-Counsel-event,en-GB,811E72B0-BD58-4A08-BAC3-3858ECD1263F,Canadian ESG for In-House Counsel event,Canadian ESG for In-House Counsel,"Join our panel of professionals on Tuesday, May 4 for the first session of a three-part webinar series on ESG in Canada. This webinar will focus on Canadian ESG for In-House Counsel.",~/getmedia/162efc0e-e439-4cf7-a964-7aa68550d9f4/210409-ESG-inhouse-counsel.jpg.xml?width=930&height=450&ext=.jpg,Event thumbnail,GWLG.Webinar,00:00.0,00:00.0,12:00 p.m. ,1:00 p.m.,EDT,1,1 hour,"<p>Join our panel of professionals on Tuesday,&nbsp;May 4&nbsp;for the first session of a three-part webinar series on ESG in Canada. This webinar will focus on Canadian ESG for In-House Counsel. <a href=""~/en/people/stephen-pike/#panel-button1"" target=""_blank"">Stephen Pike</a>,&nbsp;a Toronto partner who has been&nbsp;advising on ESG issues for a number of years,&nbsp;will lead a panel of our professionals to address evolving ESG issues facing in-house counsel in Canada including:</p>

<ul>
	<li style=""margin-left:0.3in;"">What ESG trends in the workplace are unique to Canada?</li>
	<li style=""margin-left:0.3in;"">Why are Canadian climate change and climate risk factors becoming even more critical for in-house counsel?</li>
	<li style=""margin-left:0.3in;"">How are Canadian ESG factors becoming even more impactful on the role of in-house counsel in M&amp;A,&nbsp;due diligence,&nbsp;corporate reporting,&nbsp;and commercial contracts?</li>
</ul>

<p><em>*This program is eligible for up to 1 hour of substantive CPD credits with the LSO and LSBC, and may be eligible for up to 1 hour of CPD/CLE credits in other jurisdictions. If you indicate that a certificate is required on your registration form, we will email you your certificate after the session.</em></p>
",NULL,NULL,00:00.0,https://sites-gowlingwlg.vuturevx.com/95/5895/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,b305a1b6-d0ba-41dc-8e53-579fd077b871;ca126ce8-3692-45e8-a1be-aa0808b0c37e,NULL,03d6dce1-2df8-4f24-8e6b-d7bcda0b6509;39410df1-425d-4c6f-bea0-54d5e41e744a;2e743440-df8d-4a5d-b652-cdbce8339713;f63465af-154c-4d26-b2ab-6bc7cc79f913,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,"<p>Canadian ESG Series 2021</p>
",~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/95/5895/landing-pages/event-registration-(blank-form).asp,Register now,GWLG.Canada,0,0CDA2C7E-BFD7-48AD-991D-C46DBB4E55AB,Speakers,NULL,NULL,NULL,"Environmental, Social and Governance (ESG), Corporate",NULL,NULL,~/getmedia/0a2cb979-f1ca-4c8a-981f-dea78d9f56bd/210412-ESG-inhouse-counsel.jpg.xml?width=930&height=520&ext=.jpg,NULL,NULL
402,/Events/2021/Crypto-trading-platforms-Legal-developments,en-GB,B7CBD905-BCF3-4A3E-AB6E-AD4884A45E3E,Crypto trading platforms - Legal developments,Crypto trading platforms - Legal developments,"Crypto asset trading platforms, also known as ""cryptocurrency exchanges,"" are popular ways for investors to buy and sell various crypto assets, such as bitcoin and ether. This panel discussion will focus on several key legal and regulatory developments, both in Canada and around the world, relating to such platforms.",~/getmedia/dbae47a8-49b7-4a0c-bf40-4c673775dc1f/210422-blockchain-webinar-series.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Webinar,00:00.0,00:00.0,1:30 p.m.,2:30 p.m.,EDT,1,1 hour,"<p>Crypto asset trading platforms,&nbsp;also known as &quot;cryptocurrency exchanges,&quot;&nbsp;are popular ways for investors to buy and sell various crypto assets,&nbsp;such as bitcoin and ether. This panel discussion will focus on several key legal and regulatory developments,&nbsp;both in Canada and around the world,&nbsp;relating to such platforms.</p>

<p>The panel will also discuss the recently-issued CSA/IIROC Staff Notice 21-329 &ndash;&nbsp;<em>Guidance for Crypto-Asset Trading Platforms: Compliance with Regulatory Requirements</em>&nbsp;(March 29,&nbsp;2021),&nbsp;including its legal and practical implications.</p>

<h2>Speakers</h2>

<ul>
	<li><strong>Usman M. Sheikh&nbsp;</strong>- Partner &amp; National Head - Blockchain &amp; Smart Contract Group, Gowling WLG</li>
	<li><strong>Lorraine Mastersmith</strong>&nbsp;- Partner,&nbsp;Gowling WLG</li>
	<li><strong>And more...</strong></li>
</ul>

<p><em>*This program is eligible for up to 1 hour of&nbsp; substantive CPD credits with the LSO,&nbsp;LSBC and in Quebec, and may be eligible for up to 1 hour of CPD/CLE credits in other jurisdictions. If you indicate that a certificate is required on your registration form,&nbsp;we will email you your certificate after the session.</em></p>
",NULL,NULL,00:00.0,https://sites-gowlingwlg.vuturevx.com/106/5984/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,cdfc9b50-74c2-4af5-9508-342935f81ccd,20e41ca2-b15a-4815-bb5c-7cf60c18278f,db65f669-80d2-45f3-9161-2c00aa6f157e,300e471b-5cfe-45e3-bb75-6cc00bbdf27b;d2ac71e9-ae95-4802-98de-8a666d3d7255,NULL,Webinar,"Usman M. Sheikh, Lorraine Mastersmith",Webinar,34471,GWLG.Events,"<p>2021 Blockchain Webinar Series</p>
",~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/106/5984/landing-pages/event-registration-(blank-form).asp,Register now,GWLG.Canada,0,0CDA2C7E-BFD7-48AD-991D-C46DBB4E55AB,Gowling WLG Speakers,NULL,NULL,Tech,Blockchain & Smart Contracts,Blockchain & Cryptocurrency,NULL,~/getmedia/1bcbc5cf-767e-4cf0-bbd5-c8ba60b263c8/210422-blockchain-webinar-series-crypto-trading-platforms.jpg.xml?width=930&height=450&ext=.jpg,NULL,NULL
403,/Events/2021/Canadian-ESG-for-In-House-Counsel-event,fr-CA,811E72B0-BD58-4A08-BAC3-3858ECD1263F,Canadian ESG for In-House Counsel,Les normes ESG au Canada pour les juristes d’entreprise (en anglais),"Join our panel of professionals on Tuesday, May 4 for the first session of a three-part webinar series on ESG in Canada. This webinar will focus on Canadian ESG for In-House Counsel.",~/getmedia/162efc0e-e439-4cf7-a964-7aa68550d9f4/210409-ESG-inhouse-counsel.jpg.xml?width=930&height=450&ext=.jpg,Event thumbnail,GWLG.Webinar,00:00.0,00:00.0,12:00 p.m. ,1:00 p.m.,EDT,1,1 hour,"<p>Join our panel of professionals on Tuesday,&nbsp;May 4&nbsp;for the first session of a three-part webinar series on ESG in Canada. This webinar will focus on Canadian ESG for In-House Counsel. <a href=""~/en/people/stephen-pike/#panel-button1"" target=""_blank"">Stephen Pike</a>,&nbsp;a Toronto partner who has been&nbsp;advising on ESG issues for a number of years,&nbsp;will lead a panel of our professionals to address evolving ESG issues facing in-house counsel in Canada including:</p>

<ul>
	<li style=""margin-left:0.3in;"">What ESG trends in the workplace are unique to Canada?</li>
	<li style=""margin-left:0.3in;"">Why are Canadian climate change and climate risk factors becoming even more critical for in-house counsel?</li>
	<li style=""margin-left:0.3in;"">How are Canadian ESG factors becoming even more impactful on the role of in-house counsel in M&amp;A,&nbsp;due diligence,&nbsp;corporate reporting,&nbsp;and commercial contracts?</li>
</ul>

<p><em>*This program is eligible for up to 1 hour of substantive CPD credits with the LSO and LSBC, and may be eligible for up to 1 hour of CPD/CLE credits in other jurisdictions. If you indicate that a certificate is required on your registration form, we will email you your certificate after the session.</em></p>
",NULL,NULL,00:00.0,https://sites-gowlingwlg.vuturevx.com/95/5895/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,b305a1b6-d0ba-41dc-8e53-579fd077b871;ca126ce8-3692-45e8-a1be-aa0808b0c37e,NULL,03d6dce1-2df8-4f24-8e6b-d7bcda0b6509;39410df1-425d-4c6f-bea0-54d5e41e744a;2e743440-df8d-4a5d-b652-cdbce8339713;f63465af-154c-4d26-b2ab-6bc7cc79f913,NULL,Webinaires,NULL,Webinaire,34471,GWLG.Events,"<p>Canadian ESG Series 2021</p>
",~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/95/5895/landing-pages/event-registration-(blank-form).asp,Register now,GWLG.Canada,0,0CDA2C7E-BFD7-48AD-991D-C46DBB4E55AB,Speakers,NULL,NULL,NULL,"Environnement, société et gouvernance (ESG), Droit des entreprises",NULL,NULL,~/getmedia/0a2cb979-f1ca-4c8a-981f-dea78d9f56bd/210412-ESG-inhouse-counsel.jpg.xml?width=930&height=520&ext=.jpg,NULL,NULL
405,/Events/2021/ThinkHouse-Foundations-Brexit-what-you-need-to-kno,fr-CA,AD778AF0-7423-4F3A-864A-14A13E9CA7D2,ThinkHouse Foundations Brexit what you need to kno,Brexit – ce qu'il faut savoir | Le programme ThinkHouse Foundations,"With the transition period over and the Brexit deal agreed we have brought together a panel of lawyers from across the firm to discuss some of the key points arising from Brexit in their practice areas, followed by an open audience Q&A session.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,31:15.0,31:24.0,10:30,12:00,BST,1,1.5,"<p>ThinkHouse Foundations is Gowling WLG&#39;s tailored programme for in-house lawyers starting out in their careers. Drawing on the topics and insights focused on in ThinkHouse, we explore the opportunities and challenges faced by paralegals, trainees and lawyers of up to five years&#39; PQE.&nbsp;</p>

<p>Drawing on our practical experience, we aim to provide you with relevant knowledge on a range of topics that you can apply to your everyday work.</p>

<p>With the transition period over and the Brexit deal agreed we have brought together a panel of lawyers from across the firm to discuss some of the key points arising from Brexit in their practice areas, followed by an open audience Q&amp;A session.<br />
<!--[endif]--></p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession. Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,30:00.0,https://marketing.uk.gowlingwlg.com/reaction/Home?RSID=bdQCz4VYcgKuu_fE6ImLxSTXs_d2lGoPCrhZh4JN7U6VRRe1mV2VBiZJy8slLESp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,NULL,a143cbfd-d333-42a0-89a6-7287894464f1;603d9889-cb72-431a-8d55-60d68706837b,9765839f-5255-4c73-842f-67128c9fb24d;1b8f59a2-4597-42a7-bbc9-c7e27a8f49ba;af2de2e6-e7e0-48e3-9314-093088c00463;4150ff2c-c5a6-4bd9-ba4e-37c9567eb4f7;23b62899-1b35-4596-9523-a2823336c23e;6ad4fe15-41cb-46d7-98f9-5349159e2bf2,NULL,Webinaires,NULL,Webinaire,34471,GWLG.Events,NULL,~/getmedia/5c73cf2c-5ac2-465b-9dff-9377774e4d9b/thinkhouse-foundations-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/a1bd54ac-e5a3-4c45-8585-8ccbdce9e524/thinkhouse-foundations-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,NULL,NULL,NULL,ThinkHouse,NULL,NULL,NULL,NULL
407,/Events/2021/The-Role-of-Hydrogen-in-Canada,en-GB,DD1C52F4-4EB5-4764-BBBC-7CBFC990C876,The Role of Hydrogen in Canada,CANCELLED: The Role of Hydrogen in Canada,An informative session focusing on the opportunities and challenges associated with hydrogen in Canada. Gowling WLG's Myron Dzulynsky will be joined by three industry professionals to discuss a number of questions regarding this emerging market.,~/getmedia/6e5075f2-36fe-4603-97cf-a7e381fb05ad/210408-hydrogen-molecule.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Webinar,00:00.0,00:00.0,12:00 p.m.,1:00 p.m.,EDT,1,1 hour,"<p><strong>CANCELLED</strong></p>

<p><strong>We regret to advise all our registrants of today&rsquo;s webinar, &ldquo;The Role of Hydrogen in Canada&rdquo;, that we have made the difficult decision to postpone the event due to unforeseen circumstances affecting a number of our speakers. Please stay tuned for the announcement of the new date and &nbsp;time.</strong></p>

<p>An informative session focusing on the opportunities and challenges associated with hydrogen in Canada. Gowling WLG&#39;s Myron Dzulynsky will be joined by three industry professionals to discuss a number of questions regarding this emerging market.</p>

<p>The team will dive into&nbsp;federal and provincial policies,&nbsp;discuss how the government can help&nbsp;make the hydrogen&nbsp;industry a success and what we can learn from other jurisdictions in terms of leadership in the industry.</p>

<h2>Speakers</h2>

<ul>
	<li>
	<p><strong>Myron Dzulynsky&nbsp;</strong>-&nbsp;Partner, Gowling WLG</p>
	</li>
	<li>
	<p><strong>Nicolas Bossé</strong>&nbsp;- Senior Vice President,&nbsp;Strategy &amp; Growth Initiatives, Evolugen</p>
	</li>
	<li>
	<p><strong>Rob Harvey</strong>&nbsp;- Director,&nbsp;Energy Infrastructure - Fuel Cell and Hydrogen Technologies, Cummins Inc.</p>
	</li>
	<li>
	<p><strong>Joy Roberts</strong>&nbsp;- EA Design Specialist,&nbsp;Unilia Fuel Cell Inc.</p>
	</li>
</ul>

<p><em>*This program is eligible for up to 1 hour of substantive CPD credits with the LSO, LSBC and in Quebec, and may be eligible for up to 1 hour of CPD/CLE credits in other jurisdictions.</em></p>
",NULL,NULL,40:44.0,https://sites-gowlingwlg.vuturevx.com/95/5960/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,f1e960f5-8231-4c56-b7bf-9898ebb538c5,NULL,NULL,72527f9d-ef8e-4c63-94fc-a0566d048f22,NULL,Webinar,Myron B. Dzulynsky,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/95/5960/landing-pages/event-registration-(blank-form).asp,Register now,GWLG.Canada,0,0CDA2C7E-BFD7-48AD-991D-C46DBB4E55AB,Gowling WLG Speaker,NULL,NULL,Energy,NULL,NULL,NULL,~/getmedia/78ff9837-dd3a-48a8-8ed5-1fed53cfd499/210423-Hydrogen-webinar.png.xml?width=930&height=450&ext=.png,NULL,NULL
408,/Events/2021/Pension-Schemes-and-climate-change,en-GB,F146E2BB-56D0-4FE3-B550-467540BC19B5,Pension Schemes and climate change,Pension Schemes and climate change – member engagement,"The Pension Schemes Act 2021 received Royal Assent on the 11 February. It sets the scene for the continuing focus of UK Pension Schemes on, in particular, the ""E"" in ""ESG"". Regulations made under the PSA 2021 are expected later this year which will require trustees to consider in detail how climate change will affect their scheme and investments. There will also be new obligations to publish information in line with the Task Force on Climate-related Disclosures (or TCFD) recommendations.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,27:58.0,28:01.0,12:00,13:00,BST,0,NULL,"<p>The Pension Schemes Act 2021 received Royal Assent on the 11 February. It sets the scene for the continuing focus of UK Pension Schemes on, in particular, the &quot;E&quot; in &quot;ESG&quot;. Regulations made under the PSA 2021 are expected later this year which will require trustees to consider in detail how climate change will affect their scheme and investments. There will also be new obligations to publish information in line with the Task Force on Climate-related Disclosures (or TCFD) recommendations.</p>

<p>Guest speakers are Rona Train and William Chan from Hymans Robertson and are joining Gowling WLG to run a webinar to help trustees understand their obligations under the PSA 2021 to assess and manage the risks and opportunities associated with climate change, and how ESG could be real opportunity to increase member engagement.</p>
",NULL,NULL,28:15.0,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?RSID=hswI0KXP7WwBpxVlSbirRRIkjqLLqZIOQJWLfZ7a60R02FslGMnMJzUCuhjIiYCs ,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,a19c4c5e-c05a-4fa5-95aa-c5a274279d8c;b305a1b6-d0ba-41dc-8e53-579fd077b871,NULL,61e5a3f0-3674-4415-a82c-4de6ad7bbf2a;c35a7ba7-40bb-474d-8a7a-a7897e0c7332,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,95EC9477-4594-4332-A463-E612BD16CA0C,Speaker(s),NULL,NULL,NULL,"Pensions, Environmental, Social and Governance (ESG)",NULL,NULL,NULL,NULL,NULL
412,/Events/2021/Opportunities-in-infrastructure,en-GB,9287BEDE-2276-4EFF-89F9-4E6A83A97ADE,Opportunities in infrastructure,Opportunities in infrastructure / PPP sector in Asia for Canadian companies,"Please join us and our guest thought-leaders to exchange ideas and insights, access underlying risks and chart actions for Canadian companies aspiring to expand in Asia’s infrastructure and projects sectors.",~/getmedia/8a63a2c7-a34d-4073-80c0-f84a49e7a084/210513-PPP-sector-infrastructure-page-image.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Webinar,00:00.0,00:00.0,10:00,11:00,EDT,0,NULL,"<p>Infrastructure and project development have played a crucial role in Asia&rsquo;s social and economic development in recent decades with leading Canadian companies helping to lead the way across a wide range of disciplines,&nbsp;including project management,&nbsp;finance,&nbsp;professional services,&nbsp;equipment supply and materials,&nbsp;ICT,&nbsp;logistics &amp; supply chain innovation.</p>

<p>The COVID-19 pandemic fundamentally disrupted global trade and development patterns and the infrastructure sectors and industries were not immune. This webinar will look at the infrastructure and PPP sectors in Asia in the new normal as well as the trends in post-COVID recovery with a specific focus on opportunities for Canadian companies.</p>

<p>Please join us and our guest thought-leaders to exchange ideas and insights, access underlying risks and chart actions for Canadian companies aspiring to expand in Asia&rsquo;s infrastructure and projects sectors.</p>

<h2>Speakers</h2>

<ul>
	<li>Thomas J. Timmins -&nbsp;Partner,&nbsp;Gowling WLG,&nbsp;Leader, Canadian BnR Network Group</li>
	<li>Joseph Chaung - President, Hong Kong-Canada Business Association Toronto Section</li>
	<li>Patricia Elliott -&nbsp;Consul &amp; Senior Trade Commissioner,&nbsp;Consulate General of Canada in Hong Kong&nbsp;</li>
	<li>Joseph Lam -&nbsp;Chair,&nbsp;International Business Committee,&nbsp;Intelligent Transportation Systems Society of Canada</li>
	<li>Rajat Misra -&nbsp;Director General,&nbsp;Infrastructure Investment Department Region I,&nbsp;South Asia,&nbsp;SE Asia &amp; Pacific,&nbsp;Asian Infrastructure Investment Bank</li>
	<li>Emily Mo -&nbsp;Director,&nbsp;Hong Kong Economic and Trade Office (Toronto)</li>
	<li>Billy Tam -&nbsp;Vice Chairman,&nbsp;Institution of Public Private Partnerships Hong Kong</li>
	<li>Andrew Yui -&nbsp;Director, Canada,&nbsp;Hong Kong Trade Development Council​</li>
</ul>
",NULL,NULL,00:00.0,https://form.hktdc.com/ui_registrationsite/Registration/RegistrationForm.aspx?FORMID=52bc8d0c-ba1f-4e61-8651-cb6c34d63414&BYPASS=YES&LANGID=1&URLEVENTNAME=WebinarOS&URLFORMNAME=Enquiry&URLDATESCODE=00,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,df411e0b-2c62-4a68-8456-2c7c1dd0b4da,NULL,NULL,4c3c2534-e644-427f-9b61-e7cd1aec53cf,NULL,Webinar,Thomas J. Timmins,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada;GWLG.China,0,0CDA2C7E-BFD7-48AD-991D-C46DBB4E55AB,Gowling WLG Speaker,NULL,NULL,Infrastructure,NULL,NULL,NULL,~/getmedia/15fc4bb4-56be-492e-abda-98e991c1630a/260521-PPP-sector-infrastructure.jpg.xml?width=930&height=450&ext=.jpg,NULL,NULL
415,/Events/2021/Great-women-leaders,en-GB,76D1A037-D96C-4913-93DF-7A5725317DFF,Great women leaders,Great Women Leaders: Business and Entrepreneurship Outlook by Dr. Gina Cody,"This event will provide valuable insights into Gina's foray into industry, entrepreneurship and philanthropy, as well as helpful tips for emerging business and tech leaders. ",~/getmedia/a481d617-41b8-47eb-99a4-c61a568bdf43/210518-great-women-leaders-main.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Webinar,00:00.0,00:00.0,9:00 a.m.,10:00 a.m.,EDT,0,NULL,"<p>The Canada Arab Business Council (CABC) is pleased to invite you to an exclusive fireside chat between Gina Cody,&nbsp;Canadian-Iranian engineer and business leader, and Jasmin Ganie-Hobbs, senior development banker at the Business Development Bank of Canada (BDC). The event is presented in collaboration with BDC and the Organization of Women in International Trade (OWIT), and sponsored by Gowling WLG.</p>

<p>This event will provide valuable insights into Gina&#39;s foray into industry,&nbsp;entrepreneurship and philanthropy,&nbsp;as well as helpful tips for emerging business and tech leaders. Gina will also delve into her personal journey as an engineer and business leader;&nbsp;as well as the importance of equity,&nbsp;diversity and inclusion in STEM and the value of EDI for businesses. Perhaps most importantly,&nbsp;the event will also touch on why the world needs more women role models in business and engineering.</p>
",NULL,NULL,00:00.0,https://www.eventbrite.ca/e/great-women-leaders-business-and-entrepreneurship-outlook-by-dr-gina-cody-tickets-154039934591,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,NULL,NULL,e21a01a4-efc1-409c-b08c-4859c79fe643,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://www.eventbrite.ca/e/great-women-leaders-business-and-entrepreneurship-outlook-by-dr-gina-cody-tickets-154039934591,Register now,GWLG.Canada,0,0CDA2C7E-BFD7-48AD-991D-C46DBB4E55AB,Gowling WLG Speaker,NULL,NULL,NULL,NULL,NULL,NULL,~/getmedia/6106eb0c-2da2-4376-94f4-d829874a200c/210518-great-women-leaders.jpg.xml?width=930&height=450&ext=.jpg,NULL,NULL
418,/Events/2021/Infodemic-Is-misinformation-killing-us,en-GB,AFFFA633-9B3A-4C3B-9827-9B2F06CA9376,Infodemic! Is misinformation killing us?,Infodemic! Is misinformation killing us?,"In conjunction with BIO Digital 2021, Gowling WLG invites you to what promises to be a fascinating and insightful conversation with guest speaker Timothy Caulfield.",~/getmedia/714f2b60-71d8-4fdf-8082-decf356bd1d3/210526-infodemic-misinformation-BIO-page-image.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Webinar,00:00.0,00:00.0,12:00 p.m.,1:00 p.m.,EDT,0,NULL,"<p>In conjunction with&nbsp;<a href=""https://www.bio.org/events/bio-digital"">BIO Digital 2021</a>,&nbsp;Gowling WLG invites you to what promises to be a fascinating and insightful conversation with guest speaker <a href=""https://www.speakers.ca/speakers/timothy-caulfield/"">Timothy Caulfield</a>.</p>

<p>Misinformation is absolutely everywhere! From cow urine to bleach and cocaine &ndash; a lot of absurd things have been nonsensically recommended as COVID-19 cures. The pandemic has been cast as a leaked bioweapon,&nbsp;a byproduct of 5G wireless technology,&nbsp;and&hellip; even a political hoax. Countless wellness gurus and alternative-medicine practitioners have pushed unproven potions, pills,&nbsp;and practices as ways to &quot;boost&quot;&nbsp;the immune system to fight against COVID-19.</p>

<p>The coronavirus isn&rsquo;t just a pandemic &ndash; it is an infodemic. It&#39;s caused physical harm and financial loss;&nbsp;added confusion and distraction to an already chaotic environment; and made it even more difficult to implement the needed health policy initiatives.</p>

<p>So, how does this misinformation spread? Why do people believe it? What can we do as individuals and a community to combat it? Who can we trust? In this presentation, Professor Timothy Caulfield will explore these questions and more.</p>

<h2>Guest Speaker</h2>

<ul>
	<li>Timothy Caulfield -&nbsp;Professor of Health Law and Science Policy | Author of&nbsp;Is <em>Gwyneth Paltrow Wrong About Everything?</em></li>
</ul>
",NULL,NULL,00:00.0,https://sites-gowlingwlg.vuturevx.com/106/6021/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,049c8249-7ff3-4ee3-a439-590f45fd5cff,NULL,6b906235-110b-475e-88cd-4ddef78eb8b8,870774bf-534e-466c-be9a-e89fb3fb38bf;56ee3f73-d210-49c8-9910-551c59e95fb2;8e016382-a73f-4aba-8339-02f14b8a79bb,NULL,Webinar,"John Norman, PhD, Sonia M. Ziesche, PhD, Patrick Duxbury",Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/106/6021/landing-pages/event-registration-(blank-form).asp,Register now,GWLG.Canada;GWLG.UnitedStates,0,0CDA2C7E-BFD7-48AD-991D-C46DBB4E55AB,Gowling WLG Speakers,NULL,NULL,Life Sciences,NULL,COVID-19: How will coronavirus impact your business?,NULL,~/getmedia/55799408-31f0-4865-9601-2a76c861cc2d/210526-infodemic-misinformation-BIO.jpg.xml?width=930&height=450&ext=.jpg,NULL,NULL
419,/Events/2021/The-use-of-expert-evidence-in-a-global-IP-dispute,en-GB,CE6498A8-8F0A-4501-95C3-7E58FB8CB019,The use of expert evidence in a global IP dispute,Lifecycle of a smart idea | Prove it! The use of expert evidence in a global IP dispute,"Intellectual property (IP) disputes in today’s world are often global in scope, and when litigation comes into play, this can mean lawsuits in different jurisdictions.",~/getmedia/d05a2ebf-72ad-442c-865c-cd09ce4c6f3e/210601-prove-it-IP-webinar-page-image.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Webinar,00:00.0,00:00.0,"3 p.m. BST, 4 p.m. CET, 10 p.m. CST, 10 a.m.",NULL,EDT,1,0.75 hours,"<p>Intellectual property (IP) disputes in today&#39;s world are often global in scope,&nbsp;and when litigation comes into play,&nbsp;this can mean lawsuits in different jurisdictions. So,&nbsp;how can you prove and protect ownership of your IP? What kind of expert evidence is needed in global IP disputes? How do you ensure consistency across multiple jurisdictions?</p>

<p>On June 16, join members of Gowling WLG&#39;s global IP Group for a new webinar in our Lifecycle of a Smart Idea series. In this webinar,&nbsp;the following topics will be covered by our panel:</p>

<ul>
	<li>The search for and retention of experts</li>
	<li>The preparation of expert evidence</li>
	<li>The duties and obligations of the expert to the tribunal</li>
	<li>The expert evidence at trial</li>
	<li>Working with court appointed experts in some jurisdictions</li>
	<li>Use of experts for interim applications</li>
</ul>

<h2>Speakers</h2>

<ul>
	<li>Ron Dimock - Partner, Gowling WLG</li>
	<li>Gordon Harris - Partner, Gowling WLG</li>
	<li>Sandra Barton - Partner, Gowling WLG</li>
	<li>Alexander Brainerd -&nbsp;Mediator &amp; Arbitrator, JAMS</li>
	<li>Alexandra Brodie - Partner, Gowling WLG</li>
	<li>Michael Knospe -&nbsp;German IP Specialist Lawyer</li>
	<li>Ivy Liang - Director, Gowling WLG</li>
</ul>

<p>*This program is eligible for up to 45 minutes (0.75 hours) of substantive CPD credits with the LSO and LSBC,&nbsp;and may be eligible for up to 45 minutes (0.75 hours) of CPD/CLE credits in other jurisdictions. If you indicate that a certificate is required on your registration form,&nbsp;we will email you your certificate after the session.</p>
",NULL,NULL,00:00.0,https://sites-gowlingwlg.vuturevx.com/106/5848/landing-pages/event-registration-(blank-form)---june-16.asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,08b9a44c-bb26-4255-9779-296a124fcbee,8c0f2d68-a5d9-441b-95a9-3b2a98a43c1d,6767b2fc-7817-42ae-a54e-05595fe6c1cd;7daffdf3-ccec-45a0-9a0e-0b8811e00398;9d45dc9b-e77f-4060-b619-bb2e44996e19;d960a618-a196-404c-b795-b884bc90e603;49370d7b-1121-45da-90e6-96dcc50c1710,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/106/5848/landing-pages/event-registration-(blank-form)---june-16.asp,Register now,GWLG.Canada;GWLG.UK;GWLG.UnitedStates;GWLG.Germany;GWLG.China;GWLG.Global,0,NULL,Gowling WLG Speakers,NULL,NULL,NULL,Intellectual Property Law,IP Law Hub,NULL,~/getmedia/b1cedd32-f51d-43ec-a5cf-ed4f4e3b4245/210601-Prove-It-Expert-Evidence.jpg.xml?width=930&height=450&ext=.jpg,NULL,NULL
424,/Events/2021/Canadian-ESG-and-the-role-of-the-board,en-GB,246588C1-E6B3-4460-85BA-7150820698F2,Canadian ESG and the role of the board,Canadian ESG and the role of the board,"Join our panel of legal professionals and industry leader, Deborah Rosati, on Wednesday, June 16 as they tackle questions about Environment, Social & Governance (ESG) and the Role of the Board in the second of a three part webinar series on Canadian ESG.",~/getmedia/24e4be73-5921-447f-9da7-c793cc09fd65/environmental-social-and-governance-esg-desktop.png.xml?width=1400&height=540&ext=.png,abstract image of a globe ,GWLG.Webinar,00:00.0,00:00.0,9 a.m. PDT / 10 a.m. MDT / 12 p.m.,NULL,EDT,1,1 hour,"<p>Join our panel of legal professionals and industry leader,&nbsp;Deborah Rosati,&nbsp;on Wednesday,&nbsp;June 16 as they tackle questions about&nbsp;<a href=""https://gowlingwlg.com/en/services/environmental-social-and-governance-esg/#global"" target=""_blank"">Environmental,&nbsp;Social &amp; Governance (ESG)</a>&nbsp;and the Role of the Board in the second of a three part webinar series on Canadian ESG. This engaging event will focus on:</p>

<ul>
	<li>Why ESG is relevant for Boards;</li>
	<li>What a board member&#39;s responsibility is regarding ESG,&nbsp;and;</li>
	<li>Best practices around governance, board composition and other emerging issues</li>
</ul>

<p>Deborah Rosati is an accomplished corporate director, entrepreneur, Fellow Chartered Professional Accountant (FCPA) and certified Corporate Director (ICD.D) with more than 30 years of experience in technology, consumer, retail, private equity and venture capital.</p>

<p><em>*This program is eligible for up to 1 hour of substantive CPD credits with the LSO and LSBC,&nbsp;and may be eligible for up to 1 hour of CPD/CLE credits in other jurisdictions. If you indicate that a certificate is required on your registration form,&nbsp;we will email you your certificate after the session.</em></p>
",NULL,NULL,00:00.0,https://sites-gowlingwlg.vuturevx.com/95/5957/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,b305a1b6-d0ba-41dc-8e53-579fd077b871;ca126ce8-3692-45e8-a1be-aa0808b0c37e,NULL,3f7c519a-6612-414e-a791-aec1e9ed60b1;29d7e340-a6af-49b5-b223-993a69997a78;f2f213bc-58ed-4fa0-8cd3-fcbd399dbc1f,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,"<p>Canadian ESG Series 2021</p>
",~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/95/5957/landing-pages/event-registration-(blank-form).asp,Register now,GWLG.Canada;GWLG.UnitedStates,0,0CDA2C7E-BFD7-48AD-991D-C46DBB4E55AB,Gowling WLG Speakers,NULL,NULL,NULL,"Environmental, Social and Governance (ESG), Corporate",NULL,NULL,~/getmedia/6dcc0c71-0625-48f9-81e4-cb8915c982ce/210602-ESG-role-of-board.jpg.xml?width=930&height=450&ext=.jpg,NULL,NULL
425,/Events/2021/Exploring-Stablecoins-and-CBDCs,en-GB,A4936819-0ACB-4075-B1AB-60F9A6BA9F59,Exploring Stablecoins and CBDCs,Blockchain webinar series | On stable ground? Exploring the latest trends and legal issues in Stablecoins and Central Bank Digital Currencies (CBDCs),"Our panel will explore the benefits and shortcomings of stablecoins, and legal issues that relate to these digital products.",~/getmedia/66fefac4-ca15-4988-9104-a384555cee23/210506-Blockchain-crypto.jpg.xml?width=930&height=520&ext=.jpg,NULL,GWLG.Webinar,00:00.0,00:00.0,1:30 p.m.,2:30 p.m.,EDT,1,1 hour,"<p>Stablecoins are a type of crypto asset whose value is tied to an outside asset,&nbsp;such as the U.S. dollar or gold. While stablecoins have become increasingly used to manage volatility and facilitate transfers of crypto assets, despite their name,&nbsp;stablecoins are certainly not free of risk. Our panel will explore the benefits and shortcomings of stablecoins,&nbsp;and legal issues that relate to these digital products.</p>

<p>Our panel will also explore the new and emerging world of central bank digital currencies (CBDCs),&nbsp;and will discuss legal issues as well as broader policy implications of such assets.</p>

<h2>Speakers</h2>

<ul>
	<li>Usman M. Sheikh - Partner &amp; National Head - Blockchain &amp; Smart Contract Group, Gowling WLG</li>
	<li>Michael Garellek - Partner, Gowling WLG</li>
	<li>Laura Gheorghiu - Partner, Gowling WLG</li>
	<li>Laurent Féral-Pierssens - Chief Operating Officer, Bitt</li>
</ul>

<p><em>*This webinar is part of our 2021 Blockchain Webinar Series.&nbsp;<a href=""https://gowlingwlg.com/en/insights-resources/?page=1&amp;resourcetypes=GWLG.Webinar&amp;q=blockchain%20webinar%20series&amp;mode=anyword&amp;sort=Relevance&amp;services=31890"">Watch previous webinars from the series &raquo;</a></em></p>

<p><em>*This program is eligible for up to 1 hour of substantive CPD credits with the LSO and LSBC,&nbsp;and may be eligible for up to 1 hour of CPD/CLE credits in other jurisdictions. If you indicate that a certificate is required on your registration form,&nbsp;we will email you your certificate after the session.</em></p>
",NULL,NULL,30:00.0,https://sites-gowlingwlg.vuturevx.com/106/5984/landing-pages/event-registration-(blank-form)---june-17.asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,cdfc9b50-74c2-4af5-9508-342935f81ccd,20e41ca2-b15a-4815-bb5c-7cf60c18278f,db65f669-80d2-45f3-9161-2c00aa6f157e,300e471b-5cfe-45e3-bb75-6cc00bbdf27b;3464c653-fa4d-43dd-99c9-db0a2dd57faf;318ad67b-b673-41d5-a888-784ab5b9ea66,NULL,Webinar,"Usman M. Sheikh, Michael Garellek, Laura Gheorghiu",Webinar,34471,GWLG.Events,"<p>2021 Blockchain Webinar Series</p>
",~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/106/5984/landing-pages/event-registration-(blank-form)---june-17.asp,Register now,GWLG.Canada,0,0CDA2C7E-BFD7-48AD-991D-C46DBB4E55AB,Gowling WLG Speakers,NULL,NULL,Tech,Blockchain & Smart Contracts,Blockchain & Cryptocurrency,NULL,~/getmedia/2866a5c5-771a-4dff-bfaa-8e0bde60a787/210604-blockchain-stablecoins-CBDC.jpg.xml?width=930&height=450&ext=.jpg,NULL,NULL
426,/Events/2021/The-Role-of-Hydrogen-in-Canada-1,en-GB,BB0EDEB9-8470-4E4E-8364-3423736E5683,The Role of Hydrogen in Canada,The Role of Hydrogen in Canada,Curious about the role of hydrogen in Canada's future? Join us on July 12 for an informative online session focusing on key opportunities and challenges on the horizon. ,~/getmedia/6e5075f2-36fe-4603-97cf-a7e381fb05ad/210408-hydrogen-molecule.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Webinar,00:00.0,00:00.0,9 a.m. PDT / 10 a.m. MDT / 12 p.m.,NULL,EDT,0,NULL,"<p>Curious about the role of hydrogen in Canada&#39;s future? Join us on July 12 for an informative online session focusing on key opportunities and challenges on the horizon. Gowling WLG&#39;s&nbsp;Myron Dzulynsky&nbsp;will be joined by three industry professionals to discuss a number of issues and answer questions regarding this emerging market.</p>

<p>The panel will dive into federal and provincial policies,&nbsp;discuss how governments at all levels can help make the hydrogen industry a success, as well as what we can learn from other jurisdictions in terms of leadership in the industry.</p>

<p>We look forward to seeing you.</p>

<h2>Speakers</h2>

<ul>
	<li>Myron Dzulynsky - Partner, Gowling WLG</li>
	<li>Rob Harvey&nbsp;- Director, Energy Infrastructure - Fuel Cell and Hydrogen Technologies, Cummins Inc.</li>
	<li>Joy Roberts&nbsp;- EA Design Specialist, Unilia Fuel Cell Inc.</li>
	<li>Grant Strem&nbsp;- Chairman and CEO, Proton Technologies</li>
</ul>
",NULL,NULL,00:00.0,https://sites-gowlingwlg.vuturevx.com/95/5960/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,f1e960f5-8231-4c56-b7bf-9898ebb538c5,NULL,NULL,72527f9d-ef8e-4c63-94fc-a0566d048f22,NULL,Webinar,Myron B. Dzulynsky,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/95/5960/landing-pages/event-registration-(blank-form).asp,Register now,GWLG.Canada,0,0CDA2C7E-BFD7-48AD-991D-C46DBB4E55AB,Gowling WLG Speaker,NULL,NULL,Energy,NULL,NULL,NULL,~/getmedia/f7691c7b-a38c-4a01-aa14-5c4b8f26ce3c/210616-role-hydrogen-Canada.jpg.xml?width=930&height=450&ext=.jpg,NULL,NULL
428,/Events/2021/Trends-for-outbound-M-A,en-GB,ACCFC179-7803-4244-8A91-D77D724730E5,Trends for outbound M&A,2021 Taxation of Tech Outlook: Trends for Outbound M&A,"This engaging webinar will bring together a panel of tax professionals from Canada, the UK, France, Mexico and the US to discuss current and upcoming trends in this space.",~/getmedia/2af2d092-762a-4a7e-a14a-d0d155cd8322/210617-taxation-tech-page-image.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Webinar,00:00.0,00:00.0,12:00 p.m.,1:00 p.m.,EDT,1,1 hour,"<p>Curious about new developments in the taxation of tech? This engaging webinar will bring together a panel of tax professionals from Canada,&nbsp;the UK,&nbsp;France,&nbsp;Mexico&nbsp;and the US to discuss current and upcoming trends in this space. In particular,&nbsp;the panel will focus on companies wishing to expand outside the US by way of acquisition. This event will surely be of interest to corporate,&nbsp;tax and in-house legal counsel.&nbsp;&nbsp;</p>

<p>The full list of topics that will be addressed are as follows:</p>

<p>1. M&amp;A structuring trends:</p>

<ul>
	<li>Mixed-cash and stock deals</li>
	<li>Tax-efficient structuring pitfalls</li>
	<li>New transaction disclosure requirements (e.g. DAC 6, Québec disclosure)</li>
</ul>

<p>2. Taxation of management and employees:</p>

<ul>
	<li>Management incentives (e.g., options)</li>
	<li>Independent contractor re-classification</li>
	<li>Employee mobility</li>
</ul>

<p>3. Post-acquisition considerations (e.g., IP location)</p>

<p>The main webinar will last for one hour, followed by a 20-minute networking session.</p>

<h2>Speakers</h2>

<ul>
	<li>Mariana Eguiarte Morett - Partner,&nbsp;Sánchez Devanny</li>
	<li>Zoe Fatchen - Partner, Gowling WLG</li>
	<li>Laura Gheorghiu - Partner, Gowling WLG</li>
	<li>Emilie Renaud - Partner, Gowling WLG</li>
	<li>Julia Ushakova-Stein - Partner,&nbsp;Fenwick &amp; West&nbsp;</li>
</ul>

<p><em>*This program is eligible for up to one hour of substantive CPD credits with the LSO, the LSBC and the Barreau du Québec, and may be eligible for up to one hour of CPD/CLE credits in other jurisdictions. If you indicate that a certificate is required on your registration form, we will email you your certificate after the session.</em></p>

<p><em>*In the United States, the program is eligible for the following CLE credits: 1.0 CA General; 1.0 VT General; 1.0 NY Professional Practice; and 1.0 WA Law &amp; Legal (pending approval).&nbsp;</em></p>
",NULL,NULL,00:00.0,https://sites-gowlingwlg.vuturevx.com/106/6061/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,4f997fc2-8233-4465-a01d-e68205aef05c;5e7a4c28-1f41-45d6-9485-1a23041b34f6,NULL,ea3a66e9-0355-4229-a792-9f4094b0eeaa;318ad67b-b673-41d5-a888-784ab5b9ea66;2a23e6a6-0155-4f2f-aaaa-e614eae99bec,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/106/6061/landing-pages/event-registration-(blank-form).asp,Register now,GWLG.Canada;GWLG.UnitedStates;GWLG.UK;GWLG.France;GWLG.LatinAmerica,0,0CDA2C7E-BFD7-48AD-991D-C46DBB4E55AB,Gowling WLG Speakers,NULL,NULL,NULL,"Corporate, M&A and Capital Markets, Tax",NULL,NULL,~/getmedia/d345dca7-3fe6-45a7-a4e3-e3a6dbf6f2dc/210617-taxation-outlook-outbound-ma.jpg.xml?width=930&height=450&ext=.jpg,NULL,NULL
429,/Events/2021/The-Power-of-Pride-in-Sport,en-GB,2B311791-61EC-4204-A210-EA194AE7CB33,The Power of Pride in Sport,The Power of Pride in Sport,"Join us for a fireside chat with prominent LGBTQ2+ athletes, activists and community organizers as they share their stories of overcoming obstacles, breaking down barriers and championing inclusion in all levels of sport.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,00:00.0,00:00.0,12:00 p.m.,1:00 p.m.,EDT,0,NULL,"<p>The LGBTQ2+ community has made tremendous strides over the past few decades. But LGBTQ2+ athletes continue to face numerous hurdles &ndash; even as they compete on the world stage.</p>

<p>Join us for a fireside chat with prominent LGBTQ2+ athletes, activists and community organizers &ndash; including Olympic gold medal swimmer&nbsp;<strong>Mark Tewksbury,</strong>&nbsp;Canada&rsquo;s first openly gay Olympian &ndash; as they share their stories of overcoming obstacles,&nbsp;breaking down barriers and championing inclusion in all levels of sport.</p>

<p>Gowling WLG is a proud sponsor of Team England and Team Canada at the Birmingham 2022 Commonwealth Games. As such,&nbsp;this event is an international collaboration between our UK and Canadian offices and our OpenHouse LGBTQ2+ affinity networks.</p>

<p>We hope you&rsquo;ll join us to celebrate the power of Pride in sport &ndash; and the importance of ensuring equity,&nbsp;diversity and inclusion on and off the playing field.</p>

<h2>Speakers</h2>

<ul>
	<li><strong>Mark Tewksbury</strong>&nbsp;is an Olympic gold medallist who broke several world records during his swimming career. He was also Canada&#39;s first sports hero to declare his homosexuality,&nbsp;which helped start a national conversation on LGBTQ2+ issues in sport.</li>
	<li><strong>Sarah-Jane Perry</strong>&nbsp;is a professional squash player who has been at the forefront of women&#39;s squash for a number of years. She is keen to share her stories and experiences in the LGBTQ2+ sporting community.</li>
	<li><strong>Lou Englefield</strong>&nbsp;is director of Pride Sports UK and co-founder of Pride House Birmingham.</li>
	<li><strong>Joanie Evans</strong>&nbsp;is co-chair of the Federation of Gay Games. A member of the UK&#39;s first lesbian football club,&nbsp;she is passionate about the importance of inclusion in sport.</li>
	<li><strong>Oliver Rowlands</strong>&nbsp;is an associate at Gowling WLG. He is a member of the LGBTQ2+ community who competed for Team GB in trampoline for many years growing up.</li>
</ul>

<h2>Hosts</h2>

<ul>
	<li><strong>Mary Mackintosh,</strong>&nbsp;Gowling WLG UK General Counsel &amp; Board sponsor of OpenHouse UK</li>
	<li><strong>David Pearson,</strong>&nbsp;Gowling WLG Interim Head of Diversity &amp; Inclusion and Board member of the LGBT International Powerlifting Athletes&#39;&nbsp;Union</li>
</ul>
",NULL,NULL,00:00.0,https://sites-gowlingwlg.vuturevx.com/106/6078/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,NULL,NULL,NULL,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/106/6078/landing-pages/event-registration-(blank-form).asp,Register now,GWLG.Canada;GWLG.UK,0,0CDA2C7E-BFD7-48AD-991D-C46DBB4E55AB,NULL,NULL,NULL,NULL,NULL,NULL,NULL,~/getmedia/14f7dfbb-c628-4bd4-9f2c-0dc1bc1cd343/210617-power-of-pride-in-sport.jpg.xml?width=930&height=450&ext=.jpg,NULL,NULL
431,/Events/2021/Exploring-decentralized-finance,en-GB,5D3AF562-A919-4E4E-8D16-044B27FFA251,Exploring decentralized finance,2021 Blockchain Webinar Series | Exploring decentralized finance: Understanding the latest trends and legal developments,"In this session we explore the burgeoning DeFi landscape, outline key legal considerations and highlight strategies that are currently being offered on various platforms.",~/getmedia/dbae47a8-49b7-4a0c-bf40-4c673775dc1f/210422-blockchain-webinar-series.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Webinar,00:00.0,00:00.0,1:30 p.m.,2:30 p.m.,EDT,1,1 hour,"<p>For sophisticated investors looking for the next opportunity,&nbsp;decentralized finance (DeFi) offers a new way to invest in crypto assets in an on-demand digital world. However,&nbsp;before jumping in with both feet it&#39;s critical to understand what DeFi is, how it works,&nbsp;its potential return on investment and its inherent risks.</p>

<p>In this session we explore the burgeoning DeFi landscape, outline key legal considerations and highlight strategies that are currently being offered on various platforms.</p>

<h2>Speakers</h2>

<ul>
	<li>Usman M. Sheikh -&nbsp;Partner &amp; National Head - Blockchain &amp; Smart Contract Group, Gowling WLG</li>
	<li>Michael Garellek - Partner, Gowling WLG</li>
	<li>Lee Schneider&nbsp;-&nbsp;General Counsel,&nbsp;AvaLabs</li>
</ul>

<p><em>This&nbsp;webinar is part of our 2021 Blockchain Webinar Series. <a href=""https://gowlingwlg.com/en/insights-resources/?page=1&amp;resourcetypes=GWLG.Webinar&amp;q=blockchain%20webinar%20series&amp;mode=anyword&amp;sort=Relevance&amp;services=31890"">Watch more from the series &raquo;</a></em></p>

<p><em>*This program is eligible for up to 1 hour of substantive CPD credits with the LSO and LSBC,&nbsp;and may be eligible for up to 1 hour of CPD/CLE credits in other jurisdictions. If you indicate that a certificate is required on your registration form,&nbsp;we will email you your certificate after the session.</em></p>
",NULL,NULL,30:00.0,https://sites-gowlingwlg.vuturevx.com/106/5984/landing-pages/event-registration-(blank-form)---july-15.asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,cdfc9b50-74c2-4af5-9508-342935f81ccd,20e41ca2-b15a-4815-bb5c-7cf60c18278f,db65f669-80d2-45f3-9161-2c00aa6f157e,300e471b-5cfe-45e3-bb75-6cc00bbdf27b;3464c653-fa4d-43dd-99c9-db0a2dd57faf,NULL,Webinar,"Usman M. Sheikh, Michael Garellek",Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/106/5984/landing-pages/event-registration-(blank-form)---july-15.asp,Register now,GWLG.Canada,0,0CDA2C7E-BFD7-48AD-991D-C46DBB4E55AB,Gowling WLG Speakers,NULL,NULL,Tech,Blockchain & Smart Contracts,Blockchain & Cryptocurrency,NULL,~/getmedia/af5ffda8-3645-4fcc-9555-da6b65324e50/210715-blockchain-defi.jpg.xml?width=930&height=450&ext=.jpg,NULL,NULL
432,/Events/2021/Toronto-Virtual-Open-House,en-GB,1A12A820-780B-41BE-BF95-22FFC3B1A891,Toronto Virtual Open House,Get to Know Gowling WLG,,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.SpecialEvents,03:10.0,03:20.0,Various,NULL,EST,0,NULL,"<h2>2022&nbsp;Summer Student Recruitment</h2>

<p>As you prepare for the upcoming recruitment process, take the opportunity to find out what sets Gowling WLG apart.&nbsp;</p>

<p>This year, we invite you to attend one of our virtual events where you will have the opportunity to meet our lawyers and learn more about our firm.</p>

<p>Join us for one (or two!) of the events listed below to see what makes Gowling WLG a great place to work.</p>

<h2>Virtual Open House</h2>

<p>Panels will consist of associates and partners from the respective departments and will be moderated by Shemara Dadhisheth, manager of student programs.</p>

<p>Please note that our events are open only to those candidates eligible for a 2022&nbsp;summer student recruitment process.&nbsp;</p>

<p><a class=""c-button"" href=""https://sites-gowlingwlg.vuturevx.com/103/6118/landing-pages/event-registration-(blank-form).asp"" target=""_blank"">Register now</a></p>

<table border=""1"" cellpadding=""1"" cellspacing=""1"">
	<thead>
		<tr>
			<th scope=""col"">Date</th>
			<th scope=""col"">Event</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>July 19 at 3 p.m.</td>
			<td>
			<p>Virtual Panel with our Business Law Department</p>
			</td>
		</tr>
		<tr>
			<td>July 21 at 2 p.m.</td>
			<td>
			<p>Virtual Panel with our IP Department</p>
			</td>
		</tr>
		<tr>
			<td>July 22 at 2 p.m.</td>
			<td>Virtual Panel with our Advocacy Department</td>
		</tr>
		<tr>
			<td>July 26 at 2 p.m.</td>
			<td>Virtual Panel with our Environmental Group</td>
		</tr>
		<tr>
			<td>July 27 at 2 p.m.</td>
			<td>Virtual Panel with our Business Law Department</td>
		</tr>
		<tr>
			<td>
			<p>July 29 at 2 p.m.</p>
			</td>
			<td>Virtual Panel with our Advocacy Department</td>
		</tr>
		<tr>
			<td>
			<p>Aug. 5 at 11 a.m.</p>
			</td>
			<td>Coffee Chat with our current Summer Students</td>
		</tr>
	</tbody>
</table>

<h2>Questions?</h2>

<p>Please feel free to contact <a href=""mailto:Shemara.Dadhisheth@gowlingwlg.com"">Shemara Dadhisheth, Manager, Student Programs</a>.&nbsp;We look forward to having you join us!</p>
",NULL,NULL,07:50.0,https://sites-gowlingwlg.vuturevx.com/103/6118/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,C41373B4-86B9-4F74-8894-0B0BB7DDBD18,NULL,NULL,NULL,NULL,NULL,Special events,NULL,Online event,694,GWLG.Events,NULL,~/getmedia/ce6334bf-f101-4e35-8693-c3acc15d4917/shutterstock_1713325624-1.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,Speaker(s),NULL,b2dc4461-dc66-4f96-9ae6-32bc2b14259d,NULL,NULL,NULL,Toronto,~/getmedia/3af75862-5dfc-4e7e-992c-0fa20b9ee5d5/20210714-summer-student-open-house.jpg.xml?width=930&height=450&ext=.jpg,NULL,NULL
433,/Events/2021/ThinkHouse-Data-protection-hot-topics,en-GB,FAF06A4E-BA5C-4DC1-80E3-EF820BF28ACD,ThinkHouse - Data protection hot topics,Data protection hot topics - ThinkHouse Virtual Seminar,"In this live webinar data protection experts, Jocelyn Paulley and Helen Davenport, will look at the latest hot areas and developments of data protection, including international transfers, recent cases and updated guidance from the ICO.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,39:54.0,40:03.0,10:00,11:00,BST,0,NULL,"<p><a href=""~/en/thinkhouse/"">ThinkHouse</a> is Gowling WLG&#39;s exclusive programme of events and resources for in-house lawyers.&nbsp; It equips in-house lawyers with knowledge and skills that add value to their business.</p>

<p>In this live webinar data protection experts, Jocelyn Paulley and Helen Davenport, will look at the latest hot areas and developments of data protection, including international transfers, recent cases and updated guidance from the ICO.</p>

<p>During the session, the speakers will provide useful information and practical tips, and will answer as many questions as possible in the time available.</p>

<p>This webinar is part of the ThinkHouse Virtual Autumn Seminar, to register for this, or any of the other webinars, please use the register button on the right of this page.<br />
<!--[endif]--></p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession. Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,55:00.0,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?RSID=9ZQds7cDe4fmfbtlJkUKvR1TgL9L5IUuzzjKnbsBRzNKN6zYEzb18AJqwV6135WV,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,2e9a87e2-3d2e-4d69-ba9c-06b4b358ca0d,a143cbfd-d333-42a0-89a6-7287894464f1,d3e0fa3e-1011-4fe0-b62a-88c920f62d49;75a219e7-ea84-4ba2-9990-61b83de62877,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/5d57b23c-f4d3-44e3-a08e-7ee56360fd71/thinkhouse-snr-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/27fda93c-8849-4d7e-a292-bcc5eb1e7896/thinkhouse-snr-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,NULL,NULL,Cyber Security & Data Protection Law,ThinkHouse,NULL,NULL,NULL,NULL
434,/Events/2021/ThinkHouse-Competition-law-update,en-GB,4101DC0A-5B22-4BC2-8FB6-9368F43E2E3D,ThinkHouse - Competition law update,Competition law update - ThinkHouse Virtual Seminar,"As the UK's post-Brexit economy emerges from the COVID-19 pandemic, what can businesses expect from the UK competition law regime?  Samuel Beighton will provide an update considering current issues and trends in UK competition law, including in the context of environmental sustainability agreements, distribution arrangements and resale pricing, and merger control.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,39:54.0,40:03.0,13:30,14:30,BST,0,NULL,"<p><a href=""~/en/thinkhouse/"">ThinkHouse</a> is Gowling WLG&#39;s exclusive programme of events and resources for in-house lawyers.&nbsp; It equips in-house lawyers with knowledge and skills that add value to their business.&nbsp;</p>

<p>As the UK&#39;s post-Brexit economy emerges from the COVID-19 pandemic, what can businesses expect from the UK competition law regime?&nbsp; Samuel Beighton will provide an update considering current issues and trends in UK competition law, including in the context of environmental sustainability agreements, distribution arrangements and resale pricing, and merger control.</p>

<p>During the session, the speakers will provide useful information and practical tips, and will answer as many questions as possible in the time available.</p>

<p>This webinar is part of the ThinkHouse Virtual Autumn Seminar, to register for this, or any of the other webinars, please use the register button on the right of this page.</p>
","<p>This event is free of charge.</p>
<p>Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession. Please do get in touch if you have any further queries about this event and CPD.</p>
<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,25:00.0,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?RSID=9ZQds7cDe4fmfbtlJkUKvR1TgL9L5IUuzzjKnbsBRzNKN6zYEzb18AJqwV6135WV,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,b3f9fce6-b77c-4e15-978e-eaa664c609dc,a143cbfd-d333-42a0-89a6-7287894464f1,f13a9240-2482-4077-be83-ebaa741dc3f0,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/5d57b23c-f4d3-44e3-a08e-7ee56360fd71/thinkhouse-snr-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/27fda93c-8849-4d7e-a292-bcc5eb1e7896/thinkhouse-snr-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,NULL,NULL,Competition Law & Antitrust,ThinkHouse,NULL,NULL,NULL,NULL
435,/Events/2021/ThinkHouse-in-house-counsel-guide-to-COP26,en-GB,E848C0C7-5E74-4BF7-BED4-4091DD229352,ThinkHouse - in-house counsel guide to COP26 ,In-house counsel's guide to COP26 - ThinkHouse Virtual Seminar,"This November the UK will host COP26, the UN's international climate summit. More than 190 world leaders will arrive in Scotland, along with tens of thousands of negotiators, government representatives, businesses and citizens, with the aim of reaching agreements on how to tackle climate change globally. A significant number of wide ranging topics will be negotiated at COP26, so Ben Stansfield will highlight key issues in-house counsel should look out for during the summit.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,39:54.0,40:03.0,10:00,11:00,BST,0,NULL,"<p><a href=""~/en/thinkhouse/"">ThinkHouse</a> is Gowling WLG&#39;s exclusive programme of events and resources for in-house lawyers.&nbsp; It equips in-house lawyers with knowledge and skills that add value to their business.&nbsp;</p>

<p>This November the UK will host <a href=""https://ukcop26.org/"">COP26</a>, the UN&#39;s international climate summit. More than 190 world leaders will arrive in Scotland, along with tens of thousands of negotiators, government representatives, businesses and citizens, with the aim of reaching agreements on how to tackle climate change globally. A significant number of wide ranging topics will be negotiated at COP26, so Ben Stansfield will highlight key issues in-house counsel should look out for during the summit.</p>

<p>During the session, the speakers will provide useful information and practical tips, and will answer as many questions as possible in the time available.</p>

<p>This webinar is part of the ThinkHouse Virtual Autumn Seminar, to register for this, or any of the other webinars, please use the register button on the right of this page.</p>
","<p>This event is free of charge.</p>
<p>Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession. Please do get in touch if you have any further queries about this event and CPD.</p>
<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,55:00.0,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?RSID=9ZQds7cDe4fmfbtlJkUKvR1TgL9L5IUuzzjKnbsBRzNKN6zYEzb18AJqwV6135WV,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,1607dc53-f5fc-4b61-b336-411d7614df2f;b305a1b6-d0ba-41dc-8e53-579fd077b871,a143cbfd-d333-42a0-89a6-7287894464f1,1a0f69ce-d1e7-42e2-96d6-0dbdd570161e,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/5d57b23c-f4d3-44e3-a08e-7ee56360fd71/thinkhouse-snr-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/27fda93c-8849-4d7e-a292-bcc5eb1e7896/thinkhouse-snr-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,NULL,NULL,"Climate Change, Environmental, Social and Governance (ESG)",ThinkHouse,NULL,NULL,NULL,NULL
436,/Events/2021/ThinkHouse-contracts-and-litigation,en-GB,45A633B6-2C21-4500-B867-34447342A246,ThinkHouse - contracts and litigation,Pen and jaw before court and war - ThinkHouse Virtual Seminar,"In this live webinar David Lowe and Emma Carr will double head a session on what to do when contracts go wrong – from the drafting of the contract, to the first signs that things might be about to turn sour. Emma and David will run through practical tips for resolving disputes without recourse to the court room.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,30:00.0,40:03.0,13:30,14:30,BST,0,NULL,"<p><a href=""~/en/thinkhouse/"">ThinkHouse</a> is Gowling WLG&#39;s exclusive programme of events and resources for in-house lawyers.&nbsp; It equips in-house lawyers with knowledge and skills that add value to their business.&nbsp;</p>

<p>In this live webinar David Lowe and Emma Carr will double head a session on what to do when contracts go wrong - from the drafting of the contract, to the first signs that things might be about to turn sour. Emma and David will run through practical tips for resolving disputes without recourse to the court room.</p>

<p>During the session, the speakers will provide useful information and practical tips, and will answer as many questions as possible in the time available.</p>

<p>This webinar is part of the ThinkHouse Virtual Autumn Seminar, to register for this, or any of the other webinars, please use the register button on the right of this page.</p>p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession. Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,25:00.0,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?RSID=9ZQds7cDe4fmfbtlJkUKvR1TgL9L5IUuzzjKnbsBRzNKN6zYEzb18AJqwV6135WV,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,5027bdff-5a12-4e06-a0ca-809c3002882c;c774be76-80ec-4195-83a3-5850b5e2a4a2;549cbe28-f188-44cd-85c0-0f4e23a23817,a143cbfd-d333-42a0-89a6-7287894464f1,742aa35b-b58b-4d7c-a95e-820a420ada54;ad056fcd-7211-4da7-a9e2-30612d332954,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/5d57b23c-f4d3-44e3-a08e-7ee56360fd71/thinkhouse-snr-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/27fda93c-8849-4d7e-a292-bcc5eb1e7896/thinkhouse-snr-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,NULL,NULL,"Commercial Disputes, Commercial Litigation, Commercial",ThinkHouse,NULL,NULL,NULL,NULL
438,/Events/2021/L-Atelier-Legal-2021,fr-CA,F7D4F537-F056-4183-B04D-D6E6A9EE0AA1,L'Atelier Légal 2021,L'Atelier Légal - deuxième édition ,"Gowling WLG et ACC Québec vous invitent à la deuxième édition de L'Atelier légal, un rendez-vous annuel au cours duquel nous abordons les nouvelles tendances du milieu juridique.",~/getmedia/05a4af30-873e-4c3d-b0f9-4b29a468a761/210818-atelier-legal.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Webinar,00:00.0,30:00.0,9 h,11 h 30,EST,0,NULL,"<p>Gowling WLG et ACC Québec vous invitent à la deuxième édition de L&#39;Atelier légal, un rendez-vous annuel au cours duquel nous abordons les nouvelles tendances du milieu juridique.</p>

<p>Parmi les effets durables de la pandémie sur le monde des affaires, on note la remarquable accélération de la transformation numérique des entreprises.</p>

<p>Quel que soit votre domaine d&#39;activité, les conseillers juridiques sont de plus en plus appelés à négocier des contrats de logiciels-services (Software as a Service ou SaaS) et doivent poser plusieurs questions en amont&nbsp;: Quels sont les points essentiels à connaître? Quelles sont les différences principales entre un contrat de logiciel-service et un contrat traditionnel de licence de logiciel? Si vous faites développer des interfaces propres à votre entreprise, devraient-elles être protégées? Finalement, disposez-vous des moyens adéquats pour assurer la protection des données personnelles des employés? Autant de questions cruciales que soulève cette transformation numérique.</p>

<p>Joignez-vous à nos professionnels du droit pour cet événement participatif durant lequel vous pourrez obtenir réponse à vos questions, réseauter avec vos pairs et échanger sur vos défis quotidiens.</p>

<p>Les places sont limitées, réservez la vôtre sans tarder!</p>

<h2>Programme</h2>

<ul>
	<li>9 h : <strong>Mot d&#39;accueil</strong>&nbsp;</li>
	<li>9 h 10 : <strong>Séries de conférence express &ndash; la transformation numérique et ses enjeux juridiques</strong>
	<ul>
		<li>Différence entre les contrats de licences-services et les contrats traditionnels de licences de logiciel par Marc Tremblay&nbsp;</li>
		<li>Le dessin industriel&nbsp;: une protection est-elle nécessaire pour l&#39;interface de vos applications? par Benoit Yelle&nbsp;</li>
		<li>Confidentialité et meilleures pratiques du point de vue de l&#39;employeur dans un contexte de transformation numérique par Tina Aswad</li>
	</ul>
	</li>
	<li>10 h 20 : <strong>Pause&nbsp;</strong></li>
	<li>10 h 25 : <strong>Au choix :</strong>&nbsp;
	<ul>
		<li>Discussion avec les professionnels de Gowling WLG&nbsp;</li>
		<li>Réseautage avec les participants&nbsp;</li>
		<li>Courte séance de bien-être avec étirements sur chaise&nbsp;</li>
	</ul>
	</li>
	<li>10 h 45 : <strong>Négocier? Quelle horreur! : une présentation de Michel Généreux</strong>&nbsp;
	<ul>
		<li>Cette conférence parsemée d&#39;exemples concrets et personnels offre une vision originale de ce qu&#39;est l&#39;excellence en négociation et propose cinq niveaux de compétences - potentiellement présents en chacun de nous - dont la quête peut éventuellement nous permettre d&#39;enfin devenir le grand négociateur ou la grande négociatrice qui sommeille en chacun de nous.</li>
	</ul>
	</li>
	<li>11 h 25 : <strong>Conclusion</strong>&nbsp;</li>
</ul>

<h2>Pour nous joindre</h2>

<p>Roxanne Martin<br />
Coordonnatrice marketing et développement des affaires<br />
<a href=""tel:+1%514%8789641"" id=""lnkEventContactPhone"">T: +1 514 878-9641 poste 69579</a><br />
<a href=""mailto:roxanne.martin@gowlingwlg.com"" id=""lnkEventContactEmail"">roxanne.martin@gowlingwlg.com</a></p>
","<p>Cette conférence comptera pour un maximum de deux heures de formation continue conformément aux exigences du Barreau du Québec.</p>
",NULL,00:00.0,https://sites-gowlingwlg.vuturevx.com/99/6157/landing-pages/event-registration-(blank-form).asp?sid=blankform,NULL,RSVP,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,NULL,NULL,NULL,NULL,Webinaires,NULL,Webinaire,34471,GWLG.Events,"<p>Un rendez-vous proposé par Gowling WLG et ACC Québec</p>
",~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,Conférenciers,NULL,4eebbc16-5ec7-4186-b6bb-a7f0cf2f7ca4,NULL,NULL,NULL,Montréal,~/getmedia/5d7961fb-a344-4616-908c-1a8c24256780/210819-Atelier-legal_fr_30-sept-2021.jpg.xml?width=1272&height=675&ext=.jpg,NULL,NULL
439,/Events/2021/Energy-Innovators-Roundtable-Reshaping-regulation,en-GB,F6ADD8A6-E321-4862-9090-E98A09954B95,Energy Innovators Roundtable: Reshaping regulation,Energy Innovators Roundtable Series | Reshaping regulation to recognize the imperative for technological change,"On September 23, join Gowling WLG for the first 2021 roundtable in the Energy Innovators Roundtable series.",~/getmedia/70bcd3c3-b70d-412a-83ab-147c499e5f0f/210816-energy-roundtable-page-image.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Webinar,00:00.0,00:00.0,02:00,3:30 p.m.,EDT,1,1.5 hours,"<p>Whether they like it or not, energy regulators are the new gatekeepers of the technology shift that is needed to meet Canada&#39;s carbon reduction goals. This will require significant and near-term changes to the construct under which Canada&#39;s utilities have traditionally been regulated.</p>

<p>Traditional regulation doesn&#39;t incent utilities to retire technology simply because something better has come along. Should regulation transition from &quot;used and useful&quot;&nbsp;to &quot;better&quot;?</p>

<p>On September 23,&nbsp;join Gowling WLG for the first 2021 roundtable in the Energy Innovators Roundtable series.</p>

<h2>Moderator</h2>

<ul>
	<li>Ian Mondrow - Partner &amp; Head of Energy Regulation and Policy, Gowling WLG</li>
</ul>

<h2>Panelists</h2>

<ul>
	<li>Gordon Kaiser -&nbsp;Arbitrator &amp; Counsel, Previously Vice-Chair of the Ontario Energy Board</li>
	<li>The Hon.&nbsp;Joseph T. Kelliher -&nbsp;Previously Chair, United States Federal Energy Regulatory Commission (FERC)</li>
</ul>

<p><em>*This program is eligible for up to 1.5 hours of substantive CPD credits with the LSO,&nbsp;the LSBC and the Barreau du Québec,&nbsp;and may be eligible for up to 1.5 hours of CPD/CLE credits in other jurisdictions. If you indicate on your registration form that a certificate of participation is required,&nbsp;we will email you your certificate after the session.</em></p>
",NULL,NULL,00:56.0,https://sites-gowlingwlg.vuturevx.com/106/6010/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,f1e960f5-8231-4c56-b7bf-9898ebb538c5,NULL,NULL,6fe9a7f4-4412-4799-9fae-fdd5ec9db68a,NULL,Webinar,Ian A. Mondrow,Webinar,34471,GWLG.Events,"<p>Energy Innovators Roundtable Series</p>
",~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/106/6010/landing-pages/event-registration-(blank-form).asp,Register now,GWLG.Canada,0,0CDA2C7E-BFD7-48AD-991D-C46DBB4E55AB,Gowling WLG Speaker,NULL,NULL,Energy,NULL,NULL,NULL,~/getmedia/26d744f9-093b-4acf-92a4-673c64a66ec8/210816-energy-roundtable-1-social-image_1.jpg.xml?width=1272&height=675&ext=.jpg,NULL,NULL
440,/Events/2021/Factors-to-consider-BC-cleantech-sector,en-GB,33B55A36-ADE6-48D5-888D-D91D3D22E572,Factors to consider BC cleantech sector,Scale-up! Factors to consider when scaling your business in BC's cleantech sector,"Within the next five years, the exporting of Canadian cleantech assets is expected to become a $20 billion annual industry. Canada’s commitment to net-zero and the increased demand for sustainable investments have increased investment in cleantech companies across the country.",~/getmedia/972ebf0b-f96c-4aaa-b6c7-0cffa59e5a05/210821-BC-cleantech-charging-stations.jpg.xml?width=930&height=450&ext=.jpg,Electric car charging station,GWLG.Webinar,00:00.0,00:00.0,12:00,13:00,PDT,1,1 hour,"<p>Within the next five years, the exporting of Canadian cleantech assets is expected to become a $20 billion annual industry. Canada&#39;s commitment to net-zero and the increased demand for sustainable investments have increased investment in cleantech companies across the country.</p>

<p>BC&#39;s clean technology companies are scaling-up as a surge of funding flows into the province&#39;s cleantech sector. However, scaling can be a serious challenge when it comes to: attracting and retaining talent, leveraging those funds to develop new products and export to new markets, updating an IP strategy to reflect that expansion, investor relations, and ongoing evaluation of financing options.</p>

<p>On September 29, our panel of industry insiders will discuss how BC cleantech companies can overcome these challenges and capitalize on opportunities to scale and anchor in BC.</p>

<p><em data-mce-style=""color: #005aa9;"">*This program is eligible for up to 1 hour of substantive CPD credits with the LSO, the LSBC and the Barreau du Québec, and may be eligible for up to 1 hour of CPD/CLE credits in other jurisdictions. If you indicate that a certificate is required on your registration form, we will email you your certificate after the session.</em></p>

<h2>Guest panel featuring:</h2>

<div class=""grid-container grid-container-inline"">
<div class=""grid-x"">
<h3 class=""small-12 medium-3 cell""><a href=""https://foresightcac.com/team/"" target=""_blank""><img alt=""Find out more about Jeanette Jackson"" src=""~/getmedia/0e29a39c-3aa2-473e-b8ea-043ec803ab40/jeanette-jackson-sq.png.xml?width=200&amp;height=200"" style=""width: 150px; height: 150px;"" /></a><br />
<a href=""https://foresightcac.com/team/"" target=""_blank"">Jeanette Jackson</a>,<br />
CEO&nbsp;at Foresight</h3>

<h3 class=""small-12 medium-4 cell""><a href=""https://www.fortcapital.ca/cameron-burke/"" target=""_blank""><img alt=""Find out more about Cameron Burke"" src=""~/getmedia/322971b4-09f0-4dfd-bfa7-c3ae0338e439/cameron-burke.jpg.xml?width=200&amp;height=200"" style=""width: 150px; height: 150px;"" /></a><br />
<a href=""https://www.fortcapital.ca/cameron-burke/"" target=""_blank"">Cameron Burke</a>,<br />
Partner at Fort Capital</h3>

<h3 class=""small-12 medium-4 cell""><a href=""https://loopenergy.com/leadership-bios/#darrenready"" target=""_blank""><img alt=""Find out more about Cameron Burke"" src=""~/getmedia/7f23a5a8-dc57-4706-8e7f-0b397e6bcbd6/Darren-Ready-Loop-Energy.jpg.xml?width=149&amp;height=149"" style=""width: 149px; height: 149px;"" /></a><br />
<a href=""https://www.fortcapital.ca/cameron-burke/"" target=""_blank"">Darren Ready</a>,<br />
CFO at Loop Energy</h3>
</div>
</div>
",NULL,NULL,00:00.0,https://sites-gowlingwlg.vuturevx.com/104/6177/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,cdfc9b50-74c2-4af5-9508-342935f81ccd,08b9a44c-bb26-4255-9779-296a124fcbee,472d49e5-40be-4cff-9dfc-86f60866c42d,b90b93dd-dfd5-4115-9af8-148b313aa426,NULL,Webinar,Roch J. Ripley,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/104/6177/landing-pages/event-registration-(blank-form).asp,Register now,GWLG.Canada,0,NULL,Gowling WLG speaker,NULL,NULL,Tech,Intellectual Property Law,Cleantech,NULL,~/getmedia/78065f4a-987b-4d3f-95d3-ce612d4ffe59/210824-Scale-up-Cleantech-BC.jpg.xml?width=1272&height=675&ext=.jpg,NULL,NULL
441,/Events/2021/Evidence-in-patent-cases,en-GB,6C61E8EB-2E46-4002-98DC-A9D56A8839EA,Evidence in patent cases,Lifecycle of a smart idea | Is there enough proof in the patent? Evidence in patent cases,Members of Gowling WLG's global IP team examine the main issues that can arise in a patent dispute.,~/getmedia/3488318d-7839-433e-92c3-98e091615a2c/210817-evidence-patent-cases-webinar-min.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Webinar,00:00.0,00:00.0,"2 p.m. BST, 3 p.m. CEST, 9 p.m. CST, 9 a.m.",NULL,EDT,1,"0.75 hour of substantive CPD credits with the LSO, LSBC and Quebec, and may be eligible for up to 0.75 hours of credits in other jurisdictions","<p>Evidence is one of the most vital elements when intellectual property (IP) infringement disputes come into play. In this installment of our &quot;Lifecycle of a Smart Idea&quot; series,&nbsp;which is dedicated to helping you maximize opportunities and minimize risk when taking your innovative ideas to the global market,&nbsp;members of Gowling WLG&#39;s global IP team examine the main issues that can arise in a patent dispute,&nbsp;such as:</p>

<ul>
	<li>Who has the onus on each main issue?</li>
	<li>What are the evidentiary burdens?</li>
	<li>What level of proof is needed?</li>
	<li>What expert evidence is needed?</li>
</ul>

<p>This webinar will allow attendees to hear from members of our IP team in Canada, the UK, Europe and China, as well as from a US patent arbitrator.</p>

<h2>Post-webinar breakout rooms</h2>

<p>Immediately following the webinar, we invite you to join our panellists in virtual breakout rooms where you will have the opportunity to ask direct questions and participate in a discussion with other attendees.</p>

<p><em>*This program is eligible for up to 45 minutes (0.75 hours) of substantive CPD credits with the LSO,&nbsp;the LSBC and the Barreau du Québec,&nbsp;and may be eligible for up to 45 minutes (0.75 hours) of CPD/CLE credits in other jurisdictions. If you indicate on your registration form that a certificate of participation is required,&nbsp;we will email you your certificate after the session.</em></p>

<h2>Speakers</h2>

<ul>
	<li>Selena Kim - Partner, Gowling WLG</li>
	<li>Céline Bey - Partner, Gowling WLG</li>
	<li>Laurent Massam - Partner, Gowling WLG</li>
	<li>William Needle -&nbsp;Mediator &amp; Arbitrator,&nbsp;JAMS</li>
	<li>Elliot Papageorgiou - Head of IP Strategy in China, Gowling WLG</li>
	<li>Jamie Rowlands - Partner, Gowling WLG</li>
</ul>

<h2>Watch previous episodes</h2>

<p>This is the 16<sup>th</sup> installment in our&nbsp;<a href=""https://gowlingwlg.com/en/ip-law-hub/webinars/"">Lifecycle of a Smart Idea</a>&nbsp;series, dedicated to helping you&nbsp;maximise&nbsp;opportunity and&nbsp;minimise&nbsp;risk when taking innovative ideas to the global market.<em>&nbsp;<a href=""~/en/insights-resources/?page=1&amp;services=454&amp;resourcetypes=GWLG.Webinar"" target=""_self"">Watch more from the series &raquo;&nbsp;</a></em></p>
",NULL,NULL,00:54.0,https://sites-gowlingwlg.vuturevx.com/106/6172/landing-pages/event-registration-(blank-form)---sept.-29.asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,08b9a44c-bb26-4255-9779-296a124fcbee,8c0f2d68-a5d9-441b-95a9-3b2a98a43c1d,4ad938d1-5bfa-4a5e-a5d8-14b7d90e1482;ad4cc2a0-5825-4d92-930d-64226a7659b3;ee5606d1-d055-43cc-95da-bb9b7b475f0b;a7effb2c-0eb7-4c96-8973-18670001730f;324b94dc-effd-40f6-9b4b-de402aa7d013,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/106/6172/landing-pages/event-registration-(blank-form)---sept.-29.asp,Register now,GWLG.Canada;GWLG.Global;GWLG.UK;GWLG.China;GWLG.France;GWLG.UnitedStates,0,0CDA2C7E-BFD7-48AD-991D-C46DBB4E55AB,Gowling WLG Speakers,NULL,NULL,NULL,Intellectual Property Law,IP Law Hub,NULL,~/getmedia/a3bb30b0-1797-4c1f-971a-8cee0b5da434/210817-evidence-patent-cases-webinar-SM.jpg.xml?width=1272&height=675&ext=.jpg,NULL,NULL
442,/Events/2021/Open-source-licenses-and-IP-rights,en-GB,3424DD70-8DC6-4348-95D4-A6BBED8B0C36,Open source licenses and IP rights,Blockchain Webinar Series | How do open source licenses affect your intellectual property rights?,The next session in Gowling WLG's popular blockchain webinar series discusses the practicalities and pitfalls of open source software.,~/getmedia/dbae47a8-49b7-4a0c-bf40-4c673775dc1f/210422-blockchain-webinar-series.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Webinar,00:00.0,00:00.0,1:30 p.m.,2:30 p.m.,EDT,0,1 hour,"<p>Open source software is seemingly everywhere and can help businesses generate value and operate more efficiently - if used properly. The next session in Gowling WLG&#39;s popular blockchain webinar series discusses the practicalities and pitfalls of open source software.</p>

<p>Join our panel as they discuss the nature of various open source licenses and the issues posed by particular&nbsp;prevalent licenses,&nbsp;open source &quot;war stories&quot;&nbsp;in the context of closing an M&amp;A deal,&nbsp;and what happens in real life after closing during post-deal integration.</p>

<p>Could your business be affected next? Don&#39;t miss out on what is sure to be an insightful and lively panel discussion.</p>

<h2>Moderator</h2>

<ul>
	<li>Usman Sheikh -&nbsp;Partner &amp; National Head - Blockchain &amp; Smart Contract Group,&nbsp;Gowling WLG</li>
</ul>

<h2>Speakers</h2>

<ul>
	<li>Viona Duncan -&nbsp;Partner &amp; Co-Chair of Global Tech,&nbsp;Gowling WLG</li>
	<li>Roch Ripley -&nbsp;Partner &amp; Head of Vancouver Intellectual Property Department,&nbsp;Gowling WLG</li>
	<li>Lesley Boveri - Software IP Counsel,&nbsp;SAP</li>
</ul>

<p><em>This webinar is part of our 2021 Blockchain Webinar Series.&nbsp;<a href=""https://gowlingwlg.com/en/insights-resources/?page=1&amp;resourcetypes=GWLG.Webinar&amp;q=blockchain%20webinar%20series&amp;mode=anyword&amp;sort=Relevance&amp;services=31890"">Watch previous webinars from the series &raquo;</a></em></p>

<p><em>*This program is eligible for up to 1 hour of substantive CPD credits with the LSO,&nbsp;the LSBC and the Barreau du Québec,&nbsp;and may be eligible for up to 1 hour of CPD/CLE credits in other jurisdictions. If you indicate on your registration form that a certificate of participation is required,&nbsp;we will email you your certificate after the session.</em></p>
",NULL,NULL,30:00.0,https://sites-gowlingwlg.vuturevx.com/106/5984/landing-pages/event-registration-(blank-form)---sept.-16.asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,cdfc9b50-74c2-4af5-9508-342935f81ccd,08b9a44c-bb26-4255-9779-296a124fcbee;20e41ca2-b15a-4815-bb5c-7cf60c18278f,8c0f2d68-a5d9-441b-95a9-3b2a98a43c1d;db65f669-80d2-45f3-9161-2c00aa6f157e,300e471b-5cfe-45e3-bb75-6cc00bbdf27b;425a9689-d70c-46ff-b7b6-8994bb782c5f;b90b93dd-dfd5-4115-9af8-148b313aa426,NULL,Webinar,"Usman M. Sheikh, Viona M. Duncan, Roch J. Ripley",Webinar,34471,GWLG.Events,"<p>2021 Blockchain Webinar Series</p>
",~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/106/5984/landing-pages/event-registration-(blank-form)---sept.-16.asp,Register now,GWLG.Canada;GWLG.UnitedStates,0,0CDA2C7E-BFD7-48AD-991D-C46DBB4E55AB,Gowling WLG Speakers,NULL,NULL,Tech,"Intellectual Property Law, Blockchain & Smart Contracts","IP Law Hub, Blockchain & Cryptocurrency",NULL,~/getmedia/785bff3d-cb56-4533-9940-f242fdcbf8d1/210826-blockchain-webinar-series-open-source-IP-002.jpg.xml?width=1272&height=675&ext=.jpg,NULL,NULL
443,/Events/2021/Getting-climate-change-on-the-board-agenda,en-GB,AD48B61E-465E-4B1A-BA88-D26D49EBAF58,Getting climate change on the board agenda,Getting climate change on the board agenda: Directors share their strategies,"This panel, featuring Gowling WLG’s own Liane Langstaff, will share their insights and strategies for getting climate change on the board agenda, and will also discuss the related legal obligations of directors.",~/getmedia/2f7b13f1-c0ea-4c4f-86b9-082e7a75fb37/210901-climate-change-board.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Webinar,00:00.0,00:00.0,12:00 p.m.,1:00 p.m.,EDT,0,NULL,"<p>Management of climate-related financial risks are now a core issue for businesses in countless sectors. The lingering question for many of these companies is how to get the board&#39;s attention.</p>

<p>Given our rapidly developing knowledge of the global risks arising from climate change,&nbsp;there has never been a more crucial time to encourage boards to pay close attention. This panel,&nbsp;featuring Gowling WLG&#39;s own&nbsp;Liane Langstaff,&nbsp;will share their insights and strategies for getting climate change on the board agenda,&nbsp;and will also discuss the related legal obligations of directors. Attendees will come away from the event armed with principles and best practices that can help effectively guide board decisions related to climate change.</p>

<h2>Speakers</h2>

<ul>
	<li>Liane Langstaff - Environmental Lawyer, Gowling WLG</li>
	<li>Poonam Puri -&nbsp;Professor of Business Law &amp; Governance at Osgoode Hall Law School, York University</li>
	<li>Janis Sarra - Professor of Law,&nbsp;University of British Columbia</li>
	<li>Christie Stephenson -&nbsp;Executive Director of Peter P. Dhillon Centre for Business Ethics,&nbsp;UBC Sauder School of Business</li>
</ul>

<p><em>*Limited complimentary passes are available to our clients, please contact <a href=""mailto:liane.langstaff@gowlingwlg.com"">Liane Langstaff</a> if you would like to attend.&nbsp;</em></p>
",NULL,NULL,00:00.0,https://sites-gowlingwlg.vuturevx.com/106/6182/compose-email/getting-climate-change-on-the-board-agenda-2021-09-14.asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,064c02f0-ff64-42f8-8a71-c8dece3600fd,NULL,253ecee1-50cf-4b3c-b21d-2a672a89946d,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,"<p><img alt=""Women get on board logo"" src=""~/getmedia/c40f325f-3c97-49d4-8167-40c7a98327c4/WGOB-logo-2.png.xml?width=125&amp;height=125"" style=""width: 125px; height: 125px;"" /></p>
",~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://app.glueup.com/event/36710/,Register now,GWLG.Canada,0,0CDA2C7E-BFD7-48AD-991D-C46DBB4E55AB,Gowling WLG Speaker,NULL,NULL,NULL,Climate Change and Environmental Law,NULL,NULL,~/getmedia/2396ce72-da50-4aec-b3dd-3600bbd95496/210901-Climate-change-event.jpg.xml?width=1272&height=675&ext=.jpg,NULL,NULL
444,/Events/2021/Tax-dispute-resolution-monthly-update,en-GB,DA439877-40E7-40A6-B57D-916BC1DD0B0C,Tax dispute resolution monthly update,2021 Tax Dispute Resolution Monthly Update | Session 1,"Topics to be discussed at session 1 include recent developments in rescission, how not to respond to an audit and a voluntary disclosures update.",~/getmedia/d1b4713a-9293-4542-b6b0-8a45965c339d/210901-Tax-dispute-resolution-session-1.jpg.xml?width=930&height=450&ext=.jpg,Close up of hands working with calculator and laptop,GWLG.Webinar,00:00.0,00:00.0,12:00 p.m.,12:30 p.m.,EDT,1,30 minutes,"<p>With the Canada Revenue Agency deploying massive resources to crack down on perceived tax avoidance, it&rsquo;s now more important than ever to stay up to date with new CRA policies, legislation and case law. Please join&nbsp;Stevan Novoselac,&nbsp;John Sorensen&nbsp;and&nbsp;Pierre Alary&nbsp;for Gowling WLG&rsquo;s 30 minute interactive monthly tax dispute resolution (TDR) webinars, to keep up with current developments and learn practical insights on how to successfully resolve tax disputes with the CRA.</p>

<p>Topics to be discussed at session 1 include recent developments in rescission, how not to respond to an audit and a voluntary disclosures update.</p>

<p>To submit a question or topic to be covered in future webinars, please click&nbsp;<a href=""mailto:TDR@gowlingwlg.com"">here</a>.</p>

<p><em>*This program is eligible for up to 30 minutes of substantive CPD credits with the LSO, the LSBC and the Barreau du Québec, and may be eligible for up to 30 minutes of CPD/CLE credits in other jurisdictions. If you indicate on your registration form that a certificate of participation is required, we will email you your certificate after the session.</em></p>

<p>&nbsp;</p>
",NULL,NULL,00:26.0,https://sites-gowlingwlg.vuturevx.com/106/6140/landing-pages/event-registration-(blank-form)---sept.-21.asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,fa76a598-e571-4940-95e3-81b4cc0c7fe6,NULL,6b8f6eff-0e11-457f-a5fb-13663ac51e49;2de02f2d-4a7f-490a-8a3b-73ebf0c8073f;5cecda13-17b4-4875-b9e9-5edae877cf23,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/106/6140/landing-pages/event-registration-(blank-form)---sept.-21.asp,Register now,GWLG.Canada,0,0CDA2C7E-BFD7-48AD-991D-C46DBB4E55AB,Speakers,NULL,NULL,NULL,Tax Dispute Resolution,NULL,NULL,~/getmedia/017836c3-558e-43d4-9816-848d53459f0d/210901-TDR-session-1.jpg.xml?width=1272&height=675&ext=.jpg,NULL,NULL
445,/Events/2021/Managing-disabilities-in-the-workplace,en-GB,15070056-30B3-4D08-BDF8-83C61C5B690A,Managing disabilities in the workplace,"Employment, Labour & Equalities Law Webinar Series | Managing disabilities in the workplace","Join Gowling WLG on Thursday, September 30 for the fourth webinar in the Employment, Labour & Equalities Law webinar series, during which our experienced panel will highlight best practices for employers managing disabilities in the workplace.",~/getmedia/8ad0676d-3acd-4cdb-8b14-9224476f44ef/210909-employment-disabilities.jpg.xml?width=930&height=450&ext=.jpg,Female manager siting at her desk talking to an employee while looking at paperwork,GWLG.Webinar,00:00.0,00:00.0,8:30 a.m.,10:00 a.m.,EDT,1,1.5 hours,"<p>Failure to accommodate employees&#39;&nbsp;disabilities can lead to significant exposure to liability. Join Gowling WLG on&nbsp;Thursday,&nbsp;September 30&nbsp;for the fourth webinar in the Employment,&nbsp;Labour &amp; Equalities Law webinar series, during which our experienced panel will highlight best practices for employers managing disabilities in the workplace.</p>

<p>In particular,&nbsp;speakers will cover human rights legislation as it relates to the duty to accommodate,&nbsp;disability management (including how to deal with medical notes or an uncooperative employee) and the circumstances where a permanent disability leads to a frustrated employment contract.</p>

<p>We look forward to having you join us. Register your attendance today!</p>

<p><em>This webinar is part of our 2021&nbsp;Employment,&nbsp;Labour &amp; Equalities Law Webinar Series. <a href=""https://gowlingwlg.com/en/insights-resources/?page=1&amp;resourcetypes=GWLG.Webinar&amp;services=651&amp;q=Employment%2C%20Labour%20%26%20Equalities%20Law%20Webinar%20Series&amp;mode=anyword&amp;sort=Relevance&amp;locations=GWLG.Canada"">Watch more from the series &raquo;</a></em></p>

<p><em>*This program is eligible for up to 1.5 hours of substantive CPD credits with the LSO, the LSBC and the Barreau du Québec,&nbsp;and may be eligible for up to 1.5 hours of CPD/CLE credits in other jurisdictions. If you indicate that a certificate is required on your registration form,&nbsp;we will email you your certificate after the session.</em></p>
",NULL,NULL,30:54.0,https://sites-gowlingwlg.vuturevx.com/106/5966/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,d8837737-40d2-4472-8a9e-ba4101ec2105,NULL,5d0d0341-b3e5-480d-9812-441dfc3ba63c;5031f3f0-f36d-44c6-84dc-c06341cc314a;13527092-a077-4dfd-a6d8-d5977a2bda32,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/106/5966/landing-pages/event-registration-(blank-form).asp,Register now,GWLG.Canada,0,0CDA2C7E-BFD7-48AD-991D-C46DBB4E55AB,Speakers,NULL,NULL,NULL,"Employment, Labour & Equalities",NULL,NULL,~/getmedia/d4f7b636-f366-4c3e-ad69-7dabfe2788ea/210910-employment-managing-disabilities.jpg.xml?width=1272&height=675&ext=.jpg,NULL,NULL
446,/Events/2021/ThinkHouse-Foundations-Litigation-Survival-Guide,en-GB,0719D162-6481-4614-9AA9-D2F72945D5B8,ThinkHouse Foundations Litigation Survival Guide,Litigation Survival Guide | ThinkHouse Foundations,"In this live and interactive webinar, Ana Lelliott will provide an overview of the court process and discusses responding to a claim, enforcing contractual obligations and contractual termination. ",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,11:09.0,11:17.0,10:30,11:15,BST,0,NULL,"<p>In this live and interactive webinar, Ana Lelliott will provide an overview of the court process and discusses responding to a claim, enforcing contractual obligations and contractual termination. She will provide practical tips for dealing with commercial disputes, the do&#39;s and don&#39;ts of responding to a claim. She will explain &#39;without prejudice&#39;: what it means, and when and why you should use it.</p>

<p>During the sessions, the speakers will provide useful information and practical tips on their respective topics, and will answer as many questions as possible in the time available.</p>

<p>This webinar is the first in a series of three <a href=""~/en/topics/thinkhouse/junior-in-house-counsel/"">ThinkHouse Foundations</a> webinars running in October. Use the button above to register today.</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession. Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,30:00.0,https://marketing.uk.gowlingwlg.com/reaction/Home?RSID=9ZQds7cDe4fmfbtlJkUKvR1TgL9L5IUuzzjKnbsBRzOyJQZdFl617QmDD0r16x7e,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,c774be76-80ec-4195-83a3-5850b5e2a4a2;82475447-1cf2-4aa7-9a23-24e5b1a7b3bd,a143cbfd-d333-42a0-89a6-7287894464f1,568bb028-57c9-489c-9335-0eecf0f1a55e;36577668-7f35-419a-a252-68405ab1f2bd,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/5c73cf2c-5ac2-465b-9dff-9377774e4d9b/thinkhouse-foundations-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/a1bd54ac-e5a3-4c45-8585-8ccbdce9e524/thinkhouse-foundations-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,NULL,NULL,"Commercial Litigation, Litigation & Dispute Resolution",ThinkHouse,NULL,NULL,"<p><a href=""~/en/topics/thinkhouse/junior-in-house-counsel/"">ThinkHouse Foundations</a> is Gowling WLG&#39;s tailored programme for in-house lawyers starting out in their careers. Drawing on the topics and insights focused on in ThinkHouse, we explore the opportunities and challenges faced by paralegals, trainees and lawyers of up to five years PQE. Drawing on our practical experience, we aim to provide you with relevant knowledge on a range of topics that you can apply to your everyday work.</p>
",NULL
447,/Events/2021/ThinkHouse-Foundations-Return-to-the-Office,en-GB,022FBDFF-024A-45ED-9BFC-4D39BDF56716,ThinkHouse Foundations Return to the Office ,Return to the Office – The Old Norm? - ThinkHouse Foundations,In this live and interactive webinar Jasmine Coyne will discuss the employment law issues that employers might face as employees are required to return to the office.,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,11:09.0,11:17.0,10:30,11:15,BST,0,NULL,"<p>Many businesses are increasing the number of staff returning to the office this autumn. In this live and interactive webinar Jasmine Coyne will discuss the employment law issues that employers might face as employees are required to return to the office.</p>

<p>During the sessions, the speakers will provide useful information and practical tips on their respective topics, and will answer as many questions as possible in the time available.</p>

<p>This webinar is the first in a series of three <a href=""~/en/topics/thinkhouse/junior-in-house-counsel/"">ThinkHouse Foundations</a> webinars running in October. Use the button above to register today.</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession. Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,30:00.0,https://marketing.uk.gowlingwlg.com/reaction/Home?RSID=9ZQds7cDe4fmfbtlJkUKvR1TgL9L5IUuzzjKnbsBRzOyJQZdFl617QmDD0r16x7e,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,d8837737-40d2-4472-8a9e-ba4101ec2105,a143cbfd-d333-42a0-89a6-7287894464f1;6b906235-110b-475e-88cd-4ddef78eb8b8,a184f00c-a582-4296-b689-c8e9a7db7b24;6ad4fe15-41cb-46d7-98f9-5349159e2bf2,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/5c73cf2c-5ac2-465b-9dff-9377774e4d9b/thinkhouse-foundations-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/a1bd54ac-e5a3-4c45-8585-8ccbdce9e524/thinkhouse-foundations-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,NULL,NULL,"Employment, Labour & Equalities","ThinkHouse, COVID-19: How will coronavirus impact your business?",NULL,NULL,"<p><a href=""~/en/topics/thinkhouse/junior-in-house-counsel/"">ThinkHouse Foundations</a> is Gowling WLG&#39;s tailored programme for in-house lawyers starting out in their careers. Drawing on the topics and insights focused on in ThinkHouse, we explore the opportunities and challenges faced by paralegals, trainees and lawyers of up to five years PQE. Drawing on our practical experience, we aim to provide you with relevant knowledge on a range of topics that you can apply to your everyday work.</p>
",NULL
448,/Events/2021/ThinkHouse-Foundations-Data-Protection,en-GB,C3CC6C11-D750-4630-869B-4BC0005230E5,ThinkHouse Foundations Data Protection ,Hot Topics in Data Protection - ThinkHouse Foundations,"In this live and interactive webinar Claire Van Ristell will look at the latest hot areas and developments of data protection, including international transfers and updated guidance from the ICO.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,11:09.0,11:17.0,10:30,11:15,BST,0,NULL,"<p>Data protection law is constantly evolving and in-house counsel must stay up to date.&nbsp;In this live and interactive webinar Claire Van Ristell will look at the latest hot areas and developments of data protection, including international transfers and updated guidance from the ICO.</p>

<p>During the sessions, the speakers will provide useful information and practical tips on their respective topics, and will answer as many questions as possible in the time available.</p>

<p>This webinar is the first in a series of three <a href=""~/en/topics/thinkhouse/junior-in-house-counsel/"">ThinkHouse Foundations</a> webinars running in October. Use the button above to register today.</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession. Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,30:00.0,https://marketing.uk.gowlingwlg.com/reaction/Home?RSID=9ZQds7cDe4fmfbtlJkUKvR1TgL9L5IUuzzjKnbsBRzOyJQZdFl617QmDD0r16x7e,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,2e9a87e2-3d2e-4d69-ba9c-06b4b358ca0d,a143cbfd-d333-42a0-89a6-7287894464f1,236967c7-ad0c-4404-9b5b-b5546d56076d;6ad4fe15-41cb-46d7-98f9-5349159e2bf2,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/5c73cf2c-5ac2-465b-9dff-9377774e4d9b/thinkhouse-foundations-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/a1bd54ac-e5a3-4c45-8585-8ccbdce9e524/thinkhouse-foundations-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,NULL,NULL,Cyber Security & Data Protection Law,ThinkHouse,NULL,NULL,"<p><a href=""~/en/topics/thinkhouse/junior-in-house-counsel/"">ThinkHouse Foundations</a> is Gowling WLG&#39;s tailored programme for in-house lawyers starting out in their careers. Drawing on the topics and insights focused on in ThinkHouse, we explore the opportunities and challenges faced by paralegals, trainees and lawyers of up to five years PQE. Drawing on our practical experience, we aim to provide you with relevant knowledge on a range of topics that you can apply to your everyday work.</p>
",NULL
449,/Events/2021/ThinkHouse-Competition-law-dawn-raids,en-GB,ADC535EC-26A3-4E13-9B18-11F189F76CA7,ThinkHouse - Competition law dawn raids,"UK competition law dawn raids in the ""new normal"" Are you ready? | ThinkHouse","With competition authorities returning to conduct dawn raids, have your business's dawn raid policies been adapted to address the new normal of hybrid working?",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,11:12.0,11:17.0,10:30,11:15,GMT,0,NULL,"<p>With UK businesses embracing hybrid working patterns, a typical week for many staff now sees them combining remote working and working from an office location.</p>

<p>But, with competition authorities returning to conduct dawn raids, have your business&#39;s dawn raid policies been adapted to address the &quot;new normal&quot; of hybrid working? If they have, would staff know what to do in the event of a dawn raid?</p>

<p>Investigations into suspected infringements of UK competition law can result in significant financial penalties for businesses, as well as director disqualifications, and even criminal sanctions for individuals. Therefore, if a dawn raid takes place, it is critical that businesses are able to respond quickly and effectively.</p>

<p>During this live <a href=""~/en/thinkhouse/"">ThinkHouse</a> webinar, our competition law experts Samuel Beighton and Bernardine Adkins will consider the Competition and Market Authority&#39;s powers of investigation, and outline key issues for businesses to have in mind when refreshing their &quot;pre-COVID-19&quot; dawn raid policies to reflect the &quot;new normal&quot; of hybrid working.</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession. Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,30:00.0,https://marketing.uk.gowlingwlg.com/reaction/Home?RSID=hswI0KXP7WwBpxVlSbirRRIkjqLLqZIOQJWLfZ7a60TgA7Uowo7Wby1L5W6H1KyU,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,b3f9fce6-b77c-4e15-978e-eaa664c609dc,a143cbfd-d333-42a0-89a6-7287894464f1,2563a6d6-5f45-46c5-8698-e572a35f100b;f13a9240-2482-4077-be83-ebaa741dc3f0,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/5d57b23c-f4d3-44e3-a08e-7ee56360fd71/thinkhouse-snr-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/27fda93c-8849-4d7e-a292-bcc5eb1e7896/thinkhouse-snr-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,NULL,NULL,Competition Law & Antitrust,ThinkHouse,NULL,NULL,NULL,NULL
450,/Events/2021/Blockchain-litigation,en-GB,9B529C26-D1E2-4EC5-858F-70EB37F7A0D7,Blockchain litigation,"Blockchain Webinar Series | Blockchain litigation - A discussion of the latest civil, regulatory and criminal cases","Our panelists will explore the topic of securities litigation in the blockchain space, including cases involving ICOs, crypto-asset trading platforms, DeFi, and more.",~/getmedia/dbae47a8-49b7-4a0c-bf40-4c673775dc1f/210422-blockchain-webinar-series.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Webinar,00:00.0,00:00.0,1:30 p.m.,2:30 p.m.,EDT,1,1 hour,"<p>Are you up to speed on the latest developments in blockchain litigation? Join us on October 14,&nbsp;as leading litigation experts from Canada and the United States offer a fresh update on cases and cutting-edge trends involving blockchain litigation.</p>

<p>Our panelists will explore the topic of securities litigation in the blockchain space,&nbsp;including cases involving ICOs, crypto-asset trading platforms, DeFi, and more. Litigation involving blockchain-related cyber security breaches,&nbsp;civil class actions,&nbsp;criminal prosecutions and insolvency proceedings will also be discussed.</p>

<p>In addition to our Gowling WLG panelists,&nbsp;we are pleased to feature special guests, Grant Fondo and Zoe Bellars from Goodwin Procter LLP,&nbsp;to discuss leading litigation issues in the United States.</p>

<h2>Speakers</h2>

<ul style=""margin-left:0.3in;"">
	<li>Usman M.&nbsp;Sheikh&nbsp;-&nbsp;Partner &amp; National Head&nbsp;- Blockchain &amp; Smart Contracts Group,&nbsp;Gowling WLG</li>
	<li>Brent Arnold&nbsp;- Partner, Gowling WLG</li>
	<li>Kavi Sivasothy&nbsp;-&nbsp;Associate,&nbsp;Gowling WLG</li>
	<li>Zoe Bellars&nbsp;- Associate,&nbsp;Goodwin Procter</li>
	<li>Grant Fondo&nbsp;- Partner,&nbsp;Goodwin Procter</li>
</ul>

<p><em>This webinar is part of our 2021 Blockchain Webinar Series.&nbsp;<a href=""https://gowlingwlg.com/en/insights-resources/?page=1&amp;resourcetypes=GWLG.Webinar&amp;q=blockchain%20webinar%20series&amp;mode=anyword&amp;sort=Relevance&amp;services=31890"" target=""_blank"">Watch more from the series &raquo;</a></em></p>

<p><em>*This program is eligible for up to 1 hour of substantive CPD credits with the LSO,&nbsp;the LSBC and the Barreau du Québec,&nbsp;and may be eligible for up to 1 hour of CPD/CLE credits in other jurisdictions. If you indicate on your registration form that a certificate of participation is required,&nbsp;we will email you your certificate after the session.</em></p>
",NULL,NULL,30:04.0,https://sites-gowlingwlg.vuturevx.com/106/5984/landing-pages/event-registration-(blank-form)---oct.-14.asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,cdfc9b50-74c2-4af5-9508-342935f81ccd,20e41ca2-b15a-4815-bb5c-7cf60c18278f,db65f669-80d2-45f3-9161-2c00aa6f157e,300e471b-5cfe-45e3-bb75-6cc00bbdf27b;7c982ff4-2b05-446c-9f31-9d84cd6e9912;1cf0dd94-9cc3-4d42-b64f-a001f6676a9f,NULL,Webinar,"Usman M. Sheikh, Brent J. Arnold, Kavi Sivasothy",Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/106/5984/landing-pages/event-registration-(blank-form)---oct.-14.asp,Register now,GWLG.Canada;GWLG.UnitedStates,0,0CDA2C7E-BFD7-48AD-991D-C46DBB4E55AB,Gowling WLG Speakers,NULL,NULL,Tech,Blockchain & Smart Contracts,Blockchain & Cryptocurrency,NULL,~/getmedia/c792d7cb-05a4-4404-9058-22bed89e1aae/211001-blockchain-litigation.jpg.xml?width=1272&height=675&ext=.jpg,NULL,NULL
451,/Events/2021/Tax-dispute-resolution-monthly-update-session-2,en-GB,9CABA968-94D9-4459-858A-EB3207D5C507,Tax dispute resolution monthly update session 2,2021 Tax Dispute Resolution Monthly Update | Session 2,"Topics to be discussed at session 2 include rectification update, amending tax court pleadings and CRA VDP operations manual takeaways.",~/getmedia/d1b4713a-9293-4542-b6b0-8a45965c339d/210901-Tax-dispute-resolution-session-1.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Webinar,00:00.0,00:00.0,12:00 p.m.,12:30 p.m.,EDT,1,30 minutes,"<p>With the Canada Revenue Agency deploying massive resources to crack down on perceived tax avoidance,&nbsp;it&#39;s now more important than ever to stay up to date with new CRA policies, legislation and case law. Please join&nbsp;Stevan Novoselac, John Sorensen&nbsp;and&nbsp;Pierre Alary&nbsp;for Gowling WLG&#39;s 30 minute interactive monthly tax dispute resolution (TDR) webinars,&nbsp;to keep up with current developments and learn practical insights on how to successfully resolve tax disputes with the CRA.</p>

<p>Topics to be discussed at session 2 include the following:</p>

<ul>
	<li>Rectification update</li>
	<li>When to file a service complaint to the Taxpayers&rsquo; Ombudsperson</li>
	<li>Pandora Papers and CRA VDP Operations Manual top ten takeaways</li>
</ul>

<p>To submit a question or topic to be covered in future webinars, please click&nbsp;<a href=""mailto:TDR@gowlingwlg.com"">here</a>.</p>

<p><em>This webinar is part of our 2021&nbsp;Tax Dispute Resolution Monthly Update Series. <a href=""https://gowlingwlg.com/en/insights-resources/?page=1&amp;resourcetypes=GWLG.Webinar&amp;services=596"">Watch more from the series &raquo;</a></em></p>

<p><em>*This program is eligible for up to 30 minutes of substantive CPD credits with the LSO.&nbsp;the LSBC and the Barreau du Québec.&nbsp;and may be eligible for up to 30 minutes of CPD/CLE credits in other jurisdictions. If you indicate on your registration form that a certificate of participation is required,&nbsp;we will email you your certificate after the session.</em></p>
",NULL,NULL,00:20.0,https://sites-gowlingwlg.vuturevx.com/106/6140/landing-pages/event-registration-(blank-form)---oct.-26.asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,fa76a598-e571-4940-95e3-81b4cc0c7fe6,NULL,6b8f6eff-0e11-457f-a5fb-13663ac51e49;2de02f2d-4a7f-490a-8a3b-73ebf0c8073f;5cecda13-17b4-4875-b9e9-5edae877cf23,da439877-40e7-40a6-b57d-916bc1dd0b0c,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/106/6140/landing-pages/event-registration-(blank-form)---oct.-26.asp,Register now,GWLG.Canada,0,0CDA2C7E-BFD7-48AD-991D-C46DBB4E55AB,Speakers,NULL,NULL,NULL,Tax Dispute Resolution,NULL,NULL,~/getmedia/38f040a7-574a-40d6-a0f8-8690f334a08f/211006-Tax-dispute-resolution-session-2.jpg.xml?width=930&height=450&ext=.jpg,NULL,NULL
452,/Events/2021/Canadian-ESG-for-investors-and-lenders,en-GB,920007EE-2219-4EA2-BCF0-58E6EDFFB07B,Canadian ESG for investors and lenders,Canadian ESG for Investors and Lenders,"The panel will touch on ESG in the context of our current market, key considerations, and upcoming developments in Canadian ESG.",~/getmedia/8e173274-2f6d-41df-836a-24963626be5f/210930-esg-lenders-investors.jpg.xml?width=930&height=450&ext=.jpg,composition of two photos - hill with blue sky next to smokey city,GWLG.Webinar,00:00.0,00:00.0,11:00 a.m.,12:00 p.m.,EDT,1,1 hour,"<p>Please join Gowling WLG and Export Development Canada (EDC) for an engaging virtual panel discussion focused on Canadian ESG in investing and lending. The panel will touch on ESG in the context of our current market, as well as&nbsp;key considerations&nbsp;and upcoming developments in Canadian ESG.</p>

<h2>Topics will include:</h2>

<ul>
	<li>An overview of the current ESG landscape, and the importance of distinct Indigenous (&quot;I&quot;) elements in Canadian ESG discussions and implementation</li>
	<li>Emerging trends in the Canadian market, such as sustainability linked deals and support for energy transition</li>
	<li>ESG financial analysis and due diligence, including a focus on growing risks and opportunities&nbsp;tied to &quot;S&quot;&nbsp;factors in supply chains</li>
	<li>The expanding importance of social and governance considerations in addition to the more common environmental factors,&nbsp;and the over weave of Indigenous consideration in all three</li>
	<li>Identifying and funding opportunities for start-ups in cleantech, Indigenous and other ventures</li>
</ul>

<h2>Speakers</h2>

<ul>
	<li>Elizabeth Burton - Partner, Gowling WLG</li>
	<li>Dan Mancuso - Senior Vice-President, Financing &amp; Investments, EDC</li>
	<li>Lorraine Mastersmith - Partner, Gowling WLG</li>
	<li>Stephen Pike - Partner, Gowling WLG</li>
	<li>Scott Smith - Partner, Gowling WLG</li>
</ul>

<p><em>*This program is eligible for up to 1 hour of substantive CPD credits with the LSO,&nbsp;the LSBC and the Barreau du Québec,&nbsp;and may be eligible for up to 1 hour of CPD/CLE credits in other jurisdictions. If you indicate on your registration form that a certificate of participation is required,&nbsp;we will email you your certificate after the session.</em></p>
",NULL,NULL,00:54.0,https://sites-gowlingwlg.vuturevx.com/106/6235/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,b305a1b6-d0ba-41dc-8e53-579fd077b871,NULL,e1fcdf49-26d1-491c-8fd4-d7cc34fdcfb8;d2ac71e9-ae95-4802-98de-8a666d3d7255;03d6dce1-2df8-4f24-8e6b-d7bcda0b6509;0d5be81b-285b-4c83-a310-4415d05bbc47,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/106/6235/landing-pages/event-registration-(blank-form).asp,Register now,GWLG.Canada,0,0CDA2C7E-BFD7-48AD-991D-C46DBB4E55AB,Gowling WLG Speakers,NULL,NULL,NULL,"Environmental, Social and Governance (ESG)",NULL,NULL,~/getmedia/1d89cddf-f4dc-4481-85b9-a2cf60d161d7/210930-esg-lenders-investors-social.jpg.xml?width=1272&height=675&ext=.jpg,NULL,NULL
453,/Events/2021/EDI-in-the-Ontario-Energy-Sector,en-GB,D85DB9D5-99B7-492F-95D7-96A7A7FD9B7C,EDI in the Ontario Energy Sector,"Energy Innovators Roundtable Series | Equity, Diversity & Inclusion in the Ontario Energy Sector","Join Gowling WLG, alongside a panel of energy industry thought leaders, as we take a closer look at EDI challenges and opportunities facing the domestic energy sector.",~/getmedia/70bcd3c3-b70d-412a-83ab-147c499e5f0f/210816-energy-roundtable-page-image.jpg.xml?width=930&height=450&ext=.jpg,electric vehicle at charging station,GWLG.Webinar,00:00.0,00:00.0,2:00 p.m.,3:30 p.m.,EDT,1,1.5 hours of EDI and Practice Management & Professional Responsibility credit,"<p>In an evolving global energy market,&nbsp;Canadian employers need to draw upon our country&#39;s vast array of skills,&nbsp;experiences, and perspectives in order to keep pace.</p>

<p>In Ontario and elsewhere across the country, gaps remain when it comes to advancing equity, diversity, and inclusion (EDI). The recent Canadian-led&nbsp;<a href=""https://www.equalby30.org/sites/default/files/pictures/equalby30/pdf/the_equal_by_30_reporting_framework.pdf"">Equal by 30</a>&nbsp;survey revealed that women of colour, women with disabilities,&nbsp;and women facing mental health challenges encounter some of the most significant barriers to entry in the energy sector. Other energy sector research underscores the critical importance of EDI and the significant work yet to be done across all aspects of EDI.</p>

<p>Join Gowling WLG, alongside a panel of energy industry thought leaders,&nbsp;as we take a closer look at EDI challenges and opportunities facing the domestic energy sector. Building off of last year&#39;s successful&nbsp;<a href=""https://gowlingwlg.com/en/insights-resources/on-demand-webinars/2020/energy-innovators-driving-diversity-power-sector/?utm_source=vuture&amp;utm_medium=email&amp;utm_campaign=vuture%2F"">EDI in Energy</a>&nbsp;discussion,&nbsp;the panel will unpack key lessons learned from the broad social and cultural shifts which occurred throughout the past year,&nbsp;as well as what can be expected in the future for Ontario and Canada&#39;s energy sectors.</p>

<h2>Speakers</h2>

<ul>
	<li>Neena Gupta - Partner, Gowling WLG</li>
	<li>Indy Butany-DeSouza - President &amp; CEO, Elexicon Energy Inc.</li>
	<li>Vinay Mehta - General Counsel, Alectra Utilities Corporation</li>
	<li>Lisa Oelke - Director Partnerships, StepUp Energy Management</li>
	<li>Susannah Robinson - VP, EPCOR Ontario Utilities Inc.</li>
	<li>Laura McGee - Founder &amp; CEO, Diversio</li>
</ul>

<p><em>This webinar is part of our Energy Innovators Roundtable Series.&nbsp;<a href=""https://gowlingwlg.com/en/insights-resources/?page=1&amp;resourcetypes=GWLG.Webinar&amp;sectors=187&amp;q=Energy%20Innovators%20Roundtable%20Series&amp;mode=anyword&amp;sort=Relevance"">Watch more from the series &raquo;</a></em></p>

<p><em>*This program is eligible for up to 1.5 hours of EDI Professionalism credits with the LSO,&nbsp;1.5 hours of Practice Management credit with the LSBC, and may be eligible for up to 1.5 hours of CPD/CLE credits in other jurisdictions. If you indicate on your registration form that a certificate of participation is required,&nbsp;we will email you your certificate after the session.</em></p>

<p><em><img alt="""" src=""~/getmedia/abc03f09-5df7-45f5-a4a0-02a77057932f/EDI-logo.png.xml"" /></em></p>

<p><em>This organization has been approved as an Accredited Provider of Professionalism Content by the Law Society of Ontario.</em></p>
",NULL,NULL,00:40.0,https://sites-gowlingwlg.vuturevx.com/106/6010/landing-pages/event-registration-(blank-form)---oct.-21.asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,f1e960f5-8231-4c56-b7bf-9898ebb538c5,NULL,NULL,39410df1-425d-4c6f-bea0-54d5e41e744a,f6add8a6-e321-4862-9090-e98a09954b95,Webinar,P.A. Neena Gupta,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/106/6010/landing-pages/event-registration-(blank-form)---oct.-21.asp,Register now,GWLG.Canada,0,0CDA2C7E-BFD7-48AD-991D-C46DBB4E55AB,Gowling WLG Speaker,NULL,NULL,Energy,NULL,NULL,NULL,~/getmedia/f9efc74e-f9bc-456d-9427-8c35254f1104/211007-Diversity-Energy-sector.jpg.xml?width=930&height=450&ext=.jpg,NULL,NULL
454,/Events/2021/Legal-tips-for-your-tech-scale-up-Part-1,en-GB,163D00E9-5A57-400D-8780-E36F41CA2EFE,Legal tips for your tech scale-up: Part 1,Legal tips for your tech scale-up | Part I: Tech agreements and intellectual property,"When your tech company is scaling-up, your legal strategy needs to keep pace. We'll share their legal tips and best practices on tech agreements and intellectual property matters when it comes to properly scaling your tech business and avoiding common legal pitfalls. ",~/getmedia/41f04953-f9bb-4e7c-ad63-32f4fbe7e4fb/211007-tech-scale-up-page-image.jpg.xml?width=930&height=450&ext=.jpg,Upward view of glass staircase with people walking on top,GWLG.Webinar,05:02.0,05:15.0,10:00 a.m. PST; 11:00 a.m. MST; 12:00 p.m. CST; 1:00 p.m.,NULL,EST,1,1 hour,"<p>When your tech company is scaling-up, your legal strategy needs to keep pace. This is true for companies of all sizes, whether going from small to medium or medium to large, in order to maintain a scalable, high-growth operation for years to come.</p>

<p>In this engaging live webinar, experienced Gowling WLG lawyers <strong>Paul Armitage</strong>, <strong>Roch Ripley</strong>, and <strong>Filza Tariq</strong> will share their legal tips and best practices on tech agreements and intellectual property matters when it comes to properly scaling your tech business and avoiding common legal pitfalls.</p>

<p><strong>Topics will include:</strong></p>

<ul>
	<li>Localizing tech contracts and avoiding legal traps when licensing and distributing in foreign markets</li>
	<li>Key terms in tech contracts that can take your agreements to the next level</li>
	<li>IP strategies for scaling businesses, including international filing tips and portfolio management for trademarks and patents</li>
</ul>

<p>Space is limited, so please RSVP today to reserve your spot.</p>

<p><em data-mce-style=""color: #005aa9;"">*This program is eligible for up to 1 hour of substantive CPD credits with the LSO, the LSBC and the Barreau du Québec, and may be eligible for up to 1 hour of CPD/CLE credits in other jurisdictions. If you indicate that a certificate is required on your registration form, we will email you your certificate after the session.</em></p>
",NULL,NULL,07:05.0,https://sites-gowlingwlg.vuturevx.com/104/6249/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,cdfc9b50-74c2-4af5-9508-342935f81ccd,04411fac-dc23-4861-bd0c-aada44efcdeb;aa72ea93-20f8-455a-8e77-6f6cea510684;08b9a44c-bb26-4255-9779-296a124fcbee,8c0f2d68-a5d9-441b-95a9-3b2a98a43c1d,537ca4c8-995c-4dd1-86e3-d32115e70c0f;b90b93dd-dfd5-4115-9af8-148b313aa426;66ecdc1d-e8f7-4cfe-8236-6ac719b4f787,NULL,Webinar,"Paul Armitage, Roch J. Ripley, Filza Tariq",Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,Speakers,NULL,NULL,Tech,"Corporate Commercial, Trademarks, Brands & Designs, Intellectual Property Law",IP Law Hub,NULL,~/getmedia/20e05447-eaa4-4749-b9f4-bc492c58555b/211007-Legal-tips-tech-scale-up-Part-1.jpg.xml?width=1272&height=675&ext=.jpg,NULL,NULL
455,/Events/2021/Forfeiture-and-termination-clauses,en-GB,61D6ED25-610B-4F3E-AA80-DF5F4D945BE2,Forfeiture and termination clauses,"Employment, Labour & Equalities Law Webinar Series | Forfeiture and termination clauses","Our panel will guide you through the practical steps that employers should take to reduce the risk of invalidation - from updating templates to overhauling your communication, delivery and sign-off strategies.",~/getmedia/21bd1f6c-c76d-485f-b0be-3516e1531fbe/211013-forfeiture-termination-clause_1.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Webinar,00:00.0,00:00.0,8:30 a.m.,10:00 a.m.,EDT,1,1.5 hours,"<p>Employers rely on forfeiture clauses in equity and incentive plans, as well as on contractual termination clauses,&nbsp;to limit their termination-related liabilities. But our courts are increasingly willing - even eager - to find new reasons to invalidate those clauses. The cumulative effect of recent court decisions has been game-changing,&nbsp;in terms of exposure to liability.</p>

<p>Join Gowling WLG on&nbsp;Thursday,&nbsp;October 28&nbsp;for the fifth webinar in the Employment, Labour &amp; Equalities Law webinar series. Our experienced panel will discuss how these cases impact the drafting and enforceability of these clauses. Our panel will guide you through the practical steps that employers should take to reduce the risk of invalidation - from updating templates to overhauling your communication,&nbsp;delivery and sign-off strategies.</p>

<p><em>This webinar is part of our 2021 Employment, Labour &amp; Equalities Law Webinar Series.&nbsp;<a href=""https://gowlingwlg.com/en/insights-resources/?page=1&amp;resourcetypes=GWLG.Webinar&amp;services=651&amp;q=Employment%2C%20Labour%20%26%20Equalities%20Law%20Webinar%20Series&amp;mode=anyword&amp;sort=Relevance&amp;locations=GWLG.Canada"">Watch more from the series &raquo;</a></em></p>

<p><em>*This program is eligible for up to 1.5 hours of substantive CPD credits with the LSO,&nbsp;the LSBC and the Barreau du Québec, and may be eligible for up to 1.5 hours of CPD/CLE credits in other jurisdictions. If you indicate that a certificate is required on your registration form, we will email you your certificate after the session.</em></p>
",NULL,NULL,30:07.0,https://sites-gowlingwlg.vuturevx.com/106/5966/landing-pages/event-registration-(blank-form)---oct.-28.asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,d8837737-40d2-4472-8a9e-ba4101ec2105,NULL,66a40e6b-2d18-4254-9585-8cc1f1dc597a;774be3cd-5497-4537-9523-ed855158a5bb;daf683f6-91c3-40f6-850c-ed7502e1e569,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/106/5966/landing-pages/event-registration-(blank-form)---oct.-28.asp,Register now,GWLG.Canada,0,0CDA2C7E-BFD7-48AD-991D-C46DBB4E55AB,Speakers,NULL,NULL,NULL,"Employment, Labour & Equalities",NULL,NULL,~/getmedia/e1ddeca6-3e33-45f0-ad2a-b46db733604c/211013-forfeiture-termination-clause-social-image.jpg.xml?width=1272&height=675&ext=.jpg,NULL,NULL
456,/Events/2021/Fall-construction-law-forum,en-GB,26B6EBDE-3E98-49C6-8C18-3A9B2B5B9192,Fall construction law forum,Fall Construction Law Forum,"Over the course of the hour-long event, we’ll explore the unique considerations that underpin construction projects on Indigenous lands, unpack how prompt payment & adjudication are approached in different provinces, and help you navigate the 4th wave. ",~/getmedia/c2447746-d90d-425f-8ffd-977dc8894dd8/211013-construction-fall-forum.jpg.xml?width=930&height=450&ext=.jpg,bird's eye view of a construction site,GWLG.Webinar,00:00.0,00:00.0,1:00 p.m.,2:30 p.m.,EDT,1,1 hour,"<p>Gowling WLG&#39;s Infrastructure &amp; Construction Group invites you to join us on Tuesday,&nbsp;October 26,&nbsp;for our annual Fall Construction Law Forum. This year,&nbsp;the Forum is going national!</p>

<p>Over the course of the hour-long event,&nbsp;we&#39;ll explore the unique considerations that underpin construction projects on Indigenous lands,&nbsp;unpack how prompt payment &amp; adjudication are approached in different provinces,&nbsp;and help you navigate the 4th wave. This will be followed by regional meet-and-greets and Q&amp;A with our colleagues in our firm&#39;s BC,&nbsp;Alberta,&nbsp;Quebec and Ontario offices by way of virtual breakout rooms.</p>

<table>
	<thead>
		<tr>
			<th scope=""col"">Time&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</th>
			<th scope=""col"">Activity</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>1:00 p.m.</td>
			<td><strong>Welcome&nbsp;</strong><br />
			Ted Betts - Partner &amp; Head of Infrastructure and Construction Group</td>
		</tr>
		<tr>
			<td>1:05 p.m.</td>
			<td><strong>Introduction &amp; case law update&nbsp;</strong><br />
			Sahil Shoor - Partner</td>
		</tr>
		<tr>
			<td>1:15 p.m.</td>
			<td><strong>Important considerations in advancing construction projects on Indigenous land</strong><br />
			Maya Stano - Partner<br />
			Jeremy Sapers - Associate</td>
		</tr>
		<tr>
			<td>1:25 p.m.</td>
			<td><strong>Contrasting the Ontario and Alberta builders&#39; lien legislation re: Prompt payment &amp; adjudication</strong><br />
			Stephen Carter-Edwards - Partner<br />
			Ted Betts - Parter &amp; Head of Infrastructure and Construction Group</td>
		</tr>
		<tr>
			<td>1:35 p.m.</td>
			<td><strong>Construction labour &amp; employment law: Navigating the 4th wave</strong><br />
			Neena Gupta - Partner<br />
			Tushar Anandasagar - Associate</td>
		</tr>
		<tr>
			<td>1:50 p.m.</td>
			<td><strong>Increased scrutiny over RBQ&#39;s licensing process</strong><br />
			Joey Suri - Associate<br />
			Anne-Marie Brien - Associate</td>
		</tr>
		<tr>
			<td>2:00 p.m.</td>
			<td><strong>Closing &amp; introduction to breakout rooms by province</strong><br />
			Sahil Shoor - Partner</td>
		</tr>
	</tbody>
</table>

<p><em>*This program is eligible for up to1 hour of substantive CPD credits with the LSO, the LSBC and the Barreau du Québec, and may be eligible for up to 1 hour of CPD/CLE credits in other jurisdictions. If you indicate on your registration form that a certificate of participation is required, we will email you your certificate after the session.</em></p>
",NULL,NULL,00:39.0,https://sites-gowlingwlg.vuturevx.com/106/6255/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,3fc2ca8c-9d19-44ba-a3a9-ad1ecb11e900,9cebeaf8-d868-4884-b035-03f46770de62,NULL,dd6fafb1-ecf7-491d-ac34-0e0f405cea0d;a4cf60c6-613e-4604-bc4d-aac55528b3e3;6ed517b8-3709-4234-8c1b-a66d3f7e6080;d4d177dd-24ab-4872-a2df-fafc0e6a94f7;897f7e24-f652-4636-8af4-0acc9ab994f6;39410df1-425d-4c6f-bea0-54d5e41e744a;7ce8b1af-c935-483a-b2f6-ffbb3a925288;c60bd39f-b8a4-4105-94fd-c6a00243adc3;a05ddd49-0a27-40e0-bba9-85d136030db2,NULL,Webinar,"Edward (Ted) G. Betts, Sahil Shoor, Maya Stano, Jeremy D. Sapers, Stephen Carter-Edwards, P.A. Neena Gupta, Tushar Anandasagar, Joey Suri, Anne-Marie Brien",Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/106/6255/landing-pages/event-registration-(blank-form).asp,Register now,GWLG.Canada,0,0CDA2C7E-BFD7-48AD-991D-C46DBB4E55AB,Speakers,NULL,NULL,Construction & Engineering,Construction,NULL,NULL,~/getmedia/701cff25-40c0-453c-9056-255a36fb35d3/211013-fall-construction-forum.jpg.xml?width=1272&height=675&ext=.jpg,NULL,NULL
457,/Events/2021/Global-trademark-cancellation-strategies,en-GB,0C15347A-B8F4-45A2-AA14-ABBE9E35C872,Global trademark cancellation strategies,Lifecycle of a smart idea | Global trademark cancellation strategies,"Panelists will explore how to defend against / avoid cancellation brought against your marks, as well as how to use cancellation proceedings offensively to remove potential problematic marks.",~/getmedia/a41b7c52-4dbd-418a-919e-61f663b62649/211014-trademark-cancellation.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Webinar,00:00.0,00:00.0,2 p.m. GMT / 3 p.m. CET / 10 p.m.CST / 9 a.m.,NULL,EST,1,"1 hour of substantive CPD credits with the LSO, the LSBC and the Barreau du Québec, and may be eligible for up to 1 hour of CPD/CLE credits in other jurisdictions","<p>The latest installment in our Lifecycle of a Smart Idea series will shine a light on global trademark cancellation strategies. Specifically,&nbsp;panelists will explore how to defend against / avoid cancellation brought against your marks,&nbsp;as well as how to use cancellation proceedings offensively to remove potential problematic marks. The panel will also discuss what evidence needs to be gathered,&nbsp;the limits of differentiating marks,&nbsp;and circumstances that may excuse non-use.</p>

<h2>Post-webinar breakout rooms</h2>

<p>Immediately following the webinar,&nbsp;we invite you to join our panellists in virtual breakout rooms where you will have the opportunity to ask direct questions and participate in a discussion with other attendees.</p>

<h2>Speakers</h2>

<ul>
	<li>Kristen Kilroy - Associate</li>
	<li>Alexander Christophoroff - Partner</li>
	<li>Yan Gong - Head of Trademarks</li>
	<li>Charlotte McDonald - Partner</li>
	<li>Jon Parker - Partner</li>
	<li>Kate Swaine - Partner &amp; Co-Head of Intellectual Property, Global</li>
</ul>

<p><em>*This program is eligible for up to 1 hour of substantive CPD credits with the LSO,&nbsp;the LSBC and the Barreau du Québec, and may be eligible for up to 1 hour of CPD/CLE credits in other jurisdictions. If you indicate on your registration form that a certificate of participation is required,&nbsp;we will email you your certificate after the session.</em></p>

<h2>Watch previous episodes</h2>

<p>This is the 17th installment in our Lifecycle of a Smart Idea series, dedicated to helping you maximise opportunity and minimise risk when taking innovative ideas to the global market.<em>&nbsp;<a href=""~/en/insights-resources/?page=1&amp;services=454&amp;resourcetypes=GWLG.Webinar&amp;q=Lifecycle&amp;mode=anyword&amp;sort=Date"" target=""_blank"">Watch more from the series &raquo;</a></em></p>
",NULL,NULL,00:03.0,https://sites-gowlingwlg.vuturevx.com/106/6172/landing-pages/event-registration-(blank-form)---nov.-10.asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,08b9a44c-bb26-4255-9779-296a124fcbee;aa72ea93-20f8-455a-8e77-6f6cea510684,8c0f2d68-a5d9-441b-95a9-3b2a98a43c1d,a3dc0a48-dabc-4038-957e-d23bab4d345b;b759b57f-50e6-4a7d-bde3-c1eedaa1eada;3fd4913d-3096-46ba-93b4-f365a5b14944;5f39b2b0-1232-4c03-abce-300149d85f9b;1c3bd013-a114-4cf8-9cd6-e9ff56c34340,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/106/6172/landing-pages/event-registration-(blank-form)---nov.-10.asp,Register now,GWLG.Canada;GWLG.UK;GWLG.China;GWLG.Russia;GWLG.UAEDubai,0,0CDA2C7E-BFD7-48AD-991D-C46DBB4E55AB,Gowling WLG Speakers,NULL,NULL,NULL,"Intellectual Property Law, Trademarks, Brands & Designs",IP Law Hub,NULL,~/getmedia/5ec96669-9920-4524-bb83-9d7657efb023/211020-Trademark-cancellation-event.jpg.xml?width=930&height=450&ext=.jpg,NULL,NULL
458,/Events/2021/ThinkHouse-Procurement-case-update,en-GB,1F41AABC-21CE-44B9-B8B3-3CB939858012,ThinkHouse - Procurement case update,Procurement case update - ThinkHouse Public,"In this live webinar, Chris Brennan will provide a roundup of recent procurement case-law, reviewing key developments and highlighting learnings from them that should be at the top of your reference list.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,24:09.0,24:16.0,10:00,11:00,GMT,0,NULL,"<p>In this live webinar, Chris Brennan will provide a roundup of recent procurement case-law, reviewing key developments and highlighting learnings from them that should be at the top of your reference list.</p>

<p>During the session, the speakers will provide useful information and practical tips, and will answer as many audience questions as possible in the time available.</p>

<p>This is the first of three live webinars developed by our <a href=""~/en/thinkhouse/"">ThinkHouse </a>Public Procurement team, specifically for UK in-house counsel. In these webinars we will provide you with useful updates, practical guidance and hints and tips to use day-to-day on a range of topical issues.</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession. Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,00:00.0,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?RSID=9ZQds7cDe4fmfbtlJkUKvR1TgL9L5IUuzzjKnbsBRzPltpMY1vqfPEGzPkzPGr5d,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,5ad41b49-d460-489a-95b9-84c854eda6f1,311e6350-b4a5-4f58-8201-230ac9fc70b5;a7ba0b1b-cbe3-4b6d-bb8e-5835b1fbb08a,a143cbfd-d333-42a0-89a6-7287894464f1,503e49eb-bfc5-4803-a856-7fcbac77a38a;a9daf1f3-b2ff-43d9-b76e-b815bb73aace,NULL,Webinar,"Christopher Brennan, Michael J Luckman",Webinar,34471,GWLG.Events,NULL,~/getmedia/5d57b23c-f4d3-44e3-a08e-7ee56360fd71/thinkhouse-snr-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/27fda93c-8849-4d7e-a292-bcc5eb1e7896/thinkhouse-snr-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,NULL,Government Contracting & Public Sector ,"Procurement, Public Procurement",ThinkHouse,NULL,NULL,NULL,NULL
459,/Events/2021/ThinkHouse-lifting-the-automatic-suspension,en-GB,674572AF-902D-46F1-89B5-3312042BDBAE,ThinkHouse - lifting the automatic suspension,Litigators view - lifting the automatic suspension - ThinkHouse Public,"In this ThinkHouse webinar, Patrick Arben and Susannah Fink will look at the operation of the automatic suspension on contract making and applications to lift the same. ",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,24:09.0,24:16.0,10:00,11:00,GMT,0,NULL,"<p>Applications to lift the automatic suspension are a unique feature of procurement litigation. Patrick Arben and Susannah Fink will look at the operation of the automatic suspension on contract making and applications to lift the same. They will take you through the process of making and defending such applications, and examine the latest trends in the Court's approach to determining such applications.</p>

<p>During the session, the speakers will provide useful information and practical tips, and will answer as many audience questions as possible in the time available.</p>

<p>This is the second of three live webinars developed by our <a href=""https://gowlingwlg.com/en/thinkhouse/"">ThinkHouse </a>Public Procurement team, specifically for UK in-house counsel. In these webinars we will provide you with useful updates, practical guidance and hints and tips to use day-to-day on a range of topical issues.</p>

","<p>This event is free of charge.</p>

<p>Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession. Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,00:00.0,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?RSID=9ZQds7cDe4fmfbtlJkUKvR1TgL9L5IUuzzjKnbsBRzPltpMY1vqfPEGzPkzPGr5d,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,5ad41b49-d460-489a-95b9-84c854eda6f1,311e6350-b4a5-4f58-8201-230ac9fc70b5;a7ba0b1b-cbe3-4b6d-bb8e-5835b1fbb08a;82475447-1cf2-4aa7-9a23-24e5b1a7b3bd,a143cbfd-d333-42a0-89a6-7287894464f1,fdb31259-dc1d-4722-ad16-6401036a1ddb;9c1e5d85-61f3-41ce-821b-f68dd18ccbb1,NULL,Webinar,"Patrick Arben, Susannah E Fink",Webinar,34471,GWLG.Events,NULL,~/getmedia/5d57b23c-f4d3-44e3-a08e-7ee56360fd71/thinkhouse-snr-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/27fda93c-8849-4d7e-a292-bcc5eb1e7896/thinkhouse-snr-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,NULL,Government Contracting & Public Sector ,"Procurement, Public Procurement, Litigation & Dispute Resolution",ThinkHouse,NULL,NULL,NULL,NULL
460,/Events/2021/ThinkHouse-Procurement-in-practice,en-GB,60B62293-1961-456E-BCB6-E9B791E9E2D6,ThinkHouse - Procurement in practice,Procurement in practice - ThinkHouse Public,"In this live webinar, Robert Breedon will take a look at some of the practical aspects and challenges faced when delivering public procurement.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,24:09.0,24:16.0,10:00,11:00,GMT,0,NULL,"<p>In this live webinar, Robert Breedon will be joined by Fiona McLaughlin, Head of Procurement at Birmingham Organising Committee for the 2022 Commonwealth Games, to take a look at some of the practical aspects of delivering public procurement.</p>

<p>During the session, the speakers will answer as many audience questions as possible in the time available.</p>

<p>This is the first of three live webinars developed by our <a href=""~/en/thinkhouse/"">ThinkHouse </a>Public Procurement team, specifically for UK in-house counsel. In these webinars we will provide you with useful updates, practical guidance and hints and tips to use day-to-day on a range of topical issues.</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession. Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,00:00.0,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?RSID=9ZQds7cDe4fmfbtlJkUKvR1TgL9L5IUuzzjKnbsBRzPltpMY1vqfPEGzPkzPGr5d,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,5ad41b49-d460-489a-95b9-84c854eda6f1,311e6350-b4a5-4f58-8201-230ac9fc70b5;a7ba0b1b-cbe3-4b6d-bb8e-5835b1fbb08a,a143cbfd-d333-42a0-89a6-7287894464f1,1ca237c0-eb32-40df-ba06-268230275f34,NULL,Webinar,Robert Breedon,Webinar,34471,GWLG.Events,NULL,~/getmedia/5d57b23c-f4d3-44e3-a08e-7ee56360fd71/thinkhouse-snr-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/27fda93c-8849-4d7e-a292-bcc5eb1e7896/thinkhouse-snr-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,NULL,Government Contracting & Public Sector ,"Procurement, Public Procurement",ThinkHouse,NULL,NULL,NULL,NULL
461,/Events/2021/ThinkHouse-Greenwashing,en-GB,DA511D7A-1DD2-4F11-9A66-C46520D49C5D,ThinkHouse - Greenwashing ,Greenwashing: Don't get caught out - ThinkHouse,"In this live webinar, advertising experts Dan Smith and Kate Hawkins will highlight some of the key factors to consider when making environmental claims in advertising. ",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,20:20.0,20:26.0,14:00,15:00,GMT,1,1,"<p>Environmental and sustainability claims have been high on the agenda for many businesses for some time now, and with the Competition and Markets Authority&#39;s (CMA) recent introduction of its Green Claims Code, it&#39;s even more important that businesses get it right and avoid exaggerating their environmental credentials.</p>

<p>In this live webinar, advertising experts Dan Smith and Kate Hawkins will highlight some of the key factors to consider when making environmental claims in advertising. They will also provide an update on notable Advertising Standards Authority(ASA) action taken this year and draw out learnings from key adjudications.</p>

<p>During the webinar, the speakers will provide useful information and practical hints and tips, and will answer as many questions as possible in the time available.</p>

<p>This webinar is a <a href=""~/en/thinkhouse/"">ThinkHouse</a> masterclass, developed specifically for in-house counsel.</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession. Please do get in touch if you have any further queries about this event and CPD.</p>

<p>&nbsp;</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,00:00.0,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?rsid=gKvQXAgTJRn4LYlEEryepBrEkkxBIGJQMvlCm6Hk4aC2r-lMy8JJuBAxqkaOrK1w&react=REGISTER,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,65c34333-2a1a-4fba-8d2a-65496d535f64,a143cbfd-d333-42a0-89a6-7287894464f1,9ff8fd1a-c2f5-4084-b72e-4aa02fdf3312;c679dec4-f5f8-4a7c-b72b-57821a83da25;897543f6-1036-4499-934c-adf5f5afeaf4,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/d2b9ca59-d716-4c60-abb1-472dd7eeec23/thinkhouse-primary-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/0363a899-4ad3-4e9e-a428-fbf0ebf9f31d/thinkhouse-primary-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,NULL,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,NULL,NULL,Advertising & Product Regulatory,ThinkHouse,NULL,NULL,NULL,NULL
462,/Events/2021/Key-COP26-takeaways-for-Ontario-energy-businesses,en-GB,700D5BCB-CA11-4001-9B11-9A2AAA014595,Key COP26 takeaways for Ontario energy businesses,Energy Innovators Roundtable Series | What you need to know – Key COP26 takeaways for Ontario energy businesses,"Join us for our webinar on November 18, as we take an in-depth look at the initial outcomes of COP26 and its anticipated impact on Ontario energy sector businesses.",~/getmedia/70bcd3c3-b70d-412a-83ab-147c499e5f0f/210816-energy-roundtable-page-image.jpg.xml?width=930&height=450&ext=.jpg,electric vehicle at charging station,GWLG.Webinar,00:00.0,00:00.0,2:00 p.m.,3:30 p.m.,EST,1,1.5 hours,"<p>In 2015,&nbsp;for the first time ever,&nbsp;196 countries came together for the United Nations Climate Change Conference to adopt the legally binding treaty on climate change commonly known as the &quot;Paris Agreement&quot;&nbsp;or &quot;COP21&quot;. Baked into the Paris Agreement was the goal of limiting global warming to well below two degrees Celsius compared to pre-industrial levels,&nbsp;and an undertaking to try to limit the global temperature rise to only 1.5 degrees Celsius.</p>

<p>COP26 is taking place between November 1 &ndash; 12,&nbsp;2021 in Glasgow under the leadership of the United Kingdom and it is expected to be another inflection point in global energy sector development &ndash; re-energizing multilateral action to help deliver on the bold commitments made in Paris. While Canada&#39;s place at the table is assured,&nbsp;the exact outcome of COP26, what promises will be made and how the undertakings and commitments of other nations will impact and create new opportunities for Ontario,&nbsp;remain to be seen.</p>

<p>Join us for our webinar on November 18, as we take an in-depth look at the initial outcomes of COP26 and its anticipated impact on Ontario energy sector businesses,&nbsp;as well as on the stakeholders, service providers and consumers who rely upon them.</p>

<p><em>*This program is eligible for up to 1.5 hours of substantive CPD credits with the LSO,&nbsp;the LSBC and the Barreau du Québec,&nbsp;and may be eligible for up to 1.5 hours of CPD/CLE credits in other jurisdictions. If you indicate on your registration form that a certificate of participation is required, we will email you your certificate after the session.</em></p>

<h2>Watch previous episodes</h2>

<p><em>This webinar is part of our Energy Innovators Roundtable Series.&nbsp;<a href=""~/en/insights-resources/?page=1&amp;resourcetypes=GWLG.Webinar&amp;sectors=187&amp;q=Energy%20Innovators%20Roundtable%20Series&amp;mode=anyword&amp;sort=Date"" target=""_blank"">Watch more from the series &raquo;</a></em></p>
",NULL,NULL,00:00.0,https://sites-gowlingwlg.vuturevx.com/106/6010/landing-pages/event-registration-(blank-form)--nov.-18.asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,f1e960f5-8231-4c56-b7bf-9898ebb538c5,NULL,NULL,4c3c2534-e644-427f-9b61-e7cd1aec53cf;29d7e340-a6af-49b5-b223-993a69997a78;f63465af-154c-4d26-b2ab-6bc7cc79f913;1a0f69ce-d1e7-42e2-96d6-0dbdd570161e,NULL,Webinar,"Thomas J. Timmins, Adam Chamberlain, Jennifer L. King, Ben Stansfield",Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/106/6010/landing-pages/event-registration-(blank-form)--nov.-18.asp,Register now,GWLG.Canada;GWLG.UK,0,0CDA2C7E-BFD7-48AD-991D-C46DBB4E55AB,Speakers,NULL,NULL,Energy,NULL,NULL,NULL,~/getmedia/806c6551-3d70-4cff-bade-7e264fc7541a/211028-Energy-roundtable-3-COP26-social.jpg.xml?width=930&height=493&ext=.jpg,NULL,_Blank
463,/Events/2021/TESTING-PAGE,en-GB,1033BE0C-C4AD-4DDC-9F4B-8B34FE6351B1,TESTING PAGE ,Testing page created for the purpose of familiarizing with the CMS,,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,00:00.0,00:00.0,10:00 AM,12:00 PM,Local time,1,1 hr,"<p>Curious about the latest developments in construction contracts and disputes? Join Gowling WLG&#39;s Jordan Crone and Kerry Powell on June&nbsp;28 for the second part of these&nbsp;informative sessions covering key issues in this space.&nbsp;Jordan and&nbsp;Kerry will offer their insights with respect to both the law and practical considerations, and will also be available to answer your questions.&nbsp;</p>
",NULL,NULL,00:00.0,https://gowlingwlg.vuturevx.com/edit/site_edit.aspx?intSiteId=6058,NULL,Register for this event,NULL,3fc2ca8c-9d19-44ba-a3a9-ad1ecb11e900;59be9dcd-e5f0-43e4-9d50-442a658eda18,9cebeaf8-d868-4884-b035-03f46770de62;c27f9d3f-c358-48fb-b057-9a291fea02aa,NULL,ff812959-08ee-49fa-b54c-43c44b387fc0;1ac1b56a-e9a7-43ca-b2df-ef0b8fd7289d;bc07051b-1c39-4819-814f-b0175074d5d6,NULL,Webinar,"Jordan Crone, Kerry R. Powell, Darren J. Taylor",NULL,NULL,GWLG.Events,"<h1>TESTING PAGE TITLE 1&nbsp;</h1>

<h2>Heading 2 here&nbsp;</h2>
",~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://gowlingwlg.vuturevx.com/edit/site_edit.aspx?intSiteId=6058,Register Now,NULL,0,NULL,Speaker(s),NULL,8bf72d3f-e216-4fdd-b0be-52d41a644293,"Construction & Engineering, Real Estate","Construction, Real Estate",NULL,Calgary,NULL,"<p>Sample content below taken from prior webinar for test page creation purposes.&nbsp;</p>
",NULL
464,/Events/2021/Tax-dispute-resolution-monthly-update-session-3,en-GB,83D229BA-5FD9-4E02-8AC0-E3495B55585A,Tax dispute resolution monthly update session 3,2021 Tax Dispute Resolution Monthly Update | Session 3,"Topics to be discussed at session 3 include the precarious future of rescission, BNS case and how to effectively resolve tax disputes.",~/getmedia/d1b4713a-9293-4542-b6b0-8a45965c339d/210901-Tax-dispute-resolution-session-1.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Webinar,00:00.0,00:00.0,12:00 p.m.,12:30 p.m.,EST,1,30 minutes,"<p>With the Canada Revenue Agency deploying massive resources to crack down on perceived tax avoidance, it&#39;s now more important than ever to stay up to date with new CRA policies, legislation and case law. Please join&nbsp;Stevan Novoselac, John Sorensen&nbsp;and&nbsp;Pierre Alary&nbsp;for Gowling WLG&#39;s 30 minute interactive monthly tax dispute resolution (TDR) webinars, to keep up with current developments and learn practical insights on how to successfully resolve tax disputes with the CRA.</p>

<p>Topics to be discussed at session 3 include the following:</p>

<ul style=""margin-left:0.3in;"">
	<li>The precarious future of rescission</li>
	<li>BNS case: Tax court does not rule in the (arrears) interest of fairness</li>
	<li>How to effectively resolve tax disputes</li>
</ul>

<p>You can <a href=""mailto:TDR@gowlingwlg.com"">submit a question or topic</a> to be covered in future webinars.</p>

<p><em>This webinar is part of our 2021 Tax Dispute Resolution Monthly Update Series.&nbsp;<a href=""https://gowlingwlg.com/en/insights-resources/?page=1&amp;resourcetypes=GWLG.Webinar&amp;services=596&amp;sort=Date&amp;q=Tax%20dispute%20Resolution%20Monthly&amp;mode=anyword"" target=""_blank"">Watch more from the series &raquo;</a></em></p>

<p><em>*This program is eligible for up to 30 minutes of substantive CPD credits with the LSO,&nbsp;the LSBC and the Barreau du Québec,&nbsp;and may be eligible for up to 30 minutes of CPD/CLE credits in other jurisdictions. If you indicate on your registration form that a certificate of participation is required,&nbsp;we will email you your certificate after the session.</em></p>
",NULL,NULL,00:00.0,https://sites-gowlingwlg.vuturevx.com/106/6140/landing-pages/event-registration-(blank-form)---nov.-23.asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,fa76a598-e571-4940-95e3-81b4cc0c7fe6,NULL,6b8f6eff-0e11-457f-a5fb-13663ac51e49;2de02f2d-4a7f-490a-8a3b-73ebf0c8073f;5cecda13-17b4-4875-b9e9-5edae877cf23,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/106/6140/landing-pages/event-registration-(blank-form)---nov.-23.asp,Register now,GWLG.Canada,0,0CDA2C7E-BFD7-48AD-991D-C46DBB4E55AB,Speakers,NULL,NULL,NULL,Tax Dispute Resolution,NULL,NULL,~/getmedia/77b3af4a-eee4-4fd7-b9b9-d915cad696c4/211108-Tax-dispute-resolution-session-3.jpg.xml?width=930&height=450&ext=.jpg,NULL,_Blank
465,/Events/2021/Shareholder-activism-independent-directors,en-GB,BA4F70F9-0C0B-4224-AD24-3F2D0852E1D5,Shareholder activism independent directors,Shareholder activism: What independent directors need to know,"Shareholder activism events present unique challenges to independent directors, often requiring directors to balance competing stakeholder interests in the context of a hostile situation.",~/getmedia/2f7b13f1-c0ea-4c4f-86b9-082e7a75fb37/210901-climate-change-board.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Webinar,00:00.0,00:00.0,12:00 p.m.,1:00 p.m.,EDT,0,NULL,"<p>Shareholder activism events present unique challenges to independent directors, often requiring directors to balance competing stakeholder interests in the context of a hostile situation. Our panelists will provide practical tips &amp; strategies on what board members should be thinking about when such events arise, as well as address common concerns independent directors may have regarding risks and liabilities and how to manage them.</p>

<h2>Topics to be discussed will include:</h2>

<ul>
	<li>Common forms of shareholder activism</li>
	<li>The role of independent directors and common sources of conflict between independent directors and both activists and non-independent board members</li>
	<li>How to help navigate a company through an activist event &ndash; stakeholder communications</li>
	<li>How to mitigate risks and liabilities relating to activism when waters are calm</li>
</ul>

<h2>Moderator and panelists</h2>

<ul>
	<li>Gregory Peterson, Partner, Gowling WLG (Moderator)</li>
	<li>Jacob Cawker, Partner, Gowling WLG</li>
	<li>Alyssa Barry, Principal &amp; Co-Founder, irlabs</li>
</ul>

<p><strong><em>*Limited complimentary passes are available to our clients.&nbsp;Please contact <a href=""mailto:calgary.marketing@gowlingwlg.com"">Calgary Marketing</a> if you would like to attend.&nbsp;</em></strong></p>
",NULL,NULL,00:00.0,https://app.glueup.com/event/shareholder-activism-what-independent-directors-need-to-know-43885/,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,NULL,NULL,f52c18f0-f75d-443c-8edf-8eb8851b7f75;cc734a17-f747-445a-8ccf-47df174c90b9,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,"<p><img alt=""Women get on board logo"" src=""~/getmedia/c40f325f-3c97-49d4-8167-40c7a98327c4/WGOB-logo-2.png.xml?width=125&amp;height=125"" style=""width: 125px; height: 125px;"" /></p>
",~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://app.glueup.com/event/shareholder-activism-what-independent-directors-need-to-know-43885/,Register now,GWLG.Canada,0,0CDA2C7E-BFD7-48AD-991D-C46DBB4E55AB,Gowling WLG Speakers,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,_Blank
466,/Events/2021/Employment-Labour-Law-year-in-review,en-GB,28A6F2AF-DAF7-4C12-B2AF-FD9B8DA0E299,Employment Labour Law year in review,"Employment, Labour & Equalities Law Webinar Series | A year in review",Join a panel of experienced Gowling WLG employment lawyers as they unpack the cases and legal developments that have most impacted Canadian employers during the last 12 months.,~/getmedia/b0c9a8e5-f81a-4485-a653-217c9cc4e723/211111-ELE-year-in-review-CMS.jpg.xml?width=930&height=620&ext=.jpg,NULL,GWLG.Webinar,00:00.0,00:00.0,8:30 a.m.,10:00 a.m.,EST,1,1.5 hours,"<p>Join a panel of experienced Gowling WLG employment lawyers as they unpack the cases and legal developments that have most impacted Canadian employers during the last 12 months. In particular,&nbsp;speakers will cover:</p>

<ul>
	<li>The impact of COVID-19 on terminations</li>
	<li>Bill 27 and the duty to disconnect</li>
	<li>The ban on non-competition clauses</li>
	<li>The latest news on mandatory vaccinations</li>
</ul>

<p>Following the presentation,&nbsp;there will be ample time for a Q&amp;A session. We look forward to having you join us,&nbsp;and feel free to bring your most pressing employment questions. If you would like to send us your questions in advance, please feel free to submit them with your RSVP.</p>

<h2>Watch previous episodes</h2>

<p><em>This webinar is part of our 2021 Employment,&nbsp;Labour &amp; Equalities Law Webinar Series.&nbsp;<a href=""~/en/insights-resources/?page=1&amp;resourcetypes=GWLG.Webinar&amp;services=651&amp;q=Employment%2C%20Labour%20%26%20Equalities%20Law%20Webinar%20Series&amp;mode=anyword&amp;sort=Date&amp;locations=GWLG.Canada"" target=""_blank"">Watch more from the series &raquo;</a></em></p>

<h2>CPD information</h2>

<p><em>This program is eligible for up to 1.5 hours of substantive CPD credits with the LSO,&nbsp;the LSBC and the Barreau du Québec, and may be eligible for up to 1.5 hours of CPD/CLE credits in other jurisdictions. If you indicate that a certificate is required on your registration form, we will email you your certificate after the session.</em></p>
",NULL,NULL,30:19.0,https://sites-gowlingwlg.vuturevx.com/106/5966/landing-pages/event-registration-(blank-form)---nov.-25.asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,d8837737-40d2-4472-8a9e-ba4101ec2105,NULL,64c86b79-7dc4-409e-8260-f244f6349dc3;39410df1-425d-4c6f-bea0-54d5e41e744a;2733c3c9-43b4-45f1-a164-ffdc7556ef2e;a510a502-96d3-4ad6-b74c-b3fb1df466af,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/106/5966/landing-pages/event-registration-(blank-form)---nov.-25.asp,Register now,GWLG.Canada,0,0CDA2C7E-BFD7-48AD-991D-C46DBB4E55AB,Speakers,NULL,NULL,NULL,"Employment, Labour & Equalities",NULL,NULL,~/getmedia/218621d1-8e7a-400f-b847-05c05af037be/211110-ELE-year-in-review.jpg.xml?width=930&height=450&ext=.jpg,NULL,_Blank
467,/Events/2021/Gowling-WLG-National-Banking-Finance-Conference,en-GB,3B1A0383-667B-40CF-97B1-BF7D567CF8E5,Gowling WLG National Banking & Finance Conference ,Gowling WLG National Banking & Finance Conference 2022,"we are excited to bring you the inaugural Gowling WLG National Banking & Finance Conference. Presented virtually as a series of half-day live sessions from February 3, 2022 through to February 23, 2022  ",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Conference,02:32.0,02:41.0,Various,NULL,Local time,0,NULL,"<p><iframe frameborder=""0"" scrolling=""no"" src=""https://sites-gowlingwlg.vuturevx.com/6/2002/landing-pages/subscribe-en-ca.asp"" style=""width:100%;"" title=""Subscribe to Gowling WLG (Canada) mailings""></iframe><script src=""https://ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js"" type=""text/javascript""></script><script src=""~/CMSScripts/Custom/iframeResizer.min.js"" type=""text/javascript""></script><script type=""text/javascript"">
iFrameResize({log:true,// Enable console logging
enablePublicMethods: true, // Enable methods within iframe hosted page
resizedCallback:function(messageData){ // Callback fn when resize is received
					$('p#callback').html(
						'<b>Frame ID:</b> '    + messageData.iframe.id +
						' <b>Height:</b> '     + messageData.height +
						' <b>Width:</b> '      + messageData.width + 
						' <b>Event type:</b> ' + messageData.type
					);
				},
				messageCallback         : function(messageData){ // Callback fn when message is received
					$('p#callback').html(
						'<b>Frame ID:</b> '    + messageData.iframe.id +
						' <b>Message:</b> '    + messageData.message
					);
					alert(messageData.message);
				},
				closedCallback : function(id){ // Callback fn when iFrame is closed
					$('p#callback').html(
						'<b>IFrame (</b>'    + id +
						'<b>) removed from page.</b>'
					);
}
});
</script></p>
",NULL,NULL,NULL,NULL,NULL,Register for this event,36382405-0067-4169-8969-FEECBA0163A7,NULL,NULL,NULL,NULL,NULL,Conference,NULL,Virtual conference,49461,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,Speaker(s),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
468,/Events/2021/HR-Hot-Topics-2021,en-GB,6FF29E13-2E4C-4010-A8B0-F8D77656900A,HR Hot Topics 2021,HR Hot Topics 2021,"On behalf of Grand River Personnel, H2R Business Solutions and Gowling WLG, join us for the 7th annual HR Hot Topics event. ",~/getmedia/0dc3ffd4-c37a-421f-9de6-b4297ba0d2ab/211005-office-lobby-with-people.jpg.xml?width=930&height=450&ext=.jpg,blurred photo of office workers walking in hallway,GWLG.Webinar,30:26.0,00:00.0,08:30,12:00,EST,0,NULL,"<p><strong>On behalf of Grand River Personnel, H2R Business Solutions and Gowling WLG, join us for the 7<sup>th</sup> annual HR Hot Topics event.</strong></p>

<p>You&#39;re invited to a complimentary morning webinar filled with exciting HR updates and dynamic speakers. The event will cover many hot topics that HR professionals and business owners face on a daily basis.</p>

<p>This must-see webinar will examine health and safety, disability, mental health, legal developments of 2021 and what&#39;s coming in 2022. You won&#39;t want to miss it!</p>

<p>Register today using the button above.</p>

<h2>Agenda</h2>

<table>
	<thead>
		<tr>
			<th scope=""col"">Time</th>
			<th scope=""col"">Activity</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>8:30 a.m.</td>
			<td>Welcome and introduction<br />
			Jill Zappitelli</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>Mental health - Post COVID-19<br />
			CMHA</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>Disability management &ndash; What employers need to know to manage claims effectively<br />
			Michelle Strassburger</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>Workplace assessments - Real and useful...but when?<br />
			Dean Benard</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>The power of relationship capital - Safeguarding your business and career<br />
			Patricia Polischuck</td>
		</tr>
		<tr>
			<td>10 a.m.</td>
			<td>Break</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>Legal update - What to expect in 2022: ESA, COVID-19 and the courts<br />
			P.A. Neena Gupta</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&quot;The Culture Club&quot; &ndash; Establishing a health &amp; safety culture in your organization<br />
			Tyler Scott</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>Compassionate leadership - No longer a nice to have but a need to have<br />
			Jackie Lauer</td>
		</tr>
		<tr>
			<td>12 p.m.</td>
			<td>Closing remarks</td>
		</tr>
	</tbody>
</table>

<h2>Speakers</h2>

<ul>
	<li>DEAN BENARD, President, Benard &amp; Associates</li>
	<li>P.A. NEENA GUPTA, Partner, Gowling WLG</li>
	<li>JACKIE LAUER, Owner, Jackie Lauer Consulting</li>
	<li>PATRICIA POLISCHUK, Head of Client Engagement, H2R Business Solutions</li>
	<li>TYLER SCOTT, President, AEC Safety Solutions</li>
	<li>MICHELLE STRASSBURGER, HR Consultant, Alliance Disability Solutions</li>
	<li>JILL ZAPPITELLI, President, H2R Business Solutions</li>
</ul>

<h2>Event partners</h2>

<div class=""grid-container grid-container-inline"">
<div class=""grid-x"">
<div class=""small-12 medium-6 cell""><img alt=""HR2 business solutions logo"" src=""~/getmedia/279f5507-3a5e-44e8-b5b0-8038f29f9909/h2r-logo-2021-11-01.jpg.xml?width=349&amp;height=145"" style=""width: 349px; height: 145px;"" /></div>

<div class=""small-12 medium-6 cell""><img alt="""" src=""~/getmedia/b3a478fd-b218-4db0-b6c7-1dc77cf8fd12/grand-river-personnel-logo.png.xml?width=347&amp;height=149"" style=""width: 347px; height: 149px;"" /></div>
</div>
</div>
",NULL,NULL,00:22.0,https://sites-gowlingwlg.vuturevx.com/105/6285/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,d8837737-40d2-4472-8a9e-ba4101ec2105,NULL,39410df1-425d-4c6f-bea0-54d5e41e744a,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,Gowling WLG Speaker,t-white,NULL,NULL,"Employment, Labour & Equalities",NULL,NULL,~/getmedia/51c23857-8b63-467b-a3c1-ec1dcd1a0281/211201-annual-HR-hot-topics-webinar-social-image.jpg.xml?width=1272&height=675&ext=.jpg,NULL,NULL
469,/Events/2022/Funding-defined-benefits,en-GB,5DFBC257-B282-4499-A0FF-99A760A6AC9F,Funding defined benefits,Funding defined benefits,"The defined benefit landscape continues to change dramatically, with employers, trustees and the Pensions Regulator responding to the combined challenges of the Covid-19 pandemic and Brexit, alongside their day-to-day workload.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,27:42.0,27:49.0,11:00,11:45,GMT,0,NULL,"<p>The defined benefit (DB) landscape continues to change dramatically, with employers, trustees and the Pensions Regulator responding to the combined challenges of the COVID-19 pandemic and Brexit, alongside their day-to-day workload.</p>

<p>On Thursday 20th January 2022 at 11:00am, experts from Gowling WLG and <a href=""https://www.firstactuarial.co.uk/"" target=""_blank"">First Actuarial</a> and will again team up to run a 45-minute webinar &ndash; funding defined benefits. In the webinar, Liz Wood and <a href=""https://www.linkedin.com/in/marcos-abreu1/"" target=""_blank"">Marcos Abreu</a> will consider the likely focus of the Regulator in 2022, taking into account the impact of the Pension Schemes Act 2021 and associated regulatory changes.</p>

<p>What do the new funding requirements mean in practical terms for trustees and sponsors? The webinar will cover:</p>

<ul>
	<li>the latest position on the defined benefits funding code of practice;</li>
	<li>long term funding targets &ndash; interaction with Pension Schemes Act 2021 and what it will mean in practice;</li>
	<li>the Pensions Regulator&#39;s current engagement with schemes, drawing on case studies; and</li>
	<li>practical guidance on how trustees and employers can best respond to and engage with the Regulator on the new requirements.</li>
</ul>

<p>By registering for this webinar, you agree that your data can be shared between Gowling WLG and First Actuarial, who will use it to communicate with you regarding this event.</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession. Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,00:00.0,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?rsid=gKvQXAgTJRn4LYlEEryepBrEkkxBIGJQMvlCm6Hk4aCHF3k7L7fdw2xBVQSp6BKX&react=REGISTER,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,a19c4c5e-c05a-4fa5-95aa-c5a274279d8c,NULL,78b949bf-8838-4a2c-aa74-aa3ad35e87e3,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,NULL,NULL,Pensions,NULL,NULL,NULL,NULL,NULL
470,/Events/2022/ThinkHouse-The-UK-s-National-Security-and-Invest,en-GB,49631115-8290-4026-B3FB-A8BEDD863D3D,ThinkHouse - The UK's National Security and Invest,The UK's National Security and Investment Act – key issues for in-house legal teams ,"In this live webinar Samuel Beighton will discuss how best to navigate the new legal landscape of the NSI Act, considering its application, and exploring key issues for in-house legal teams to have in mind.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,17:50.0,17:56.0,10:00,11:00,GMT,1,1,"<p>The UK&#39;s National Security and Investment Act (the &quot;NSI Act&quot;) enters into full force on 4 January 2022.</p>

<p>With the <abbr title=""National Security and Investment Act"">NSI Act</abbr> expected to receive even more attention as a result, in-house teams can expect to receive more questions about how it applies, and the risks arising from this:</p>

<ul>
	<li>&quot;Will the <abbr title=""National Security and Investment Act"">NSI Act</abbr> apply to the planned acquisition of Target X?&quot;;</li>
	<li>&quot;What if the transaction is structured to only acquire the Target&#39;s assets?&quot; </li>
	<li>&quot;What if the acquisition is made by an overseas group company?&quot;</li>
	<li>&quot;If the <abbr title=""National Security and Investment Act"">NSI Act</abbr> applies, what does that mean for the deal timetable?&quot; </li>
	<li>&quot;What would be the risk if we didn&#39;t notify?&quot;</li>
	<li>&quot;Does the UK merger control regime apply at the same time?&quot;</li>
</ul>

<p>In this live webinar Samuel Beighton will discuss how best to navigate the new legal landscape of the <abbr title=""National Security and Investment Act"">NSI Act</abbr>, considering its application, and exploring key issues for in-house legal teams to have in mind.</p>

<p>This webinar is delivered as part of our <a href=""~/en/thinkhouse/"">ThinkHouse</a> programme, developed specifially for in-house counsel.</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession. Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,00:00.0,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?rsid=gKvQXAgTJRn4LYlEEryepBrEkkxBIGJQMvlCm6Hk4aBwAkSST7fJir8N-Frfggbg&react=REGISTER,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,b3f9fce6-b77c-4e15-978e-eaa664c609dc;4f997fc2-8233-4465-a01d-e68205aef05c,a143cbfd-d333-42a0-89a6-7287894464f1,f13a9240-2482-4077-be83-ebaa741dc3f0;ad056fcd-7211-4da7-a9e2-30612d332954,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/5d57b23c-f4d3-44e3-a08e-7ee56360fd71/thinkhouse-snr-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/27fda93c-8849-4d7e-a292-bcc5eb1e7896/thinkhouse-snr-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,NULL,NULL,"Competition Law & Antitrust, Corporate, M&A and Capital Markets",ThinkHouse,NULL,NULL,NULL,NULL
471,/Events/2022/Employment-Update-Series,en-GB,633BBA5B-8A50-492B-9389-E8CBEBF178C3,Employment Update Series,Employment Update Series,"Join us for a series of live webinars from our employment team in January and February, developed specifically for anyone dealing with HR and ER matters within their organisation, whether HR professionals, in-house lawyers or others.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,00:00.0,40:00.0,11:00,11:40,GMT,1,4,"<p>As we head into 2022, we will be taking our usual look ahead at developments in employment law and the world of work. It looks set to be another uncertain start to the year with the pandemic still present, but employers still need to plan as best they can and our next series of live webinars are designed to help you with that planning. Please join us for four live webinars in January and February, developed specifically for anyone dealing with HR and ER matters within their organisation, whether HR professionals, in-house lawyers or others. All of the webinars will start at 11:00 and will last approximately 40 minutes, including time for questions.</p>

<h2>Whistleblowing &ndash; bringing you up to speed</h2>

<p><strong>Tuesday 25th January 2022 at 11:00-11:40</strong></p>

<p>Speaker &ndash; Simon Stephen<br />
<br />
Whistleblowing is always in the news and is a constantly developing area. Whether it&#39;s from the pandemic, the EU directive, a Tribunal claim, a corporate scandal or part of broader ESG matters, there are many lessons to learn from the recent past months. This webinar will pull them together to help you future proof your organisation and make whistleblowing an asset, rather than a risk.</p>

<hr />
<h2>Working with the Menopause</h2>

<p><strong>Thursday 27th January 2022 at 11:00-11:40</strong><br />
<br />
Speaker &ndash;Vivienne Reeve<br />
<br />
With an estimated 13 million peri-menopausal and menopausal women in the UK workforce and the number of menopause related Tribunal claims rising, understanding its impact on women at work and your legal obligations as an employer is a must do. Join us for a walk through the legal, practical and the diversity &amp; inclusion issues arising.</p>

<hr />
<h2>Legal and organisation issues around hybrid working</h2>

<p><strong>Tuesday 1st February 2022 at 11:00-11:40</strong><br />
<br />
Speaker &ndash; Martin Chitty<br />
<br />
Whether it&#39;s hybrid, agile or the &quot;new normal&quot;, employers need to take a wider view than just the legal formalities. Equally important to your success will be clarity in communication, expectation setting, avoiding presenteeism, sub-conscious bias, FOMO, access, equipment and much more. We will be discussing these issues to help you plan for the future in this webinar.</p>

<hr />
<h2>Update on developments in trade union rights</h2>

<p><strong>Thursday 3rd February 2022 at 11:00 - 11:40</strong><br />
<br />
Speaker &ndash; Jonathan Chamberlain<br />
<br />
This webinar will update you on important recent cases affecting trade union rights. Hailed as &quot;Forever banning negotiation outside the collective bargain&quot;, the Supreme Court&#39;s decision in Kostal seems to give employers little room for manoeuvre &ndash; but is it as bad as it seems? Does the broad view of &quot;trade union activity&quot; in the RyanAir blacklisting case indicate a new and more protective approach from the Courts or are these cases narrow and fact specific with little impact on your businesses?</p>

<p>During the sessions, the speakers will provide useful information and practical tips on their respective topics, and will answer as many questions as possible in the time available.</p>

<p><strong>Please use the registration link to sign up for the sessions that you would like to attend.</strong></p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession.</p>

<p>Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,35:54.0,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?RSID=9ZQds7cDe4fmfbtlJkUKvR1TgL9L5IUuzzjKnbsBRzNoEHizyVijPjdiS3odARpx,NULL,Register for these events,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,d8837737-40d2-4472-8a9e-ba4101ec2105,NULL,2d03f2db-bf91-45db-a827-470484fe7ddb;51f73678-d5d2-4a3a-80be-bb454ae873c1;fb60329f-6333-4f7e-b26b-4f9b106a32e7;79205c59-28cb-4630-bd62-bf070ba732b0;799cf040-59c7-4986-825a-e4b909364823,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,40ECBAEA-9783-479A-8EB9-9D39F577C01D,Speaker(s),NULL,NULL,NULL,"Employment, Labour & Equalities",NULL,NULL,NULL,NULL,NULL
472,/Events/2022/Third-Annual-Lending-Conference,en-GB,4CAB3B9D-BAEC-4413-96B5-1CA8F2B2291B,Third Annual Lending Conference,Third-Annual Cross Institutional Lending Conference,Join Gowling WLG for engaging presentations designed to offer corporate and commercial bankers important insights for secured lending transactions.,~/getmedia/73436a5a-cbfa-4b54-ad1b-1a3181c16cca/211221-business-meeting-finances.jpg.xml?width=930&height=450&ext=.jpg,people in a business meeting,GWLG.Conference,05:43.0,05:51.0,10:00,15:30,EST,0,NULL,"<p><strong>Join Gowling WLG for engaging presentations designed to offer corporate and commercial bankers important insights for secured lending transactions.</strong></p>

<p>This event will empower attendees with the knowledge needed to more effectively structure security for lending transactions. It will also provide valuable insights for junior and more seasoned bankers when designing a solid security package or reviewing purchase documentation.</p>

<h2>Agenda</h2>

<table>
	<thead>
		<tr>
			<th scope=""col"">
			<p>Time (ET)</p>
			</th>
			<th scope=""col"">
			<p>Agenda</p>
			</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>
			<p>10a.m.</p>
			</td>
			<td>
			<p><strong>Canad</strong> <strong>a/US cross-border lending</strong><br />
			Join our conversation with a US legal expert as we discuss key aspects that Canadian lenders should consider when they encounter US credit parties and assets.</p>

			<p><em>Hosted by: <a href=""~/en/people/matthijs-van-gaalen/"">Matthijs van Gaalen</a></em></p>

			<p><em>Presented by: <a href=""#Speaker bios"">Jeffrey M. Monaco (Phillps Lytle LLP)</a></em></p>
			</td>
		</tr>
		<tr>
			<td>
			<p>11 a.m.</p>
			</td>
			<td>
			<p><strong>The convergence of lending and technology</strong></p>

			<p>Like physical assets or real property, it is possible to take a security interest in intangible intellectual property (IP) like patents and trademarks and still be on solid footing.</p>

			<p>This presentation will include discussions with experts and industry veterans relating to (a) the growth and funding of tech/IP based companies, (b) a lender side view of the value, risk and financing of IP, and (c) key points to make sure your security interest is effective and can be recorded correctly and in the proper jurisdictions.</p>

			<p><em>Hosted by: <a href=""~/en/people/patrick-mc-ilhone/"">Patrick Mc Ilhone</a></em></p>

			<p><em>Presented by: <a href=""~/en/people/alex-ross/"">Alex Ross</a>,<a href=""#Speaker bios""> Lally Rementilla (BDC) </a>&amp; <a href=""#Speaker bios"">Michael Wong (McMaster Innovation Park)</a></em></p>
			</td>
		</tr>
		<tr>
			<td>
			<p>12 p.m.</p>
			</td>
			<td>
			<p><strong>Lunch/networking break</strong></p>
			</td>
		</tr>
		<tr>
			<td>
			<p>1 p.m.</p>
			</td>
			<td>
			<p><strong>Financing share and asset purchase transactions</strong><br />
			Purchase agreements can be a few pages or hundreds. The transaction may be between arms-length entities or affiliated entities. The details can be simple or complex. The common trait is that bankers need to understand key aspects of share and asset purchase transactions prior to financing an acquisition transaction.</p>

			<p>This session will cover key aspects of purchase agreements, standard due diligence, liability concerns, and common areas of negotiations.</p>

			<p><em>Hosted by: <a href=""~/en/people/richard-dusome/"">Richard Dusome</a></em></p>

			<p><em>Presented by: <a href=""~/en/people/sacha-babic/"">Sacha Babic</a> &amp; <a href=""~/en/people/travis-evens/"">Travis Evens</a></em></p>
			</td>
		</tr>
		<tr>
			<td>
			<p>2 p.m.</p>
			</td>
			<td>
			<p><strong>Financing real property acquisitions</strong><br />
			A mortgage is central to a lender&#39;s security on a real estate acquisition financing, but so too is an understanding of the real property purchase transaction. Join our real estate lawyers as they chat through key aspects of a real property acquisition that bankers should turn their mind to in the context of a financing including review of a purchase agreement, title and off-title due diligence, title insurance vs title opinions, and common areas of negotiations.</p>

			<p><em>Hosted by: <a href=""~/en/people/stephanie-harvey/"">Stephanie Harvey</a></em></p>

			<p><em>Presented by: <a href=""~/en/people/pamela-green/"">Pamela Green</a> &amp; <a href=""~/en/people/mark-giavedoni/"">Mark Giavedoni</a>&nbsp;</em></p>
			</td>
		</tr>
		<tr>
			<td>
			<p>3 p.m.</p>
			</td>
			<td>
			<p><strong>30-minute networking session</strong></p>
			</td>
		</tr>
	</tbody>
</table>

<h2>Second-annual conference at a glance</h2>

<ul>
	<li><strong>345</strong> registered guests from:

	<ul>
		<li><strong>43</strong> financial institutions</li>
		<li><strong>58</strong> other businesses</li>
	</ul>
	</li>
	<li><strong>100%</strong> of survey respondents said they would attend again</li>
</ul>

<p>Attendee feedback</p>

<ul>
	<li><em>&quot;A first class effort. No one else is doing equivalent presentations.&quot;</em></li>
	<li><em>&quot;This was one of the best virtual conferences I&#39;ve attended.&quot;</em></li>
	<li><em>&quot;The sessions were very informative, and the presenters very engaging.&quot;</em></li>
</ul>

<h2>CPD/CLE details:</h2>

<p>LSO: This program is eligible for up to 4.0 hours of Substantive content&nbsp;</p>

<p>Barreau du Quebec: This program may be eligible for up to 4 hours of CPD credit</p>

<p>LSBC:&nbsp; This program is eligible for up for up to 4.0 hours toward the LSBC&#39;s CPD requirement</p>

<p><a id=""Speaker bios"" name=""Speaker bios""></a>{^widget|(path)%2fGlobal-Objects%2fCTAs%2fEvents%2fThird-annual-lending-conference%2f%2525|(name)GWLG.Widgets.FAQList|(image_guid)884cd42b-93de-40b9-9f7f-cf7e3608a676|(headingtext)External+speakers|(widget_displayname)FAQ+List|(width)|(height)^}</p>
",NULL,NULL,06:42.0,https://sites-gowlingwlg.vuturevx.com/96/6328/landing-pages/event-registration-(blank-form).asp,NULL,Save the date and register,36382405-0067-4169-8969-FEECBA0163A7,06cecb4c-c959-4674-9047-d5d8ee8c673c,ccb3b009-ba81-4ff5-8e8a-9200813a2a54;aa5dcce5-fbe3-48b0-8a5c-b653c134f240,NULL,cb2b14a9-d122-42c8-bc99-fcbfa67b407a;aa7f72bc-6c00-4c8c-811a-d7567f35fc6a;3899e441-0468-41c1-b38c-bae87b30032a;22caa3a7-ab34-47a7-866b-892c7db3973a;b1a1b208-ac53-4ad5-9a3e-12e168384a2f;a4fe635b-9f26-4434-a81b-99b8850b60c9;1b5d097a-8b1c-451a-9dee-83d075ce27fd;e7440021-23c5-406e-8b1c-35d20b07cf59;86af7e57-3fd0-44d9-81b4-234f0854e7c6,NULL,Conference,"Matthijs van Gaalen, Stephanie Harvey, Patrick M. Mc Ilhone, Pamela Green, Mark Giavedoni, Aleksandar (Sacha) Babic, Travis Evens, Alex Ross, Richard C. Dusome",Virtual conference,49461,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada,0,67FF8E68-8A1E-4E97-AEE5-E832729C2D40,Gowling WLG speakers,NULL,NULL,Financial Institutions & Services,"Banking & Finance, Financial Services Regulation",NULL,NULL,~/getmedia/ac38350f-eedf-468f-9ef8-27e1ab8aeb9c/211221-hamilton-lending-conference-2022.jpg.xml?width=1272&height=675&ext=.jpg,NULL,NULL
473,/Events/2022/Forced-labour-and-child-labour-in-supply-chains,en-GB,D61E5C0D-063E-4687-A856-E324DBA6A093,Forced labour and child labour in supply chains,Canadian ESG Series | Forced labour and child labour in supply chains,"Our panelists will discuss one of today's mission-critical ESG risks affecting Canadian, American and global businesses: forced labour and child labour in supply chains.",~/getmedia/400bba9a-7032-4172-9535-ac31240b1f4c/220105-forced-labour-supply-chain-main.jpg.xml?width=930&height=450&ext=.jpg,photo of metal chains with one golden loop,GWLG.Webinar,00:00.0,00:00.0,9:00 a.m. MST / 8:00 a.m. PST / 11:00 a.m.,NULL,EST,1,1 hour,"<p>On Wednesday,&nbsp;January 19, join&nbsp;Gowling WLG professional,&nbsp;Stephen Pike&nbsp;along with Senator Julie Miville-Dechêne of the Senate of Canada, and William Semins and Steven Hill of K&amp;L Gates Law Firm for the next Environmental, Social and Governance (ESG) webinar in the Canadian ESG webinar series. They will discuss one of today&#39;s mission-critical ESG risks affecting Canadian, American and global businesses: forced labour and child labour in supply chains.</p>

<p>This engaging event will focus on:</p>

<ul style=""margin-left:0.3in;"">
	<li><em>Bill S-211,&nbsp;Canada&#39;s Fighting Against Forced Labour and Child Labour in Supply Chains Act</em></li>
	<li>Perspectives on the role of the board of directors and global legislation and regulation</li>
	<li>Practical insights&nbsp;for businesses on&nbsp;managing forced labour and child labour supply chain risks&nbsp;</li>
	<li>And more</li>
</ul>

<h2>Speakers</h2>

<ul style=""margin-left:0.3in;"">
	<li>Stephen Pike - Partner, Gowling WLG</li>
	<li>Julie Miville-Dechêne -&nbsp;Senator, Senate of Canada</li>
	<li>William Semins -&nbsp;Partner, K&amp;L Gates</li>
	<li>Steven Hill -&nbsp;Partner, K&amp;L Gates</li>
</ul>

<h2>Watch previous episodes</h2>

<p><em>This webinar is part of our Canadian ESG webinar series.&nbsp;<a href=""~/en/insights-resources/?page=1&amp;resourcetypes=GWLG.Webinar&amp;q=Canadian%20ESG%20Series&amp;mode=anyword&amp;sort=Date&amp;services=49303"" target=""_blank"">Watch more from the series &raquo;</a></em></p>

<h2>Event partner</h2>

<p><img alt="""" src=""~/getmedia/7bb55de2-0978-4c29-babb-4b56efac4a96/K-L-gates-logo-2.png.xml?width=298&amp;height=87"" style=""width: 298px; height: 87px;"" /></p>

<h2>CPD information</h2>

<p><em>*This program is eligible for up to 1 hour of substantive CPD credits with the LSO and LSBC. CLE credit in the U.S. is pending. If you indicate that a certificate is required on your registration form,&nbsp;we will email you your certificate after the session.</em></p>
",NULL,NULL,00:00.0,https://sites-gowlingwlg.vuturevx.com/95/6369/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,b305a1b6-d0ba-41dc-8e53-579fd077b871,NULL,03d6dce1-2df8-4f24-8e6b-d7bcda0b6509,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/95/6369/landing-pages/event-registration-(blank-form).asp,Register now,GWLG.Canada;GWLG.UnitedStates,0,0CDA2C7E-BFD7-48AD-991D-C46DBB4E55AB,Gowling WLG speaker,NULL,NULL,NULL,"Environmental, Social and Governance (ESG)",NULL,NULL,~/getmedia/426c9b47-bd48-4c1e-aad9-2ed49c601e7e/220105-forced-labour-supply-chains.jpg.xml?width=1272&height=675&ext=.jpg,NULL,_Blank
474,/Events/2022/ThinkHouse-Social-Value-in-Procurement,en-GB,7D032B94-64F5-4AC0-97A4-1EA66FBDD076,ThinkHouse - Social Value in Procurement,Social Value in Procurement - ThinkHouse Masterclass,For our first masterclass we have selected social value as our main topic. How exactly should social value be promoted through public procurement?,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,30:55.0,30:59.0,10:00,10:45,GMT,1,NULL,"<p>Following our highly successful ThinkHouse Public Sector seminars on the public procurement regime, we&#39;ve decided to run a series of quarterly masterclasses on legal topics which throw up some of the most frequent questions for people involved with public procurement processes &ndash; whether on the authority side, or as bidders.</p>

<p>For our first masterclass we have selected social value as our main topic. How exactly should social value be promoted through public procurement? How should it be evaluated? Should it feature in every procurement process? Are there traps for the unwary to sleepwalk into?</p>

<p>We will also report on the current status of the proposed reforms to public procurement law in the UK, and do so in each of the masterclass webinars to keep you updated as it progresses.</p>

<p>Each of our masterclasses is free to attend, takes place via Zoom, and lasts 45 minutes. Attendees can raise questions which we&#39;ll answer live if there&#39;s time; if not, we&#39;ll circulate our responses shortly afterwards.</p>

<p>Please RSVP to secure your place on this webinar.</p>

<p>This webinar is delivered as part of our <a href=""~/en/thinkhouse/"">ThinkHouse programme</a>, developed specifically for senior in-house. counsel.</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession. Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,00:00.0,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?rsid=gKvQXAgTJRn4LYlEEryepBrEkkxBIGJQMvlCm6Hk4aCqZaiE_nawxdVgohE0Zink&react=REGISTER,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,5ad41b49-d460-489a-95b9-84c854eda6f1,a7ba0b1b-cbe3-4b6d-bb8e-5835b1fbb08a;311e6350-b4a5-4f58-8201-230ac9fc70b5,a143cbfd-d333-42a0-89a6-7287894464f1,503e49eb-bfc5-4803-a856-7fcbac77a38a;9c1e5d85-61f3-41ce-821b-f68dd18ccbb1,NULL,Webinar,"Christopher Brennan, Susannah E Fink",Webinar,34471,GWLG.Events,NULL,~/getmedia/5d57b23c-f4d3-44e3-a08e-7ee56360fd71/thinkhouse-snr-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/27fda93c-8849-4d7e-a292-bcc5eb1e7896/thinkhouse-snr-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,NULL,Government Contracting & Public Sector ,"Public Procurement, Procurement",ThinkHouse,NULL,NULL,NULL,NULL
475,/Events/2022/Scheme-Sessions-Vol1-2022,en-GB,BB6E5EC9-77A9-42DA-9854-B10AD62E7561,Scheme Sessions Vol1.2022 ,Scheme Sessions Vol1.2022 ,We're kicking off 2022 with the first in our new series of Scheme Sessions webinars focusing on Trustee governance and the Pension Schemes Act 2021. ,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,16:43.0,00:00.0,12:00,13:00,CST,0,NULL,"<p>Happy New Year from Gowling WLG&#39;s Pensions team! We&#39;re kicking off 2022 with the first in our new series of Scheme Sessions webinars focusing on Trustee governance and the Pension Schemes Act 2021. The three sessions, which will be held in January and February, will include a short introduction by Head of Pensions at Gowling WLG, <a href=""~/en/people/jason-coates/"">Jason Coates</a>, followed by discussions between guest speakers <a href=""https://www.linkedin.com/in/louise-sivyer-58b58827/"" target=""_blank"">Louise Sivyer</a> from the Pensions Regulator, <a href=""https://www.linkedin.com/in/sarah-horan-06017564/"" target=""_blank"">Sarah Horan</a> of Independent Trustee Services, <a href=""https://marketing.uk.gowlingwlg.com/reaction/emsdocuments/Event%20documents/MS_very_short_bio_May_2021.docx"" target=""_blank"">Margaret Snowdon OBE</a> and <a href=""https://www.linkedin.com/in/nicholas-hill-67809052/"" target=""_blank"">Nicholas Hill</a>, Barrister at Outer Temple Chambers.</p>

<p>All of the webinars will start at 12:00 and will last approximately one hour, including time for questions.</p>

<p><strong>Speakers - Sarah Horan (Independent Trustee Services) and Louise Sivyer (the Pensions Regulator): Thursday 27 January 2022 at 12:00 - 13:00<br />
Governance: What&#39;s New?</strong></p>

<p>Jason Coates (Head of Pensions, Gowling WLG) will be chairing this discussion on what&#39;s new and what&#39;s on the horizon for trustees in 2022. In particular, we will be focusing on the new Single Code and what trustees should be doing to prepare for that. In this context, we are looking forward to getting Louise&#39;s insight on the Pensions Regulator&#39;s expectations of trustees and talking to her about the requirement for an Own Risk Assessment. Sarah will be covering another hot topic for trustees: diversity and inclusion on the trustee board and, from her experience, the practical steps that trustees can take to ensure they are operating as effectively as possible.</p>

<p><strong>Speakers &ndash; Margaret Snowdon OBE (President of The Pensions Administration Standards Association) and Maddy Frost (Legal Director at Gowling WLG): Wednesday 2 February 2022 at 12:00 - 13:00<br />
The New Transfer Regime</strong></p>

<p>In this second session, we will be focusing on the new transfer regulations and how trustees and administrators are dealing with the obligations in practice. We will talk about live issues that trustees are grappling with, &quot;safe lists&quot; and the &quot;risk-based approach&quot; to decision-making advocated by the Pensions Regulator. We are very much looking forward to hearing from Margaret Snowdon OBE on these issues and getting her insight on best practice.</p>

<p><strong>Speakers &ndash; Charlotte Scholes (Principal Associate, Gowling WLG) and Nicholas Hill (Outer Temple Chambers): Wednesday 9 February 2022 at 12:00 - 13:00<br />
Governance: Don&#39;t Forget the Basics</strong></p>

<p>In our third session, we will be reviewing the basics of good governance, including decision making, managing conflicts, trustee minutes and ways to mitigate risk. We will identify some of the common pitfalls we see in practice and the potential consequences when mistakes are made. As specialists in pensions disputes, <a href=""~/en/people/charlotte-scholes/"" target=""none"">Charlotte Scholes</a> (Principal Associate, Gowling WLG) and Nicholas Hill (Barrister, Outer Temple Chambers) will be sharing their experience and giving practical advice.</p>

<div align=""center"">
<hr align=""center"" size=""3"" width=""100%"" /></div>

<p>During the sessions, the speakers will provide useful information and insights, as well as practical tips on their respective topics, and will answer as many questions as possible in the time available.<br />
<br />
<a href=""https://marketing.uk.gowlingwlg.com/reaction/Home?RSID=LWvLrIOJghl8WTuaKfI4Lz6-mC3i4RN6k6yUI2frfWw"" target=""_blank"">Please use this RSVP link</a> to sign up for the sessions that you would like to attend.</p>
",NULL,NULL,21:37.0,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?RSID=bdQCz4VYcgKuu_fE6ImLxSTXs_d2lGoPCrhZh4JN7U4iOCwc0fl8AWVDzv4KDwUz,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,a19c4c5e-c05a-4fa5-95aa-c5a274279d8c,NULL,91c9c57f-d1b5-4113-862f-60addeffaa4f;ff8e1a8b-903b-4c8e-97a9-46b6ab4b3fae;41c62b38-397a-4aae-96f3-6c724638dd8d,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,NULL,Speaker(s),NULL,NULL,NULL,Pensions,NULL,NULL,NULL,NULL,NULL
476,/Events/2022/Tax-dispute-resolution-monthly-update-session-4,en-GB,C6709435-9CB9-4C7B-9CE6-1AC04F74CE01,Tax dispute resolution monthly update session 4,2022 Tax Dispute Resolution Monthly Update | Session 4,"We will discuss GST/HST audits, suing CRA and how to effectively resolve tax disputes.",~/getmedia/d1b4713a-9293-4542-b6b0-8a45965c339d/210901-Tax-dispute-resolution-session-1.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Webinar,00:00.0,00:00.0,12:00 p.m.,12:30 p.m.,EST,1,30 minutes,"<p>With the Canada Revenue Agency deploying massive resources to crack down on perceived tax avoidance, it&#39;s now more important than ever to stay up to date with new CRA policies,&nbsp;legislation and case law. Please join Gowling WLG&#39;s Tax Dispute Resolution Group&nbsp;for Gowling WLG&#39;s 30 minute interactive monthly tax dispute resolution (TDR) webinars,&nbsp;to keep up with current developments and learn practical insights on how to successfully resolve tax disputes with the CRA.</p>

<p>To submit a question or topic to be covered in future webinars,&nbsp;please email <a href=""mailto:TDR@gowlingwlg.com"">TDR@gowlingwlg.com</a>.</p>

<p>Topics to be discussed at this session include:</p>

<ul style=""margin-left:0.3in;"">
	<li>GST/HST audits: How CRA gets started</li>
	<li>Suing CRA: Does CRA owe taxpayers a duty of care?</li>
	<li>How to effectively resolve tax disputes &ndash; part two</li>
</ul>

<h2>CPD information</h2>

<p><em>*This program is eligible for up to 30 minutes of substantive CPD credits with the LSO,&nbsp;the LSBC and the Barreau du Québec.&nbsp;If you indicate on your registration form that a certificate of participation is required,&nbsp;we will email you your certificate after the session.</em></p>

<h2>Watch previous episodes</h2>

<p>This webinar is part of our Tax Dispute Resolution Monthly Update.&nbsp;<a href=""~/en/insights-resources/?page=1&amp;resourcetypes=GWLG.Webinar&amp;services=596&amp;sort=Date&amp;q=Tax%20dispute%20Resolution%20Monthly&amp;mode=anyword"" target=""_blank"">Watch more from the series &raquo;</a></p>
",NULL,NULL,00:00.0,https://sites-gowlingwlg.vuturevx.com/106/6140/landing-pages/event-registration-(blank-form)---jan.-25--2022.asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,fa76a598-e571-4940-95e3-81b4cc0c7fe6,NULL,6b8f6eff-0e11-457f-a5fb-13663ac51e49;5cecda13-17b4-4875-b9e9-5edae877cf23;149907dc-cc84-443e-8af2-b0e23629d2f9,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/106/6140/landing-pages/event-registration-(blank-form)---jan.-25--2022.asp,Register now,GWLG.Canada,0,0CDA2C7E-BFD7-48AD-991D-C46DBB4E55AB,Speakers,NULL,NULL,NULL,Tax Dispute Resolution,NULL,NULL,~/getmedia/625ed3f8-bd0f-4f2b-af8a-b8089dc91c43/220113-Tax-dispute-resolution-session-4.jpg.xml?width=930&height=450&ext=.jpg,NULL,_Blank
479,/Events/2022/Whats-to-prove-in-a-trademark-case,en-GB,A635607B-D6DF-43AE-8B88-7EFC4FB200C8,Whats to prove in a trademark case,Lifecycle of a smart idea | What's to prove in a trademark case,"In the next installment of our Lifecycle of a Smart Idea series, we will take a close look at the evidence needed to win a trademark case in the courts in Canada, UK, Europe, China, Singapore, and the UAE, respectively.",~/getmedia/38806de5-3e1c-4698-94c3-2d13114f0188/220121-Prove-Trademark-Case.jpg.xml?width=930&height=450&ext=.jpg,3D render of buildings in a conference room,GWLG.Webinar,00:00.0,00:00.0,2 p.m. GMT / 3 p.m. CET / 10 p.m. CST / 9 a.m.,NULL,EST,1,"1 hour of substantive CPD credits with the LSO, the LSBC and the Barreau du Québec.","<p><em>This event has ended but will be available&nbsp;on-demand webinar in the coming days.&nbsp;In the meantime, <a href=""~/en/insights-resources/?page=1&amp;services=454&amp;resourcetypes=GWLG.Webinar&amp;q=Lifecycle&amp;mode=anyword&amp;sort=Date"" target=""_blank"">watch more from the series now &raquo;</a></em></p>

<p>During the lifecycle of protecting a good idea, enforcing trademark rights can become an issue on a global scale. Knowing the ways to enforce those rights around the world is vital to any successful plan to protect the good idea. Therefore,&nbsp;in the next installment of our Lifecycle of a Smart Idea series, we will take a close look at the evidence needed to win a trademark case in the courts in Canada,&nbsp;UK,&nbsp;Europe,&nbsp;China,&nbsp;Singapore,&nbsp;and the UAE,&nbsp;respectively. We will also cover both common law and civil law practice, as well as statutory and common law rights, as may be relevant in such cases.</p>

<p>Members of Gowling WLG&#39;s Global IP team will address the following questions:</p>

<ul style=""margin-left:0.3in;"">
	<li>What evidence does a plaintiff need to lead with to win a case?</li>
	<li>What are the significant differences between enforcing common law rights and statutory rights in the trademark?</li>
	<li>What about enforcing those rights in a civil law proceeding?</li>
	<li>How does a plaintiff handle various defences raised by the defendant?</li>
	<li>Who has what burdens of proof in a trademark case?</li>
</ul>

<p><strong>Post-webinar breakout rooms</strong></p>

<p>Immediately following the webinar,&nbsp;we invite you to join our panellists in virtual breakout rooms where you will have the opportunity to ask direct questions and participate in a discussion with other attendees.</p>

<h2>Speakers</h2>

<ul style=""margin-left:0.3in;"">
	<li>Kelly Gill - Partner, Gowling WLG</li>
	<li>Céline Bey - Partner, Gowling WLG</li>
	<li>John Coldham - Partner, Gowling WLG</li>
	<li>James Green - Partner, Gowling WLG</li>
	<li>Jia Ling Quek - Senior Associate, JurisAsia LLC</li>
	<li>Sau Lin Wan - Principal Associate, Gowling WLG</li>
	<li>Molly Zhuang - Partner, Aquila Law Firm</li>
</ul>

<h2>Watch previous episodes</h2>

<p><em>This is the 18th installment in our Lifecycle of a Smart Idea series, dedicated to helping you maximize opportunity and minimize risk when taking innovative ideas to the global market.&nbsp;<a href=""~/en/insights-resources/?page=1&amp;services=454&amp;resourcetypes=GWLG.Webinar&amp;q=Lifecycle&amp;mode=anyword&amp;sort=Date"" target=""_blank"">Watch more from the series &raquo;</a></em></p>

<h2>CPD information</h2>

<p><em>*This program is eligible for up to one hour of substantive CPD credits with the LSO,&nbsp;the LSBC and the Barreau du Québec. If you indicate on your registration form that a certificate of participation is required,&nbsp;we will email you your certificate after the session.</em></p>
",NULL,NULL,00:00.0,https://sites-gowlingwlg.vuturevx.com/106/6394/landing-pages/event-registration-(blank-form)---feb.-16.asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,08b9a44c-bb26-4255-9779-296a124fcbee;aa72ea93-20f8-455a-8e77-6f6cea510684,8c0f2d68-a5d9-441b-95a9-3b2a98a43c1d,36136865-0825-4ed5-8a26-1778e5fb88b3;ad4cc2a0-5825-4d92-930d-64226a7659b3;9ff8fd1a-c2f5-4084-b72e-4aa02fdf3312;78dddd70-908d-4c80-ae6c-49f50e075996,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada;GWLG.UK;GWLG.China;GWLG.France;GWLG.Singapore;GWLG.UAEDubai,0,0CDA2C7E-BFD7-48AD-991D-C46DBB4E55AB,Gowling WLG Speakers,NULL,NULL,NULL,"Intellectual Property Law, Trademarks, Brands & Designs",IP Law Hub,NULL,~/getmedia/d349ea81-5660-4adf-9079-80bbf50b601e/220121-Prove-Trademark-Case-social.jpg.xml?width=930&height=493&ext=.jpg,NULL,_Blank
480,/Events/2022/Understanding-measures-in-the-TUPE-process,en-GB,E7DD8BD7-D48C-4C9D-AFC8-081E16675DCE,Understanding measures in the TUPE process,Understanding measures in the TUPE Information and Consultation process - ThinkHouse,The webinar will cover the key issues that arise when looking at measures and how to deal with them as part of the TUPE consultation process. ,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,29:24.0,29:28.0,10:30,11:30,GMT,1,1,"<p>Information and Consultation under TUPE is one of the key practical areas which can determine the success of a transfer. However, it can be difficult to identify whether an issue amounts to a measure as it is not defined under TUPE. If all measures are not identified, this can lead to employee relations problems and expose the organisation to financial risks if a matter is overlooked. The webinar will cover the key issues that arise when looking at measures and how to deal with them as part of the TUPE consultation process.&nbsp;</p>

<p>The issues covered in the webinar will include:</p>

<ul>
	<li>What are the TUPE information and consultation obligations?</li>
	<li>What is a measure?</li>
	<li>Interactive worked examples on measures</li>
	<li>When is the duty to consult triggered?</li>
	<li>How to deal with a benefit that cannot be replicated</li>
	<li>Pensions and measures.</li>
</ul>

<p>Our speakers, Jane Fielding, Rebecca Jones and Liz Wood will help you understand the key issues, helping to ensure a smooth transfer process and protect the organisation from claims and issues going forwards.</p>

<p>There will be an opportunity to ask questions during the webinar and we will try and answer as many questions as possible in the time available.</p>

<p>Please use the RSVP link to book your place on this webinar.</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession. Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,30:00.0,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?rsid=gKvQXAgTJRn4LYlEEryepBrEkkxBIGJQMvlCm6Hk4aDAa34v1RDBExJij59UzLG2&react=REGISTER,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,d8837737-40d2-4472-8a9e-ba4101ec2105;a19c4c5e-c05a-4fa5-95aa-c5a274279d8c,a143cbfd-d333-42a0-89a6-7287894464f1,799cf040-59c7-4986-825a-e4b909364823;144241c0-43c9-4f47-ab36-eb138f49f18e;78b949bf-8838-4a2c-aa74-aa3ad35e87e3,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/5d57b23c-f4d3-44e3-a08e-7ee56360fd71/thinkhouse-snr-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/27fda93c-8849-4d7e-a292-bcc5eb1e7896/thinkhouse-snr-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,NULL,NULL,"Employment, Labour & Equalities, Pensions",ThinkHouse,NULL,~/getmedia/85e3071a-0a66-447e-a7bd-a6c1c2cc314e/220216-tupe-thinkhouse.png.xml?width=1275&height=627&ext=.png,NULL,NULL
481,/Events/2022/Building-the-2022-Commonwealth-Games,en-GB,B5CA48E5-9223-41EF-A568-6BCB8AF803F0,Building the 2022 Commonwealth Games,Building the Birmingham 2022 Commonwealth Games - Asset Delivery and Legacy in Challenging Times ,"This is a unique opportunity to hear from those directly involved in delivering the venues, accommodation and infrastructure for the Games in this complex and vibrant city. ",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,02-03-2022 08:30,02-03-2022 10:30,08:30,10:30,GMT,0,NULL,"<p>This is a unique opportunity to hear from those directly involved in delivering the venues, accommodation and infrastructure for the Games in this complex and vibrant city. They will share how they have responded to and addressed the challenges posed by shortened timescales, multiple stakeholders and organisation of a global sporting event in the light of the labour and supply chain challenges wrought by Brexit and the global pandemic. The panel will also discuss what the lasting impact will be for the region and the UK.</p>

<p>The discussion will be moderated by Construction &amp; Engineering Partner, Mike O&#39;Shea. Mike will be joined by an illustrious panel at the forefront of B2022 built asset delivery:</p>

<ul>
	<li><strong>Craig Cooper</strong>, Director Birmingham 2022 Commonwealth Games - Birmingham City Council</li>
	<li><strong>Alex Kirby</strong>, Director of Venue, Village Development and Overlay - Birmingham 2022 Commonwealth Games</li>
	<li><strong>Anne Shaw</strong>, Executive Director - Transport for West Midlands</li>
	<li><strong>Neil Trubshaw</strong>, Commercial Director - Wates Construction</li>
</ul>

<p>This seminar will be of particular relevance to commercial and in-house legal teams in the construction and engineering, projects and infrastructure, supply chain, regeneration, procurement, transport and sports sectors. <a href=""https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?RSID=6F-hjWvLQWOZsi5r8nG5kN83zI9vG95_eWCBWCJef46ocGzl1eAHoy1IPr2oA17U"" target=""_blank"">Please use this RSVP link to secure your place.</a></p>

<p>We hope you can join us on Wednesday 2nd March for what promises to be an engaging panel session.</p>
",NULL,NULL,02-03-2022 11:09,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?RSID=6F-hjWvLQWOZsi5r8nG5kN83zI9vG95_eWCBWCJef46ocGzl1eAHoy1IPr2oA17U,NULL,Register for this event,58076178-DA60-4AB6-A07C-EF250971EBF7,3fc2ca8c-9d19-44ba-a3a9-ad1ecb11e900,NULL,NULL,1bcef802-e18d-4c52-9203-5d613c802e3f,NULL,Seminar,Michael O'Shea,Birmingham,70,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,95EC9477-4594-4332-A463-E612BD16CA0C,Key contact,NULL,58076178-da60-4ab6-a07c-ef250971ebf7,Construction & Engineering,NULL,NULL,Birmingham,NULL,NULL,NULL
482,/Events/2022/Tax-dispute-resolution-monthly-update-session-5,en-GB,B40E0D2B-2257-4D21-84D9-CF5C5CC725AE,Tax dispute resolution monthly update session 5,2022 Tax Dispute Resolution Monthly Update | Session 5,"Topics to be discussed include effective use of Tax Court of Canada settlement conferences, transfer Pricing update and limiting the scope of CRA audits.",~/getmedia/d1b4713a-9293-4542-b6b0-8a45965c339d/210901-Tax-dispute-resolution-session-1.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Webinar,00:00.0,00:00.0,12:00 p.m.,12:30 p.m.,EST,1,30 minutes,"<p>With the Canada Revenue Agency deploying massive resources to crack down on perceived tax avoidance, it&#39;s now more important than ever to stay up to date with new CRA policies,&nbsp;legislation and case law. Please join Gowling WLG&#39;s Tax Dispute Resolution Group&nbsp;for Gowling WLG&#39;s 30 minute interactive monthly tax dispute resolution (TDR) webinars,&nbsp;to keep up with current developments and learn practical insights on how to successfully resolve tax disputes with the CRA.</p>

<p>To submit a question or topic to be covered in future webinars,&nbsp;please click contact <a href=""mailto:TDR@gowlingwlg.com"">TDR@gowlingwlg.com</a>.</p>

<h2>Watch previous episodes</h2>

<p><em>This webinar is part of our Tax Dispute Resolution Monthly Update.&nbsp;<a href=""~/en/insights-resources/?page=1&amp;resourcetypes=GWLG.Webinar&amp;services=596&amp;sort=Date&amp;q=Tax%20dispute%20Resolution%20Monthly&amp;mode=anyword&amp;utm_source=vuture&amp;utm_medium=email&amp;utm_campaign=vuture/"" target=""_blank"">Watch more from the series &raquo;</a></em></p>

<h2>CPD information</h2>

<p><em>*This program is eligible for up to 30 minutes of substantive CPD credits with the LSO,&nbsp;the LSBC and the Barreau du Québec.&nbsp;If you indicate on your registration form that a certificate of participation is required, we will email you your certificate after the session.</em></p>
",NULL,NULL,00:00.0,https://sites-gowlingwlg.vuturevx.com/106/6140/landing-pages/event-registration-(blank-form)---feb.-22--2022.asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,fa76a598-e571-4940-95e3-81b4cc0c7fe6,NULL,6b8f6eff-0e11-457f-a5fb-13663ac51e49;3e52e02c-f918-448c-8f4a-4310c9f15b82;562df86f-e821-4fed-b6a7-3eaabea2724c,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/106/6140/landing-pages/event-registration-(blank-form)---feb.-22--2022.asp,Register now,GWLG.Canada,0,0CDA2C7E-BFD7-48AD-991D-C46DBB4E55AB,Speakers,NULL,NULL,NULL,Tax Dispute Resolution,NULL,NULL,~/getmedia/e1f363d8-0923-46e7-912c-96f68fd77833/220209-Tax-dispute-resolution-session-5.jpg.xml?width=930&height=450&ext=.jpg,NULL,_Blank
483,/Events/2022/Women-in-Law-Summit-Canada,en-GB,440415FE-8398-461A-9942-D7E62B167C80,Women in Law Summit Canada,Women in Law Summit Canada,"Gowling WLG is proud to sponsor the Women in Law Summit Canada on Feb. 17, 2022. This powerful virtual summit strives to inspire the next generation of industry leaders to take proactive steps towards their personal and professional development, while also championing the creation of inclusive and diverse workspaces.  ",NULL,NULL,GWLG.Conference,00:00.0,00:00.0,9:45 a.m.,4:45 p.m.,EST,0,NULL,"<p>Gowling WLG is proud to sponsor the <strong>Women in Law Summit Canada</strong> on <strong>Feb.&nbsp;17, 2022.</strong> This powerful virtual summit strives to inspire the next generation of industry leaders to take proactive steps towards their personal and professional development, while also championing the creation of inclusive and diverse workspaces.&nbsp;&nbsp;</p>

<p>This full-day event will feature panel discussions, presentations and fireside chats about career development, mentorship and sponsorship, celebrating diversity, and allyship.</p>

<p>Gowling WLG partners <a href=""~/en/people/selena-kim/#panel-button1"" target=""_blank"">Selena Kim</a> and <a href=""~/en/people/susan-rosen/#panel-button1"" target=""_blank"">Susan Rosen</a> will be among the speakers on the following panels:</p>

<h3><strong>Designing the career you want | 10:40 a.m. EST </strong></h3>

<p>Gowling WLG panelist: Susan Rosen</p>

<p>There are many factors to consider when building a successful career, such as the importance of identifying clear goals, understanding your strengths and weaknesses, and the benefits of learning how to network effectively. The leading lawyers on this panel will share key considerations for building a dream career &ndash; and questions to ask along the way.</p>

<h3><strong>Standing out from the crowd | 4 p.m. EST</strong></h3>

<p>Gowling WLG panelist<strong>:</strong> Selena Kim</p>

<p>While your performance in your role is critical to your career, it&#39;s important to take it a step further. Being actively engaged, contributing to the team, and thinking innovatively are essential ways to distinguish yourself from other strong candidates. In this session, a panel of knowledgeable professionals will provide practical tips for standing out from the crowd as a leader.</p>
",NULL,NULL,45:00.0,https://womeninlaw.ca/,NULL,Register for this event,36382405-0067-4169-8969-FEECBA0163A7,59be9dcd-e5f0-43e4-9d50-442a658eda18;06cecb4c-c959-4674-9047-d5d8ee8c673c,c27f9d3f-c358-48fb-b057-9a291fea02aa;ccb3b009-ba81-4ff5-8e8a-9200813a2a54,NULL,0be2c139-c465-4e30-ab0d-82bb70c7dd5d;4ad938d1-5bfa-4a5e-a5d8-14b7d90e1482,NULL,Conference,"Susan D. Rosen, Selena Kim",Virtual conference,49461,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://womeninlaw.ca/,Register now,NULL,0,7413DF6E-73F1-4243-A2AB-24EB73F8928E,Speakers,NULL,NULL,"Real Estate, Financial Institutions & Services","Real Estate, Banking & Finance",NULL,NULL,~/getmedia/8e8c137a-e435-4d77-85ec-41cb81d9c7e0/WILC2022-Gold-Partner_Gowling.jpg.xml?width=1200&height=627&ext=.jpg,NULL,_Blank
484,/Events/2022/ThinkHouse-Supply-chain-seminar-Birmingham,en-GB,531CC2F3-94DC-4FB5-9812-A3CC0DCE4B5B,ThinkHouse - Supply chain seminar - Birmingham,ThinkHouse Spring Seminar 2022 - Birmingham,"Supply chain issues haven't been far from the headlines in recent months, and as we move into spring a variety of supply chain disruptions continue to impact businesses across the UK. ",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,24-03-2022 15:18,24-03-2022 15:18,09:00,13:45,GMT,1,NULL,"<p>Join us on 24th March<strong> </strong>for a morning of legal updates and training developed specifically for senior in-house lawyers, as well as an opportunity to network with existing&nbsp;and new in-house counsel contacts.</p>

<h2>The importance of sustainable supply chains</h2>

<p>Sustainability and transparency in the supply chain is of growing importance, with tighter regulation and reporting moving it from a reputational issue to a legal requirement. In this panel discussion, we will draw out the key elements that need to be considered including environmental impacts, modern slavery human rights and corporate governance. We will highlight new and changing regulations and provide practical steps that can be taken by you as in-house counsel to manage risks and advise your board. We will then open up to the floor to answer any questions you may have on sustainable supply chains.</p>

<h2>Competition law and distribution</h2>

<p>Samuel Beighton will explore opportunities arising from the UK&#39;s new vertical block exemption regime, identifying key changes and what these mean for businesses at different levels of the supply chain.</p>

<h2>Navigating sanctions and contracts</h2>

<p>It is essential that businesses take steps to understand the implications of UK and EU sanctions measures against Russia linked entities in response to the ongoing crisis in Ukraine. EU, Trade and Competition expert, Bernardine Adkins, and associate James Stunt will provide an overview of these measures as they currently stand and outline action points for businesses trading with or investing in Russia.</p>

<p>David Lowe and Emma Carr will then discuss the impact of sanctions on contracts - when are the sanctions a force majeure? What happens if there are no relevant sanctions but you still want to get out of the contract?</p>

<h2>In-house insight</h2>

<p>We will be joined by two in-house counsel to share their experiences of dealing with the uncertain and evolving supply chain environment recently. They will share challenges overcome and lessons learnt as they navigate the complex supply chain landscape in their sectors.</p>

<p>We&#39;re delighted to be able to deliver this seminar in-person, to enable our ThinkHouse members to re-establish contacts and meet new in-house peers, in addition to learning more about the legal issues surrounding today&#39;s ongoing supply chain challenges.</p>

<p>Places at the seminars are limited, so please use the RSVP link to request attendance at this event.</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession. Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,23-03-2022 15:21,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?rsid=gKvQXAgTJRn4LYlEEryepBrEkkxBIGJQMvlCm6Hk4aDQwjEKgXIxLSxH_-geogXg&react=All%20Reactions,NULL,Register interest in this event,58076178-DA60-4AB6-A07C-EF250971EBF7,NULL,549cbe28-f188-44cd-85c0-0f4e23a23817,a143cbfd-d333-42a0-89a6-7287894464f1,2563a6d6-5f45-46c5-8698-e572a35f100b;d7a64117-fe8d-47a0-ace6-75c8607bfcdd;f13a9240-2482-4077-be83-ebaa741dc3f0;742aa35b-b58b-4d7c-a95e-820a420ada54;e8081a0b-9874-4c18-8a1a-2ef51aaa161c;a1a4c901-7400-490f-8357-9db439f7dfee;ad056fcd-7211-4da7-a9e2-30612d332954;a9daf1f3-b2ff-43d9-b76e-b815bb73aace;334a7f26-44f4-4a26-9d0d-0ddd5e499b12;4150ff2c-c5a6-4bd9-ba4e-37c9567eb4f7,NULL,Seminar,NULL,Birmingham,70,GWLG.Events,NULL,~/getmedia/5d57b23c-f4d3-44e3-a08e-7ee56360fd71/thinkhouse-snr-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/27fda93c-8849-4d7e-a292-bcc5eb1e7896/thinkhouse-snr-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,58076178-da60-4ab6-a07c-ef250971ebf7,NULL,Commercial,ThinkHouse,Birmingham,NULL,NULL,NULL
485,/Events/2022/ThinkHouse-Supply-chain-seminar-London,en-GB,08ACBA0F-6B8E-40AE-A49C-876133C81D38,ThinkHouse - Supply chain seminar - London,ThinkHouse Spring Seminar 2022 - London,"Supply chain issues haven't been far from the headlines in recent months, and as we move into spring a variety of supply chain disruptions continue to impact businesses across the UK.  This event is in London.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,31-03-2022 15:18,31-03-2022 15:18,09:00,13:45,GMT,1,NULL,"<p>Join us on 31st March for a morning of legal updates and training developed specifically for senior in-house lawyers, as well as an opportunity to network with existing and new in-house counsel contacts.</p>

<h2>The importance of sustainable supply chains</h2>

<p>Sustainability and transparency in the supply chain is of growing importance, with tighter regulation and reporting moving it from a reputational issue to a legal requirement. In this panel discussion, we will draw out the key elements that need to be considered including environmental impacts, modern slavery human rights and corporate governance. We will highlight new and changing regulations and provide practical steps that can be taken by you as in-house counsel to manage risks and advise your board. We will then open up to the floor to answer any questions you may have on sustainable supply chains.</p>

<h2>Competition law and distribution</h2>

<p>Samuel Beighton will explore opportunities arising from the UK&#39;s new vertical block exemption regime, identifying key changes and what these mean for businesses at different levels of the supply chain.</p>

<h2>Navigating sanctions and contracts</h2>

<p>It is essential that businesses take steps to understand the implications of UK and EU sanctions measures against Russia linked entities in response to the ongoing crisis in Ukraine. EU, Trade and Competition expert, Bernardine Adkins, and associate James Stunt will provide an overview of these measures as they currently stand and outline action points for businesses trading with or investing in Russia.</p>

<p>David Lowe and Emma Carr will then discuss the impact of sanctions on contracts - when are the sanctions a force majeure? What happens if there are no relevant sanctions but you still want to get out of the contract?</p>

<h2>In-house insight</h2>

<p>We will be joined by two in-house counsel to share their experiences of dealing with the uncertain and evolving supply chain environment recently. They will share challenges overcome and lessons learnt as they navigate the complex supply chain landscape in their sectors.</p>

<p>We&#39;re delighted to be able to deliver this seminar in-person to enable our ThinkHouse members to re-establish contacts and meet new in-house peers, in addition to learning more about the legal issues surrounding today&#39;s ongoing supply chain challenges.</p>

<p>Places at the seminars are limited, so please use the RSVP link to request attendance at this event.</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession. Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,30-03-2022 12:30,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?rsid=gKvQXAgTJRn4LYlEEryepBrEkkxBIGJQMvlCm6Hk4aDQwjEKgXIxLSxH_-geogXg&react=All%20Reactions,NULL,Register interest in this event,9FBE191E-3BCF-45DE-A2BA-338BB194FC9D,NULL,549cbe28-f188-44cd-85c0-0f4e23a23817,a143cbfd-d333-42a0-89a6-7287894464f1,2563a6d6-5f45-46c5-8698-e572a35f100b;d7a64117-fe8d-47a0-ace6-75c8607bfcdd;f13a9240-2482-4077-be83-ebaa741dc3f0;742aa35b-b58b-4d7c-a95e-820a420ada54;a1a4c901-7400-490f-8357-9db439f7dfee;ad056fcd-7211-4da7-a9e2-30612d332954;a9daf1f3-b2ff-43d9-b76e-b815bb73aace;334a7f26-44f4-4a26-9d0d-0ddd5e499b12;1a0f69ce-d1e7-42e2-96d6-0dbdd570161e;4150ff2c-c5a6-4bd9-ba4e-37c9567eb4f7,NULL,Seminar,NULL,London,71,GWLG.Events,NULL,~/getmedia/5d57b23c-f4d3-44e3-a08e-7ee56360fd71/thinkhouse-snr-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/27fda93c-8849-4d7e-a292-bcc5eb1e7896/thinkhouse-snr-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,9fbe191e-3bcf-45de-a2ba-338bb194fc9d,NULL,Commercial,ThinkHouse,London,NULL,NULL,NULL
486,/Events/2022/Unified-Patent-Court-System-in-Europe,en-GB,E44798F3-C606-47E7-85A1-75F351F3D407,Unified Patent Court System in Europe,Lifecycle of a smart idea | Are you prepared for the new unified patent court system in Europe?,"In the latest instalment in our long-running webinar series, we'll examine the position of current and future patents in Europe, consider new options, and provide detailed, practical answers to important questions.",~/getmedia/1e0a66e4-6020-43f5-8ee0-682825b6e33d/220228-lifecycle-of-smart-idea-european-patent-system-thumbnail.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Webinar,00:00.0,00:00.0,2:30 p.m. GMT / 3:30 p.m. CET / 10:30 p.m. CST / 10:30 a.m.,NULL,EDT,1,"1 hour of substantive CPD credits with the LSO, the LSBC and the Barreau du Québec,","<p>After nearly 50 years,&nbsp;it looks as though we will witness the first big upheaval to the patent system in Europe since the European Patent Convention in the 1970s. After a lot of planning, and even more politics,&nbsp;the Unified Patent Court and the Unitary Patent System are nearly ready and could be in use as early as September.</p>

<p>Weighing the opportunities and risks of a unitary patent system against the current model is undoubtedly important in the lifecycle of a smart idea. Therefore, in the latest instalment in our long-running webinar series, we&#39;ll examine the position of current and future patents in Europe, consider new options, and provide detailed,&nbsp;practical answers to important questions, including:</p>

<ul style=""margin-left:0.3in;"">
	<li>What should I be doing now if I own European patents?</li>
	<li>What strategies should I adopt to ensure my patents are not at risk in the new system?</li>
	<li>Should I opt-out and keep my patents outside the new court system?</li>
	<li>If so, how do I proceed?</li>
	<li>Should I use the new pan-European designation for new patents?</li>
</ul>

<p>This webinar will allow attendees to learn from experienced patent litigation specialists in Europe, as well as from expert prosecution counsel in Canada, as they unpack the most pressing considerations for European patent holders.</p>

<p><strong>Post-webinar breakout rooms</strong></p>

<p>Immediately following the webinar, the moderator and panellists will be available for further discussion in breakout rooms. Please feel free to prepare questions ahead of the breakout sessions.</p>

<h2>Watch previous episodes</h2>

<p><em>This is the 18th installment in our Lifecycle of a Smart Idea series,&nbsp;dedicated to helping you maximize opportunity and minimize risk when taking innovative ideas to the global market.&nbsp;<a href=""~/en/insights-resources/?page=1&amp;services=454&amp;resourcetypes=GWLG.Webinar&amp;q=Lifecycle&amp;mode=anyword&amp;sort=Date"" target=""_blank"">Watch more from the series &raquo;</a></em></p>

<h2>CPD information</h2>

<p><em>*This program is eligible for up to one hour of substantive CPD credits with the LSO,&nbsp;the LSBC and the Barreau du Québec. If you indicate on your registration form that a certificate of participation is required,&nbsp;we will email you your certificate after the session.</em></p>
",NULL,NULL,30:00.0,https://sites-gowlingwlg.vuturevx.com/106/6394/landing-pages/event-registration-(blank-form)---mar.-24.asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,08b9a44c-bb26-4255-9779-296a124fcbee;85764222-db69-43cf-af79-2c6fcbda9589,8c0f2d68-a5d9-441b-95a9-3b2a98a43c1d,6767b2fc-7817-42ae-a54e-05595fe6c1cd;51f9af12-8e5e-4dde-8079-d56d710232ff;44707dcb-ae1d-4675-9be0-5e69e4344ca7;fa411fc8-723a-40cc-9b34-52961cc3ea8d;7d21b147-e2c8-4bcf-80d9-a11b7b145a45;f801a2a1-89ec-4986-8030-70e2352aa794,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/106/6394/landing-pages/event-registration-(blank-form)---mar.-24.asp,Register now,GWLG.Canada;GWLG.UK;GWLG.France,0,0CDA2C7E-BFD7-48AD-991D-C46DBB4E55AB,Speakers,NULL,NULL,NULL,"Intellectual Property Law, Patents",IP Law Hub,NULL,~/getmedia/85662ad3-32a4-4877-bc5f-0dfcbd9bebbb/220228-Lifecycle-of-a-smart-Idea-european-patent-system.jpg.xml?width=930&height=450&ext=.jpg,NULL,_Blank
487,/Events/2022/Employment-Labour-Equalities-Right-to-disconnect,en-GB,3F012A4D-C507-4341-9711-293183487F10,Employment Labour Equalities Right to disconnect,"Employment, Labour & Equalities Law Webinar Series | Right to disconnect",Please join our panel of professionals to discuss the province's new Right to Disconnect legislation.,~/getmedia/09c0d922-6a79-4baf-b3be-8005ddce27e0/220304-ele-webinar-series-main-image.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Webinar,00:00.0,00:00.0,8:30 a.m.,10:30 a.m.,EDT,1,2 hours,"<p>Employees are being encouraged to put their devices away after hours, and there&#39;s a lot to unpack in terms of how this will affect Ontario businesses. Please join our panel of professionals to discuss the province&#39;s new Right to Disconnect legislation. Among other key issues, attendees will learn about updates regarding new guidance from the Ontario Employment Standards Branch, specifically with respect to policy requirements. In addition, attendees will hear from employment lawyers from France, Portugal, Ireland and Italy, where similar legislation has been in place for some time.</p>

<h2>CPD information</h2>

<p><em>*This program is eligible for up to 2 hours of substantive CPD credits with the LSO, the LSBC and the Barreau du Québec. If you indicate on your registration form that a certificate of participation is required, we will email you your certificate after the session.</em></p>
",NULL,NULL,30:00.0,https://sites-gowlingwlg.vuturevx.com/106/6434/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,d8837737-40d2-4472-8a9e-ba4101ec2105,358f50ad-2a97-425e-a9e1-e0cc6b0e1b1b,bbd690ea-a4bd-4cdf-85d3-ca0c7d862d99;9a63c0c6-3429-4eb1-b3a5-6b8cd9294d77,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/106/6434/landing-pages/event-registration-(blank-form).asp,Register now,GWLG.Canada,0,0CDA2C7E-BFD7-48AD-991D-C46DBB4E55AB,Gowling WLG Speakers,NULL,NULL,NULL,"Employment, Labour & Equalities",Right to Disconnect,NULL,~/getmedia/31ff1ec9-620b-4bbe-b2a1-81f5daa6e9ea/220304-ele-webinar-series-social-duty-disconnect_1.jpg.xml?width=930&height=493&ext=.jpg,NULL,_Blank
488,/Events/2022/ThinkHouse-Framework-Agreements,en-GB,3C6A8AF0-F544-4FAD-91D9-20CD3F3499C4,ThinkHouse - Framework Agreements ,Framework Agreements - ThinkHouse Procurement Masterclass,"For our second procurement masterclass, we have selected framework agreements as our main topic.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,48:13.0,48:20.0,10:00,10:45,BST,0,NULL,"<p>Following our highly successful ThinkHouse Public Sector seminars on the public procurement regime, we are running a series of quarterly masterclasses on legal topics which throw up some of the most frequent questions for people involved with public procurement processes &ndash; whether on the authority side, or as bidders.</p>

<p>For our second masterclass, we have selected framework agreements as our main topic. We will cover key cases, guidance and address potential pitfalls, from when an authority seeks to set up a framework agreement to when a framework agreement ends. We will also review the developing topic of Dynamic Purchasing Systems, and look into how the Cabinet Office Green Paper seeks to amend the current regime.</p>

<p>We will again also report on the broader current status of the proposed reforms to public procurement law in the UK, to keep you updated as the reforms progress.</p>

<p>Each of our masterclasses is free to attend, takes place via Zoom, and lasts 45 minutes. Attendees can raise questions which we&#39;ll answer live if there&#39;s time; if not, we&#39;ll circulate our responses shortly afterwards.</p>

<p>Please use the RSVP&nbsp;button&nbsp;to secure your place on this webinar.</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession. Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,45:30.0,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?rsid=gKvQXAgTJRn4LYlEEryepBrEkkxBIGJQMvlCm6Hk4aBvAmuMGI_Tfe500GrtS2BT&react=REGISTER,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,5ad41b49-d460-489a-95b9-84c854eda6f1,a7ba0b1b-cbe3-4b6d-bb8e-5835b1fbb08a,a143cbfd-d333-42a0-89a6-7287894464f1,6b8dbb8c-6f10-4bbb-87e5-242c83032d08;503e49eb-bfc5-4803-a856-7fcbac77a38a,NULL,Webinar,"Simon Harris, Christopher Brennan",Webinar,34471,GWLG.Events,NULL,~/getmedia/5d57b23c-f4d3-44e3-a08e-7ee56360fd71/thinkhouse-snr-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/27fda93c-8849-4d7e-a292-bcc5eb1e7896/thinkhouse-snr-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,NULL,Government Contracting & Public Sector ,Public Procurement,ThinkHouse,NULL,NULL,NULL,NULL
489,/Events/2022/ThinkHouse-IT-Masterclass-Birmingham,en-GB,96C454D1-3306-4E77-B4FE-DFE59C73BDA0,ThinkHouse IT Masterclass Birmingham,ThinkHouse IT Masterclass - Birmingham,"This half-day seminar in Birmingham will provide legal updates and training on specific IT topics, as well as a chance to network with new and existing in-house counsel peers. ",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,10-05-2022 15:32,10-05-2022 15:32,09:30,13:45,BST,0,NULL,"<p>Join us on Tuesday 10th May for our ThinkHouse IT Masterclass seminar, returning in-person in Birmingham.</p>
<p>This half-day seminar will provide legal updates and training on specific IT topics, as well as a chance to network with new and existing in-house counsel peers. Throughout the seminar we will cover four topics:</p>
<h2>Cyber security in the supply chain</h2>
<p>Our Spring ThinkHouse agenda focussed on supply chain issues. Continuing this theme, we will look at supply chain cyber attacks. Such attacks are behind many significant cyber incidents in recent years and attacks are constantly evolving. We will look at the threat of supply chain cyber attacks and steps organisations can take to mitigate the risks.</p>
<h2>IT contract stack</h2>
<p>Also continuing the theme of supply chain from the Spring ThinkHouse agenda, this session will look at the consequences and effect on IT contracts when there are issues in the supply chain and ways to manage and mitigate these risks.</p>
<h2>Agile contracting</h2>
<p>Over the last twenty to thirty years the use of agile software development frameworks and practices have become commonplace. However, the term agile often means different things to different people and approaches to agile contracting in the marketplace remain diverse. To help demystify this tricky topic, we will provide a refresher on the principles and practicalities of agile contracting, share best practice and highlight some of the pitfalls to look out for when negotiating these contracts.</p>
<h2>Data protection</h2>
<p>To keep you up-to-date on the latest data protection developments, we will look at the latest position on international transfers in light of the new standard form agreements published by the ICO.</p>
<p>We&#39;re delighted to be able to deliver this seminar in-person once again, to enable our ThinkHouse members to re-establish contacts and meet new in-house peers, in addition to learning more about the legal issues surrounding IT contracting.</p>
<p>Places at the seminars are limited, so please use the RSVP button to secure your attendance.</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession. Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,05-05-2022 17:00,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?rsid=gKvQXAgTJRn4LYlEEryepBrEkkxBIGJQMvlCm6Hk4aBvna9fh7cb63I_eBPAKLvx&react=All%20Reactions,NULL,Register for this event,58076178-DA60-4AB6-A07C-EF250971EBF7,NULL,2e9a87e2-3d2e-4d69-ba9c-06b4b358ca0d;549cbe28-f188-44cd-85c0-0f4e23a23817,a143cbfd-d333-42a0-89a6-7287894464f1,d3e0fa3e-1011-4fe0-b62a-88c920f62d49;75a219e7-ea84-4ba2-9990-61b83de62877;792833a0-130d-462f-99d9-d13888acd2d0;65759eac-aef5-40db-84d5-4b0cce3d860c,NULL,Seminar,NULL,Birmingham,70,GWLG.Events,NULL,~/getmedia/5d57b23c-f4d3-44e3-a08e-7ee56360fd71/thinkhouse-snr-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/27fda93c-8849-4d7e-a292-bcc5eb1e7896/thinkhouse-snr-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,58076178-da60-4ab6-a07c-ef250971ebf7,NULL,"Cyber Security & Data Protection Law, Commercial",ThinkHouse,Birmingham,NULL,NULL,NULL
490,/Events/2022/ThinkHouse-IT-Masterclass-London,en-GB,89327931-FE0E-4292-B9C3-FD63EA2D6387,ThinkHouse IT Masterclass London,ThinkHouse IT Masterclass - London,"This half-day seminar in London will provide legal updates and training on specific IT topics, as well as a chance to network with new and existing in-house counsel peers. ",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,12-05-2022 15:32,12-05-2022 15:32,09:30,13:45,BST,0,NULL,"<p>Join us on Thursday 12th May for our ThinkHouse IT Masterclass seminar, returning in-person in London.</p>

<p>This half-day seminar will provide legal updates and training on specific IT topics, as well as a chance to network with new and existing in-house counsel peers. Throughout the seminar we will cover four topics:</p>

<h2>Cyber security in the supply chain</h2>

<p>Our Spring ThinkHouse agenda focussed on supply chain issues. Continuing this theme, we will look at supply chain cyber attacks. Such attacks are behind many significant cyber incidents in recent years and attacks are constantly evolving. We will look at the threat of supply chain cyber attacks and steps organisations can take to mitigate the risks.</p>
<h2>IT contract stack</h2>
<p>Also continuing the theme of supply chain from the Spring ThinkHouse agenda, this session will look at the consequences and effect on IT contracts when there are issues in the supply chain and ways to manage and mitigate these risks.</p>
<h2>Agile contracting</h2>
<p>Over the last twenty to thirty years the use of agile software development frameworks and practices have become commonplace. However, the term agile often means different things to different people and approaches to agile contracting in the marketplace remain diverse. To help demystify this tricky topic, we will provide a refresher on the principles and practicalities of agile contracting, share best practice and highlight some of the pitfalls to look out for when negotiating these contracts.</p>
<h2>Data protection</h2>

<p>To keep you up-to-date on the latest data protection developments, we will look at the latest position on international transfers in light of the new standard form agreements published by the ICO.</p>
<p>We&#39;re delighted to be able to deliver this seminar in-person once again, to enable our ThinkHouse members to re-establish contacts and meet new in-house peers, in addition to learning more about the legal issues surrounding IT contracting.</p>
<p>Places at the seminars are limited, so please use the RSVP button to secure your attendance.</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession. Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,06-05-2022 17:00,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?rsid=gKvQXAgTJRn4LYlEEryepBrEkkxBIGJQMvlCm6Hk4aBvna9fh7cb63I_eBPAKLvx&react=All%20Reactions,NULL,Register for this event,9FBE191E-3BCF-45DE-A2BA-338BB194FC9D,NULL,2e9a87e2-3d2e-4d69-ba9c-06b4b358ca0d;549cbe28-f188-44cd-85c0-0f4e23a23817,a143cbfd-d333-42a0-89a6-7287894464f1,d3e0fa3e-1011-4fe0-b62a-88c920f62d49;75a219e7-ea84-4ba2-9990-61b83de62877;792833a0-130d-462f-99d9-d13888acd2d0;65759eac-aef5-40db-84d5-4b0cce3d860c,NULL,Seminar,NULL,London,71,GWLG.Events,NULL,~/getmedia/5d57b23c-f4d3-44e3-a08e-7ee56360fd71/thinkhouse-snr-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/27fda93c-8849-4d7e-a292-bcc5eb1e7896/thinkhouse-snr-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,9fbe191e-3bcf-45de-a2ba-338bb194fc9d,NULL,"Cyber Security & Data Protection Law, Commercial",ThinkHouse,London,NULL,NULL,NULL
491,/Events/2022/ThinkHouse-Foundations-Spring-2022-Birmingham,en-GB,B0DBC019-B9CB-4969-B5B2-EABA21FB4CED,ThinkHouse Foundations Spring 2022 - Birmingham,ThinkHouse Foundations Spring Seminar - Birmingham,Join us on 17th May in Birmingham for a morning of legal updates and training as well as an opportunity to network with existing and new in-house contacts. ,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,17-05-2022 11:12,17-05-2022 11:12,09:30,13:30,BST,0,NULL,"<p>ThinkHouse Foundations is designed specifically for in-house paralegals, trainees and lawyers up to five years PQE to help develop your skills and knowledge on a wide range of legal topics, providing practical tips and takeaways that can be applied to your everyday work.</p>

<p>Join us on 17th May for a morning of legal updates and training as well as an opportunity to network with existing and new in-house contacts.</p>

<p>This year we are pleased to be partnering with Flex Legal, to help deliver more interactive seminars and open up to a wider network of junior in-house counsel.</p>

<h2>Introduction to brands and trademarks workshop</h2>

<p>A strong brand is a key asset in any successful business. Your brands are the face of your organisation. They embody your reputation, and reputation is everything. Many assume brands are only important to consumer businesses, but that couldn't be further from the truth, every business has a brand, and that brand is worth protecting. In this interactive workshop, we will discuss what can be registered as a trademark (and what can&#39;t), what &#39;passing off&#39; is, and how to protect your brands from infringement and attack.</p>

<h2>Data protection update</h2>

<p>To keep you up-to-date on the latest data protection developments, we will look at the latest position on international transfers in light of the new standard form agreements published by the ICO.</p>

<h2>Commercial contract law update</h2>

<p>We will finish the training with our ever-popular roundup of commercial contract law, reviewing recent developments and highlighting cases that should be at the top of your reference list.</p>

<p>We hope you are able to join us in-person at one of these morning seminars. Places are limited, so please use the RSVP button to secure your attendance.</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession. Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,13-05-2022 11:15,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?rsid=gKvQXAgTJRn4LYlEEryepBrEkkxBIGJQMvlCm6Hk4aBoLoE9Ly4jfNMOTDeRweKe&react=All%20Reactions,NULL,Register for this event,58076178-DA60-4AB6-A07C-EF250971EBF7,NULL,549cbe28-f188-44cd-85c0-0f4e23a23817;2e9a87e2-3d2e-4d69-ba9c-06b4b358ca0d;aa72ea93-20f8-455a-8e77-6f6cea510684,a143cbfd-d333-42a0-89a6-7287894464f1,d03f4474-15e0-41a7-a007-5fa3f7547a82;e8081a0b-9874-4c18-8a1a-2ef51aaa161c;bdc0d23f-0355-4075-924c-1e6f34081de2;ebb7e777-98ab-4b34-a7e3-bbf76fbefb05;236967c7-ad0c-4404-9b5b-b5546d56076d;49a7826b-b924-4503-9744-0f5a6271b24e,NULL,Seminar,NULL,Birmingham,70,GWLG.Events,NULL,~/getmedia/5c73cf2c-5ac2-465b-9dff-9377774e4d9b/thinkhouse-foundations-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/a1bd54ac-e5a3-4c45-8585-8ccbdce9e524/thinkhouse-foundations-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,58076178-da60-4ab6-a07c-ef250971ebf7,NULL,"Commercial, Cyber Security & Data Protection Law, Trademarks, Brands & Designs",ThinkHouse,Birmingham,NULL,NULL,NULL
492,/Events/2022/ThinkHouse-Foundations-Spring-2022-London,en-GB,47841BC0-C858-47D8-9380-B81A34AA8392,ThinkHouse Foundations Spring 2022 London,ThinkHouse Foundations Spring Seminar - London,Join us on 25th May in London for a morning of legal updates and training as well as an opportunity to network with existing and new in-house contacts. ,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,25-05-2022 11:12,25-05-2022 11:12,09:30,13:30,BST,0,NULL,"<p>ThinkHouse Foundations is designed specifically for in-house paralegals, trainees and lawyers up to five years PQE to help develop your skills and knowledge on a wide range of legal topics, providing practical tips and takeaways that can be applied to your everyday work.</p>

<p>Join us on 25th May for a morning of legal updates and training as well as an opportunity to network with existing and new in-house contacts.</p>

<p>This year we are pleased to be partnering with Flex Legal, to help deliver more interactive seminars and open up to a wider network of junior in-house counsel.</p>

<h2>Introduction to brands and trademarks workshop</h2>

<p>A strong brand is a key asset in any successful business. Your brands are the face of your organisation. They embody your reputation, and reputation is everything. Many assume brands are only important to consumer businesses, but that couldn't be further from the truth, every business has a brand, and that brand is worth protecting. In this interactive workshop, we will discuss what can be registered as a trademark (and what can&#39;t), what &#39;passing off&#39; is, and how to protect your brands from infringement and attack.</p>

<h2>Data protection update</h2>

<p>To keep you up-to-date on the latest data protection developments, we will look at the latest position on international transfers in light of the new standard form agreements published by the ICO.</p>

<h2>Commercial contract law update</h2>

<p>We will finish the training with our ever-popular roundup of commercial contract law, reviewing recent developments and highlighting cases that should be at the top of your reference list.</p>

<p>We hope you are able to join us in-person at one of these morning seminars. Places are limited, so please use the RSVP button to secure your attendance.</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession. Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,20-05-2022 11:15,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?rsid=gKvQXAgTJRn4LYlEEryepBrEkkxBIGJQMvlCm6Hk4aBoLoE9Ly4jfNMOTDeRweKe&react=All%20Reactions,NULL,Register for this event,9FBE191E-3BCF-45DE-A2BA-338BB194FC9D,NULL,549cbe28-f188-44cd-85c0-0f4e23a23817;2e9a87e2-3d2e-4d69-ba9c-06b4b358ca0d;aa72ea93-20f8-455a-8e77-6f6cea510684,a143cbfd-d333-42a0-89a6-7287894464f1,d03f4474-15e0-41a7-a007-5fa3f7547a82;e8081a0b-9874-4c18-8a1a-2ef51aaa161c;bdc0d23f-0355-4075-924c-1e6f34081de2;ebb7e777-98ab-4b34-a7e3-bbf76fbefb05;236967c7-ad0c-4404-9b5b-b5546d56076d;49a7826b-b924-4503-9744-0f5a6271b24e,NULL,Seminar,NULL,London,71,GWLG.Events,NULL,~/getmedia/5c73cf2c-5ac2-465b-9dff-9377774e4d9b/thinkhouse-foundations-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/a1bd54ac-e5a3-4c45-8585-8ccbdce9e524/thinkhouse-foundations-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,9fbe191e-3bcf-45de-a2ba-338bb194fc9d,NULL,"Commercial, Cyber Security & Data Protection Law, Trademarks, Brands & Designs",ThinkHouse,London,NULL,NULL,NULL
493,/Events/2022/ThinkHouse-Dubai-Focus-on-Joint-Ventures,en-GB,99B1848F-1670-4BCE-9E47-D58C734EF3AB,ThinkHouse Dubai - Focus on Joint Ventures,ThinkHouse Dubai - Focus on Joint Ventures,"In this interactive webinar, our team of corporate and commercial lawyers will share their experiences of advising on joint ventures in the region.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,00:00.0,00:00.0,11:00,12:00,Local time,0,NULL,"<p>Joint ventures are a trusted model of business entry into the GCC market. Joint ventures typically involve foreign investors teaming up with a local family group or other corporate entity for the purpose of expansion into the GCC, delivering an infrastructure project or promoting a new business opportunity.<br />
<br />
In this interactive webinar, our team of corporate and commercial lawyers will share their experiences of advising on joint ventures in the region with a particular focus on the following key issues:</p>

<ul>
	<li>what makes a successful joint venture?;</li>
	<li>the regional context &ndash; what is unique to the GCC?;</li>
	<li>how to manage shareholder relationships, for example, decision making, conflicts of interests and dispute;</li>
	<li>the intellectual property context &ndash; ownership of intellectual property/know how;</li>
	<li>successful exit strategies; and</li>
	<li>forms of joint ventures and the question of enforcement of shareholders&#39; rights.</li>
</ul>

<p>Our team will share their experience and the lessons learnt having operated from within the region for over 15 years.This webinar will be particularly useful for in-house counsel and corporate advisers engaged in joint venture operations or looking to structure a joint venture.</p>",NULL,NULL,00:00.0,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?rsid=6F-hjWvLQWOZsi5r8nG5kN83zI9vG95_eWCBWCJef448VKzDjsdfU4k3Fzo4Tngw&react=REGISTER,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,NULL,a143cbfd-d333-42a0-89a6-7287894464f1,7574853e-b1e1-4eba-8604-1a01d0d0a056;e612d7f7-4f80-448d-a686-3f4cb69dcaf9;37224c59-6729-4238-84e3-1bfce2f9c2db;6049006a-c8bd-45a5-872f-95cd5bd5b9ef,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/532d0f3a-eb2b-45d0-a72c-1340e5fc6c3d/thinkhouse-event-generic-banner.jpg.xml?width=930&height=450&ext=.jpg,~/getmedia/532d0f3a-eb2b-45d0-a72c-1340e5fc6c3d/thinkhouse-event-generic-banner.jpg.xml?width=500&height=241&ext=.jpg,0,NULL,NULL,NULL,NULL,0,B58CF9C3-DC86-4783-834F-1954E7C865B5,Speaker(s),NULL,23ef7ff4-756b-454c-a477-8dfedb1af5bc,NULL,NULL,ThinkHouse,Dubai,NULL,NULL,NULL
497,/Events/2022/Legal-tips-Tech-scale-up-Employment-Immigration,en-GB,58AB0AC4-9397-4092-91AE-7CD369C0E23A,Legal tips Tech scale up Employment Immigration,Legal tips for your Tech scale-up <br> (part II): Employment and Immigration Law,"As tech companies scale up and are ready to take their business to the next level, they will require practical legal advice and innovative solutions across a wide range of areas, including intellectual property, privacy & data management, software licencing and contracts, raising funds, building and managing a team, real estate opportunities and more.",~/getmedia/636df5fe-66d7-4a22-bcf7-3969abd19040/211007-tech-scale-up-page-image.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Webinar,00:00.0,00:00.0,10:00 AM,11:00 AM,PST,1,1 hour,"<h2>Don&#39;t let employment and immigration issues put your tech venture at risk.</h2>

<p>As tech companies scale up and are ready to take their business to the next level, they will require practical legal advice and innovative solutions across a wide range of areas, including intellectual property, privacy &amp; data management, software licencing and contracts, raising funds, building and managing a team, real estate opportunities and more.</p>

<p>In the second webinar of our three-part series, partner <strong>Krista Schofer</strong>&nbsp;and associates&nbsp;<strong>Kristen Cruise</strong> and <strong>Cheryl Cotton</strong> will discuss the various employment and immigration legal requirements and complex issues that tech scale-ups will encounter while expanding their business in BC and beyond.</p>

<p>Topics will include:</p>

<ul style=""margin-left:0.3in;"">
	<li><strong>Employment agreements</strong> &ndash; why you want to have an agreement in place; jurisdictional issues in employment standards, including remote working challenges, employees across borders and non-competition agreements</li>
	<li><strong>Retention in the current market</strong> &ndash; employee retention factors such as bonuses and equity, benefits, and onboarding; right-to-disconnect legislation</li>
	<li><strong>Immigration considerations when scaling up</strong> &ndash; national and BC-specific options for bringing foreign workers to Canada</li>
</ul>

<p>Space is limited, so please RSVP today to reserve your spot.</p>

<h2>Watch previous episode</h2>

<p>This is the second webinar in our Legal tips for your tech scale-up three-part miniseries. <a href=""~/en/insights-resources/on-demand-webinars/2021/legal-tips-for-your-tech-scale-up-agreements-ip/"" target=""_blank"">Watch part I: Tech agreements and intellectual property</a> <em><a href=""~/en/insights-resources/?page=1&amp;resourcetypes=GWLG.Webinar&amp;services=596&amp;sort=Date&amp;q=Tax%20dispute%20Resolution%20Monthly&amp;mode=anyword&amp;utm_source=vuture&amp;utm_medium=email&amp;utm_campaign=vuture/"" target=""_blank"">&raquo;</a></em></p>

<h2>CPD information</h2>

<p>* This program is eligible for up to one&nbsp;hour of substantive CPD credits with the LSO, the LSBC and the Barreau du Québec.</p>
",NULL,NULL,00:00.0,https://sites-gowlingwlg.vuturevx.com/104/6503/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,cdfc9b50-74c2-4af5-9508-342935f81ccd,c88eece6-41b1-4db2-a8fb-58d8e5eeb453;d8837737-40d2-4472-8a9e-ba4101ec2105,NULL,8019d9ad-34b0-4cbd-8dfb-99a7578a4b6a;5ff10831-4f7d-4189-9664-d45448cda40d;a8acda6c-b785-466b-8bab-3bdbd1897ff5,NULL,Webinar,"Krista Schofer, Kristen L. Cruise, Cheryl Cotton",Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada,0,A27AC7CF-07EC-41E5-80DD-62FDBF43F8B4,Speakers,NULL,NULL,Tech,"Immigration, Employment, Labour & Equalities",NULL,NULL,~/getmedia/b07296ac-860d-43b2-9997-2079b5c6d6da/220419-Tech-scale-up-part-2.png.xml?width=930&height=450&ext=.png,NULL,_Blank
498,/Events/2022/INTA-2022,en-GB,7326C1B9-577F-4C07-8E67-787B3B246053,INTA 2022,Explore INTA 2022 with Gowling WLG,Connect with our global trademarks team at INTA.,~/getmedia/94d90350-851e-4ff0-81c4-6a0afa3496d4/220412-INTA-2022-page-image.jpg.xml?width=930&height=450&ext=.jpg,"Aerial photograph of Washington, D.C. showing The White House, Washington Monument, Jefferson Memorial, Potomac River and National Airport",GWLG.Conference,38:25.0,38:50.0,NULL,NULL,EST,0,NULL,"<h2>Attending this year&#39;s International Trademark Association (INTA) Annual Meeting? Connect with our global trademarks team and learn more about the hot topics IP professionals all over the world&nbsp;should be talking about this year.</h2>

<p>As a trusted adviser for those seeking IP solutions, and with many of our professionals in active roles on INTA committees, Gowling WLG is looking forward to finally participating live in Washington, D.C. at the <a href=""https://www.inta.org/events/2022-annual-meeting/"" target=""_blank""><strong>INTA Annual Meeting Live+</strong></a> and engaging with you in person!</p>

<p>To celebrate the occasion, below we&#39;ve compiled articles from across our global IP practice &ndash; which includes offices in Canada, China, France, Germany, the UK and the UAE, as well as an&nbsp;exclusive association with JurisAsia in Singapore &ndash; that speak to this year&#39;s core INTA themes, namely:</p>

<ul>
	<li>The metaverse and virtual world</li>
	<li>Greenwashing IP</li>
	<li>Exhaustion of IP rights</li>
	<li>China&#39;s standards for determining trademark violations</li>
</ul>

<p><a id=""articles"" name=""articles""></a>{^widget|(path)%2fGlobal-Objects%2fCTAs%2fEvents%2fINTA-2022-Metaverse%2f%2525|(name)GWLG.Widgets.FAQList|(image_guid)884cd42b-93de-40b9-9f7f-cf7e3608a676|(headingtext)%3ch3+style%3d%22text-align%3aleft%22%3eHere%27s+a+look+at+the+key+themes+and+articles%3c%2fh3%3e|(widget_displayname)FAQ+List|(width)|(height)^}</p>

<p>Our IP professionals have significant experience managing global portfolios, conducting major clearance exercises, and leading multi-jurisdictional enforcement programs. Reach out to any member of our team to discuss your IP needs.</p>

<p>{^widget|(path)%2fGlobal-Objects%2fCTAs%2fEvents%2fINTA-2022%2f%2525|(name)GWLG.Widgets.FAQList|(image_guid)884cd42b-93de-40b9-9f7f-cf7e3608a676|(headingtext)%3ch2+align%3d%22left%22%3eINTA+events+featuring+Gowling+WLG+team+members%3c%2fa%3e|(widget_displayname)FAQ+List|(width)|(height)^}</p>

<h2>But wait &ndash; there&#39;s more!</h2>

<p>Check out Gowling WLG&#39;s newly established Brands, Advertising and Design <a href=""https://loupedin.blog/2022/03/good-news-bad-news/"" target=""_blank"">(BAD) blog on LoupedIn</a>, where, among other things, they will be taking a deeper dive into the INTA topics mentioned above.</p>

<p>In the days leading up to the INTA Annual meeting, we also invite you to discover our ongoing <a href=""https://gowlingwlg.com/en/services/intellectual-property-law/webinars/"" target=""_blank"">Lifecycle of a Smart Idea</a> webinar series, including these two past favourite episodes:</p>

<ul>
	<li><a href=""~/en/insights-resources/on-demand-webinars/2022/what-s-to-prove-in-a-trademark-case/"" target=""_self"">What&#39;s to prove in a trademark case</a>?</li>
	<li><a href=""~/en/insights-resources/on-demand-webinars/2020/defending-trademarks-design-strategies/"" target=""_self"">Defending your trademarks &amp; designs: Global enforcement strategies</a></li>
</ul>

<p>As always, a robust collection of timely and topical articles, videos and podcast episodes can be found on our <a href=""~/en/services/intellectual-property-law/overview/"" target=""_self"">IP Hub</a>. You can also <a href=""~/en/footer/updates/"" target=""_self"">subscribe for updates</a> on our newsletters, events, announcements, and other communications.</p>

<h2>Get in touch with our team</h2>

<blockquote>
<p><em>Gowling WLG&#39;s &#39;first-rate&#39; IP outfit stands out for its &#39;responsiveness, intelligence, savvy, and pragmatism&#39;&nbsp;when assisting with branding and design strategisation and enforcement. &quot;</em><br />
<cite>- The Legal 500</cite></p>
</blockquote>

<p>Interested in discussing the key themes at this year&#39;s INTA Annual Meeting? Or simply want to know more about our global IP service offering? Get in touch with any member of our team or schedule a meeting through&nbsp;<a href=""https://matchmaking.grip.events/2022annualmeetinglive/event-login"" target=""_blank"">INTAConnect</a>:</p>
","<p>Our INTA team is complemented by our Singapore-based colleague&nbsp;<a href=""https://jurisasiallc.com/people/vivian-wei-cheng/"" target=""_blank"">Vivian Wei Cheng</a>, a patent attorney working in the offices of JurisAsia LLC, with whom Gowling WLG has an exclusive association.</p>

<h2>Connect with us</h2>

<p>Home to one of the largest IP teams in the world, Gowling WLG adopts a commercial approach to trademarks, designs, copyright, domain names, licensing, and enforcement. Our firm offers a &quot;one stop shop&quot; for global IP services, with a single point of contact advising startups and major multinationals alike on all facets of branding.</p>

<p><a class=""c-button-red"" href=""~/en/services/intellectual-property-law/contact-us/"" target=""_blank"">Learn more</a></p>
",NULL,12:53.0,https://www.inta.org/events/2022-annual-meeting/,NULL,Learn more about INTA 2022,NULL,NULL,08b9a44c-bb26-4255-9779-296a124fcbee;aa72ea93-20f8-455a-8e77-6f6cea510684,NULL,NULL,NULL,Conference,NULL,NULL,NULL,GWLG.Events,NULL,~/getmedia/faad4994-1a22-4cb1-8725-afe2ac765417/220412-INTA-2022-hero-image.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/7f5811dc-45bd-4fd3-911f-c53905d1b955/220412-INTA-2022-mobile-image.jpg.xml?width=550&height=500&ext=.jpg,0,NULL,NULL,NULL,GWLG.Canada;GWLG.China;GWLG.Global;GWLG.Russia;GWLG.UK;GWLG.UAEDubai,0,NULL,INTA team,NULL,NULL,NULL,"Intellectual Property Law, Trademarks, Brands & Designs",NULL,NULL,NULL,NULL,NULL
499,/Events/2022/ThinkHouse-Caroline-McGrory-Birmingham,en-GB,3AA1A950-8181-4580-8428-716DF880565C,"ThinkHouse - Caroline McGrory, Birmingham",In-house insight - Leadership learnings from the world of sport - Birmingham,"Join us in Birmingham for an exclusive event for in-house counsel as we speak to Caroline McGrory, Chief Legal Officer for Birmingham 2022 Commonwealth Games, about the good, the bad, and the ugly of being in-house counsel in the world of sport. ",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.SpecialEvents,27:24.0,27:31.0,18:00,20:00,BST,0,NULL,"<p>Join us for an exclusive event for in-house counsel as we speak to <a href=""https://www.linkedin.com/in/caroline-mcgrory-b1816912/"" target=""_blank"">Caroline McGrory, Chief Legal Officer for Birmingham 2022 Commonwealth Games</a>, about the good, the bad, and the ugly of being in-house counsel in the world of sport.</p>

<p>Caroline has a wealth of experience in high profile and high pressure sporting environments including Formula One, Premier League football and the Birmingham 2022 Commonwealth Games. During this fireside chat, she will share experiences, challenges and learnings from her current and previous roles. Framed against the backdrop of Caroline&#39;s experiences in the world of elite sport, the topics we will discuss include:</p>

<ul>
	<li>Delivering success and managing failure</li>
	<li>Developing and driving high performance teams</li>
	<li>Leadership skills she values</li>
	<li>Balancing priorities</li>
	<li>Representing legal on the board</li>
</ul>

<p>We will be hosting this event in Birmingham on Thursday 19th May and London on 26th May. Places at each event are limited, so please use the register button to secure a place at your preferred event.</p>

<p>This event is part of our <a href=""~/en/thinkhouse/"">ThinkHouse programme</a>, delivering exclusive content and events for in-house counsel.</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession. Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,00:00.0,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?rsid=gKvQXAgTJRn4LYlEEryepBrEkkxBIGJQMvlCm6Hk4aBanaxriaMtlqTm-dOKp9Rl&react=All%20Reactions,NULL,Register for this event,58076178-DA60-4AB6-A07C-EF250971EBF7,NULL,NULL,a143cbfd-d333-42a0-89a6-7287894464f1,NULL,NULL,Special events,NULL,Birmingham,70,GWLG.Events,NULL,~/getmedia/d2b9ca59-d716-4c60-abb1-472dd7eeec23/thinkhouse-primary-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/0363a899-4ad3-4e9e-a428-fbf0ebf9f31d/thinkhouse-primary-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,58076178-da60-4ab6-a07c-ef250971ebf7,NULL,NULL,ThinkHouse,Birmingham,NULL,NULL,NULL
500,/Events/2022/ThinkHouse-Caroline-McGrory-London,en-GB,A174C7FE-CBD9-487D-837C-9307723E1B37,ThinkHouse - Caroline McGrory London,In-house insight - Leadership learnings from the world of sport - London,"Join us for an exclusive event for in-house counsel as we speak to Caroline McGrory, Chief Legal Officer for Birmingham 2022 Commonwealth Games, about the good, the bad, and the ugly of being in-house counsel in the world of sport. ",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.SpecialEvents,27:24.0,27:31.0,18:00,20:00,BST,0,NULL,"<p>Join us for an exclusive event for in-house counsel as we speak to <a href=""https://www.linkedin.com/in/caroline-mcgrory-b1816912/"" target=""_blank"">Caroline McGrory, Chief Legal Officer for Birmingham 2022 Commonwealth Games</a>, about the good, the bad, and the ugly of being in-house counsel in the world of sport.</p>

<p>Caroline has a wealth of experience in high profile and high pressure sporting environments including Formula One, Premier League football and the Birmingham 2022 Commonwealth Games. During this fireside chat, she will share experiences, challenges and learnings from her current and previous roles. Framed against the backdrop of Caroline&#39;s experiences in the world of elite sport, the topics we will discuss include:</p>

<ul>
	<li>Delivering success and managing failure</li>
	<li>Developing and driving high performance teams</li>
	<li>Leadership skills she values</li>
	<li>Balancing priorities</li>
	<li>Representing legal on the board</li>
</ul>

<p>We will be hosting this event in Birmingham on Thursday 19th May and London on 26th May. Places at each event are limited, so please use the register button to secure a place at your preferred event.</p>

<p>This event is part of our <a href=""~/en/thinkhouse/"">ThinkHouse programme</a>, delivering exclusive content and events for in-house counsel.</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession. Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,00:00.0,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?rsid=gKvQXAgTJRn4LYlEEryepBrEkkxBIGJQMvlCm6Hk4aBanaxriaMtlqTm-dOKp9Rl&react=All%20Reactions,NULL,Register for this event,9FBE191E-3BCF-45DE-A2BA-338BB194FC9D,NULL,NULL,a143cbfd-d333-42a0-89a6-7287894464f1,NULL,NULL,Special events,NULL,London,71,GWLG.Events,NULL,~/getmedia/d2b9ca59-d716-4c60-abb1-472dd7eeec23/thinkhouse-primary-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/0363a899-4ad3-4e9e-a428-fbf0ebf9f31d/thinkhouse-primary-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,58076178-da60-4ab6-a07c-ef250971ebf7,NULL,NULL,ThinkHouse,Birmingham,NULL,NULL,NULL
501,/Events/2022/DC-to-DC-Transfers,en-GB,7AE02532-7E64-444E-BD23-8CCE0ADD5941,DC to DC Transfers,DC to DC Transfers,"With the increase in regulatory and governance requirements for defined contribution schemes, we have seen a significant increase in the volume of transfers to Master Trust arrangements. We expect this trend to continue.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,00:00.0,45:00.0,11:00,11:45,BST,0,NULL,"<p>Whilst the path to transfer is now reasonably well trodden, there are still some thorny issues both employers and trustees need to consider. We are joined by a DC expert from <a href=""https://www.hymans.co.uk/"" target=""_blank"">Hymans Robertson</a> for a webinar which will cover:</p>

<ul>
	<li>An overview of master trust transfers and why employers or trustees might consider them;</li>
	<li>Some of the tricky issues that can arise and how to deal with them in practice;</li>
	<li>Steps that trustees and sponsors can take at the outset of a project to maximise their chances of a successful exercise.</li>
</ul>
","<p>This event is free of charge.</p>

<p>Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession. Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,00:55.0,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?rsid=yS8MZBgesNX66OIvbTmoyl0HNBlJTAobODbBSZ-dhfMo6R7QZ1gr7TGp7RT0fvW9&react=REGISTER,NULL,Register for this event,C41373B4-86B9-4F74-8894-0B0BB7DDBD18,NULL,28b9078c-383d-431a-b8a9-dacac4b8bfb0;a19c4c5e-c05a-4fa5-95aa-c5a274279d8c,NULL,c35a7ba7-40bb-474d-8a7a-a7897e0c7332;006abb1e-ab84-4482-91ac-e305dd19cf7f,NULL,Webinar,NULL,Online event,694,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,95EC9477-4594-4332-A463-E612BD16CA0C,Speaker(s),NULL,NULL,NULL,"Defined Contribution Pensions, Pensions",NULL,NULL,NULL,"<p>With the increase in regulatory and governance requirements for defined contribution schemes, we have seen a significant increase in the volume of transfers to Master Trust arrangements. We expect this trend to continue.</p>
",NULL
502,/Events/2022/SMR-Advanced-Reactor-2022,en-GB,A5563E7F-EE38-478B-9533-2A0D75C9E671,SMR & Advanced Reactor 2022,SMR & Advanced Reactor 2022,Deep dive into how SMR's provide policy makers with a formidable array of tools that can help eradicate poverty and reverse climate change.,NULL,NULL,GWLG.Conference,37:51.0,37:59.0,NULL,NULL,EST,0,NULL,"<p>Gowling WLG is pleased to be sponsoring the <a href=""https://events.reutersevents.com/nuclear/smr-usa"" target=""_blank"">SMR &amp; Advanced Reactor 2022</a> conference, hosted by <em>Reuters </em>from May 24-25, 2022 in Atlanta, Georgia.</p>

<h2>About the conference</h2>

<p>SMR &amp; Advanced Reactor 2022 conference will equip attendees with the knowledge and contacts needed to secure market share in a booming industry while also advocating for nuclear energy to replace fossil fuels in baseload power generation.</p>

<p>This coming May, join hundreds of senior utilities executives, reactor developers, investors, regulators, and supply chain specialists as they liaise on everything from strategy development and innovation, to how to build and maintain a professional network. Let&#39;s make 2022&nbsp;the decisive year in establishing a bright future for nuclear.</p>

<p>As part of the conference, Gowling WLG partner, <a href=""~/en/people/ahab-abdel-aziz/"" target=""_blank"">Ahab Abdel-Aziz</a>, global Director, nuclear power generation, will deliver an insightful and informative keynote presentation entitled, &quot;Reimagining the future of nuclear.&quot;</p>

<p><a href=""https://events.reutersevents.com/nuclear/smr-usa"" target=""_blank""><img alt=""Reuters events - SMR &amp; Advanced Reactor 2022 - Register now"" src=""~/getmedia/505a4997-31c6-4338-ac69-e84655dc7f2c/220427-Ahab-Abdelaziz-reuters-event.jpg.xml"" /></a></p>

<h2>About the keynote address</h2>

<p>The emergence of SMRs has ushered in new technological and project delivery innovations that can reduce the risk in future nuclear projects while making nuclear power generation more attainable for the majority of the world.</p>

<p>Join Ahab Abdel-Aziz as he dives into how SMRs provide policy makers with a formidable array of tools that can potentially help reduce poverty and combat climate change.</p>

<p>Ahab&#39;s presentation will be delivered on the second day of the conference, May 25th at 9:00am.</p>
",NULL,NULL,21:12.0,https://events.reutersevents.com/nuclear/smr-usa/register,NULL,Register for this event,D117A989-2204-4E97-AD86-5E4741239559,dede4518-e78c-4b48-a143-a2338be5d0ac;c0b8c1a8-73eb-4122-972f-dc5df852f68d;df411e0b-2c62-4a68-8456-2c7c1dd0b4da,NULL,472d49e5-40be-4cff-9dfc-86f60866c42d,a6ae8169-6aa0-48fd-889e-71550df00866,NULL,Conference,Ahab Abdel-Aziz,Sheraton Atlanta Hotel,55546,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://events.reutersevents.com/nuclear/smr-usa,Register now,GWLG.UnitedStates,0,NULL,Gowling WLG Speaker,NULL,NULL,"Nuclear, Mining, Infrastructure",NULL,Cleantech,NULL,~/getmedia/ec3510d2-dda5-4011-9a91-559024bdaa10/220427-Ahab-Abdelaziz-reuters-event_1.jpg.xml?width=1200&height=627&ext=.jpg,NULL,_Blank
506,/Events/2022/Climate-Change-and-ESG-the-role-of-HR,en-GB,E85E21DF-1005-4064-9849-00814154319F,Climate Change and ESG - the role of HR,Mid-Year Employment Series 2022: Climate Change and ESG - The strategic and operational role of HR,"We will cover legal and practical issues throughout the employment lifecycle from recruitment, everyday working practices and contracts through to reward, training and the approach to EDI to help you plan and embed HR into the overall strategy.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,00:00.0,45:00.0,11:00,11:45,GMT,0,NULL,"<p>As we approach mid-2022, we&#39;re taking stock of the ever challenging issues organisations face together with future developments in employment law and the workplace. So far this year, we have seen efforts to reduce employee overheads making major headline news and the ESG agenda, which impacts every aspect of the workplace, becoming ever more critical. Our next series of live webinars are designed to help identify and mitigate risk, and to support successful outcomes from everyday matters to major strategic business critical plans.</p>

<p>Please join us for four live webinars in June, developed specifically for anyone dealing with HR and ER matters within their organisation, whether in-house lawyers, HR professionals or others.</p>

<p>All of the webinars will start at 11:00 and will last approximately 45 minutes, including time for questions.</p>

<p>The impact of climate change and the business approach to ESG is at the top of everyone&#39;s agenda. But where does HR and employment law fit in? This session will cover the key role that HR and in-house employment lawyers have in an organisation&#39;s approach and credentials.</p>

<p>We will cover legal and practical issues throughout the employment lifecycle from recruitment, everyday working practices and contracts through to reward, training and the approach to EDI to help you plan and embed HR into the overall strategy.</p>
",NULL,NULL,59:47.0,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?RSID=bdQCz4VYcgKuu_fE6ImLxSTXs_d2lGoPCrhZh4JN7U5tvmIJMNkCV0VpYp8gq97R,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,d8837737-40d2-4472-8a9e-ba4101ec2105,NULL,799cf040-59c7-4986-825a-e4b909364823;2d03f2db-bf91-45db-a827-470484fe7ddb,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,40ECBAEA-9783-479A-8EB9-9D39F577C01D,Speakers,NULL,NULL,NULL,"Employment, Labour & Equalities",NULL,NULL,NULL,NULL,NULL
508,/Events/2022/Fire-and-re-hire-and-employee-cost-reduction,en-GB,2460BBA0-FCFC-497E-8917-C3CCF6614239,"""Fire and re-hire"" and employee cost reduction","Mid-Year Employment Series 2022: Redundancy - ""Fire and re-hire"" and employee cost reduction","Maintaining positive employee relations, avoiding tribunal claims penalties which undermine those key aims and minimising the risk of brand damaging adverse PR has never been so important. Hear from us on how to minimise those risks.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,00:00.0,45:00.0,11:00,11:45,GMT,0,NULL,"<p>As we approach mid-2022, we&#39;re taking stock of the ever challenging issues organisations face together with future developments in employment law and the workplace. So far this year, we have seen efforts to reduce employee overheads making major headline news and the ESG agenda, which impacts every aspect of the workplace, becoming ever more critical. Our next series of live webinars are designed to help identify and mitigate risk, and to support successful outcomes from everyday matters to major strategic business critical plans.</p>

<p>Please join us for four live webinars in June, developed specifically for anyone dealing with HR and ER matters within their organisation, whether in-house lawyers, HR professionals or others.</p>

<p>All of the webinars will start at 11:00 and will last approximately 45 minutes, including time for questions.</p>

<p>Implementing headcount and wage cost reduction remains a key issue for many businesses as we emerge from the pandemic into further economic uncertainty created by world events. Maintaining positive employee relations, avoiding tribunal claims penalties which undermine those key aims and minimising the risk of brand damaging adverse PR has never been so important. Hear from us on how to minimise those risks.</p>
",NULL,NULL,59:50.0,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?RSID=bdQCz4VYcgKuu_fE6ImLxSTXs_d2lGoPCrhZh4JN7U5tvmIJMNkCV0VpYp8gq97R,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,d8837737-40d2-4472-8a9e-ba4101ec2105,NULL,799cf040-59c7-4986-825a-e4b909364823;fb60329f-6333-4f7e-b26b-4f9b106a32e7,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,40ECBAEA-9783-479A-8EB9-9D39F577C01D,Speakers,NULL,NULL,NULL,"Employment, Labour & Equalities",NULL,NULL,NULL,NULL,NULL
509,/Events/2022/See-you-at-BIO-2022,en-GB,2EED5A63-DCCE-4CA7-AB0C-10CC3E753C92,See you at BIO 2022,See you at BIO 2022,"Gowling WLG's global Life Sciences team looks forward to seeing you at BIO 2022, the world's largest gathering of the biotechnology industry.",~/getmedia/8729fb95-a032-4acc-8a20-4496cc829e3d/220520-san-diego-convention-center-hero.jpg.xml?width=1400&height=540&ext=.jpg,"Aerial photo of San Diego, CA",GWLG.Conference,30:54.0,25:08.0,to June 16,NULL,Local time,0,NULL,"<p>Gowling WLG&#39;s global Life Sciences team looks forward to seeing you at <a href=""https://www.bio.org/events/bio-international-convention"" target=""_blank"">BIO 2022</a>, the world&#39;s largest gathering of the biotechnology industry.</p>

<p>In attendance will be several of our legal professionals, bringing their breadth of experience in areas such as <a href=""~/en/services/intellectual-property-law/overview/"">intellectual property law</a>, corporate, <a href=""~/en/services/ip-litigation-strategy/#overview"">IP litigation</a>, <a href=""~/en/services/patents/#overview"">patents</a>, and <a href=""~/en/services/dispute-resolution/#uk"">dispute resolution</a>.</p>

<p>With Gowling WLG, you will benefit from our in-depth understanding of the life sciences sector, as well as our global reach, seamless service, and cross-border multijurisdictional insight &ndash; all of which can provide you with the strategies you need to grow your business successfully. Learn more about Gowling WLG&#39;s <a href=""~/en/sectors/life-sciences/global/"">Global Life Sciences Group</a>.</p>

<p>Below is the full list of our attendees. Don&#39;t hesitate to reach out in advance to book a meeting with any of them during BIO 2022.</p>
",NULL,NULL,20:55.0,https://www.bio.org/events/bio-international-convention,NULL,Learn more,AC4961B2-D57F-4047-B73F-AF0511891153,049c8249-7ff3-4ee3-a439-590f45fd5cff,NULL,NULL,1407399d-65b8-4056-acd8-99b863f88ab6;60696de3-78fb-41b4-8d21-9646c74312ea;74b9d0c7-28ad-4afc-8e4c-194a33906a90;8e016382-a73f-4aba-8339-02f14b8a79bb;0fe65d88-2f4b-401a-b90d-ea8ea4bdd72d;318ad67b-b673-41d5-a888-784ab5b9ea66;f3cd8bc4-37c5-4d8f-b2ff-eb4b97b8b140;ad5b2bf6-d057-4747-9426-315343c58711;ab7f980f-908e-4c42-bbc3-ea2d39c20924;870774bf-534e-466c-be9a-e89fb3fb38bf;f801a2a1-89ec-4986-8030-70e2352aa794;3b6c194b-1e76-443d-80ba-309e4b6d23fd;d9a834e2-7b85-4089-b241-ed2e95e1b3d6;b6fa127b-32c2-4ce4-9131-5f8519c73f84;56ee3f73-d210-49c8-9910-551c59e95fb2,NULL,Conference,"Will Boyer, Christopher D. Bown, PhD, Jenny Davies, Patrick Duxbury, George Elvira, Laura Gheorghiu, Paul Inman, Omar A. Nassif, Trevor Newton, John Norman, PhD, Edith Penty Geraets, Susan Tandan, Lisa Thorne, Christopher C. Van Barr, Sonia M. Ziesche, PhD",BIO International Convention,56213,GWLG.Events,NULL,~/getmedia/8729fb95-a032-4acc-8a20-4496cc829e3d/220520-san-diego-convention-center-hero.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/f7ae16dc-b67b-4ee3-a3c9-4e673e5dd0c9/220520-san-diego-convention-center-mobile.jpg.xml?width=550&height=500&ext=.jpg,0,NULL,/en/insights-resources/videos/2022/ip-for-life-sciences-startups/,Watch our three-part series on IP for life sciences startups,GWLG.Canada;GWLG.UnitedStates;GWLG.Global,0,NULL,Book a meeting with our Canada and UK attendees:,NULL,NULL,Life Sciences,NULL,NULL,NULL,~/getmedia/72a89409-13de-484f-9fc7-1b86fd682a0b/220520-see-you-at-bio-2022.jpg.xml?width=1272&height=675&ext=.jpg,NULL,NULL
510,/Events/2022/The-UK-s-Vertical-Agreements-Block-Exemption-Order,en-GB,C7333F12-3E23-4EB6-B98C-30A558228043,The UK's Vertical Agreements Block Exemption Order,The UK's Vertical Agreements Block Exemption Order,"In this live webinar, Samuel Beighton will outline the new vertical block exemption regime, identifying key changes and points of difference with the new EU regime, and will consider how businesses can seek to benefit from the opportunities resulting from these changes.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,18:04.0,18:09.0,11:00,12:00,BST,1,1,"<p>The UK&#39;s new vertical block exemption regime comes into force on 1 June 2022, with a one-year transition period for existing arrangements, and businesses affected need to be prepared.</p>

<p>In this live webinar, Samuel Beighton will outline the new vertical block exemption regime, identifying key changes and points of difference with the new EU regime, and will consider how businesses can seek to benefit from the opportunities resulting from these changes.</p>

<p>During the webinar we will answer as many audience questions as possible in the time available.</p>

<p>To secure your place at this webinar please use the RSVP button.</p>

<p>This webinar is delivered as part of our ThinkHouse programme, specifically developed for in-house counsel.</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession. Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,00:00.0,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?rsid=gKvQXAgTJRn4LYlEEryepBrEkkxBIGJQMvlCm6Hk4aCpQryabGYGAcyF3PJaegmz&react=REGISTER,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,b3f9fce6-b77c-4e15-978e-eaa664c609dc,a143cbfd-d333-42a0-89a6-7287894464f1,f13a9240-2482-4077-be83-ebaa741dc3f0,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/5d57b23c-f4d3-44e3-a08e-7ee56360fd71/thinkhouse-snr-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/27fda93c-8849-4d7e-a292-bcc5eb1e7896/thinkhouse-snr-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,NULL,NULL,Competition Law & Antitrust,ThinkHouse,NULL,NULL,NULL,NULL
511,/Events/2022/ThinkHouse-Brands-Advertising-Design-Birmingham,en-GB,E96EC60E-D2B9-4DA7-BF33-088D158AAAEA,"ThinkHouse Brands, Advertising & Design Birmingham","ThinkHouse Brands, Advertising & Design Workshop - Birmingham",The half-day event in Birmingham will begin with presentations discussing the current challenges and potential future developments all brand owners should be aware of.,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,17-11-2022 09:30,17-11-2022 09:31,09:30,13:45,GMT,0,NULL,"<p>Our ThinkHouse Brands, Advertising and Designs seminars are developed specifically for in-house counsel, to provide practical solutions and the latest guidance on issues affecting brand owners of all shapes and sizes. Join us for a morning of legal updates and training, as well as an opportunity to network with existing and new in-house contacts.</p>

<h2>Metaverse and Brands: The (Virtual) Reality</h2>

<p>Charlie Bond and Lucy Singer will discuss the basics of what, if anything, the Metaverse actually is, together with its benefits, pitfalls and key issues brand owners need to be thinking about as the area develops.</p>

<h2>International Issues</h2>

<p>Dan Smith will discuss how the EU&#39;s new Digital Services Act will impact UK based brand owners when it comes into force.</p>

<p>Jasmine Lalli will cover two issues from a Brexit lens &ndash; exhaustion rights in the UK and the impact on UK/EU design law. She will explain what is exhaustion; exhaustion for trademark and copyright holders specifically; and the impact of Brexit on exhaustion. She will also discuss the issue of conflicting disclosure requirements for UK design rights when designers are seeking both UK and EU design protection.</p>

<p>James Stunt will discuss how international sanctions are impacting brand owners. He will cover maintaining IP rights in Russia in the context of increased UK and EU sanctions; Russian countermeasures; and what comes next for brand owners.</p>

<h2>Do you know your A,B,C,Ds?</h2>

<p>In this interactive workshop Khemi Salhan and Zoe Pearman&nbsp;will identify practical solutions to common issues faced by in-house counsel, covering the A,B,C,Ds of IP:</p>

<ul>
	<li>Advertising &ndash; Working with influencers and making green claims;&nbsp;</li>
	<li>Brands &ndash; Clearing a new brand and deciding whether to register;</li>
	<li>Copyright &ndash; Working with consultants/commissioning work and dealing with some of the risk around this; and</li>
	<li>Designs &ndash; dealing with online infringement.</li>
</ul>

<p>This session will provide an opportunity to discuss various topics with your peers, sharing experiences, challenges and how you might approach finding practical solutions.&nbsp;&nbsp;</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession. Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,15-11-2022 09:28,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?rsid=gKvQXAgTJRn4LYlEEryepBrEkkxBIGJQMvlCm6Hk4aBnbLmoFp46IDGroFIbFUDw&react=All%20Reactions,NULL,Register for this event,58076178-DA60-4AB6-A07C-EF250971EBF7,NULL,aa72ea93-20f8-455a-8e77-6f6cea510684,a143cbfd-d333-42a0-89a6-7287894464f1,9ff8fd1a-c2f5-4084-b72e-4aa02fdf3312;bdc0d23f-0355-4075-924c-1e6f34081de2;b3dfcd3d-20c2-44c3-98e5-78001e5d2384;897543f6-1036-4499-934c-adf5f5afeaf4;b4ee1d32-d19e-46e6-a434-15af65a4df83;4150ff2c-c5a6-4bd9-ba4e-37c9567eb4f7;d03f4474-15e0-41a7-a007-5fa3f7547a82;23b62899-1b35-4596-9523-a2823336c23e,NULL,Seminar,NULL,Birmingham,70,GWLG.Events,NULL,~/getmedia/d2b9ca59-d716-4c60-abb1-472dd7eeec23/thinkhouse-primary-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/0363a899-4ad3-4e9e-a428-fbf0ebf9f31d/thinkhouse-primary-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,58076178-da60-4ab6-a07c-ef250971ebf7,NULL,"Trademarks, Brands & Designs",ThinkHouse,Birmingham,NULL,NULL,NULL
512,/Events/2022/ThinkHouse-Brands-Advertising-Design-London,en-GB,617045B7-628A-4089-BDE4-8A8EB05C0899,"ThinkHouse - Brands, Advertising & Design - London","ThinkHouse Brands, Advertising & Design Workshop - London",The half-day event in London will begin with presentations discussing the current challenges and potential future developments all brand owners should be aware of.,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,23-11-2022 09:30,23-11-2022 09:31,09:30,13:45,GMT,0,NULL,"<p>Our ThinkHouse Brands, Advertising and Designs seminars are developed specifically for in-house counsel, to provide practical solutions and the latest guidance on issues affecting brand owners of all shapes and sizes. Join us for a morning of legal updates and training, as well as an opportunity to network with existing and new in-house contacts.</p>

<h2>Metaverse and Brands: The (Virtual) Reality</h2>

<p>Charlie Bond and Lucy Singer will discuss the basics of what, if anything, the Metaverse actually is, together with its benefits, pitfalls and key issues brand owners need to be thinking about as the area develops.</p>

<h2>International Issues</h2>

<p>Dan Smith will discuss how the EU&#39;s new Digital Services Act will impact UK based brand owners when it comes into force.</p>

<p>Jasmine Lalli will cover two issues from a Brexit lens &ndash; exhaustion rights in the UK and the impact on UK/EU design law. She will explain what is exhaustion; exhaustion for trademark and copyright holders specifically; and the impact of Brexit on exhaustion. She will also discuss the issue of conflicting disclosure requirements for UK design rights when designers are seeking both UK and EU design protection.</p>

<p>James Stunt will discuss how international sanctions are impacting brand owners. He will cover maintaining IP rights in Russia in the context of increased UK and EU sanctions; Russian countermeasures; and what comes next for brand owners.</p>

<h2>Do you know your A,B,C,Ds?</h2>

<p>In this interactive workshop Khemi Salhan and Zoe Pearman&nbsp;will identify practical solutions to common issues faced by in-house counsel, covering the A,B,C,Ds of IP:</p>

<ul>
	<li>Advertising &ndash; Working with influencers and making green claims;&nbsp;</li>
	<li>Brands &ndash; Clearing a new brand and deciding whether to register;</li>
	<li>Copyright &ndash; Working with consultants/commissioning work and dealing with some of the risk around this; and</li>
	<li>Designs &ndash; dealing with online infringement.</li>
</ul>

<p>This session will provide an opportunity to discuss various topics with your peers, sharing experiences, challenges and how you might approach finding practical solutions.&nbsp;&nbsp;</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession. Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,21-11-2022 09:28,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?rsid=gKvQXAgTJRn4LYlEEryepBrEkkxBIGJQMvlCm6Hk4aBnbLmoFp46IDGroFIbFUDw&react=All%20Reactions,NULL,Register for this event,9FBE191E-3BCF-45DE-A2BA-338BB194FC9D,NULL,aa72ea93-20f8-455a-8e77-6f6cea510684,a143cbfd-d333-42a0-89a6-7287894464f1,9ff8fd1a-c2f5-4084-b72e-4aa02fdf3312;897543f6-1036-4499-934c-adf5f5afeaf4;b4ee1d32-d19e-46e6-a434-15af65a4df83;4150ff2c-c5a6-4bd9-ba4e-37c9567eb4f7;bdc0d23f-0355-4075-924c-1e6f34081de2;b3dfcd3d-20c2-44c3-98e5-78001e5d2384;23b62899-1b35-4596-9523-a2823336c23e;d03f4474-15e0-41a7-a007-5fa3f7547a82,NULL,Seminar,NULL,London,71,GWLG.Events,NULL,~/getmedia/d2b9ca59-d716-4c60-abb1-472dd7eeec23/thinkhouse-primary-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/0363a899-4ad3-4e9e-a428-fbf0ebf9f31d/thinkhouse-primary-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,9fbe191e-3bcf-45de-a2ba-338bb194fc9d,NULL,"Trademarks, Brands & Designs",ThinkHouse,London,NULL,NULL,NULL
514,/Events/2022/ThinkHouse-Autumn-2022-Birmingham,en-GB,0891A105-E20B-4018-A621-123FB60B9C12,ThinkHouse - Autumn 2022 - Birmingham,ThinkHouse Autumn Seminar - Birmingham,"Legal seminar for senior in-house counsel. This session is hosted in Birmingham, UK.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,22-09-2022 08:04,22-09-2022 08:04,09:30,14:00,BST,0,NULL,"<p>Join us for a morning of legal updates and training developed specifically for senior in-house lawyers, focussed on managing risks within your business. The seminars also offer an opportunity to network with existing&nbsp;and new in-house counsel contacts.</p>

<h2>Protecting your human capital in challenging times</h2>

<p>The market for talent continues to tighten. Companies are doing more to hang on to their key people and teams. Jonathan Chamberlain will look at current trends in enforcing non-competes and predict the impact of the Government&#39;s promised reforms.&nbsp;</p>

<h2>Insurance clauses in supply contracts</h2>

<p>Samantha Holland and Susannah Fink will discuss the key factors to consider when drafting insurance clauses in commercial contracts. During the session we will identify the usual sticking points between the contracting parties, discuss which of these are usually deal critical and which are &quot;nice to haves&quot; and suggest ways in which you might resolve any blockers.</p>

<h2>Protective allocation of risk or blocking valuable claims? Drafting exclusion and limitation of liability clauses</h2>

<p>Our commercial contract and dispute resolution specialists will take a look at the drafting of exclusion and limitation of liability clauses, including a consideration of recent case law in this area. These clauses are always important, but never more so than in a time of uncertainty. Properly drafted exclusion and limitation of liability clauses can create clarity for the parties in relation to the allocation of risk between them. Conversely, a failure to adequately understand the consequences of that drafting can lead to parties finding out that there are bars to recovery when issues arise.&nbsp;</p>

<h2>The impact of litigation on businesses</h2>

<p>Emma Carr will look at the impact litigation can have on a company&#39;s value, and will discuss key considerations for businesses in the position of both claimant or defendant and what practical steps can be taken to help mitigate that impact.&nbsp;</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession. Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,19-09-2022 09:00,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?RSID=gKvQXAgTJRn4LYlEEryepBrEkkxBIGJQMvlCm6Hk4aAleOb8K1V3ykcOSTuSxMfy,NULL,Register for this event,58076178-DA60-4AB6-A07C-EF250971EBF7,NULL,NULL,a143cbfd-d333-42a0-89a6-7287894464f1,79205c59-28cb-4630-bd62-bf070ba732b0;2c23fcfc-6bb0-4205-898d-acc53bb1d960;9c1e5d85-61f3-41ce-821b-f68dd18ccbb1;009e72fc-178d-4b0b-805e-c2ef1a0d5e00;334a7f26-44f4-4a26-9d0d-0ddd5e499b12;ad056fcd-7211-4da7-a9e2-30612d332954;a9daf1f3-b2ff-43d9-b76e-b815bb73aace;742aa35b-b58b-4d7c-a95e-820a420ada54,NULL,Seminar,NULL,Birmingham,70,GWLG.Events,NULL,~/getmedia/5d57b23c-f4d3-44e3-a08e-7ee56360fd71/thinkhouse-snr-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/27fda93c-8849-4d7e-a292-bcc5eb1e7896/thinkhouse-snr-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,NULL,Speaker(s),NULL,58076178-da60-4ab6-a07c-ef250971ebf7,NULL,NULL,ThinkHouse,Birmingham,NULL,NULL,NULL
515,/Events/2022/ThinkHouse-Autumn-2022-London,en-GB,67D67AA9-A593-4136-A831-8B047BC83B09,ThinkHouse - Autumn 2022 - London,ThinkHouse Autumn Seminar - London,"Legal seminar for senior in-house counsel. This session is hosted in London, UK.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,04-10-2022 08:04,04-10-2022 08:04,09:00,14:00,BST,0,NULL,"<p>Join us for a morning of legal updates and training developed specifically for senior in-house lawyers, focussed on managing risks within your business. The seminars also offer an opportunity to network with existing&nbsp;and new in-house counsel contacts.</p>

<h2>Protecting your human capital in challenging times</h2>

<p>The market for talent continues to tighten. Companies are doing more to hang on to their key people and teams. Jonathan Chamberlain will look at current trends in enforcing non-competes and predict the impact of the Government&#39;s promised reforms.&nbsp;</p>

<h2>Insurance clauses in supply contracts</h2>

<p>Samantha Holland and Susannah Fink will discuss the key factors to consider when drafting insurance clauses in commercial contracts. During the session we will identify the usual sticking points between the contracting parties, discuss which of these are usually deal critical and which are &quot;nice to haves&quot; and suggest ways in which you might resolve any blockers.</p>

<h2>Protective allocation of risk or blocking valuable claims? Drafting exclusion and limitation of liability clauses</h2>

<p>Our commercial contract and dispute resolution specialists will take a look at the drafting of exclusion and limitation of liability clauses, including a consideration of recent case law in this area. These clauses are always important, but never more so than in a time of uncertainty. Properly drafted exclusion and limitation of liability clauses can create clarity for the parties in relation to the allocation of risk between them. Conversely, a failure to adequately understand the consequences of that drafting can lead to parties finding out that there are bars to recovery when issues arise.&nbsp;</p>

<h2>The impact of litigation on businesses</h2>

<p>Emma Carr will look at the impact litigation can have on a company&#39;s value, and will discuss key considerations for businesses in the position of both claimant or defendant and what practical steps can be taken to help mitigate that impact.&nbsp;</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession. Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,29-09-2022 17:00,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?RSID=gKvQXAgTJRn4LYlEEryepBrEkkxBIGJQMvlCm6Hk4aAleOb8K1V3ykcOSTuSxMfy,NULL,Register for this event,9FBE191E-3BCF-45DE-A2BA-338BB194FC9D,NULL,NULL,a143cbfd-d333-42a0-89a6-7287894464f1,79205c59-28cb-4630-bd62-bf070ba732b0;2c23fcfc-6bb0-4205-898d-acc53bb1d960;9c1e5d85-61f3-41ce-821b-f68dd18ccbb1;009e72fc-178d-4b0b-805e-c2ef1a0d5e00;334a7f26-44f4-4a26-9d0d-0ddd5e499b12;ad056fcd-7211-4da7-a9e2-30612d332954;a9daf1f3-b2ff-43d9-b76e-b815bb73aace;742aa35b-b58b-4d7c-a95e-820a420ada54,NULL,Seminar,NULL,London,71,GWLG.Events,NULL,~/getmedia/5d57b23c-f4d3-44e3-a08e-7ee56360fd71/thinkhouse-snr-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/27fda93c-8849-4d7e-a292-bcc5eb1e7896/thinkhouse-snr-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,NULL,Speaker(s),NULL,9fbe191e-3bcf-45de-a2ba-338bb194fc9d,NULL,NULL,ThinkHouse,London,NULL,NULL,NULL
516,/Events/2022/ThinkHouse-Foundations-2022-London,en-GB,75972F6B-1CC5-40AF-925B-2B414089E624,ThinkHouse - Foundations 2022 - London,ThinkHouse Foundations Autumn Seminar - London,Join us in London for a morning of legal updates and training as well as an opportunity to network with existing and new in-house peers. ,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,20-10-2022 09:16,20-10-2022 09:16,09:15,13:45,BST,1,3,"<p>ThinkHouse Foundations is Gowling WLG&#39;s tailored programme for in-house lawyers starting out in their careers. Drawing on the topics and insights focused on in ThinkHouse, we explore the opportunities and challenges faced by paralegals, trainees and lawyers of up to five years&#39; PQE.</p>

<p>Join us for a morning of legal updates and training as well as an opportunity to network with existing and new in-house peers.&nbsp;</p>

<h2>Advertising law workshop</h2>

<p>In this interactive workshop Zoe Pearman, Khemi Salhan and Lucy Singer will provide an introduction to advertising law. They will focus on the golden rules of advertising law and provide examples of key issues they&#39;re seeing at the moment.</p>

<h2>In conversation with... Sarah Lees</h2>

<p>Sarah Lees is a senior associate in our Housing, Development and Regeneration team at Gowling WLG. Prior to this, she served as in-house counsel to Battersea Power Station Limited. In this short Q&amp;A, Sarah will discuss her time spent in-house compared with private practice, the skills, values and insights she has taken from the different environments, and we can all learn about the important interactions between the two.</p>

<h2>Governance and its relevance to ESG</h2>

<p>ESG is now a regular feature on the Board agenda for most large organisations and it is likely to stay that way for the foreseeable future. In this session Rachel Mobberley will provide an overview of ESG, but with a focus on demystifying the governance aspect, highlighting the key implications and practical realities for businesses, and exploring how in-house legal teams can provide support.</p>

<h2>Maternity and family rights</h2>

<p>Understanding, interpreting and complying with maternity and family rights in the workplace can be tricky. Employers face the challenge of managing business needs with the needs of mothers, fathers and anyone else with parenting responsibilities at a time which can be stressful and emotional. In this session Karin Kiho will at some of the key elements of maternity and family rights all businesses need to be aware of.</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession. Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,18-10-2022 08:00,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?rsid=gKvQXAgTJRn4LYlEEryepBrEkkxBIGJQMvlCm6Hk4aDgf1peMXnPaZclQjRulb9M&react=All%20Reactions,NULL,Register for this event,9FBE191E-3BCF-45DE-A2BA-338BB194FC9D,NULL,d8837737-40d2-4472-8a9e-ba4101ec2105;65c34333-2a1a-4fba-8d2a-65496d535f64;b305a1b6-d0ba-41dc-8e53-579fd077b871;200fa82c-4bb5-48ad-bea1-2a574dfecdab,a143cbfd-d333-42a0-89a6-7287894464f1,d03f4474-15e0-41a7-a007-5fa3f7547a82;e8081a0b-9874-4c18-8a1a-2ef51aaa161c;23b62899-1b35-4596-9523-a2823336c23e;b3dfcd3d-20c2-44c3-98e5-78001e5d2384;0349c3b9-6e0e-4705-b87e-5db001c7d3a7;e508c284-4bb7-4869-92cc-55ba0ef25f38;265dca2d-30ab-44da-b194-c0378081d7d6,NULL,Seminar,NULL,London,71,GWLG.Events,NULL,~/getmedia/5c73cf2c-5ac2-465b-9dff-9377774e4d9b/thinkhouse-foundations-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/a1bd54ac-e5a3-4c45-8585-8ccbdce9e524/thinkhouse-foundations-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,9fbe191e-3bcf-45de-a2ba-338bb194fc9d,NULL,"Employment, Labour & Equalities, Advertising & Product Regulatory, Environmental, Social and Governance (ESG), Governance, Risk and Compliance (GRC)",ThinkHouse,London,NULL,NULL,NULL
517,/Events/2022/ThinkHouse-Foundations-2022-Birmingham,en-GB,CE6D45C1-130B-434A-9AA1-6C1BF985EC20,ThinkHouse - Foundations 2022 - Birmingham,ThinkHouse Foundations Autumn Seminar - Birmingham,Join us in Birmingham for a morning of legal updates and training as well as an opportunity to network with existing and new in-house peers. ,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,18-10-2022 09:16,18-10-2022 09:16,09:15,13:45,BST,1,3,"<p>ThinkHouse Foundations is Gowling WLG&#39;s tailored programme for in-house lawyers starting out in their careers. Drawing on the topics and insights focused on in ThinkHouse, we explore the opportunities and challenges faced by paralegals, trainees and lawyers of up to five years&#39; PQE.</p>

<p>Join us for a morning of legal updates and training as well as an opportunity to network with existing and new in-house peers.&nbsp;</p>

<h2>Advertising law workshop</h2>

<p>In this interactive workshop Zoe Pearman, Khemi Salhan and Lucy Singer will provide an introduction to advertising law. They will focus on the golden rules of advertising law and provide examples of key issues they&#39;re seeing at the moment.</p>

<h2>In conversation with... Sarah Lees</h2>

<p>Sarah Lees is a senior associate in our Housing, Development and Regeneration team at Gowling WLG. Prior to this, she served as in-house counsel to Battersea Power Station Limited. In this short Q&amp;A, Sarah will discuss her time spent in-house compared with private practice, the skills, values and insights she has taken from the different environments, and we can all learn about the important interactions between the two.</p>

<h2>Governance and its relevance to ESG</h2>

<p>ESG is now a regular feature on the Board agenda for most large organisations and it is likely to stay that way for the foreseeable future. In this session Rachel Mobberley will provide an overview of ESG, but with a focus on demystifying the governance aspect, highlighting the key implications and practical realities for businesses, and exploring how in-house legal teams can provide support.</p>

<h2>Maternity and family rights</h2>

<p>Understanding, interpreting and complying with maternity and family rights in the workplace can be tricky. Employers face the challenge of managing business needs with the needs of mothers, fathers and anyone else with parenting responsibilities at a time which can be stressful and emotional. In this session Karin Kiho will at some of the key elements of maternity and family rights all businesses need to be aware of.</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession. Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,17-10-2022 07:00,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?rsid=gKvQXAgTJRn4LYlEEryepBrEkkxBIGJQMvlCm6Hk4aDgf1peMXnPaZclQjRulb9M&react=All%20Reactions,NULL,Register for this event,58076178-DA60-4AB6-A07C-EF250971EBF7,NULL,65c34333-2a1a-4fba-8d2a-65496d535f64;b305a1b6-d0ba-41dc-8e53-579fd077b871;200fa82c-4bb5-48ad-bea1-2a574dfecdab;d8837737-40d2-4472-8a9e-ba4101ec2105,a143cbfd-d333-42a0-89a6-7287894464f1,d03f4474-15e0-41a7-a007-5fa3f7547a82;e8081a0b-9874-4c18-8a1a-2ef51aaa161c;23b62899-1b35-4596-9523-a2823336c23e;b3dfcd3d-20c2-44c3-98e5-78001e5d2384;0349c3b9-6e0e-4705-b87e-5db001c7d3a7;e508c284-4bb7-4869-92cc-55ba0ef25f38;265dca2d-30ab-44da-b194-c0378081d7d6,NULL,Seminar,NULL,Birmingham,70,GWLG.Events,NULL,~/getmedia/5c73cf2c-5ac2-465b-9dff-9377774e4d9b/thinkhouse-foundations-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/a1bd54ac-e5a3-4c45-8585-8ccbdce9e524/thinkhouse-foundations-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,58076178-da60-4ab6-a07c-ef250971ebf7,NULL,"Advertising & Product Regulatory, Environmental, Social and Governance (ESG), Governance, Risk and Compliance (GRC), Employment, Labour & Equalities",ThinkHouse,Birmingham,NULL,NULL,NULL
518,/Events/2022/ThinkHouse-Public-Sector-2022-London,en-GB,0D9C9452-4404-452C-A0C7-1039F8983818,ThinkHouse - Public Sector 2022 - London,ThinkHouse Public Sector Seminar - London,Seminar for in-house counsel working in and with the public sector,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,15-11-2022 09:31,15-11-2022 09:32,09:30,13:45,GMT,0,NULL,"<p>ThinkHouse Public Sector is tailored exclusively to the needs of senior in-house counsel working within or with the public sector, and offers you a forum to meet with those in similar roles and exchange ideas.</p>

<p>This year we will focus on two major topics that we regularly receive questions on from our clients.</p>

<h2>Procurement Bill</h2>

<p>We will spend the first half of the seminar covering the new Procurement Bill in some detail. We will provide an introduction to the Bill, discussing its current status, giving an overview of its structure, and highlighting its key principles. We will then go on to explain the procedural aspects of the new regime, including the simplified set of procurement procedures, limited tendering, and pre-qualification changes. We will wrap up this section of the seminar by discussing other procedural features, including contract awards, disclosure and review of decisions.</p>

<h2>Cabinet Office Playbooks</h2>

<p>Following the coffee break we will move onto the topic of the Cabinet Office playbooks in public sector procurement. We will give&nbsp;an overview of the current versions of the four playbooks (Sourcing, Consultancy, Construction and Digital, Data and Technology), providing background and context before highlighting key themes and policies of which you should be aware, and recent changes to the playbooks. In doing so, we will provide practical guidance on how you can support your procurement teams in implementing the playbooks.</p>

<p>Places at the half-day seminars are limited, so please register to secure your attendance.</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession. Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,11-11-2022 09:35,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?RSID=hswI0KXP7WwBpxVlSbirRRIkjqLLqZIOQJWLfZ7a60TPmTJ2CL18Om_EWOT_7v0q,NULL,Register for this event,9FBE191E-3BCF-45DE-A2BA-338BB194FC9D,5ad41b49-d460-489a-95b9-84c854eda6f1,NULL,a143cbfd-d333-42a0-89a6-7287894464f1,1ca237c0-eb32-40df-ba06-268230275f34;503e49eb-bfc5-4803-a856-7fcbac77a38a;6b8dbb8c-6f10-4bbb-87e5-242c83032d08;6b47daf9-54ec-4258-884e-08e4c55de0ca;667bbf5f-7038-4fe6-9e59-de081f876b1c;701ba329-62b0-48a9-857e-b863415e004c,NULL,Seminar,"Robert Breedon, Christopher Brennan, Simon Harris, Ruth Griffin, Alexi Markham, Elizabeth Williams",London,71,GWLG.Events,NULL,~/getmedia/5d57b23c-f4d3-44e3-a08e-7ee56360fd71/thinkhouse-snr-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/27fda93c-8849-4d7e-a292-bcc5eb1e7896/thinkhouse-snr-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,9fbe191e-3bcf-45de-a2ba-338bb194fc9d,Government Contracting & Public Sector ,NULL,ThinkHouse,London,NULL,NULL,NULL
519,/Events/2022/ThinkHouse-Public-Sector-2022-Birmingham,en-GB,C7C9CD35-DC4A-45F8-8392-DDB91897A2FC,ThinkHouse - Public Sector 2022 - Birmingham,ThinkHouse Public Sector Seminar - Birmingham,Join us in Birmingham for our seminar for in-house counsel working in and with the public sector.,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,08-11-2022 09:31,08-11-2022 09:32,09:30,13:45,GMT,0,NULL,"<p>ThinkHouse Public Sector is tailored exclusively to the needs of senior in-house counsel working within or with the public sector, and offers you a forum to meet with those in similar roles and exchange ideas.</p>

<p>This year we will focus on two major topics that we regularly receive questions on from our clients.</p>

<h2>Procurement Bill</h2>

<p>We will spend the first half of the seminar covering the new Procurement Bill in some detail. We will provide an introduction to the Bill, discussing its current status, giving an overview of its structure, and highlighting its key principles. We will then go on to explain the procedural aspects of the new regime, including the simplified set of procurement procedures, limited tendering, and pre-qualification changes. We will wrap up this section of the seminar by discussing other procedural features, including contract awards, disclosure and review of decisions.</p>

<h2>Cabinet Office Playbooks</h2>

<p>Following the coffee break we will move onto the topic of the Cabinet Office playbooks in public sector procurement. We will give&nbsp;an overview of the current versions of the four playbooks (Sourcing, Consultancy, Construction and Digital, Data and Technology), providing background and context before highlighting key themes and policies of which you should be aware, and recent changes to the playbooks. In doing so, we will provide practical guidance on how you can support your procurement teams in implementing the playbooks.</p>

<p>Places at the half-day seminar are limited, so please register to secure your attendance.</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession. Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,04-11-2022 09:35,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?RSID=hswI0KXP7WwBpxVlSbirRRIkjqLLqZIOQJWLfZ7a60TPmTJ2CL18Om_EWOT_7v0q,NULL,Register for this event,58076178-DA60-4AB6-A07C-EF250971EBF7,5ad41b49-d460-489a-95b9-84c854eda6f1,NULL,a143cbfd-d333-42a0-89a6-7287894464f1,1ca237c0-eb32-40df-ba06-268230275f34;503e49eb-bfc5-4803-a856-7fcbac77a38a;6b8dbb8c-6f10-4bbb-87e5-242c83032d08;6b47daf9-54ec-4258-884e-08e4c55de0ca;667bbf5f-7038-4fe6-9e59-de081f876b1c;701ba329-62b0-48a9-857e-b863415e004c,NULL,Seminar,"Robert Breedon, Christopher Brennan, Simon Harris, Ruth Griffin, Alexi Markham, Elizabeth Williams",Birmingham,70,GWLG.Events,NULL,~/getmedia/5d57b23c-f4d3-44e3-a08e-7ee56360fd71/thinkhouse-snr-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/27fda93c-8849-4d7e-a292-bcc5eb1e7896/thinkhouse-snr-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,58076178-da60-4ab6-a07c-ef250971ebf7,Government Contracting & Public Sector ,NULL,ThinkHouse,Birmingham,NULL,NULL,NULL
521,/Events/2022/Cannabis-Partnership-Patients-Business-and-Gov,en-GB,E5525DEA-812B-46FF-B4C5-6D2E039A9554,"Cannabis Partnership: Patients, Business and Gov","The Global Cannabis Partnership - Patients, Business and Governments","A networking reception and panel discussion with Diplomat Consulting and Gowling WLG, in partnership with the Canada-UK Chamber of Commerce and Canadian Chamber of Commerce on Monday 27 June.",~/getmedia/c2df916b-9316-4509-82e9-079cfe13383b/220610-the-global-cannabis-partnership.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Seminar,27-06-2022 07:18,27-06-2022 07:18,17:30,20:30,BST,0,NULL,"<p>Join us for a networking reception and panel discussion with Diplomat Consulting and Gowling WLG, in partnership with the Canada-UK Chamber of Commerce and Canadian Chamber of Commerce on Monday 27 June.</p>

<ul>
	<li>Come and learn about efforts to legalise cannabis for medical purposes in 55 countries.</li>
	<li>Hear from those who are actively working in the industry - Canada, UK, Malta, Israel and the European Union.</li>
	<li>Gain a perspective as to the challenges patients have when accessing cannabis for medical purposes.</li>
</ul>

<p><strong>Places at this event are limited so please register to request attendance.</strong></p>

<h2>Speakers</h2>

<p><strong>Samantha Myers<br />
Partner &amp; Head of UK Cannabis Group, Gowling WLG</strong></p>

<p>Samantha is a partner in the corporate group, specialising in corporate finance, mergers and acquisitions and equity capital markets.</p>

<p>Samantha has extensive experience of acting for companies, or their advisers, on IPOs and secondary transactions. She regularly advises on a range of domestic and cross border M&amp;A transactions, including public takeovers. Samantha has experience in a range of sectors including retail and consumer, gaming, life sciences, healthcare, cannabis and mining. Samantha leads the firm&#39;s UK Cannabis Group and is a member of the World Law Group&#39;s Cannabis Group.</p>

<p>Samantha&#39;s experience includes a secondment to the Corporate Finance team of N+1 Singer and a secondment to the legal team of Acision.</p>

<p><strong>Ivan Ross Vrána<br />
Managing Partner, Diplomat Consulting &amp; Canadian Chamber of Commerce</strong></p>

<p>Ivan Ross worked for Health Canada for more than 18 years in strategic policy, health products and food, and healthy environments and consumer safety.</p>

<p>His work focused on pharmaceutical and cannabis policy at both the federal and provincial levels. During a two-year sabbatical, Ivan Ross worked for Innovative Medicines Canada as the director of government affairs, providing strategic insight and analysis.</p>

<p>Ivan Ross is bilingual, a trained facilitator and holds a masters in public administration from Carleton University and a bachelor of arts (honours) in history from the University of Ottawa. In 2007, Ivan Ross developed a course for graduate students in public policy/administration to teach them how to successfully develop and communicate complex public policy proposals with confidence. This course keeps him lecturing regularly at both Carleton and Concordia Universities and Algonquin College.</p>

<p><strong>Nathan Mison<br />
President &amp; Co-Founder, Diplomat Consulting</strong></p>

<p>Nathan Mison (he/him) is a Founding Partner of Diplomat Consulting. He is the former Vice President of Government and Stakeholder Relations at Fire &amp; Flower. In this role, Nathan was one of the first employees for the company from its establishment, helping to guide it through legalization and into its place as Canada&#39;s largest independent cannabis retail company.</p>

<p>Prior to his work in cannabis, Nathan owned Mison &amp; Associates, a full-scale executive counsel and public affairs company and was a founding partner in EKG Entertainment Group. Nathan is the co-chair of the National Cannabis Working Group for the Canadian Chamber of Commerce, the past-Chair of the Alberta Cannabis Council, founding member of NorthCanvas, an ancillary cannabis incubator, a member of the Alberta Cannabis Stakeholder Group and a founding member of the Alberta Cannabis Retailers Association. He has a BA in Political Science and Philosophy from the University of Alberta and has volunteered his time as the Past President of the Valley Zoo Development Society and is the co-founder of Politics on Tap.</p>

<p><strong>Hannah Deacon<br />
Medical cannabis expert &amp; campaigner</strong></p>

<p>Hannah Deacon is one of the most influential and high-profile female leaders in the UK&#39;s medical cannabis sector.</p>

<p>A trusted sector expert, as a Director of Maple Tree Consultants, Hannah&#39;s encyclopaedic knowledge of the medical cannabis sector and real-world experience positions her perfectly to support businesses entering and expanding in this emerging market. Hannah is passionate about advancing the opportunities for trade, investment and growth in a sector that has the potential to change so many people&#39;s lives for the better.</p>

<p>Driven by a mission to ensure the patient is at the centre of the conversation in this developing sector, Hannah&#39;s dedication to campaigning for patients&#39; rights in this space succeeded when the law changed on 1 November 2018, which led to cannabis becoming legal as a medical treatment. Her successful campaign with End Our Pain on behalf of son Alfie Dingley, who lives with a rare and severe form of epilepsy, led to his doctors receiving the first schedule one license to prescribe whole-plant cannabis in the UK.</p>

<p><strong>Deepak Anand<br />
Principal,&nbsp;ASDA Consultancy Services</strong></p>

<p>Mr. Anand is recognized as a thought leader in the global cannabis space. He currently serves as a Principal&nbsp; at&nbsp;ASDA Consultancy Services, aboutique consultancy business focused on assisting clients navigate tricky and often complex international cannabis markets. He was&nbsp;the co-founder &amp; CEO of Materia Ventures, a European-focused supply and distribution company for medical cannabis and CBD products. He previously served as vice president of business development and government relations at a Canadian cannabis consulting firm; vice president of a Health Canada-licensed producer; and as a board member for various pharmaceutical associations across Canada, the United States and Europe.</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession. Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,24-06-2022 07:22,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?RSID=hswI0KXP7WwBpxVlSbirRRIkjqLLqZIOQJWLfZ7a60TOle3oWxxuI0K_vEaF_gXX,NULL,Register for this event,9FBE191E-3BCF-45DE-A2BA-338BB194FC9D,f79574fc-c0d9-4d62-b148-541e0b1a4844;049c8249-7ff3-4ee3-a439-590f45fd5cff,NULL,NULL,c2d606a0-c969-45ae-ac29-89c4cdc04c9d,NULL,Seminar,Samantha Myers,London,71,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,9fbe191e-3bcf-45de-a2ba-338bb194fc9d,"Cannabis, Life Sciences",NULL,NULL,London,NULL,NULL,NULL
522,/Events/2022/Tax-dispute-resolution-monthly-update-session-8,en-GB,CD487979-A96B-40BC-8472-C053F3400E5C,Tax dispute resolution monthly update session 8,2022 Tax Dispute Resolution Monthly Update | Session 8,"Topics to be discussed are expanded mandatory disclosure rules for reportable transactions and a new category of notifiable transactions, structuring business sales as hybrid transactions and ss. 84(2) and SR&ED Tax Court appeals.",~/getmedia/d1b4713a-9293-4542-b6b0-8a45965c339d/210901-Tax-dispute-resolution-session-1.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Webinar,00:00.0,00:00.0,12:00 p.m.,12:30 p.m.,EDT,1,30 minutes,"<p>With the Canada Revenue Agency deploying massive resources to crack down on perceived tax avoidance, it&#39;s now more important than ever to stay up to date with new CRA policies,&nbsp;legislation and case law. Please join Gowling WLG&#39;s Tax Dispute Resolution Group&nbsp;for our 30 minute interactive monthly tax dispute resolution (TDR) webinars,&nbsp;to keep up with current developments and learn practical insights on how to successfully resolve tax disputes with the CRA.</p>

<p>To submit a question or topic to be covered in future webinars, please email <a href=""mailto:TDR@gowlingwlg.com"">TDR@gowlingwlg.com</a>.</p>

<p>Topics discussed at session 8 will include:</p>

<ul style=""margin-left:0.3in;"">
	<li>Expanded mandatory disclosure rules for reportable transactions and a new category of notifiable transactions &ndash; Part two: Practical considerations</li>
	<li>Structuring business sales as hybrid transactions and ss. 84(2) &ndash; Case law update</li>
	<li>SR&amp;ED Tax Court appeals, a case study</li>
</ul>

<h2>Watch previous episodes</h2>

<p>This webinar is part of our Tax Dispute Resolution Monthly Update.&nbsp;<a href=""https://gowlingwlg.com/en/insights-resources/?page=1&amp;resourcetypes=GWLG.Webinar&amp;services=596&amp;sort=Date&amp;q=Tax%20dispute%20Resolution%20Monthly&amp;mode=anyword"" target=""_blank"">Watch more from the series &raquo;</a></p>

<h2>CPD information</h2>

<p>This program is eligible for up to 30 minutes of substantive CPD credits with the LSO,&nbsp;the LSBC and the Barreau du Québec.&nbsp;If you indicate on your registration form that a certificate of participation is required, we will email you your certificate after the session.</p>
",NULL,NULL,00:00.0,https://sites-gowlingwlg.vuturevx.com/106/6140/landing-pages/event-registration-(blank-form)---june-28--2022.asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,5e7a4c28-1f41-45d6-9485-1a23041b34f6;fa76a598-e571-4940-95e3-81b4cc0c7fe6,NULL,6b8f6eff-0e11-457f-a5fb-13663ac51e49;e1c3d552-15dd-4d34-addb-90e9203af46d;3e52e02c-f918-448c-8f4a-4310c9f15b82,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/106/6140/landing-pages/event-registration-(blank-form)---june-28--2022.asp,Register now,GWLG.Canada;GWLG.Global,0,0CDA2C7E-BFD7-48AD-991D-C46DBB4E55AB,Speakers,NULL,NULL,NULL,"Tax, Tax Dispute Resolution",NULL,NULL,~/getmedia/fa5f6ef7-7514-459c-89f3-5b39c623cb95/220609-tax-dispute-session-8.jpg.xml?width=930&height=450&ext=.jpg,NULL,_Blank
523,/Events/2022/Collision-Conference,en-GB,754A2530-71E0-4D38-BADE-6DD5113D7C92,Collision Conference,Gowling WLG is bracing for Collision 2022,"Gowling WLG is proud to be a national sponsor of Collision 2022, and we look forward to connecting with you at the Enercare Centre in Toronto from June 20-23.",~/getmedia/56f0d7b3-3d59-45e0-81c2-03251cea66a0/220614-collision-conference-tech-page.jpg.xml?width=930&height=450&ext=.jpg,Orange and blue technology background circuit board and code,GWLG.Conference,36:40.0,36:57.0,NULL,NULL,CST,0,NULL,"<p>Hyperactive M&amp;A activity, the establishment of remote and hybrid workforces, rampant supply chain obstacles, skilled worker shortages &ndash; the pandemic era introduced a slate of new challenges and opportunities for Canada&#39;s tech sector. Is your business ready for what comes next?</p>

<p align=""left"">Whether you&#39;re an ambitious startup, established company, or publicly listed entity, Gowling WLG&#39;s global Tech Group is eager to learn more about your business objectives and help you achieve your goals. Our team of professionals is ready and able to develop innovative legal strategies tailored to your specific needs, no matter what they may be.</p>

<p align=""left"">Gowling WLG is proud to be a national sponsor of <a href=""https://collisionconf.com/"" target=""_blank"">Collision 2022</a>, and we look forward to connecting with you at the Enercare Centre in Toronto from June 20-23. Here&#39;s where you can find us:</p>

<h2 align=""left"">Masterclass: The Future of Banking</h2>

<p align=""left"">Curious about banking? Join our masterclass, <a href=""https://collisionconf.com/masterclasses"" target=""_blank"">The Future of Banking: What Open Banking Means for You</a>, on <strong>Thursday, June 23 from 3-3:45 p.m.</strong> Hosted by Gowling WLG partner <a href=""https://gowlingwlg.com/en/people/parna-sabet-stephenson/#panel-button1"" target=""_blank"">Parna Sabet-Stephenson</a>, this masterclass will outline what open banking is, how it works, and what its introduction means for Canada&#39;s financial landscape.</p>

<h2 align=""left"">Invest in Hamilton at Collision 2022</h2>

<p align=""left"">Members of our Hamilton office will be co-hosting a booth with representatives from <a href=""https://investinhamilton.ca/"" target=""_blank"">Invest in Hamilton</a>. The group will be on hand to showcase the City of Hamilton to international investors and companies, as well as answer questions related to intellectual property, corporate law, financing, data protection law, and other tech-related topics. Come find us at <strong>Booth #0504-02</strong>.</p>

<h2 align=""left"">Connect with Gowling WLG&#39;s global Tech Group</h2>

<p align=""left"">Clients know Gowling WLG&#39;s global Tech Group has the market insight, legal experience, and business acumen to help grow their business and protect what makes them unique.</p>

<p align=""left"">From navigating the latest advances in blockchain to developing new AI or mitigating cyber risks, we help some of the biggest tech innovators develop agile business strategies, enforce and monetize intellectual property (IP), and invest, acquire, and divest of corporate interests.</p>

<p align=""left"">Ready to begin a conversation? Connect with a member of Gowling WLG&#39;s global Tech Group below, or by using the Collision Conference app.</p>
",NULL,NULL,17:16.0,https://collisionconf.com/tickets/attendees,NULL,Book tickets,NULL,cdfc9b50-74c2-4af5-9508-342935f81ccd,NULL,NULL,425a9689-d70c-46ff-b7b6-8994bb782c5f;300e471b-5cfe-45e3-bb75-6cc00bbdf27b;3cb7b903-24be-4d44-b671-e9e9bb0f7efd;3b6c194b-1e76-443d-80ba-309e4b6d23fd;09489ca3-dabc-43e2-82d0-f731d4dbe16d;a4fe635b-9f26-4434-a81b-99b8850b60c9;e7440021-23c5-406e-8b1c-35d20b07cf59;721101f8-3e32-4089-89d7-36e80c1dcdd4;7669672b-04fc-4c7a-a4cd-16cfb6e777ab,NULL,Conference,"Viona M. Duncan, Usman M. Sheikh, Parna Sabet-Stephenson, Susan Tandan, Aaron Goldstein  , Aleksandar (Sacha) Babic, Alex Ross, Irena Kramer, Cindy Kou",NULL,NULL,GWLG.Events,NULL,~/getmedia/6418c3d0-1733-4d2d-837b-3bf091b0a560/220614-collision-conference-tech-hero.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/fdb906fb-4d18-477f-94b1-8b9c20b03ce6/220614-collision-conference-tech-mobile.jpg.xml?width=550&height=500&ext=.jpg,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,Gowling WLG Collision attendees,NULL,NULL,Tech,NULL,NULL,NULL,NULL,NULL,NULL
524,/Events/2022/Reconciliation-and-decolonization,en-GB,5C6BE35F-01EA-412B-BCEC-B2247C288939,Reconciliation and decolonization,Reconciliation and decolonization: Shifting culture in large communities,"As Canada marks National Indigenous Peoples Day, it is vital that we recognize the continued need for meaningful decolonization and reconciliation within our institutions and public spaces.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,56:12.0,56:18.0,3 p.m.,4 p.m.,EDT,1,1 hour,"<p>As Canada marks National Indigenous Peoples Day, it is vital that we recognize the continued need for meaningful decolonization and reconciliation within our institutions and public spaces. With this in mind, Gowling WLG is pleased to host a conversation between leaders at the helm of this important work across three distinct environments: the British Columbia Institute of Technology, the Canadian Medical Association, and the Jesuit Order of Canada.</p>

<p><strong>Paul Seaman</strong>&nbsp;(Métis), partner and Indigenous Law Group leader at Gowling WLG, will be joined in conversation by:</p>

<ul>
	<li><strong>Dr. Alika Lafontaine</strong>&nbsp;(Métis), First Indigenous President of the Canadian Medical Association</li>
	<li><strong>Kory Wilson</strong>&nbsp;(Kwak&#39;wala), Executive Director of Indigenous Initiatives and Partnerships at BCIT and special advisor to the BC Minister of Education</li>
	<li><strong>Fr. Peter Bisson</strong>, SJ, Former President (provincial superior) of Jesuits in English Canada, and currently responsible for leading decolonization of the Jesuit order</li>
</ul>

<p>In hearing these individuals&#39; strategies for steering decolonization and reconciliation efforts at the institutional level, we may find resonances and strategies within the legal environment &ndash; as well&nbsp;as personally within our own lives &ndash; that help us to remain active participants in this critical area.</p>

<p>We look forward to seeing you for what is sure to be a stimulating discussion.&nbsp;</p>

<p><em>This event will be presented in English, with simultaneous interpretation in French.</em></p>

<h2>CPD Information</h2>

<p><strong>LSO:</strong>&nbsp;This program is eligible for 1.0 hour of&nbsp;<strong>EDI Professionalism</strong>&nbsp;content<br />
<strong>Barreau du Québec:</strong>&nbsp;This program is eligible for 1 hour of&nbsp;<strong>substantive CPD credit</strong><br />
<strong>LSBC:</strong>&nbsp;This program is eligible for 1.0 hour of&nbsp;<strong>Practice Management &amp; Professional Responsibility</strong>&nbsp;credit</p>

<p><img alt="""" src=""~/getmedia/abc03f09-5df7-45f5-a4a0-02a77057932f/EDI-logo.png.xml"" /></p>

<p><em>This organization has been approved as an Accredited Provider of Professionalism Content by the Law Society of Ontario.</em></p>

<h2>About our speakers &amp; host</h2>

<ul>
	<li><strong>Dr. Alika Lafontaine:&nbsp;</strong>Born and raised in Treaty 4 territory/Southern Saskatchewan, Dr. Alika Lafontaine is an award-winning&nbsp;Métis physician and the first Indigenous president-elect of the Canadian Medical Association (CMA). A frequent lecturer on how bias, discrimination and racism affect patient care, Dr. Lafontaine co-led the Indigenous Health Alliance (a health transformation project involving 150 First Nations and several national health organizations) from 2013 to 2017. In 2020 he co-founded SafeSpace Networks, an online platform designed to help marginalized patients navigate health care systems, build trust and reduce patient harm.</li>
	<li><strong>Kory Wilson:&nbsp;</strong>Kory Wilson is the Executive Director of Indigenous Initiatives and Partnerships at the British Columbia Institute of Technology (BCIT), as well as a lawyer, Kwakwaka&#39;wakw, writer, speaker and educator. She was instrumental in the creation of six open-sourced BCCampus Indigenization Guides, and recently created and launched the BCIT Indigenous Vision. A sought-after advocate for Reconciliation, Wilson assists BCIT in Indigenous awareness training, cultural activities, policy reviews, hiring and student support. As a founding member of UBC&#39;s President&#39;s Advisory Committee, Wilson has been involved in the creation of two UBC Indigenous Strategic Plans.</li>
	<li><strong>Fr. Peter Bisson:&nbsp;</strong>Peter Bisson, SJ, is a Catholic priest who is a member of the Society of Jesus, more commonly known as the Jesuits. Originally from New Brunswick, he now works in Ottawa as the assistant to the Jesuit provincial for justice, ecology and Indigenous relations. In this role he supports the social justice work of the Jesuits in Canada, and advises the leader (&quot;provincial&quot;) of the Jesuits in Canada in these matters. A good part of his work goes toward issues of reconciliation and decolonization. From 2012 to 2018 he served as provincial of the Jesuits in the English-speaking parts of Canada and represented the Jesuits at meetings of the Truth and Reconciliation Commission with the signatories to the Indian Residential School Settlement Agreement.</li>
	<li><strong>Paul Seaman:</strong>&nbsp;Paul Seaman is a Gowling WLG partner in Vancouver and leader of the firm&#39;s Indigenous Law Group. With a practice focused on projects where the Crown has a duty to consult with Indigenous peoples, he represents Indigenous clients in the courtroom, boardroom and around the negotiation table. Paul is a proud citizen of the Manitoba Métis Federation, and will host our discussion.</li>
</ul>
",NULL,NULL,59:43.0,https://sites-gowlingwlg.vuturevx.com/106/6622/landing-pages---english/event-registration-(blank-form).asp,NULL,Register now,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,264f3cac-2ddb-4c4e-8048-ee0d63d1e68d,NULL,b2866a6b-d1a8-4481-91d8-78e0e7b8bcb4,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada;GWLG.Global,0,NULL,Gowling WLG speaker,NULL,NULL,NULL,Indigenous Law,NULL,NULL,~/getmedia/8db59a45-6303-4063-9df2-3f4adb034875/220615-Reconciliation-and-Decolonization-event.jpg.xml?width=1272&height=675&ext=.jpg,NULL,NULL
525,/Events/2022/Reconciliation-and-decolonization,fr-CA,5C6BE35F-01EA-412B-BCEC-B2247C288939,Reconciliation et decolonisation,Réconciliation et décolonisation : Changer la culture au sein des collectivités,"Alors que le Canada célèbre la Journée nationale des peuples autochtones, il est essentiel de reconnaître la nécessité d'instaurer une véritable décolonisation et une vraie réconciliation au sein de nos institutions et de nos espaces publics.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,56:12.0,56:18.0,15 h,16 h,EDT,1,1 heure,"<p>Alors que le Canada célèbre la Journée nationale des peuples autochtones, il est essentiel de reconnaître la nécessité d&#39;instaurer une véritable décolonisation et une vraie réconciliation au sein de nos institutions et de nos espaces publics.&nbsp;Dans cette optique, Gowling WLG est heureux d&#39;organiser une discussion entre des leaders à la tête de ce processus crucial au sein de trois environnements distincts : l&#39;Institut de technologie de la Colombie-Britannique, l&#39;Association médicale canadienne et l&#39;Ordre des Jésuites du Canada.</p>

<p>Paul Seaman (Métis), associé et chef du groupe Droit autochtone chez Gowling WLG, accueillera :</p>

<ul>
	<li><strong>Dr Alika Lafontaine</strong>&nbsp;(Métis), premier président autochtone de l&#39;Association médicale canadienne</li>
	<li><strong>Kory Wilson</strong>&nbsp;(membre de la Nation Kwakwaka&#39;wakw), directrice exécutive des initiatives et des partenariats autochtones à l&#39;Institut de technologie de la Colombie-Britannique, et conseillère spéciale auprès du ministre de l&#39;Éducation de la Colombie-Britannique</li>
	<li><strong>Fr Peter Bisson</strong>, S.J., ancien président (supérieur provincial) des Jésuites du Canada anglais, et directeur actuel de leur processus de décolonisation</li>
</ul>

<p>Entendre les stratégies de ces personnes à la tête d&#39;initiatives de décolonisation et de réconciliation sur le plan institutionnel, nous permettra d&#39;en ressentir les échos et de s&#39;en inspirer, et ce, non seulement dans le milieu juridique, mais dans nos propres vies également, afin que nous soyons des participants actifs de ce processus indispensable.</p>

<p>Nous sommes impatients de vous voir nombreux à cette discussion qui promet d&#39;être des plus stimulantes.</p>

<p><em>Cet événement sera présenté en anglais avec un service d&#39;interprétation simultanée en français.</em></p>

<h2>Information FPC</h2>

<p><strong>Barreau de l&#39;Ontario :</strong>&nbsp;cette présentation compte pour 1 heure de crédit en&nbsp;<strong>professionnalisme en matière d&#39;égalité, de diversité et d&#39;inclusion</strong><br />
<strong>Barreau du Québec :</strong>&nbsp;cette présentation compte pour 1 heure de crédit&nbsp;<strong>FPC en droit de fond</strong><br />
<strong>Barreau de la Colombie-Britannique :</strong>&nbsp;cette présentation compte pour 1 heure de crédit en&nbsp;<strong>gestion de la pratique et responsabilité professionnelle</strong></p>

<p><img alt="""" src=""~/getmedia/8e9e8aa5-0af6-4561-a3c7-9fdbe3aa99fb/edi-french.png.xml"" /></p>

<p><em>Cette organisation est reconnue à titre de fournisseur agréé de formation professionnelle continue en matière de professionnalisme par le Barreau de l&#39;Ontario.</em></p>

<h2>À propos de nos conférenciers et de notre animateur</h2>

<ul>
	<li><strong>Dr&nbsp;Alika Lafontaine :</strong>&nbsp;Né et élevé dans le territoire visé par le Traité numéro 4, dans le sud de la Saskatchewan, le Dr Alika Lafontaine est un médecin métis primé et le premier président élu autochtone désigné de l&#39;Association médicale canadienne (AMC). Présentant fréquemment des conférences sur l&#39;impact des préjugés, de la discrimination et du racisme sur la qualité des soins offerts aux patients, le Dr Lafontaine a codirigé, de 2013 à 2017, l&#39;Alliance en santé des Autochtones (un projet de transformation des systèmes de santé impliquant 150 Premières Nations et plusieurs organisations nationales de santé). En 2020, il a cofondé la plateforme en ligne SafeSpace Networks, conçue pour aider les patients marginalisés à s&#39;y retrouver dans les systèmes de soins de santé, établir un climat de confiance et réduire les préjudices subis par les patients.</li>
	<li><strong>Kory Wilson :&nbsp;</strong>Kory Wilson est directrice générale des Initiatives et Partenariats Autochtones à l&#39;Institut de technologie de la Colombie-Britannique (BCIT). Avocate, membre de la nation Kwakwaka&#39;wakw, écrivaine, conférencière et pédagogue, Mme Wilson a joué un rôle déterminant dans la création de six guides d&#39;autochtonisation pour l&#39;organisation BCcampus et a récemment créé et lancé l&#39;initiative BCIT Indigenous Vision. Très sollicitée en tant que militante de la réconciliation, Mme Wilson aide le BCIT en offrant des formations sur la sensibilisation aux enjeux autochtones et en fournissant des conseils en matière d&#39;activités culturelles, d&#39;examen de politiques, d&#39;embauche et de soutien aux étudiants. En tant que membre fondateur du comité consultatif du président de l&#39;Université de la Colombie-Britannique, Mme Wilson a participé à l&#39;élaboration de deux plans stratégiques visant les Autochtones pour l&#39;Université.</li>
	<li><strong>Fr Peter Bisson :</strong>&nbsp;Peter Bisson, S.J., est un prêtre catholique membre de la Compagnie de Jésus, congrégation connue sous le nom de Jésuites. Originaire du Nouveau-Brunswick, il travaille maintenant à Ottawa en tant qu&#39;assistant du provincial des Jésuites pour la justice sociale, l&#39;écologie et les relations autochtones. À ce titre, il soutient le travail des Jésuites au Canada en matière de justice sociale et conseille le chef (le &laquo; provincial &raquo;) des Jésuites au Canada sur ces questions. Une grande partie de son travail porte sur des questions de réconciliation et de décolonisation. De 2012 à 2018, il a agi à titre de provincial des Jésuites dans les régions anglophones du Canada et a représenté les Jésuites dans le cadre des réunions de la Commission de vérité et de réconciliation avec les signataires de la Convention de règlement relative aux pensionnats indiens.</li>
	<li><strong>Paul Seaman :&nbsp;</strong>Paul Seaman est associé au bureau de Gowling WLG à Vancouver et chef du groupe Droit autochtone du cabinet. Sa pratique étant axée sur les projets impliquant l&#39;obligation de la Couronne de consulter les peuples autochtones, il représente les clients autochtones devant les tribunaux, au sein de conseils d&#39;administration et aux tables de négociation. Paul est un fier membre de la Fédération des Métis du Manitoba, et c&#39;est lui qui animera notre discussion.</li>
</ul>
",NULL,NULL,59:43.0,https://sites-gowlingwlg.vuturevx.com/106/6622/landing-pages---french/event-registration-(blank-form)-fr.asp,NULL,RSVP,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,264f3cac-2ddb-4c4e-8048-ee0d63d1e68d,NULL,NULL,NULL,Webinaires,NULL,Webinaire,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada;GWLG.Global,0,NULL,Conférencier,NULL,NULL,NULL,Droit autochtone,NULL,NULL,~/getmedia/35780e1b-e7a7-44ce-92e7-8c3a37e51622/220615-Reconciliation-and-Decolonization-event-FR.jpg.xml?width=1272&height=675&ext=.jpg,NULL,NULL
526,/Events/2022/Collision-Conference,fr-CA,754A2530-71E0-4D38-BADE-6DD5113D7C92,Conference Collision,Gowling WLG participe à L'évévenement Collision 2022,Gowling WLG est le fier commanditaire national de la Conférence Collision de 2022 (en anglais seulement) et nous avons hâte de vous rencontrer au Centre Enercare à Toronto du 20 au 23 juin. ,~/getmedia/56f0d7b3-3d59-45e0-81c2-03251cea66a0/220614-collision-conference-tech-page.jpg.xml?width=930&height=450&ext=.jpg,Orange and blue technology background circuit board and code,GWLG.Conference,36:40.0,36:57.0,NULL,NULL,CST,0,NULL,"<p align=""left"">Multiplication des fusions-acquisitions, adoption du télétravail ou du mode hybride, défis de la chaîne d&#39;approvisionnement, pénurie de travailleurs qualifiés&hellip; Dans le secteur de la technologie au Canada, la pandémie entraîne tout un lot de nouveaux défis, mais aussi d&#39;occasions. Votre entreprise est-elle prête pour la suite des choses?</p>

<p align=""left"">Que vous soyez une ambitieuse entreprise en démarrage, une société bien établie ou une entité inscrite à la bourse, l&#39;équipe mondiale Technologie de Gowling&nbsp;WLG est prête à découvrir vos objectifs d&#39;affaires et à vous aider à les réaliser. Notre équipe de professionnels est à même d&#39;élaborer des stratégies juridiques novatrices parfaitement adaptées à vos besoins particuliers, quels qu&#39;ils soient.</p>

<p align=""left"">Gowling&nbsp;WLG est le fier commanditaire national de la <a href=""https://collisionconf.com/"" target=""_blank"">Conférence Collision de&nbsp;2022</a> (en anglais seulement) et nous avons hâte de vous rencontrer au Centre Enercare à Toronto du 20&nbsp;au 23&nbsp;juin. Voici ce que nous vous proposons&nbsp;:</p>

<h2 align=""left"">Classe de maître&nbsp;: l&#39;avenir des systèmes bancaires ouverts</h2>

<p align=""left"">Les systèmes bancaires ouverts piquent votre curiosité? Ne manquez pas notre classe de maître, <a href=""https://collisionconf.com/masterclasses"" target=""_blank"">The Future of&nbsp;Banking: What Open&nbsp;Banking Means for You</a> (<em>Le futur des systèmes bancaires ouverts et ce qu&#39;ils signifient pour vous</em>, en anglais seulement), le <strong>jeudi&nbsp;23&nbsp;juin de 15&nbsp;h à 15&nbsp;h&nbsp;45.</strong> Présentée par l&#39;associée de Gowling&nbsp;WLG <a href=""https://gowlingwlg.com/fr/people/parna-sabet-stephenson/#panel-button1"" target=""_blank"">Parna Sabet-Stephenson</a>, cette classe de maître présentera un survol des systèmes bancaires ouverts, leur fonctionnement, et leur signification pour le secteur financier du Canada.</p>

<h2 align=""left"">Présence d&#39;<em>Invest in Hamilton</em> (investir à Hamilton) à la Conférence Collision de&nbsp;2022</h2>

<p align=""left"">Des membres de notre bureau de Hamilton seront sur place à un kiosque. De concert avec des représentants d&#39;<a href=""https://investinhamilton.ca/"" target=""_blank"">Invest in Hamilton</a> (en anglais), ils feront la promotion de cette ville ontarienne auprès de sociétés et d&#39;investisseurs internationaux, et répondront aux questions relatives à la propriété intellectuelle, au droit des sociétés, au financement, au droit de la protection des données, et ils aborderont des sujets liés à la technologie. Passez nous voir au <strong>Kiosque No&nbsp;0504-02!</strong></p>

<h2 align=""left"">Invitation à rencontrer le groupe mondial Technologie de Gowling&nbsp;WLG</h2>

<p align=""left"">Les clients peuvent se fier au groupe mondial Technologie de Gowling&nbsp;WLG qui possède connaissance du marché, expérience juridique et sens aigu des affaires pour aider leurs entreprises à prendre leur envol et à protéger leur caractère unique.</p>

<p align=""left"">Vous cherchez à comprendre les plus récentes percées de la chaîne de blocs, à développer de nouvelles formes d&#39;intelligence artificielle ou à gérer les cyberrisques? Nous aidons les grands innovateurs technologiques à élaborer de judicieuses stratégies d&#39;affaires, à faire exercer et rentabiliser leurs droits de propriété intellectuelle (PI), à investir dans des entreprises, ainsi qu&#39;à acquérir et se dessaisir de participations dans ces dernières.</p>

<p align=""left"">Prêt à en discuter? Communiquez avec l&#39;un de nos membres du groupe mondial Technologie de Gowling&nbsp;WLG dont le nom figure ci-dessous ou au moyen de l&#39;appli de la Conférence Collision.</p>
",NULL,NULL,17:16.0,https://collisionconf.com/tickets/attendees,NULL,Book tickets,NULL,cdfc9b50-74c2-4af5-9508-342935f81ccd,NULL,NULL,425a9689-d70c-46ff-b7b6-8994bb782c5f;300e471b-5cfe-45e3-bb75-6cc00bbdf27b;3cb7b903-24be-4d44-b671-e9e9bb0f7efd;3b6c194b-1e76-443d-80ba-309e4b6d23fd;09489ca3-dabc-43e2-82d0-f731d4dbe16d;a4fe635b-9f26-4434-a81b-99b8850b60c9;e7440021-23c5-406e-8b1c-35d20b07cf59;721101f8-3e32-4089-89d7-36e80c1dcdd4;7669672b-04fc-4c7a-a4cd-16cfb6e777ab,NULL,Conférence,"Parna Sabet-Stephenson, Cindy Kou",NULL,NULL,GWLG.Events,NULL,~/getmedia/6418c3d0-1733-4d2d-837b-3bf091b0a560/220614-collision-conference-tech-hero.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/fdb906fb-4d18-477f-94b1-8b9c20b03ce6/220614-collision-conference-tech-mobile.jpg.xml?width=550&height=500&ext=.jpg,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,Participants de Gowling WLG à la Conférence Collision,NULL,NULL,Technologie,NULL,NULL,NULL,NULL,NULL,NULL
529,/Events/2022/Collecting-Protecting-and-Commercialising-Data,en-GB,5A2FADF7-8DE0-4B5D-8875-325A40607757,"Collecting, Protecting and Commercialising Data ","Collecting, Protecting and Commercialising Data ","Gowling WLG are running a unique online event on Wednesday 6th July from 12-1pm on collecting, protecting and commercialising data. ",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,00:00.0,00:00.0,12:00,13:00,BST,0,NULL,"<p>Gowling WLG are running a unique online event on Wednesday 6th July from 12-1pm on collecting, protecting and commercialising data.</p>

<p>The event will bring together an esteemed panel of speakers from the Birmingham 2022 Commonwealth Games to explore how the delivery of a large scale international sporting event has:</p>

<ul>
	<li>Used technology in innovative ways to enhance spectator experience</li>
	<li>Utilised the collection of data to help shape and maximise commercial revenue</li>
	<li>Overcome issues on data collection and storage as a result of working with so many different stakeholders/3rd parties</li>
	<li>Built and developed a global fan base whilst complying with data protection regulation.</li>
	<li>Collected data safely from merchandising partners.</li>
	<li>Converted IP rights into commercial opportunities</li>
	<li>Maximised website conversion rates via digital channels.</li>
</ul>

<p>Our esteemed panel for this event includes Louise Dodds, Head of Events, Birmingham 2022 Commonwealth Games; Sarah Griffiths, Commonwealth Games Federation, Digital Delivery Programme Manager and Alex Balzaretti, Commonwealth Games Federation, Partnerships Strategy and Projects Senior Manager.</p>

<p>The panel discussion will be followed by a live Q and A.</p>

<p><a href=""https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?RSID=YoXeWRTVWP1BZBxYIHIsGhwpprE4QEO0GgpVMIitmljiWe2iA5QInY4eJs7YhERY"" target=""_blank"">Please use this RSVP link to secure your place on the webinar</a>.</p>
",NULL,NULL,48:19.0,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?RSID=YoXeWRTVWP1BZBxYIHIsGhwpprE4QEO0GgpVMIitmljiWe2iA5QInY4eJs7YhERY,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,NULL,NULL,d3e0fa3e-1011-4fe0-b62a-88c920f62d49,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,NULL,Speaker(s),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
531,/Events/2022/Presentations-hybrides-emploi-droit-personne-1,fr-CA,A53993DF-DB82-4B96-8711-5ED3649393FF,Presentations hybrides emploi droit personne,"Série de présentations hybrides – Travail, emploi et droits de la personne","Après plus de deux ans de pandémie, le visage du monde du travail a bien changé. Une nouvelle normalité s’est installée, de nouvelles obligations ont été imposées aux employeurs et un nouveau paysage législatif a vu le jour.",~/getmedia/81cbfcd1-2f1e-4c30-8961-9298a8e0352f/220630-Mtl-ELE-hybrid-seminars.jpg.xml?width=930&height=450&ext=.jpg,View of a computer screen with a webinar in progress,GWLG.Conference,05:08.0,NULL,9 h à 10 h,NULL,EST,0,NULL,"<p>Après plus de deux ans de pandémie, le visage du monde du travail a bien changé. Une nouvelle normalité s&rsquo;est installée, de nouvelles obligations ont été imposées aux employeurs et un nouveau paysage législatif a vu le jour.</p>

<p>Au cours de trois présentations hybrides, nos avocats traiteront de divers sujets dont les congédiements déguisés,&nbsp;les modifications récemment apportées à la&nbsp;<em>Charte de la langue française</em>&nbsp;et celles projetées par le gouvernement fédéral à la&nbsp;<em>Loi sur les langues officielles</em>&nbsp;et les nouvelles exigences découlant des modifications à la législation en matière de santé et sécurité au travail. Nos juristes discuteront également des décisions marquantes de la dernière année et des nouvelles tendances en droit du travail.</p>

<p>Pour en savoir plus sur ces enjeux en constante évolution, joignez-vous à notre équipe chevronnée du groupe Travail, emploi et droits de la personne de Gowling WLG dans le cadre de notre série d&rsquo;événements en personne ou en ligne.</p>

<p><strong>Première presentation</strong></p>

<p style=""margin-left:0.3in;"">14 sept. 2022 :&nbsp; Congédiement déguisé : jusqu&rsquo;où peut-on aller dans nos modifications aux conditions de travail?</p>

<p><strong>Deuxième presentation</strong></p>

<p style=""margin-left:0.3in;"">21 sept. 2022 : Langues officielles et santé et sécurité au travail : un nouveau paysage législatif</p>

<p><strong>Troisième presentation</strong></p>

<p style=""margin-left:0.3in;"">28&nbsp;sept. 2022 : Décisions marquantes de la dernière année</p>

<p>Chaque formation est reconnue en vertu du <i>Règlement de l&#39;Ordre des conseillers en ressources humaines agréés concernant la formation continue</i> pour une durée d&#39;une heure (1 h).</p>

<p>Formations dont l&#39;admissibilité a été confirmée par le Barreau du Québec aux fins de la formation continue obligatoire, pour une durée de 1 heure chacune.</p>
",NULL,NULL,17:43.0,https://sites-gowlingwlg.vuturevx.com/99/6584/landing-pages---french/event-registration-(blank-form)-fr.asp,NULL,S'inscrire à ces présentations,C0068CFF-B410-4701-8BAE-904CB487774D,NULL,d8837737-40d2-4472-8a9e-ba4101ec2105,358f50ad-2a97-425e-a9e1-e0cc6b0e1b1b,e72ca6ad-e2e0-446b-9914-9eb2ed87e5b9;cafa9f0b-622e-4d36-bf68-10eaae27cff6;6afdd62d-3166-4623-98dc-e0cdea6d1b74;aac7181f-061a-4203-86bf-3d3c742afce5;0db113a5-e700-4e3c-923e-8ce14ce684c9;55fe5486-16b8-4eff-8d24-4d3c9963bb7d,NULL,Conférence,NULL,Hybrid event - Fr,56656,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/99/6584/landing-pages---french/event-registration-(blank-form)-fr.asp,S'inscrire à ces présentations,GWLG.Canada,0,D4175C8F-4D3F-4641-A45F-20EC57DC60F9,Conférenciers,NULL,NULL,NULL,"Travail, emploi et droits de la personne",L'avenir est déjà là : S'adapter à la nouvelle ère en matière d'emploi <br>au Canada,NULL,~/getmedia/5cc53b20-bb3a-4ca3-a016-38f147b8d529/220630-Mtl-ELE-hybrid-seminars_1.jpg.xml?width=930&height=450&ext=.jpg,NULL,_Blank
532,/Events/2022/Gowling-WLG-Tech-Forum,fr-CA,EE79B826-E47B-476D-99AC-421AB1B8FEFD,Forum Tech de Gowling WLG,Forum Tech de Gowling WLG,"Nous vivons dans un monde où les technologies numériques évoluent à toute vitesse et, prêtes ou non, bon nombre d'entreprises sont appelées à faire le grand saut dans cette nouvelle ère. ",~/getmedia/9ebc854b-d943-4113-a1e0-7e8a0b024f8b/220711-digital.jpg.xml?width=930&height=450&ext=.jpg,Binary code flowing on a page,GWLG.Conference,00:00.0,00:00.0,8 h 30,12 h,EDT,0,NULL,"<p>Nous vivons dans un monde où les technologies numériques évoluent à toute vitesse et, prêtes ou non, bon nombre d&#39;entreprises sont appelées à faire le grand saut dans cette nouvelle ère. Si la numérisation laisse entrevoir de nouvelles possibilités, elle engendre aussi son lot de craintes et d&#39;appréhensions. Pour certains, utiliser des technologies telles l&#39;intelligence artificielle (IA)&nbsp;ou encore l&#39;informatique quantique présente des défis juridiques, politiques et économiques. La voie du progrès n&#39;est pas facile, et il est important pour les entreprises de comprendre les changements numériques afin de les anticiper et de s&#39;y adapter.</p>

<p>Nous vous invitons donc à une conférence où nos avocat.e.s et agent.e.s de brevets chevronné.e.s vous donneront des conseils et des outils pratiques pour comprendre la transformation numérique et tirer profit de ses infinies possibilités. Cette présentation en quatre volets vous permettra d&#39;optimiser vos investissements technologiques afin d&#39;en faire un avantage concurrentiel, de mieux comprendre les technologies perturbatrices, et plus encore.</p>

<p>Soyez des nôtres pour cette matinée où la technologie et le numérique seront au cœur des discussions avec notre groupe multidisciplinaire de professionnel.le.s, et plantez vos repères pour le futur avec Gowling WLG.</p>

<p>Les présentations seront principalement en français; ceci dit, la documentation afférente et les périodes de questions seront en français et en anglais. <em>While the presentations will be primarily in French, the supporting documentation and the Q&amp;A sessions will be in English and in French.</em></p>

<p>Formation dont l&#39;admissibilité a été confirmée par le Barreau du Québec aux fins de la formation continue obligatoire, pour une durée de 2 heures et demie.</p>

<p><strong>Lieu de la conférence:&nbsp;</strong><br />
Fairmont Le Reine Elizabeth<br />
​Espace C2<br />
900, boulevard René-Lévesque Ouest<br />
Montréal QC H3B 4A5</p>

<table border=""1"" cellpadding=""0"" cellspacing=""0"">
	<tbody>
		<tr>
			<td style=""width:100px;"">
			<p align=""left""><strong>Heure </strong></p>
			</td>
			<td style=""width:400px;"">
			<p align=""left""><strong>Programme</strong></p>
			</td>
		</tr>
		<tr>
			<td style=""width:100px;"">
			<p align=""left""><strong>8 h 30</strong></p>
			</td>
			<td style=""width:332px;"">
			<p><strong>Accueil et petit-déjeuner</strong></p>
			</td>
		</tr>
		<tr>
			<td style=""width:100px;"">
			<p align=""left""><strong>9 h</strong></p>
			</td>
			<td style=""width:332px;"">
			<p align=""left""><strong>Introduction</strong></p>
			</td>
		</tr>
		<tr>
			<td style=""width:100px;"">
			<p align=""left""><strong>9 h 10</strong></p>
			</td>
			<td style=""width:332px;"">
			<p align=""left""><strong>Littératie numérique : l&#39;essentiel à savoir sur les technologies perturbatrices</strong></p>

			<p align=""left""><em>Jumeaux numériques et IA, informatique quantique&hellip; nous ferons un tour d&rsquo;horizon pour démystifier ces technologies perturbatrices dans le monde des affaires</em></p>
			</td>
		</tr>
		<tr>
			<td style=""width:100px;"">
			<p align=""left""><strong>9 h 50</strong></p>
			</td>
			<td style=""width:332px;"">
			<p align=""left""><strong>Protection des renseignements personnels et cybersécurité : considérations clés pour les entreprises dans un environnement juridique en évolution</strong></p>

			<p align=""left""><em>Les nouveaux développements législatifs sur les renseignements personnels et la cybersécurité au Québec et au fédéral ont un impact qui dépasse la simple conformité réglementaire. Quels sont les enjeux principaux pour les entreprises, y compris pour la gouvernance, les contrats clés et la valorisation? Parlons-en!</em></p>
			</td>
		</tr>
		<tr>
			<td style=""width:100px;"">
			<p align=""left""><strong>10 h 30</strong></p>
			</td>
			<td style=""width:332px;"">
			<p align=""left""><strong>Pause-réseautage</strong></p>
			</td>
		</tr>
		<tr>
			<td style=""width:100px;"">
			<p align=""left""><strong>10 h 45</strong></p>
			</td>
			<td style=""width:332px;"">
			<p align=""left""><strong>Valorisation de vos investissements technologiques</strong></p>

			<p align=""left""><em>Les débouchés de la transformation numérique sont multiples : sachez comment optimiser vos investissements technologiques.</em></p>
			</td>
		</tr>
		<tr>
			<td style=""width:100px;"">
			<p align=""left""><strong>11 h 25</strong></p>
			</td>
			<td style=""width:332px;"">
			<p align=""left""><strong>Projets de transformation numérique : l&rsquo;innovation ouverte et en collaboration</strong></p>

			<p align=""left""><em>Discussion sur la façon dont la coopération entre entreprises et organismes de recherche et développement permet de créer de la valeur et de nouveaux modèles de propriété intellectuelle.</em></p>
			</td>
		</tr>
		<tr>
			<td style=""width:100px;"">
			<p align=""left""><strong>12 h</strong></p>
			</td>
			<td style=""width:332px;"">
			<p align=""left""><strong>Conclusion</strong></p>
			</td>
		</tr>
	</tbody>
</table>

<p>&nbsp;</p>

<h2>Conférencier.ère invité.e</h2>

<div class=""grid-container grid-container-inline"">
<div class=""grid-x"">
<div class=""small-12 medium-6 cell"">
<p><img alt=""Photo of Nicole Blanchard COO Evan Corp"" src=""~/getmedia/94d5ccef-244c-44e2-a993-94399e8a7d53/Nicole_Blanchard_EVAH_Corp.JPG.xml"" /></p>

<p><strong>Nicole Blanchard</strong><br />
Chef des operations<br />
EVAH Corp</p>
</div>

<div class=""small-12 medium-6 cell"">
<div class=""small-12 medium-6 cell"">
<p><img alt=""Photo of Frédéric Leduc"" src=""~/getmedia/81452bcd-4d84-40ed-970e-99820032486d/220902-frederic-leduc.jpg.xml"" /></p>

<p><strong>Frédéric Leduc</strong><br />
Chef de direction scientifique<br />
EVAH Corp</p>
</div>
</div>
</div>
</div>
",NULL,NULL,00:00.0,https://sites-gowlingwlg.vuturevx.com/99/6633/landing-pages---french/event-registration-(blank-form)-fr.asp,NULL,S'inscrire à cette conférence,C0068CFF-B410-4701-8BAE-904CB487774D,cdfc9b50-74c2-4af5-9508-342935f81ccd,NULL,NULL,7fb29160-44a7-4f27-b030-99ef5d9941cf;6e30f114-ee86-423f-9384-d8a75d75077c;0fe65d88-2f4b-401a-b90d-ea8ea4bdd72d;71b36166-89c4-4d85-a946-a3a0c4fe78dd;aac7181f-061a-4203-86bf-3d3c742afce5;b6ed6925-c14d-4c8c-81b4-6cd4d9d3fb05;598817e5-9958-47f6-ab08-1e875e3599b1;3b8f2ad5-7107-4a7e-81e1-2bc0d86cd798;13675fdd-3dfe-498f-b6cb-c66f52c5b9e9,NULL,Conférence,"Naïm Alexandre Antaki, Melissa Tehrani, George Elvira, Marc Tremblay, Olivier Lamoureux, Stefan Nasswetter, Mathieu Santos-Bouffard , Yasmina Boulahia , Philippe M. Duquette",Hybrid event - Fr,56656,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/99/6633/landing-pages---french/event-registration-(blank-form)-fr.asp,S'inscrire à cette conférence,GWLG.Canada,0,D4175C8F-4D3F-4641-A45F-20EC57DC60F9,Conférenciers de Gowling WLG,NULL,NULL,Technologie,NULL,NULL,NULL,~/getmedia/ed4ea367-812c-4bb0-96d3-f6d080e696f0/220711-forum-tech-social.jpg.xml?width=930&height=450&ext=.jpg,NULL,_Blank
533,/Events/2022/How-Designers-Approach-Sustainability,en-GB,60AAB3E2-6325-4653-82BA-DB787BDFD694,How Designers Approach Sustainability,London Design Festival 2022: How Designers Approach Sustainability,"Almost every designer is now focusing on sustainability as part of their brief. In our 10th annual collaboration with the London Design Festival, we present a cross section of the design world to discuss this vital issue.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Conference,00:00.0,00:00.0,14:00,18:00,GMT,0,NULL,"
<p>Almost every designer is now focusing on sustainability as part of their brief. Design influences how we live, work and play, so all designers must ask themselves: How can you make your design more sustainable whilst still bringing joy and excitement? And, sustainable designs can have many faces &ndash; ranging from green buildings to upcycling consumer goods to electric vehicles.</p>

<p>For the 10th consecutive year, our Head of Brands &amp; Designs, John Coldham, is offering designers a platform to engage and exchange with each other. This year we are inviting you to listen, learn and be inspired by:</p>

<ul>
	<li><strong>Minnie Moll</strong>, Chief Executive at the Design Council. She leads the Design for Planet mission, which helps address the climate crisis;</li>
	<li><strong>Trystan Farnworth</strong>, Customer &amp; Marketing Director, Aqua Libra Co. He is an &quot;executive change maker&quot; driving sustainability in the F&amp;B industry;</li>
	<li><strong>Martin Darbyshire</strong>, the CEO and co-founder of tangerine. He is also a former trustee of the Design Council and tutor at Central St Martins;</li>
	<li><strong>Natalie Davies</strong>, Managing Director of Ezee Group International Ltd. She designs and manufactures innovative products made from waste material;</li>
	<li><strong>Gemma Perry,</strong> owner of the design studio House of Solus. She is a bespoke jeweller with specialism in redesign of quality pieces and upcycling jewellery.</li>
</ul>

<p>Our event will take the form of a panel Q&amp;A, together with opportunities to network with other designers on our balcony overlooking the Thames in an afternoon that promises to be inspirational as well as enjoyable.</p>

<h2>Agenda</h2>

<table>
	<thead>
		<tr>
			<th>Time</th>
			<th>Agenda item</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>
			<p>14:00</p>
			</td>
			<td>
			<p>Welcome drinks and Networking</p>
			</td>
		</tr>
		<tr>
			<td>
			<p>14:45</p>
			</td>
			<td>
			<p>Panel discussion</p>
			</td>
		</tr>
		<tr>
			<td>
			<p>16:15</p>
			</td>
			<td>
			<p>Networking &amp; drinks</p>
			</td>
		</tr>
		<tr>
			<td>
			<p>18:00</p>
			</td>
			<td>
			<p>Event close</p>
			</td>
		</tr>
	</tbody>
</table>
","<p>This event is free of charge.</p>

<p>Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession. Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,00:00.0,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?RSID=6F-hjWvLQWOZsi5r8nG5kN83zI9vG95_eWCBWCJef443NkwQp3OLhCbhcwrTuzvU,NULL,Register for this event,9FBE191E-3BCF-45DE-A2BA-338BB194FC9D,NULL,aa72ea93-20f8-455a-8e77-6f6cea510684,NULL,9ff8fd1a-c2f5-4084-b72e-4aa02fdf3312,NULL,Conference,NULL,London,71,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,40ECBAEA-9783-479A-8EB9-9D39F577C01D,Speaker(s),NULL,NULL,NULL,"Trademarks, Brands & Designs",NULL,NULL,NULL,NULL,NULL
534,/Events/2022/Gowling-WLG-Tech-Forum,en-GB,EE79B826-E47B-476D-99AC-421AB1B8FEFD,Gowling WLG Tech Forum,Gowling WLG Tech Forum,"On September 8, join our multi-disciplinary panel of legal professionals for a unique morning conference that explores the current landscape of digitalization and disruption, and provides practical tools to help you extract the most value from your technology investments.",~/getmedia/9ebc854b-d943-4113-a1e0-7e8a0b024f8b/220711-digital.jpg.xml?width=930&height=450&ext=.jpg,Binary code flowing on a page,GWLG.Conference,00:00.0,00:00.0,8 h 30,12 h,EDT,0,NULL,"<p>Digital technologies are entering a new era, one defined by bold advances in artificial intelligence (AI), quantum computing, and the collection of consumer data, among other things. Across all sectors, such innovation presents endless opportunity &ndash; as well as significant legal, financial and political risk. As such, it is crucial that businesses understand this evolving space thoroughly if they are to remain competitive.</p>

<p>On September 8, join our multi-disciplinary panel of legal professionals for a unique morning conference that explores the current landscape of digitalization and disruption, and provides practical tools to help you extract the most value from your technology investments.</p>

<p>While presentations will be primarily in French, the supporting documentation and Q&amp;A sessions will be in both English and French.</p>

<h2>Guest speakers</h2>

<div class=""grid-container grid-container-inline"">
<div class=""grid-x"">
<div class=""small-12 medium-6 cell"">
<p><img alt=""Photo of Nicole Blanchard COO Evan Corp"" src=""~/getmedia/94d5ccef-244c-44e2-a993-94399e8a7d53/Nicole_Blanchard_EVAH_Corp.JPG.xml"" /></p>

<p><strong>Nicole Blanchard</strong><br />
Chief Operating Officer<br />
EVAH Corp</p>
</div>

<div class=""small-12 medium-6 cell"">
<div class=""small-12 medium-6 cell"">
<p><img alt=""Photo of Frédéric Leduc"" src=""~/getmedia/81452bcd-4d84-40ed-970e-99820032486d/220902-frederic-leduc.jpg.xml"" /></p>

<p><strong>Frédéric Leduc</strong><br />
Chief Scientific Officer<br />
EVAH Corp</p>
</div>
</div>
</div>
</div>
",NULL,NULL,00:00.0,https://sites-gowlingwlg.vuturevx.com/98/6686/landing-pages/event-registration-(blank-form).asp?sid=blankform,NULL,Register for this event,C0068CFF-B410-4701-8BAE-904CB487774D,cdfc9b50-74c2-4af5-9508-342935f81ccd,NULL,NULL,7fb29160-44a7-4f27-b030-99ef5d9941cf;6e30f114-ee86-423f-9384-d8a75d75077c;0fe65d88-2f4b-401a-b90d-ea8ea4bdd72d;71b36166-89c4-4d85-a946-a3a0c4fe78dd;aac7181f-061a-4203-86bf-3d3c742afce5;b6ed6925-c14d-4c8c-81b4-6cd4d9d3fb05;598817e5-9958-47f6-ab08-1e875e3599b1;3b8f2ad5-7107-4a7e-81e1-2bc0d86cd798;13675fdd-3dfe-498f-b6cb-c66f52c5b9e9,NULL,Conference,"Naïm Alexandre Antaki, Melissa Tehrani, George Elvira, Marc Tremblay, Olivier Lamoureux, Stefan Nasswetter, Mathieu Santos-Bouffard , Yasmina Boulahia , Philippe M. Duquette",Hybrid event - En,56656,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/98/6686/landing-pages/event-registration-(blank-form).asp?sid=blankform,Register,GWLG.Canada,0,D4175C8F-4D3F-4641-A45F-20EC57DC60F9,Gowling WLG Speakers,NULL,NULL,Tech,NULL,NULL,NULL,~/getmedia/ed4ea367-812c-4bb0-96d3-f6d080e696f0/220711-forum-tech-social.jpg.xml?width=930&height=450&ext=.jpg,NULL,_Blank
535,/Events/2022/Life-sciences-seminar-and-networking-event,en-GB,557A6F9D-67B7-425E-9A59-08ADDA68F004,Life sciences seminar and networking event,Life sciences seminar and networking event,Our Life Sciences team is pleased to announce its next in-person seminar and networking event is on 29th September.,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,29-09-2022 14:49,29-09-2022 14:49,14:00,17:00,BST,0,NULL,"<p>Our Life Sciences team is pleased to announce its next in-person seminar and networking event is on 29th September 2022.</p>

<p>It will focus on the topics that matter to you, with clear points of view, broad perspectives and practical advice.</p>

<p>Full details of this event will be coming soon, pre-register now to receive a formal invitation when it is announced.</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession. Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,28-09-2022 09:33,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?RSID=6F-hjWvLQWOZsi5r8nG5kN83zI9vG95_eWCBWCJef47vXLSpO9Unnn1M6zt0ZFRS,NULL,Register for this event,9FBE191E-3BCF-45DE-A2BA-338BB194FC9D,049c8249-7ff3-4ee3-a439-590f45fd5cff,NULL,NULL,74b9d0c7-28ad-4afc-8e4c-194a33906a90;8e016382-a73f-4aba-8339-02f14b8a79bb,NULL,Seminar,"Jenny Davies, Patrick Duxbury",London,71,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,95EC9477-4594-4332-A463-E612BD16CA0C,Speaker(s),NULL,9fbe191e-3bcf-45de-a2ba-338bb194fc9d,Life Sciences,NULL,NULL,London,NULL,NULL,NULL
536,/Events/2022/Energy-Innovators-Roundtable-1,en-GB,4DECEE87-36F5-4FB0-A31F-7F3AD824DD21,Energy Innovators Roundtable #1,Energy Innovators Roundtable Series | Germany in the Age of Transition,"Join Her Excellency Sabine Sparwasser, Ambassador of Germany to Canada, along with members of Gowling WLG and energy industry leaders, as they examine how the Russian war in Ukraine has hilighted the urgent need for renewable energy sources in Germany and the rest of Europe.",~/getmedia/dadcec9a-08b9-4cc3-be1f-41229e4024f0/220408-electric-vehicle-charging.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Seminar,15-09-2022 05:00,15-09-2022 05:00,08:00 a.m.,10:00 a.m.,EDT,1,1.5 hours,"<p>The German Climate Change Act aims for greenhouse gas neutrality by 2045. Between 2023-2026,&nbsp;the German government plans to spend &euro;177.5B on climate protection measures and related upgrades to the German economy. The upcoming winter promises to be a challenging period for much of Europe, as the regime of Russian President Vladimir Putin continues to disrupt the supply of natural gas to the continent. Allied nations must draw upon an array of energy resources, financial tools,&nbsp;technical solutions, and public policy options in order to wean themselves off their reliance on Russian energy.</p>

<p>Canada,&nbsp;like Germany,&nbsp;aims be at the forefront of the global energy transition,&nbsp;and will have a crucial role to play in this undertaking. Can our investment and know-how in wind,&nbsp;solar, storage, hydrogen, advanced grid operations, and other low-carbon energy system solutions help Europe navigate both the global climate crisis and geopolitical upheaval on its doorstep?</p>

<p>Join Her Excellency Sabine Sparwasser, Ambassador of Germany to Canada,&nbsp;along with members of Gowling WLG and energy industry leaders, as they examine how the Russian war in Ukraine has hilighted the urgent need for renewable energy sources in Germany and the rest of Europe.</p>

<p>In doing so,&nbsp;they will consider how key programs, policy innovations and joint initiatives between Germany and Canada are helping Europe respond to such changes &ndash;&nbsp;while also accelerating the continent&#39;s energy transition.</p>

<h2>Speakers</h2>

<p>Moderators</p>

<ul>
	<li>Jacques J.M. Shore, C.M. - Partner, Gowling WLG</li>
	<li>Thomas J. Timmins - Partner &amp; Leader of the Energy Sector Group, Gowling WLG</li>
</ul>

<p>Panelists</p>

<ul>
	<li>Sabine Sparwasser -&nbsp;Ambassador of Germany to Canada</li>
	<li>Nicolai Pogadl -&nbsp;Head, German Secretariat of the Energy Partnership with Canada</li>
	<li>Dr. Daniel Perlzweig -&nbsp;Director of&nbsp;International Development, Gowling WLG (Germany)</li>
</ul>

<h2>CPD Information</h2>

<p>This program is eligible for up to 1.5 hours of substantive CPD credits with the LSO,&nbsp;the LSBC and the Barreau du Québec.&nbsp;If you indicate on your registration form that a certificate of participation is required,&nbsp;we will email you your certificate after the session.</p>
",NULL,NULL,15-09-2022 13:00,https://sites-gowlingwlg.vuturevx.com/103/6699/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,96095DC0-6261-4B55-A0C7-0995037BEF43,f1e960f5-8231-4c56-b7bf-9898ebb538c5,NULL,NULL,4f7f399d-4924-4c9f-aa7c-2fdc3c2c77a3;4c3c2534-e644-427f-9b61-e7cd1aec53cf,NULL,Seminar,"Jacques J.M. Shore, C.M., Thomas J. Timmins",Gowling WLG Toronto,56909,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/103/6699/landing-pages/event-registration-(blank-form).asp,Register now,GWLG.Canada,0,0CDA2C7E-BFD7-48AD-991D-C46DBB4E55AB,Gowling WLG Speakers,NULL,NULL,Energy,NULL,NULL,NULL,~/getmedia/f2e4c5a3-bb77-40f6-aa97-dc82d854faa2/220822-energy-innovators-roundtable-germany.jpg.xml?width=1272&height=675&ext=.jpg,NULL,_Blank
537,/Events/2022/ThinkHouse-Regulation-72-Procurement-Masterclass,en-GB,8F66F5E2-3DC0-4CCC-865A-D59546869092,ThinkHouse - Regulation 72 Procurement Masterclass,ThinkHouse Procurement Masterclass - Regulation 72 ,"In our next ThinkHouse Procurement Masterclass, we will be looking at the part of the public procurement regime which deals with changes to contracts during their lifetime: Regulation 72 of the Public Contracts Regulations 2015 (as amended).",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,37:12.0,37:17.0,10:00,11:00,BST,1,1,"<p>In our next ThinkHouse Procurement Masterclass, we will be looking at the part of the public procurement regime which deals with changes to contracts during their lifetime: Regulation 72 of the Public Contracts Regulations 2015 (as amended).</p>

<p>This is an area particularly fraught with difficulty. Regulation 72 leaves much room for doubt and differing interpretations as to precisely when modifications to public contracts require a fresh procurement, and when they do not. Perhaps oddly, there is not a huge body of case-law on the topic to help aid interpretation.</p>

<p>After looking at Regulation 72, we will include in the session our usual quarterly roundup of where things are up to with the 2022 Procurement Bill &ndash; the proposed statute which aims to rewrite (and simplify) our regulated procurement regime.</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession. Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,00:00.0,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?RSID=hswI0KXP7WwBpxVlSbirRRIkjqLLqZIOQJWLfZ7a60QtaxGz378_yipxqGF8GBP5,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,5ad41b49-d460-489a-95b9-84c854eda6f1,311e6350-b4a5-4f58-8201-230ac9fc70b5;a7ba0b1b-cbe3-4b6d-bb8e-5835b1fbb08a,a143cbfd-d333-42a0-89a6-7287894464f1,503e49eb-bfc5-4803-a856-7fcbac77a38a,NULL,Webinar,Christopher Brennan,Webinar,34471,GWLG.Events,NULL,~/getmedia/5d57b23c-f4d3-44e3-a08e-7ee56360fd71/thinkhouse-snr-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/27fda93c-8849-4d7e-a292-bcc5eb1e7896/thinkhouse-snr-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,NULL,Government Contracting & Public Sector ,"Procurement, Public Procurement",ThinkHouse,NULL,NULL,NULL,NULL
538,/Events/2022/Protecting-the-scheme-in-a-corporate-take-over,en-GB,C70B9AF3-611D-46D5-AB15-AB55CBDD9A72,Protecting the scheme in a corporate take-over,Protecting the scheme in a corporate take-over situation,Elizabeth Gane will chair this discussion on how trustees can protect their scheme in a corporate take-over situation.,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,10:33.0,10:33.0,12:00,13:00,BST,1,1,"<p>Following on from Vol.1, our next series of live webinars are designed to help trustees understand how they can protect their members and themselves in the following situations: (i) when facing a corporate take-over; (ii) <a href=""~/en/events/2022/protecting-the-scheme-in-a-distressed-employer/"">dealing with a distressed employer</a>; and (iii) <a href=""~/en/events/2022/protecting-the-scheme-on-a-risk-transfer/"">from the risk of liabilities arising after a pension scheme has been bought out</a>.</p>

<p>The three sessions, which will be held in mid/late September, will each involve a discussion between Gowling WLG pensions experts and guest speakers who have experience in dealing with the particular issue in question.</p>

<p>Elizabeth Gane will chair this discussion on how trustees can protect their scheme in a corporate take-over situation. Maddy Frost will cover trustees&#39; legal duties and advise on what trustees should and shouldn&#39;t do. Richard Hawkins will share practical suggestions for trustees based on his experience as a G4S trustee.</p>

<h2>Speakers</h2>

<ul>
	<li>Elizabeth Gane, Head of Pensions at Gowling WLG</li>
	<li>Maddy Frost, Legal Director at Gowling WLG</li>
	<li><a href=""https://www.linkedin.com/in/richard-hawkins-a39b27b/?originalSubdomain=uk"" target=""_blank"">Richard Hawkins</a>, Deputy Chair of Trustee and ex-Director of G4S.</li>
</ul>
","<p>This event is free of charge.</p>

<p>Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession. Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,00:36.0,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?RSID=bdQCz4VYcgKuu_fE6ImLxSTXs_d2lGoPCrhZh4JN7U4H0isw3CZ6EPwQKCZhu_oy,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,a19c4c5e-c05a-4fa5-95aa-c5a274279d8c,NULL,ba2d9a11-808e-48c9-aec4-0c9d2ef8b403;ff8e1a8b-903b-4c8e-97a9-46b6ab4b3fae,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,"<h2>Scheme Sessions Vol2.2022</h2>
",~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,311E4011-F5C1-4BF1-A135-A720BFE33863, ,NULL,NULL,NULL,Pensions,NULL,NULL,NULL,NULL,NULL
539,/Events/2022/Protecting-the-scheme-in-a-distressed-employer,en-GB,520AE214-1246-40DA-BA35-0BE1DAEB74FF,Protecting the scheme in a distressed employer,Protecting the scheme in a distressed employer situation,Jason Coates will be chairing this second session focusing on protecting the scheme and its members in a distressed employer situation.,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,10:33.0,10:33.0,12:00,13:00,BST,1,1,"<p>Following on from Vol.1, our next series of live webinars are designed to help trustees understand how they can protect their members and themselves in the following situations: (i) when facing a corporate take-over; (ii) dealing with a distressed employer; and (iii) <a href=""~/en/events/2022/protecting-the-scheme-on-a-risk-transfer/"">from the risk of liabilities arising after a pension scheme has been bought out</a>.</p>

<p>The three sessions, which will be held in mid/late September, will each involve a discussion between Gowling WLG pensions experts and guest speakers who have experience in dealing with the particular issue in question.</p>

<p>Jason Coates will be chairing this second session focusing on protecting the scheme and its members in a distressed employer situation. Rachel Croft will discuss her experience in this situation and Tom Pringle will look at the steps trustees can take to protect their members in the context of the duties on company directors and the interests of other creditors and stakeholders in these circumstances.</p>

<h2>Speakers</h2>

<ul>
	<li>Jason Coates, Pensions Partner at Gowling WLG</li>
	<li>Tom Pringle, Restructuring &amp; Insolvency Partner at Gowling WLG</li>
	<li><a href=""https://www.linkedin.com/in/rachel-croft-9b169011/?originalSubdomain=uk"" target=""_blank"">Rachel Croft</a>, Director, Independent Trustee Services.</li>
</ul>
","<p>This event is free of charge.</p>

<p>Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession. Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,00:00.0,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?RSID=bdQCz4VYcgKuu_fE6ImLxSTXs_d2lGoPCrhZh4JN7U4H0isw3CZ6EPwQKCZhu_oy,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,a19c4c5e-c05a-4fa5-95aa-c5a274279d8c,NULL,91c9c57f-d1b5-4113-862f-60addeffaa4f;453e01a7-5d2e-4ac3-93d5-96ff46cb4607,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,"<h2>Scheme Sessions Vol2.2022</h2>
",~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,311E4011-F5C1-4BF1-A135-A720BFE33863, ,NULL,NULL,NULL,Pensions,NULL,NULL,NULL,NULL,NULL
541,/Events/2022/Energy-Innovators-Roundtable-1,fr-CA,4DECEE87-36F5-4FB0-A31F-7F3AD824DD21,Energy Innovators Roundtable #1,L'Allemagne à l'ère de la transition (disponible en anglais),"Join Her Excellency Sabine Sparwasser, Ambassador of Germany to Canada, along with members of Gowling WLG and energy industry leaders, as they examine how the Russian war in Ukraine has hilighted the urgent need for renewable energy sources in Germany and the rest of Europe.",~/getmedia/dadcec9a-08b9-4cc3-be1f-41229e4024f0/220408-electric-vehicle-charging.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Seminar,15-09-2022 05:00,15-09-2022 05:00,08:00 a.m.,10:00 a.m.,EDT,1,1.5 hours,"<p>The German Climate Change Act aims for greenhouse gas neutrality by 2045. Between 2023-2026,&nbsp;the German government plans to spend &euro;177.5B on climate protection measures and related upgrades to the German economy. The upcoming winter promises to be a challenging period for much of Europe, as the regime of Russian President Vladimir Putin continues to disrupt the supply of natural gas to the continent. Allied nations must draw upon an array of energy resources, financial tools,&nbsp;technical solutions, and public policy options in order to wean themselves off their reliance on Russian energy.</p>

<p>Canada,&nbsp;like Germany,&nbsp;aims be at the forefront of the global energy transition,&nbsp;and will have a crucial role to play in this undertaking. Can our investment and know-how in wind,&nbsp;solar, storage, hydrogen, advanced grid operations, and other low-carbon energy system solutions help Europe navigate both the global climate crisis and geopolitical upheaval on its doorstep?</p>

<p>Join Her Excellency Sabine Sparwasser, Ambassador of Germany to Canada,&nbsp;along with members of Gowling WLG and energy industry leaders, as they examine how the Russian war in Ukraine has hilighted the urgent need for renewable energy sources in Germany and the rest of Europe.</p>

<p>In doing so,&nbsp;they will consider how key programs, policy innovations and joint initiatives between Germany and Canada are helping Europe respond to such changes &ndash;&nbsp;while also accelerating the continent&#39;s energy transition.</p>

<h2>Speakers</h2>

<p>Moderators</p>

<ul>
	<li>Jacques J.M. Shore, C.M. - Partner, Gowling WLG</li>
	<li>Thomas J. Timmins - Partner &amp; Leader of the Energy Sector Group, Gowling WLG</li>
</ul>

<p>Panelists</p>

<ul>
	<li>Sabine Sparwasser -&nbsp;Ambassador of Germany to Canada</li>
	<li>Nicolai Pogadl -&nbsp;Head, German Secretariat of the Energy Partnership with Canada</li>
	<li>Dr. Daniel Perlzweig -&nbsp;Director of&nbsp;International Development, Gowling WLG (Germany)</li>
</ul>

<h2>CPD Information</h2>

<p>This program is eligible for up to 1.5 hours of substantive CPD credits with the LSO,&nbsp;the LSBC and the Barreau du Québec.&nbsp;If you indicate on your registration form that a certificate of participation is required,&nbsp;we will email you your certificate after the session.</p>
",NULL,NULL,15-09-2022 13:00,https://sites-gowlingwlg.vuturevx.com/103/6699/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,96095DC0-6261-4B55-A0C7-0995037BEF43,f1e960f5-8231-4c56-b7bf-9898ebb538c5,NULL,NULL,4f7f399d-4924-4c9f-aa7c-2fdc3c2c77a3;4c3c2534-e644-427f-9b61-e7cd1aec53cf,NULL,Séminaire,"Jacques J.M. Shore, Thomas J. Timmins",Gowling WLG Toronto,56909,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/103/6699/landing-pages/event-registration-(blank-form).asp,Register now,GWLG.Canada,0,0CDA2C7E-BFD7-48AD-991D-C46DBB4E55AB,Conférenciers de Gowling WLG,NULL,NULL,Énergie,NULL,NULL,NULL,~/getmedia/f2e4c5a3-bb77-40f6-aa97-dc82d854faa2/220822-energy-innovators-roundtable-germany.jpg.xml?width=1272&height=675&ext=.jpg,NULL,_Blank
542,/Events/2022/Employment-Labour-Equalities-Update,en-GB,C74E357C-2F87-47E3-BBAC-B3E14FE7D885,"Employment, Labour & Equalities: Update","Employment, Labour & Equalities: Update with Gowling WLG","Join members of Gowling WLG's Waterloo Region and Montreal Employment, Labour & Equalities Group for an in-person event, hosted by the Human Resources Professionals Association (HRPA), that explores important legal updates to keep HR practitioners in the know!",NULL,Office hallway with blue doors,GWLG.Seminar,29-09-2022 20:50,29-09-2022 20:50,8:00 a.m.,10:30 a.m.,EST,1,2 hours,"<p>Join members of Gowling WLG&#39;s Waterloo Region and Montreal Employment, Labour &amp; Equalities Group&nbsp;for an in-person event, hosted by the Human Resources Professionals Association (HRPA), that explores important legal updates to keep HR practitioners in the know!</p>

<p><strong>A</strong><strong> variety of topics will be discussed, including:</strong></p>

<ul>
	<li>Dealing with the &quot;new workplace&quot; (remote, hybrid and flexible workplaces)</li>
	<li>Quebec&#39;s Bill 96, <em>An Act Respecting French, the official and common language of Québec</em>, and how it affects employer&#39;s operations in Quebec</li>
	<li>Electronic monitoring policies (Bill 88)</li>
	<li>Case law update</li>
	<li>Labour law update</li>
</ul>

<p>Stay up to date on the latest issues so you can develop strategies to protect your workplaces and employees. We look forward to seeing you at this <em>in-person</em> event hosted jointly by HRPA&#39;s Grand Valley Chapter and Guelph &amp; District Chapter.</p>

<h2>Agenda</h2>

<table>
	<thead>
		<tr>
			<th scope=""col"">Time</th>
			<th scope=""col"">Activity</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>8 a.m.</td>
			<td>Registration and networking</td>
		</tr>
		<tr>
			<td>8:10 a.m.</td>
			<td>Breakfast</td>
		</tr>
		<tr>
			<td>8:30 a.m.</td>
			<td>Speaker presentations</td>
		</tr>
		<tr>
			<td>10:30 a.m.</td>
			<td>Event concludes</td>
		</tr>
	</tbody>
</table>

<p>For more information, including cost and how to register, visit <a href=""https://mx.hrpa.ca/pages/hrpa-meeting-details?MeetingID=%7B693ACEE3-57F6-EC11-815B-00155D325C64%7D"" target=""_blank"">HRPA.ca</a>.</p>
",NULL,NULL,28-09-2022 21:18,https://mx.hrpa.ca/pages/hrpa-meeting-details?MeetingID=%7B693ACEE3-57F6-EC11-815B-00155D325C64%7D,NULL,Register online,97DEB3B3-689D-4E53-A59B-8C47C8D6A4A4,NULL,d8837737-40d2-4472-8a9e-ba4101ec2105,358f50ad-2a97-425e-a9e1-e0cc6b0e1b1b,aac7181f-061a-4203-86bf-3d3c742afce5;7ce8b1af-c935-483a-b2f6-ffbb3a925288;bbd690ea-a4bd-4cdf-85d3-ca0c7d862d99;39410df1-425d-4c6f-bea0-54d5e41e744a;5d0d0341-b3e5-480d-9812-441dfc3ba63c,NULL,Seminar,NULL,Bingemans,57070,GWLG.Events,"<p>Hosted with&nbsp;HRPA&#39;s Grand Valley Chapter and Guelph &amp; District Chapter</p>
",~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,Speakers,NULL,NULL,NULL,"Employment, Labour & Equalities",Fast forward: Navigating change in Canada's new age of employment,NULL,~/getmedia/4aa15075-f7f2-4412-961d-8399c7cfc0e1/220831-ELE-legal-update-waterloo-region.jpg.xml?width=1272&height=675&ext=.jpg,NULL,NULL
543,/Events/2022/International-Bar-Association-Conference-2022,en-GB,DE99F8FA-6E59-43E3-A3BF-7417EAB2AC02,International Bar Association Conference 2022,International Bar Association Conference 2022,"The International Bar Association (IBA) Annual Conference – the premiere global event for legal professionals to meet, share knowledge, build contacts, and develop business – is taking place in Miami Beach this fall. We wouldn't miss it for the world. ",~/getmedia/56829bcb-8fc9-4096-b1ba-d8d966c96bb4/220803-IBA-conference-2022.jpg.xml?width=930&height=450&ext=.jpg,Miami skyline,GWLG.Conference,30:54.0,25:08.0,"to 4 November, 2022",NULL,Local time,0,NULL,"<h2>Gowling WLG is heading to Miami Beach for IBA 2022</h2>

<p>The International Bar Association (IBA) Annual Conference &ndash; the premiere global event for legal professionals to meet, share knowledge, build contacts, and develop business &ndash; is taking place in Miami Beach this fall. We wouldn&#39;t miss it for the world.</p>

<p>Interested in saying hello? A multinational group of Gowling WLG professionals will be on hand for this year&#39;s affair, and we can&#39;t wait to connect with you and your team. In the meantime, learn more about our firm below.</p>

<h2>Who we are</h2>

<p><a class=""c-button"" href=""~/getmedia/41cc5dbd-e91b-4d83-9ca8-1aa449130ee6/Gowling-WLG-at-a-glance.pdf.xml"" target=""_blank"">Download a PDF guide to learn how we can help you</a></p>

<p>Gowling WLG is an international law firm built on the belief that the best way to serve you is to be in tune with your world, aligned with your opportunity, and ambitious for your success.</p>

<p>We&#39;re a global, sector-focused firm with legal professionals based in major commercial and financial centres around the world. Our practice groups advise clients of all sizes in a number of key <a href=""~/en/sectors/global/"" target=""_blank"">global sectors</a>, including:</p>

<ul style=""margin-left:0.3in;"">
	<li align=""left""><a href=""~/en/sectors/financial-institutions-services/global/"" target=""_blank"">Financial institutions &amp; services</a></li>
	<li align=""left""><a href=""~/en/services/intellectual-property-law/overview/"" target=""_blank"">Intellectual property</a></li>
	<li align=""left""><a href=""~/en/sectors/construction-engineering/global/"" target=""_blank"">Construction &amp; engineering</a></li>
	<li align=""left""><a href=""~/en/sectors/tech/global/"" target=""_blank"">Tech</a></li>
	<li align=""left""><a href=""~/en/sectors/energy/global/"" target=""_blank"">Energy</a></li>
	<li align=""left""><a href=""~/en/sectors/life-sciences/global/"" target=""_blank"">Life sciences</a></li>
	<li align=""left""><a href=""~/en/sectors/real-estate/global/"" target=""_blank"">Real estate</a></li>
</ul>

<h2>What we do</h2>

<p>Whether you&#39;re an ambitious startup, established company, or publicly listed entity, Gowling WLG&#39;s global professionals are eager to learn more about your business objectives and help you achieve your goals. Our team of professionals is ready and able to develop innovative legal strategies tailored to your specific needs, no matter what they may be.</p>

<h2>Global Reach</h2>

<p>At Gowling WLG, we strive to be adaptive, insightful and completely dedicated to the results that matter most to you. With over 1,500 legal professionals working around the world, we know the importance of investing in relationships that build knowledge and trust, all while providing legal advice that&#39;s tailored to the world you live in.</p>

<p>With a <a href=""~/en/global-reach/"" target=""_blank"">global reach</a> spanning Canada, the UK, Europe, the Middle East, Asia, and South America, we provide our clients with in-depth knowledge across key global sectors and a suite of legal services at home and abroad. We see the world from the perspective of our clients, and collaborate across countries, offices, service areas, and sectors to help them succeed &ndash; no matter how challenging the circumstances.</p>

<p><a href=""~/en/global-reach/"" style=""border: none!important;""><img alt=""Go to Gowling WLG's global reach page."" src=""~/getmedia/f3eca74a-4d91-447c-a001-b5f5c4653be3/220923-Office-Locations-only.png.xml?width=498&amp;height=256"" style=""width: 498px; height: 256px;"" /></a></p>
",NULL,NULL,00:43.0,https://www.ibanet.org/conference-details/CONF2137,NULL,Learn more,EFB81B56-CE14-4DB4-910A-F96C49F7484D,06cecb4c-c959-4674-9047-d5d8ee8c673c;049c8249-7ff3-4ee3-a439-590f45fd5cff;3fc2ca8c-9d19-44ba-a3a9-ad1ecb11e900;cdfc9b50-74c2-4af5-9508-342935f81ccd;59be9dcd-e5f0-43e4-9d50-442a658eda18,08b9a44c-bb26-4255-9779-296a124fcbee,NULL,ad4cc2a0-5825-4d92-930d-64226a7659b3;2c34966f-bbd6-46e8-b792-ad416f60be1b;e9e1bd96-06f4-4226-9552-134dc62b5ae6;3ae82526-329e-41d7-8e7e-7b14a7af12bc;0368d60b-27da-4355-a0a7-6b9b0cc01c28;18130cdb-32be-4bb6-a138-fb22f986717b;e296f021-59e1-410e-a0ad-0626e49ce506;abd8b9ee-cf5c-47c3-9edc-c4829b803db8;3110a84a-f993-4c98-b2f3-54f983a40915;5cd11121-21d7-44e1-a09d-362f316564b6;d860ac5f-06d9-4ddb-ab3a-fe70cc71745e;93b1682d-1df0-46c9-b507-298e6659f15a;2377a67c-1e57-4514-9b6e-aee6bfab3640;d78233a4-45b3-42d2-97bc-0db06ee57cd2;414ac382-6045-48c9-8797-b778fbe6164d;afc382e9-2b75-4a26-9e20-0a8c68694164,NULL,Conference,"Céline Bey, Joëlle Boisvert, James H. Buchan, Todd J. Burke, Julian Henwood, Scott Jolliffe, Sunil Kakkad, Steve McKersie, Catherine Naylor, Quentin Poole, Tom Price, Andy Stylianou, Frank Y. Sur, France M. Tenaille, Chris Towle, Wendy J. Wagner",IBA 2022,56888,GWLG.Events,NULL,~/getmedia/815fb60a-3542-49df-87cb-3bebd3fd8611/220803-IBA-conference-2022-1400X540.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/bf5db8fc-7d9f-4a62-a258-2d330ae986be/220803-IBA-conference-2022-500X550.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.Canada;GWLG.UnitedStates;GWLG.Global,0,NULL,Meet the IBA team <p>Dont hesitate to reach out in advance to book a meeting with any of them during IBA 2022.</p>,NULL,NULL,"Financial Institutions & Services, Life Sciences, Construction & Engineering, Tech, Real Estate",Intellectual Property Law,NULL,NULL,~/getmedia/335fdcf2-7bea-4005-afd4-b739614b069a/220916-IBA-social.jpg.xml?width=930&height=450&ext=.jpg,NULL,NULL
545,/Events/2022/Life-Sciences-Society-and-the-Law-Symposium,en-GB,8B7DAE71-91FF-4E20-B5AE-458D4EAEB6A4,"Life Sciences, Society, and the Law Symposium","Life Sciences, Society, and the Law Symposium","Held in our firm's Ottawa office, the half-day symposium will bring together leaders from industry to attend, listen and ask questions of panelists as they explore the interplay between life sciences and society from a number of critical perspectives.",~/getmedia/246a86e8-a63f-405a-838d-195591275b5e/220906-life-sciences-dna.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Seminar,27-09-2022 05:00,27-09-2022 05:00,12:00 p.m.,3:30 p.m.,EDT,1,2 hours,"<p>Gowling WLG is pleased to invite you to our inaugural Life Sciences,&nbsp;Society and the Law Symposium during Biotech Week.</p>

<p>Held in our firm&#39;s Ottawa office,&nbsp;the half-day symposium will bring together leaders from industry to attend,&nbsp;listen and ask questions of panelists as they explore the interplay between life sciences and society from a number of critical perspectives.</p>

<p>Over the course of the symposium,&nbsp;attendees will hear from a number of key industry influencers.&nbsp;We are also pleased to announce that we will be hosting a fireside chat with Alok Kanti,&nbsp;the President and CEO of Bayer Inc., and Gordon McCauley, the President and CEO of adMare BioInnovations on lessons learned during the COVID-19 pandemic.</p>

<h2>Agenda</h2>

<table>
	<thead>
		<tr>
			<th scope=""col"">Time</th>
			<th scope=""col"">Activity</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>12:00&nbsp;</td>
			<td><strong>Registration &amp; lunch</strong></td>
		</tr>
		<tr>
			<td>1:00</td>
			<td><strong>Welcome</strong><br />
			James Buchan - Firm Managing Partner (External), Gowling WLG</td>
		</tr>
		<tr>
			<td>1:10</td>
			<td><strong>Fireside chat: Lessons learned during the COVID-19 pandemic</strong><br />
			Moderator: Gordon McCauley - President &amp; CEO, adMare BioInnovations<br />
			Alok Kanti - President &amp; CEO, Bayer Inc.</td>
		</tr>
		<tr>
			<td>1:50&nbsp;</td>
			<td><strong>Q&amp;A</strong></td>
		</tr>
		<tr>
			<td>2:00&nbsp;</td>
			<td><strong>Break</strong></td>
		</tr>
		<tr>
			<td>2:15</td>
			<td><strong>Panel discussion: Where does the Patented Medicine Prices Review Board (PMPRB) fit into the life sciences ecosystem today?</strong><br />
			Moderator: Anita Nador - Partner, Gowling WLG<br />
			Panelists:&nbsp;<br />
			Wayne Critchley - Senior Associate, Global Public Affairs&#39; Health &amp; Life Sciences<br />
			Declan Hamill - Vice President, Policy, Regulatory and Legal Affairs, Innovative Medicines Canada<br />
			Wendy Hurlburt - President &amp; CEO, Life Sciences British Columbia<br />
			Neil Palmer - Principal Consultant, WN Palmer &amp; Co.</td>
		</tr>
		<tr>
			<td>3:00</td>
			<td><strong>Q&amp;A</strong></td>
		</tr>
		<tr>
			<td>3:15</td>
			<td><strong>Conclusion</strong><br />
			Lisa Thorne - Partner, Gowling WLG</td>
		</tr>
	</tbody>
</table>

<h2>CPD information</h2>

<p>This program is eligible for up to 2 hours of substantive CPD credits with the LSO,&nbsp;the LSBC and the Barreau du Québec.&nbsp;If you indicate on your registration form that a certificate of participation is required,&nbsp;we will email you your certificate after the session.</p>
",NULL,NULL,27-09-2022 17:00,"mailto:shannon.wadsworth@gowlingwlg.com?subject=RSVP: Life Sciences, Society and the Law Symposium",NULL,Register for this event,B76767E9-B871-449C-AC5E-EBE1D14A93D9,049c8249-7ff3-4ee3-a439-590f45fd5cff,NULL,NULL,e9e1bd96-06f4-4226-9552-134dc62b5ae6;a422060d-6f9d-4027-8e91-d7badbd87370;d9a834e2-7b85-4089-b241-ed2e95e1b3d6,NULL,Seminar,"James H. Buchan, Anita Nador, Lisa Thorne",Gowling WLG Ottawa,57372,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,"mailto:shannon.wadsworth@gowlingwlg.com?subject=RSVP: Life Sciences, Society and the Law Symposium",Register now,GWLG.Canada,0,0CDA2C7E-BFD7-48AD-991D-C46DBB4E55AB,Gowling WLG Speakers,NULL,NULL,Life Sciences,NULL,NULL,NULL,~/getmedia/8089316f-9365-4a4a-bc16-0fb72768e470/220906-Life-sciences-symposium-social.jpg.xml?width=930&height=493&ext=.jpg,NULL,_Blank
550,/Events/2022/Connect-with-us-at-Elevate-Festival,en-GB,2281FCD7-7160-4C97-BD81-66F2174D7224,Connect with us at Elevate Festival,Connect with us at Elevate Festival,"Featuring some of the world's most disruptive thinkers working at the frontier of technology, culture and business, Elevate Festival is returning to Toronto this month – and we can't wait to see you there.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.SpecialEvents,09:02.0,09:08.0,Various,NULL,EDT,0,NULL,"<p>Featuring some of the world&#39;s most disruptive thinkers working at the frontier of technology, culture and business, <a href=""https://elevatefestival.ca/"" target=""_blank"">Elevate Festival</a> is returning to Toronto this month &ndash; and we can&#39;t wait to see you there.</p>

<p>Whether you&#39;re an ambitious startup or publicly listed entity, our seasoned tech lawyers are eager to learn more about your business objectives and help you achieve your goals. Our team of professionals is ready to develop innovative legal strategies tailored to your specific needs, no matter what they may be.</p>

<p>Gowling WLG is proud to support Elevate, and we look forward to connecting with you across the festival&#39;s multiple venues from September 20-22, 2022.</p>

<p>Ready to begin a conversation? Connect with a member of Gowling WLG&#39;s global Tech Group below.</p>

<h2><a id=""Presentation"" name=""Presentation""></a>Protect by design: Avoiding data breaches from the ground up</h2>

<p>On <strong>September 21, 2022 at 1:00 p.m.</strong>, join lawyers Brent Arnold and Jasmine Samra in the <strong>Industry Lounge</strong> as they unpack the critical privacy considerations successful developers must consider during the design stage of their products.</p>

<p>When creating a product, developers consider many things, but one of the most critical components should be security. With the number of data breaches and attacks increasing rapidly, developers should focus on building products in a way that reduces the chances of data breaches and limits vulnerabilities in the system. This session will focus on building privacy and security into your design and the key elements of Canada&#39;s changing privacy landscape.</p>
",NULL,NULL,11:19.0,https://elevatefestival.ca/highlights/,NULL,Learn more about Elevate,NULL,cdfc9b50-74c2-4af5-9508-342935f81ccd,714e9c25-3dce-4dac-89a9-dd1d02f0eda6,NULL,425a9689-d70c-46ff-b7b6-8994bb782c5f;7e822e16-356b-4251-84ae-83b9293fa418;1e89ead2-b051-4550-91fc-43919024c6e9;7c982ff4-2b05-446c-9f31-9d84cd6e9912;75ef2ed2-acdd-4b82-abc3-69b50eef878e;e1494d17-697e-438b-9484-5ad5e822fffc;4b1a468d-9d94-4947-843e-81d5df008282;a045d3b3-8b0b-410b-b1f1-4b56221dbb07;1cf0dd94-9cc3-4d42-b64f-a001f6676a9f;9c6df3a9-dc90-4d68-ab35-55d12591c961;9c8488b5-96b1-433c-947a-aa0caa9de025;48295bef-3e9d-4fad-a7cd-de2dea46e3dd,NULL,Special events,"Viona M. Duncan, W. Ian Palm, Jasmine Samra, Brent J. Arnold, Martin Roy, Matthew Estabrooks, Angelica Wilamowicz, Ivan Boiarski, Kavi Sivasothy, Simanpreet Panaych, Jae Gee, Sean Gomes",NULL,NULL,GWLG.Events,NULL,~/getmedia/018f0991-3015-4696-b590-14fa0d037e32/220915-black-white-space-elevate-festival-main.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/4bacec1a-6c50-48a7-a128-c28d96ddc856/220915-black-white-space-elevate-festival-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,Contact our team,NULL,NULL,Tech,FinTech Law,NULL,NULL,NULL,NULL,NULL
551,/Events/2022/Employment-Labour-Equalities-Update,fr-CA,C74E357C-2F87-47E3-BBAC-B3E14FE7D885,Gowling WLG vous presente une mise a jour,"Travail, emploi et droits de la personne : Gowling WLG vous présente une mise à jour (en anglais)","Join members of Gowling WLG's Waterloo Region and Montreal Employment, Labour & Equalities Group for an in-person event, hosted by the Human Resources Professionals Association (HRPA), that explores important legal updates to keep HR practitioners in the know!",NULL,Office hallway with blue doors,GWLG.Seminar,29-09-2022 20:50,29-09-2022 20:50,8:00 a.m.,10:30 a.m.,EST,1,2 hours,"<p>Join members of Gowling WLG&#39;s Waterloo Region and Montreal Employment, Labour &amp; Equalities Group&nbsp;for an in-person event, hosted by the Human Resources Professionals Association (HRPA), that explores important legal updates to keep HR practitioners in the know!</p>

<p><strong>A</strong><strong> variety of topics will be discussed, including:</strong></p>

<ul>
	<li>Dealing with the &quot;new workplace&quot; (remote, hybrid and flexible workplaces)</li>
	<li>Quebec&#39;s Bill 96, <em>An Act Respecting French, the official and common language of Québec</em>, and how it affects employer&#39;s operations in Quebec</li>
	<li>Electronic monitoring policies (Bill 88)</li>
	<li>Case law update</li>
	<li>Labour law update</li>
</ul>

<p>Stay up to date on the latest issues so you can develop strategies to protect your workplaces and employees. We look forward to seeing you at this <em>in-person</em> event hosted jointly by HRPA&#39;s Grand Valley Chapter and Guelph &amp; District Chapter.</p>

<h2>Agenda</h2>

<table>
	<thead>
		<tr>
			<th scope=""col"">Time</th>
			<th scope=""col"">Activity</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>8 a.m.</td>
			<td>Registration and networking</td>
		</tr>
		<tr>
			<td>8:10 a.m.</td>
			<td>Breakfast</td>
		</tr>
		<tr>
			<td>8:30 a.m.</td>
			<td>Speaker presentations</td>
		</tr>
		<tr>
			<td>10:30 a.m.</td>
			<td>Event concludes</td>
		</tr>
	</tbody>
</table>

<p>For more information, including cost and how to register, visit <a href=""https://mx.hrpa.ca/pages/hrpa-meeting-details?MeetingID=%7B693ACEE3-57F6-EC11-815B-00155D325C64%7D"" target=""_blank"">HRPA.ca</a>.</p>
",NULL,NULL,19-09-2022 21:18,https://mx.hrpa.ca/pages/hrpa-meeting-details?MeetingID=%7B693ACEE3-57F6-EC11-815B-00155D325C64%7D,NULL,Register online,97DEB3B3-689D-4E53-A59B-8C47C8D6A4A4,NULL,d8837737-40d2-4472-8a9e-ba4101ec2105,358f50ad-2a97-425e-a9e1-e0cc6b0e1b1b,aac7181f-061a-4203-86bf-3d3c742afce5;7ce8b1af-c935-483a-b2f6-ffbb3a925288;bbd690ea-a4bd-4cdf-85d3-ca0c7d862d99;39410df1-425d-4c6f-bea0-54d5e41e744a;5d0d0341-b3e5-480d-9812-441dfc3ba63c,NULL,Séminaire,NULL,Bingemans,57070,GWLG.Events,"<p>Hosted with&nbsp;HRPA&#39;s Grand Valley Chapter and Guelph &amp; District Chapter</p>
",~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,Conférenciers,NULL,NULL,NULL,"Travail, emploi et droits de la personne",L'avenir est déjà là : S'adapter à la nouvelle ère en matière d'emploi <br>au Canada,NULL,~/getmedia/4aa15075-f7f2-4412-961d-8399c7cfc0e1/220831-ELE-legal-update-waterloo-region.jpg.xml?width=1272&height=675&ext=.jpg,NULL,NULL
553,/Events/2022/ThinkHouse-Foundations-2022-London,fr-CA,75972F6B-1CC5-40AF-925B-2B414089E624,ThinkHouse Foundations: Londres,Séminaire d'automne du programme ThinkHouse Foundations : Londres (en anglais),Join us in London for a morning of legal updates and training as well as an opportunity to network with existing and new in-house peers. ,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,20-10-2022 09:16,20-10-2022 09:16,09:15,13:45,BST,1,3,"<p>ThinkHouse Foundations is Gowling WLG&#39;s tailored programme for in-house lawyers starting out in their careers. Drawing on the topics and insights focused on in ThinkHouse, we explore the opportunities and challenges faced by paralegals, trainees and lawyers of up to five years&#39; PQE.</p>

<p>Join us for a morning of legal updates and training as well as an opportunity to network with existing and new in-house peers.&nbsp;</p>

<h2>Advertising law workshop</h2>

<p>In this interactive workshop Zoe Pearman, Khemi Salhan and Lucy Singer will provide an introduction to advertising law. They will focus on the golden rules of advertising law and provide examples of key issues they&#39;re seeing at the moment.</p>

<h2>In conversation with... Sarah Lees</h2>

<p>Sarah Lees is a senior associate in our Housing, Development and Regeneration team at Gowling WLG. Prior to this, she served as in-house counsel to Battersea Power Station Limited. In this short Q&amp;A, Sarah will discuss her time spent in-house compared with private practice, the skills, values and insights she has taken from the different environments, and we can all learn about the important interactions between the two.</p>

<h2>Governance and its relevance to ESG</h2>

<p>ESG is now a regular feature on the Board agenda for most large organisations and it is likely to stay that way for the foreseeable future. In this session Rachel Mobberley will provide an overview of ESG, but with a focus on demystifying the governance aspect, highlighting the key implications and practical realities for businesses, and exploring how in-house legal teams can provide support.</p>

<h2>Maternity and family rights</h2>

<p>Understanding, interpreting and complying with maternity and family rights in the workplace can be tricky. Employers face the challenge of managing business needs with the needs of mothers, fathers and anyone else with parenting responsibilities at a time which can be stressful and emotional. In this session Karin Kiho will at some of the key elements of maternity and family rights all businesses need to be aware of.</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession. Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,18-10-2022 08:00,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?rsid=gKvQXAgTJRn4LYlEEryepBrEkkxBIGJQMvlCm6Hk4aDgf1peMXnPaZclQjRulb9M&react=All%20Reactions,NULL,RSVP,9FBE191E-3BCF-45DE-A2BA-338BB194FC9D,NULL,d8837737-40d2-4472-8a9e-ba4101ec2105;65c34333-2a1a-4fba-8d2a-65496d535f64;b305a1b6-d0ba-41dc-8e53-579fd077b871;200fa82c-4bb5-48ad-bea1-2a574dfecdab,a143cbfd-d333-42a0-89a6-7287894464f1,d03f4474-15e0-41a7-a007-5fa3f7547a82;e8081a0b-9874-4c18-8a1a-2ef51aaa161c;23b62899-1b35-4596-9523-a2823336c23e;b3dfcd3d-20c2-44c3-98e5-78001e5d2384;0349c3b9-6e0e-4705-b87e-5db001c7d3a7;e508c284-4bb7-4869-92cc-55ba0ef25f38;265dca2d-30ab-44da-b194-c0378081d7d6,NULL,Séminaire,NULL,Londres,71,GWLG.Events,NULL,~/getmedia/5c73cf2c-5ac2-465b-9dff-9377774e4d9b/thinkhouse-foundations-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/a1bd54ac-e5a3-4c45-8585-8ccbdce9e524/thinkhouse-foundations-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Conférenciers,NULL,9fbe191e-3bcf-45de-a2ba-338bb194fc9d,NULL,"Travail, emploi et droits de la personne, Publicité et réglementation des produits, Facteurs environnementaux, sociaux et de gouvernance (ESG), Gouvernance, gestion des risques et conformité ",ThinkHouse,Londres,NULL,NULL,NULL
554,/Events/2022/Gowling-WLG-annual-employment-seminar,en-GB,CBCC231B-6991-427B-8A3F-7AF9CFE289BB,Gowling WLG annual employment seminar,"Gowling WLG's Annual Employment, Labour and Equalities seminar: Calgary","This informative and insightful half-day session will focus on decisions made over the past year related to employment, labour, remote work and privacy, and human rights.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,People walking in front of conference room,GWLG.Conference,25:26.0,25:32.0,7:30 a.m.,12:00 p.m.,Local time,0,NULL,"<p>Join Gowling WLG&#39;s&nbsp;<strong>Employment, Labour and Equalities Group</strong>&nbsp;on Wednesday, October 5 for our annual&nbsp;seminar at Hotel Arts in Calgary.&nbsp;This informative and insightful half-day session will focus on decisions made over the past year related to employment, labour, remote work and privacy, and human rights.</p>

<p>Our professionals will guide you through key developments from 2022, and offer practical tips and advice to help benefit your organization.</p>

<p>Breakfast begins at 7:30 a.m. and a mid-morning snack will be provided.</p>

<p>Space is limited, so please RSVP above to reserve your spot. We look forward to seeing you there.</p>

<h2>Agenda</h2>

<table>
	<thead>
		<tr>
			<th scope=""col"">Time&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</th>
			<th scope=""col"">Activity</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>7:30 a.m.</td>
			<td>Registration opens at Spectrum 5 Ballroom in Hotel Arts</td>
		</tr>
		<tr>
			<td>7:30 -<br />
			8:15 a.m.</td>
			<td>Breakfast</td>
		</tr>
		<tr>
			<td>8:00 a.m.</td>
			<td>Welcome and introduction</td>
		</tr>
		<tr>
			<td>8:05 -<br />
			10:30 a.m.</td>
			<td>
			<p>Presentation begins</p>

			<p>Topics:</p>

			<ol>
				<li>Case law update:&nbsp;<em>An overview of 2022&#39;s key employment and labour decisions.</em></li>
				<li>Remote work and privacy:&nbsp;<em>A review of the past year&#39;s pivotal privacy developments and a discussion of anticipated challenges for 2023.</em></li>
			</ol>
			</td>
		</tr>
		<tr>
			<td>10:30 a.m.</td>
			<td>Mid-morning break</td>
		</tr>
		<tr>
			<td>10:45 a.m. -<br />
			12:00 p.m.</td>
			<td>
			<p>Presentation continues</p>

			<p>Topics:</p>

			<ol start=""3"">
				<li>Human rights law update:&nbsp;<em>A look back on influential human rights decisions from the past year.</em></li>
				<li>Workplace investigations:&nbsp;<em>Tips and traps to assist you in a workplace investigation.</em></li>
			</ol>
			</td>
		</tr>
		<tr>
			<td>12:00 p.m.</td>
			<td>Event ends</td>
		</tr>
	</tbody>
</table>
",NULL,NULL,26:21.0,https://sites-gowlingwlg.vuturevx.com/95/6772/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,3C426BFB-9E67-4F77-AB6F-715278509DAC,NULL,d8837737-40d2-4472-8a9e-ba4101ec2105,NULL,26fb12df-b407-4553-9451-a9880a4c2e8b;8019d9ad-34b0-4cbd-8dfb-99a7578a4b6a;5f5047c6-9911-43cd-8ccc-a8ddfe2c6853;512e6a3a-2054-4e21-8ade-51fd3ea5b36a;5ff10831-4f7d-4189-9664-d45448cda40d,NULL,Conference,NULL,Hotel Arts,34468,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,Speakers,NULL,NULL,NULL,"Employment, Labour & Equalities",NULL,NULL,~/getmedia/cdd780ce-36cd-4b21-adaa-18a29b625874/220926-Annual-ELE-Calgary.jpg.xml?width=1272&height=675&ext=.jpg,NULL,NULL
556,/Events/2022/Reflections-from-the-Games,en-GB,076E065B-185D-4A88-8E9F-84E2A143BF1B,Reflections from the Games,Sustainability; Reflections from the Birmingham 2022 Commonwealth Games,Gowling WLG are delighted to invite you to a unique online event on Wednesday 12th October from 12-1pm on sustainability.,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,00:00.0,00:00.0,12:00,13:00,GMT,0,NULL,"<p>As the Official Legal Advisers to the Birmingham 2022 Commonwealth Games, we are delighted to be running a webinar on 12 October 2022 on sustainability, together with Birmingham 2022.</p>

<p>The event, chaired by partner and leading planning and environmental lawyer Ben Stansfield, will bring together an esteemed panel of speakers to discuss the Games&#39; approach to:</p>

<ul>
	<li>carbon management and its goal to create a carbon neutral legacy;</li>
	<li>sustainability in the supply chain; and</li>
	<li>communicating sustainability measures and practices externally and to stakeholders both externally and internally.</li>
</ul>

<p>The session will provide insight and practical information useful for all businesses.</p>

<p>Our esteemed panel for this event includes: Head of Sustainability at Birmingham 2022, Jessica Fidler, Sustainability Coordinator at Birmingham 2022, Jo Leigh, and Head of Procurement at the Games, Sally Russell.</p>

<p><a href=""https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?RSID=YoXeWRTVWP1BZBxYIHIsGhwpprE4QEO0GgpVMIitmlg9IzTfbl8jvOREp5bylKUk"" target=""_blank"">Please register to join us</a>.</p>
",NULL,NULL,10:59.0,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?RSID=YoXeWRTVWP1BZBxYIHIsGhwpprE4QEO0GgpVMIitmlg9IzTfbl8jvOREp5bylKUk,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,NULL,NULL,1a0f69ce-d1e7-42e2-96d6-0dbdd570161e,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,NULL,Speaker(s),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
557,/Events/2022/ACC-Annual-Meeting-2022,en-GB,F1B17A32-E5EB-494E-8BB4-D468AD8A6216,ACC Annual Meeting 2022,Association of Corporate Counsel Annual Meeting 2022,"Your business doesn't stop at the border, and neither do the legal hurdles you'll encounter on the road to growth and success. That's where we come in. ",~/getmedia/547b3531-446d-4ad2-a773-f0b8f214a762/221004-ACC-conference.jpg.xml?width=930&height=450&ext=.jpg,Las Vegas skyline,GWLG.Conference,00:00.0,00:00.0,"to 26 October 2022, ",NULL,PST,0,NULL,"<h2>Meet us at the ACC Annual Meeting&nbsp;2022</h2>

<p>Your business doesn&#39;t stop at the border, and neither do the legal hurdles you&#39;ll encounter on the road to growth and success. That&#39;s where we come in.</p>

<p>From October 23 to 26, a multinational cross-practice team of our lawyers will be in Las Vegas for the Association of Corporate Counsel Annual Meeting &ndash; and we can&#39;t wait to take the opportunity to learn more about your business, your opportunities and your aspirations.</p>

<h2>Global solutions tailored for your business</h2>

<p>In today&#39;s global economy, the ability to span borders and reap the rewards of new markets is imperative for companies across all sectors. With 19 international offices, more than 30 dedicated &quot;country desks,&quot; formal referral arrangements and active &quot;best friend&quot; relationships in key jurisdictions around the world, we can help you do just that &ndash; wherever your business takes you.</p>

<p>Our comprehensive legal service offering is underpinned by hands-on sector experience and sophisticated business strategy, ensuring clients receive tailored solutions as unique as they are. Explore our resources or get in touch with one of our legal professionals below to learn more.</p>

<p><a href=""~/getmedia/611afd32-05ea-4ed9-b9b3-60042b955ba7/221017-Global_firmwide_brochure.pdf.xml"" target=""_blank""><img alt=""Global firm brochure"" src=""~/getmedia/8be72187-c5c5-41de-86b3-92bb65226b56/221017-Glogal-firm-brochure-thumbnail.png.xml"" style=""width: 200px; height: 259px;"" /></a>&nbsp;&nbsp;&nbsp;<a href=""~/en/insights-resources/guides/2022/guide-to-doing-business-in-canada/"" target=""_blank""><img alt=""Guide to Doing Business in Canada"" src=""~/getmedia/a173a953-7629-4ce3-9c3f-4a4747a40d0e/guide-to-doing-business-in-canada-thumbnail.jpg.xml"" style=""width: 200px; height: 259px;"" /></a>&nbsp;&nbsp;&nbsp;<a href=""~/getmedia/d90c32b8-aa37-4165-be92-1bd13e06e635/doing_business_in_the_uk.pdf.xml"" target=""_blank""><img alt=""Guide to Doing Business in the UK"" src=""~/getmedia/f1aab2de-804f-45b2-9bcd-8616e98e0f37/guide-to-doing-business-in-the-uk-thumbnail.jpg.xml"" style=""width: 200px; height: 259px;"" /></a>&nbsp; &nbsp;<a href=""~/en/insights-resources/reports/2022/digital-currents/"" target=""_blank""><img alt=""Digital Currents in a changing world"" src=""~/getmedia/eddeaf03-43dd-49dd-8b24-ff249ef7d95a/221017-Digital-report-cover.jpg.xml"" style=""width: 200px; height: 259px;"" /></a></p>
",NULL,NULL,00:00.0,https://www.acc.com/annualmeeting,NULL,Learn more,D28FFA00-1E04-4008-9C99-79FE751FBBCE,NULL,NULL,NULL,3eea8a58-b3f2-4e3c-87f4-8853720e2a67;73f7ea9b-d882-44ee-a06d-d1219f28df20;425a9689-d70c-46ff-b7b6-8994bb782c5f;9a7a979c-500a-45ae-b4fd-1fed3f6bd376;c2d606a0-c969-45ae-ac29-89c4cdc04c9d;3110a84a-f993-4c98-b2f3-54f983a40915;ce9d4ebf-8a0b-4797-ae06-ac65613a25c9;1a0f69ce-d1e7-42e2-96d6-0dbdd570161e;414ac382-6045-48c9-8797-b778fbe6164d;afc382e9-2b75-4a26-9e20-0a8c68694164,NULL,Conference,NULL,ACC 2022,57686,GWLG.Events,NULL,~/getmedia/4cc6dea7-eb08-40a8-9907-7061c600fc95/221004-ACC-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/aa49628c-0601-4f48-907f-eec8c8fa2fe0/221004-ACC-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.Canada;GWLG.UnitedStates;GWLG.Global,0,NULL,Meet the ACC team <p>Reach out to book a meeting with any of our team.  You can also find us at booth #319 during ACC 2022. </p>,NULL,NULL,NULL,NULL,NULL,NULL,~/getmedia/bc568e52-0dfa-46d0-829e-e30a7ad52187/221004-ACC-conference-social-v2.jpg.xml?width=930&height=450&ext=.jpg,NULL,NULL
558,/Events/2022/Crypto-mining-and-the-Ontario-energy-system,en-GB,FE048CB5-0380-42EF-8F19-8378AF87DB1E,Crypto mining and the Ontario energy system,Energy Innovators Roundtable Series | Roundtable #2: Crypto Mining and the Ontario Energy System,Join us on Oct. 20 where we will discuss various topics arising from the crypto mining industry and its interplay with the Ontario energy sector.,~/getmedia/dadcec9a-08b9-4cc3-be1f-41229e4024f0/220408-electric-vehicle-charging.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Seminar,20-10-2022 05:00,20-10-2022 05:00,8:00 a.m.,10:00 a.m.,EDT,1,1.5 hours,"<p>Join us on Oct. 20 for the second session in our Energy Innovator Roundtables series,&nbsp;where we will discuss various topics arising from the crypto mining industry and its interplay with the Ontario energy sector.</p>

<h2>Background</h2>

<p>Cryptocurrency mining occurs all around the world every day in a process that is both highly specialized and extremely competitive. According to the Bitcoin Energy Consumption Index, if Bitcoin were a country,&nbsp;its annualized energy consumption at present would be comparable to the United Arab Emirates (127.10 TWh per annum - down substantially since the 2021-2022 boom). In a similar vein,&nbsp;its global annual carbon footprint is comparable to that of the Czech Republic at 114.06 Mt CO2 per annum.</p>

<p>This intensive use of energy arises from the manner in which certain blockchains are secured. For blockchain protocols that utilize a process called &quot;proof-of work&quot;,&nbsp;such as Bitcoin, &quot;miners&quot;&nbsp;use power-hungry computer hardware to solve complex cryptographic calculations. If a miner successfully solves the calculations first,&nbsp;they are rewarded with newly &quot;minted&quot;&nbsp;coins. As more computing power is added to a network,&nbsp;the difficulty of the calculations required to win these coins increases. This in turn requires more and more powerful computers,&nbsp;such that what only required a simple home computer setup and a few seconds worth of household energy a decade ago now requires rooms full of purpose-built computers drawing tens of thousands of kilowatt hours of electricity.</p>

<p>Planning for anticipated energy system demand is already a thorny challenge for Ontario power system planners. Incorporating crypto mining into that planning process,&nbsp;and potentially supporting the development of new high value employment ecosystems at the same time,&nbsp;represents an even more complex problem. Will Ontario rise to the challenge? Does crypto mining represent an opportunity for system planners? Is Ontario the right place to locate future crypto mining projects? Perhaps,&nbsp;most importantly,&nbsp;does crypto mining represent the right opportunity for Ontario?</p>

<h2>Format</h2>

<p>Gowling WLG&#39;s Energy Innovator Roundtables are informal and in-person events with an emphasis placed on frank information sharing,&nbsp;subject to the &#39;Chatham House Rule&#39;. The sessions are not recorded and,&nbsp;subject to health restrictions, are in-person only.&nbsp;</p>

<h2>Speakers</h2>

<ul style=""margin-left:0.3in;"">
	<li>Usman Sheikh -&nbsp;Partner &amp; National Head,&nbsp;&nbsp;Blockchain &amp; Smart Contract Group, Gowling WLG</li>
	<li>Thomas J. Timmins - Partner &amp; Leader, Energy Sector Group,&nbsp;Gowling WLG</li>
	<li>Ron Dizy - President &amp; CEO, Red Jar Digital Infrastructure</li>
	<li>L. Geoffrey Morphy -&nbsp;President &amp; COO, Bitfarms Ltd.</li>
</ul>

<h2>CPD information</h2>

<p>This program is eligible for up to 1.5 hours of substantive CPD credits with the LSO, the LSBC and the Barreau du Québec.&nbsp;If you indicate on your registration form that a certificate of participation is required,&nbsp;we will email you your certificate after the session.</p>
",NULL,NULL,20-10-2022 13:00,https://sites-gowlingwlg.vuturevx.com/103/6699/landing-pages/event-registration-(blank-form)---oct.-20.asp,NULL,Register for this event,96095DC0-6261-4B55-A0C7-0995037BEF43,f1e960f5-8231-4c56-b7bf-9898ebb538c5,20e41ca2-b15a-4815-bb5c-7cf60c18278f,NULL,300e471b-5cfe-45e3-bb75-6cc00bbdf27b;4c3c2534-e644-427f-9b61-e7cd1aec53cf,NULL,Seminar,"Usman M. Sheikh, Thomas J. Timmins",Gowling WLG Toronto,56909,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/103/6699/landing-pages/event-registration-(blank-form)---oct.-20.asp,Register now,GWLG.Canada,0,0CDA2C7E-BFD7-48AD-991D-C46DBB4E55AB,Gowling WLG Speakers,NULL,NULL,Energy,Blockchain & Smart Contracts,NULL,NULL,~/getmedia/b79bc389-4fd7-4040-a4ab-70b078084f20/221005-energy-roundtable-2-min.jpg.xml?width=930&height=450&ext=.jpg,NULL,_Blank
559,/Events/2022/Connect-with-Gowling-WLG-in-Boston-at-TMA,en-GB,B7B3FD99-0424-4E0D-BAEA-5AF43DFFFF7E,Connect with Gowling WLG in Boston at TMA,Connect with Gowling WLG in Boston at the 2022 TMA Annual Conference,"The TMA Annual Conference – renowned in the industry for enhancing professional networks through deep, meaningful, global connections – is taking place in Boston this fall, and an experienced team of Gowling WLG restructuring & insolvency lawyers will be on hand for the entire affair.",~/getmedia/960e026f-7853-4ce6-8f02-497c0cc86bc6/220928-Boston-Seaport-District-TMA-Conference.jpg.xml?width=930&height=450&ext=.jpg,Boston Seaport District from the Harborwalk,GWLG.Conference,01:38.0,01:46.0,"04 November 2022,",NULL,EST,0,NULL,"<p>With renewed economic uncertainty facing governments and private entities around the world, this year&#39;s <a href=""https://tma.eventcadence.com/e/tma-2022-annual-conference"" target=""_blank"">Turnaround Management Association (TMA) Annual Conference</a> promises to be as timely and topical as ever. Naturally, we wouldn&#39;t miss it.</p>

<p>The TMA Annual Conference &ndash; renowned in the industry for enhancing professional networks through deep, meaningful, global connections &ndash; is taking place in Boston this fall, and an experienced team of Gowling WLG restructuring &amp; insolvency and lending lawyers will be on hand for the entire event.</p>

<p>Interested in saying hello? We&#39;re eager to connect with you and your team, so please come find us at conference. In the meantime, learn more about our firm below.</p>

<p><a class=""c-button-red"" href=""#team"">Meet this year&#39;s TMA team</a></p>

<h2>Who we are</h2>

<p>Gowling WLG is a global sector-focused firm with legal professionals based in major commercial and financial centres around the world.</p>

<p>Our award-winning <a href=""~/en/services/restructuring-insolvency/#canada"">Restructuring &amp; Insolvency Group</a> in Canada, one of the largest practices of its kind in the nation, delivers tailored solutions to clients from coast to coast. From our seven offices across the country, our lawyers work closely with debtors and creditors alike, helping them fully understand the options available to them before determining a strategic path forward.</p>

<p>No matter the situation or the stakes involved, our aim is to resolve issues swiftly, pragmatically and cost-effectively. In doing so, we harness significant experience across virtually every industry sector, including in the context of complex cross-border transactions. <a href=""~/en/services/restructuring-insolvency/#canada"">Learn more</a>.</p>

<h3>Our services include:</h3>

<ul>
	<li>Advising lenders and other stakeholders on restructurings and distressed and recovery situations</li>
	<li>CCAA, debtors and BIA restructurings and enforcement of secured creditors&#39; rights</li>
	<li>Corporate restructurings</li>
	<li>Creditor, supplier, and customer negotiations</li>
	<li>Directors&#39; liability and duties</li>
	<li>Distressed M&amp;A transactions</li>
	<li>Early-stage financial and operational restructurings</li>
	<li>Forbearance and accommodation arrangements</li>
	<li>Insolvency risks in structured transactions</li>
	<li>Interim and permanent financing solutions</li>
	<li>Lender liability issues</li>
	<li>Regulatory compliance</li>
</ul>

<h2>Global reach</h2>

<p><a href=""~/en/global-reach/"" style=""border: none!important;""><img alt=""Go to Gowling WLG's global reach page."" src=""~/getmedia/f3eca74a-4d91-447c-a001-b5f5c4653be3/220923-Office-Locations-only.png.xml?width=498&amp;height=256"" style=""width: 498px; height: 256px;"" /></a></p>

<p>Our Restructuring &amp; Insolvency Group serves clients in several international jurisdictions, and it&#39;s supported by a <a href=""~/en/global-reach/"">global firm</a> that spans Canada, the UK, Europe, the Middle East, and Asia. We see the world from the perspective of our clients, and collaborate across countries, offices, service areas, and sectors to help them succeed &ndash; no matter how challenging the circumstances.</p>

<p><a id=""team"" name=""team""></a></p>
",NULL,NULL,36:22.0,https://tma.eventcadence.com/e/tma-2022-annual-conference,NULL,Learn more,8899B1EA-7182-479E-804B-556B4B741F86,NULL,cb3477a6-c725-4d55-8fa9-194abc3a4ec4,NULL,5ae5a269-9c5f-4332-920e-28b31ec9066e;1b16d33b-6132-403b-96c8-413ae88eb1ef;31589b1d-8773-40f3-b07d-0b7a1a5eee2f;45042386-e87e-4fa2-8f87-101784526d0a;02fd8d8c-b165-4102-bfaa-c95935dd2803;37b72b46-1f45-4749-8ed2-c61b6f37a0e1;ff9a22b0-45c1-467b-b04f-52d3b451ac4d;1a1b98be-fdfb-44fe-abe0-329a6cb018f0,NULL,Conference,NULL,The Westin Boston Seaport District,57897,GWLG.Events,NULL,~/getmedia/960e026f-7853-4ce6-8f02-497c0cc86bc6/220923-boston-seaport-background.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/510e2c23-85d1-49e7-9927-b4f4e88218e5/220923-boston-seaport.jpg.xml?width=509&height=339&ext=.jpg,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,Meet the TMA 2022 team,NULL,NULL,NULL,Restructuring & Insolvency,NULL,NULL,~/getmedia/7151160a-57c5-48f9-86dd-af2d2a35ccd7/221012-TMA-Conference-Social-Tile.jpg.xml?width=1200&height=628&ext=.jpg,NULL,NULL
560,/Events/2022/Cyber-security-pension-scheme-trustees-guide,en-GB,C97EA807-E5B7-4ACE-A25C-8FBD3BBE96B4,Cyber security – pension scheme trustees guide,Cyber security – A practical guide for pension scheme trustees,Cyber security is an ever-present and growing risk for pension scheme trustees. This is not just a 'techy' risk that can be eliminated with firewalls and anti-virus software.,~/getmedia/dfbb2702-832e-46a2-be5e-4c0a6dc250e2/221011-cyber-security-pension-scheme-trustees-guide.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Webinar,00:00.0,00:00.0,10:00,11:00,GMT,0,1,"<p>Cyber security is an ever-present and growing risk for pension scheme trustees. This is not just a &quot;techy&quot; risk that can be eliminated with firewalls and anti-virus software. It is a risk that requires robust governance procedures and is an increasing area of focus for the Pensions Regulator, including through the upcoming Single Code of Practice.</p>

<p><a href=""~/en/people/ben-goldby/"">Ben Goldby</a>, Principal Associate (Pensions) at Gowling WLG will chair this discussion on how pension scheme trustees can tackle this threat. Ben will be joined by <a href=""~/en/people/helen-davenport/"" target=""none"">Helen Davenport</a>, Partner (Data Protection and Cyber Security) at Gowling WLG, and <a href=""https://www.rosstrustees.com/team/grant-suckling/"" target=""_blank"">Grant Suckling</a>, Trustee Director from Ross Trustees.</p>

<p><strong>Our panel will explore &hellip;</strong></p>

<ul>
	<li>The regulatory landscape and expectations on trustees</li>
	<li>The sources of cyber risk</li>
	<li>Practical guidance on assessing and mitigating the threat</li>
	<li>How to effectively monitor the risk on an ongoing basis</li>
	<li>Identifying and responding to attacks</li>
</ul>

<p>This session is aimed at trustees of pension schemes of all sizes. From less than &pound;50 million of assets right up to &pound;1 billion plus schemes. It will be of interest to trustees of both defined benefit and defined contribution occupational pension schemes and any other members of governing bodies covered by the upcoming Single Code of Practice. Sponsoring employers of pension schemes may also find the session of interest.</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession. Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,00:00.0,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?rsid=jOoH5qyJv5IUG99tSFu7gfRkPjUqE1RIN8HCZntEnnRy2cA2CV_q_H8l-FrzeE9e&react=REGISTER,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,a19c4c5e-c05a-4fa5-95aa-c5a274279d8c;2e9a87e2-3d2e-4d69-ba9c-06b4b358ca0d,NULL,4bfa520b-976f-4619-9ab0-7ed126773862;d3e0fa3e-1011-4fe0-b62a-88c920f62d49,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,311E4011-F5C1-4BF1-A135-A720BFE33863,Gowling WLG Speaker(s),NULL,NULL,NULL,"Pensions, Cyber Security & Data Protection Law",NULL,NULL,NULL,NULL,NULL
561,/Events/2022/Tomorrow-s-World-Future-proofing-ESG-strategies,en-GB,C3FB571C-D8F8-4AB4-ADA5-E208019FF004,Tomorrow's World – Future-proofing ESG strategies ,Tomorrow's World – Future-proofing ESG strategies ,"In this webinar, our panel of experts will be reviewing the findings of a new report from Gowling WLG which explores Gen Z's attitudes to businesses, brands and ethics. ",~/getmedia/5437b28e-58ef-438d-abaa-27a3cfeff762/221010-tomorrows-world.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Webinar,06:28.0,06:31.0,11:00,12:00,GMT,0,NULL,"<p>Understanding the ESG landscape in 2022 is a major challenge for leadership teams. Not only must they contend with balancing the interest of their organisation&#39;s shareholders, regulators and employees but they must also manage a customer base that expects ESG issues to be taken seriously and will increasingly include, and be influenced by, Gen Z.</p>

<p>In this webinar, our panel of experts, including <a href=""https://www.linkedin.com/in/rae-stanton-smithson-ab96821a6/?originalSubdomain=uk"" target=""_blank"">Rae Stanton-Smithson</a>, Retail Earthcare Communications Lead at LUSH; <a href=""https://www.linkedin.com/in/rosina-watson-a2442343/?originalSubdomain=uk"" target=""_blank"">Dr Rosina Watson</a>, Head of Sustainability at Cranfield School of Management and <a href=""https://www.linkedin.com/in/amy-clamp-49170826/?originalSubdomain=uk"" target=""_blank"">Amy Clamp</a>, Commercial Director at insight and engagement agency Beatfreeks, will be reviewing the findings of a <a href=""~/en/tomorrows-world/"">new report from Gowling WLG which explores Gen Z&#39;s attitudes to businesses, brands and ethics</a>. We will discuss the importance of environmental and social responsibility to this generation, their power to influence behaviour and investment decisions and what organisations can learn to help them shape ESG strategies and prepare for tomorrow's world.</p>

<h2>What is it about?</h2>

<p>Generation Z is arguably the most powerful and influential generation we have ever seen. Social media has given this cohort of passionate digital natives the opportunity to connect and mobilise their peers to affect change like no generation before them. The world is at their feet but, importantly, Gen Z recognises the challenges facing tomorrow's world and has demonstrated an unrivalled commitment to ESG issues.</p>

<p>For today's business leaders, the combination of Gen Z's influence and passion for environmental and social responsibility represents a challenge for many when considering their approach to ESG, but also an opportunity to collaborate with them. For the first time, we are providing insight into the powerhouse of passionate young people and their influence on business strategy.</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession. Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,08:42.0,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?rsid=-ru8z3aaLvot9wK18y0zLU8eZaudYISDTc_Y1OgyYZXgJREz8_9w4cjnRkRKrBxF&react=REGISTER,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,b305a1b6-d0ba-41dc-8e53-579fd077b871,NULL,1a0f69ce-d1e7-42e2-96d6-0dbdd570161e,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,311E4011-F5C1-4BF1-A135-A720BFE33863,Chair,NULL,NULL,NULL,"Environmental, Social and Governance (ESG)",NULL,NULL,NULL,NULL,NULL
563,/Events/2022/Tax-dispute-resolution-monthly-update-Session-9,en-GB,C43963FD-7385-4A97-91AD-13E65291927B,Tax dispute resolution monthly update: Session 9,2022 Tax Dispute Resolution Monthly Update | Session 9,"Topics to be discussed include limiting the use of CRA audit information, successful remission order nets income tax refund, and taxpayers' appeals allowed due to respondent's non-compliance with Tax Court rules and orders.",~/getmedia/d1b4713a-9293-4542-b6b0-8a45965c339d/210901-Tax-dispute-resolution-session-1.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Webinar,00:00.0,00:00.0,12:00 p.m.,12:30 p.m.,EDT,1,30 minutes,"<p>With the Canada Revenue Agency deploying massive resources to crack down on perceived tax avoidance, it&#39;s now more important than ever to stay up to date with new CRA policies, legislation and case law. Please join Gowling WLG&#39;s Tax Dispute Resolution Group for our 30 minute interactive monthly tax dispute resolution (TDR) webinars, to keep up with current developments and learn practical insights on how to successfully resolve tax disputes with the CRA.</p>

<p>To submit a question or topic to be covered in future webinars, please email <a href=""mailto:TDR@gowlingwlg.com"">TDR@gowlingwlg.com</a>.</p>

<p>Topics that will be discussed in session 9 include:</p>

<ul>
	<li>Limiting the use of CRA audit information &ndash; <em>Jarvis</em> update</li>
	<li>Successful remission order nets income tax refund</li>
	<li>Taxpayers' appeals allowed due to respondent's non-compliance with Tax Court rules and orders</li>
</ul>

<h2>CPD information</h2>

<p>This program is eligible for up to 30 minutes of substantive CPD credits with the LSO, the LSBC and the Barreau du Québec. If you indicate on your registration form that a certificate of participation is required, we will email you your certificate after the session.</p>
",NULL,NULL,00:00.0,https://sites-gowlingwlg.vuturevx.com/106/6140/landing-pages/event-registration-(blank-form)---nov.-1--2022.asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,5e7a4c28-1f41-45d6-9485-1a23041b34f6;fa76a598-e571-4940-95e3-81b4cc0c7fe6,NULL,6b8f6eff-0e11-457f-a5fb-13663ac51e49;5cecda13-17b4-4875-b9e9-5edae877cf23;1af96e1d-70ea-4127-a64b-5aa72590536d,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/106/6140/landing-pages/event-registration-(blank-form)---nov.-1--2022.asp,Register now,GWLG.Canada,0,0CDA2C7E-BFD7-48AD-991D-C46DBB4E55AB,Speakers,NULL,NULL,NULL,"Tax, Tax Dispute Resolution",NULL,NULL,~/getmedia/7d4600ee-2d4c-4c84-ab31-88bba2e9afc9/221014-TDR-Monthly-Webinar-Nov.jpg.xml?width=930&height=493&ext=.jpg,NULL,_Blank
564,/Events/2022/Forced-labour-in-supply-chains,en-GB,2F2F4009-356C-4A40-B6BD-7AA3F4C2F2FA,Forced labour in supply chains,ESG reporting: Addressing the risk of forced labour in supply chains,"Join Gowling WLG and ESG advisory firm Millani for a panel discussion, where industry leaders will explore a number of key questions related to ESG and forced labour in supply chains.",~/getmedia/dde585ba-0f38-40dd-8cd3-8a0e53a83b0d/221019-chains-broken-link.jpg.xml?width=900&height=675&ext=.jpg,closeup of chains with a broken link,GWLG.Webinar,00:00.0,00:00.0,12:00 p.m.,1:00 p.m.,EDT,1,1 hour,"<p>Canadian businesses need to be prepared for Bill S-211, <em>An Act to enact the Fighting Against Forced Labour and Child Labour in Supply Chains Act and to amend the Customs Tariff</em>. If enacted, the legislation would require every company listed on a Canadian stock exchange &ndash; as well as Canadian businesses over a certain threshold of assets, revenues and/or employees, that produce, sell or distribute goods in Canada or elsewhere, or import into Canada goods produced outside of Canada &ndash; to file and publish an annual report on actions taken to prevent and reduce the risk of forced labour and child labour in its supply chains.</p>

<p>Laws requiring businesses to report on the risk of forced labour in their supply chains have already been enacted in the UK, Australia, California, and in many countries in Europe.</p>

<p>Unanimously passing its second reading in the House of Commons earlier this year, Bill S-211 could become law in Canada. What does this mean for your business?</p>

<p>On Nov. 9, join Gowling WLG and ESG advisory firm <a target=""_blank"" href=""https://www.millani.ca/"">Millani</a> for a panel discussion, where industry leaders will explore a number of key questions related to this topic, including:</p>

<ul>
	<li>What does this new legislation mean for Canadian issuers?</li>
	<li>How are investors responding and how do they plan to assess this type of information?</li>
	<li>How does a business implement this as part of its Environmental, Social and Governance (ESG) reporting?</li>
</ul>

<h2>Speakers</h2>

<ul>
	<li>Stephen Pike - Partner, Gowling WLG</li>
	<li>Charlotte Lombardi - ESG Manager, Millani</li>
	<li>Rosa van den Beemt - Head of Stewardship, BMO Global Asset Management</li>
</ul>

<h2>CPD information</h2>

<p>This program is eligible for up to 1 hour of substantive CPD credits with the LSO, the LSBC and the Barreau du Québec. If you indicate on your registration form that a certificate of participation is required, we will email you your certificate after the session.</p>
",NULL,NULL,00:00.0,https://sites-gowlingwlg.vuturevx.com/106/6814/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,b305a1b6-d0ba-41dc-8e53-579fd077b871,NULL,03d6dce1-2df8-4f24-8e6b-d7bcda0b6509,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/106/6814/landing-pages/event-registration-(blank-form).asp,Register now,GWLG.Canada,0,0CDA2C7E-BFD7-48AD-991D-C46DBB4E55AB,Gowling WLG Speaker,NULL,NULL,NULL,"Environmental, Social and Governance (ESG)",NULL,NULL,~/getmedia/29d04098-8752-42e6-a131-199789d95a27/ESG-forced-labour-supply-chains.jpg.xml?width=930&height=450&ext=.jpg,NULL,_Blank
565,/Events/2022/MJBizCon-cannabis-conference-2022,en-GB,71C646C5-0B22-4AC6-A09F-1609EC494804,MJBizCon cannabis conference 2022,Connect with Gowling WLG in Las Vegas at MJBizCon,MJBizCon 2022 arrives during a time when the global cannabis sector is experiencing significant dynamism – from flourishing M&A activity and market consolidation to major regulatory developments that open the door to new pathways toward growth.,~/getmedia/86a3c341-8bf6-4373-b92e-5f44ac5c2aac/221012-mjbiz-con.jpg.xml?width=930&height=450&ext=.jpg,Marijuana farm,GWLG.Conference,23:21.0,24:34.0,"to 18 November 2022, ",NULL,PST,0,NULL,"<p>MJBizCon 2022 arrives during a time when the global cannabis sector is experiencing significant dynamism &ndash; from flourishing M&amp;A activity and market consolidation to major regulatory developments that open the door to new pathways toward growth.</p>

<p>Members of our Cannabis Group are travelling to Las Vegas to shine a light on how cannabis companies everywhere are revising their business and legal strategies in response to this fast-moving landscape. During our visit, we would be eager to connect with you to learn more about your business, your goals and the obstacles you must overcome on your road to success.</p>

<p>For our return to MJBizCon, our team will be joining forces with the Canadian Securities Exchange, MGO and MNP LLP to form the &ldquo;Cannabis Growth Strategies Advisors,&rdquo; a collaborative&nbsp;&nbsp;alliance that works&nbsp;together to provide comprehensive legal, accounting, business consulting and logistical support to Canadian, U.S. and global companies operating in the cannabis sector.&nbsp;Read our full <a href=""http://gowlingwlg.com/en/news/firm-news/2022/mjbizcon-2022/"">press release</a></p>

<h2>Full-lifecycle solutions for cannabis companies</h2>

<p>Our global team can help you navigate the emergent legislative and regulatory frameworks that govern cannabis from jurisdiction to jurisdiction. From nuanced consumer protection issues to municipal real estate zoning by-laws, we ensure you have the knowledge and resources needed to anticipate obstacles and scale your business with confidence.</p>

<p>Our global team has extensive experience advising cannabis companies on multiple fronts, including with respect to public listings, financings, mergers and acquisitions, business development, licensing, product regulatory issues and distribution requirements. Whatever your needs, we have the unique talent and cross-border experience to help you advance in this evolving sector. <a href=""~/en/sectors/cannabis/global/"" target=""_blank"">Learn more</a></p>

<h2>Find us at the conference</h2>

<p>Visit us at&nbsp;<a href=""https://mjbiz22.mapyourshow.com/8_0/floorplan/?hallID=SL&amp;selectedBooth=booth~1218"" target=""_blank"">booth #1218</a>&nbsp;in the main exhibitor hall any time during the conference to learn more about the services and solutions we offer cannabis sector clients.</p>

<p>Using this&nbsp;<a href=""~/en/landing-pages/mjbiz-2022/schedule-a-meeting/"" target=""_blank"">online form</a>, you can also request a one-on-one meeting with our lawyers. We would be delighted to speak with you.</p>
",NULL,NULL,00:00.0,https://mjbizconference.com/,NULL,Learn more,7B919B83-6581-462D-ACA1-F3C0CB97A1E2,f79574fc-c0d9-4d62-b148-541e0b1a4844,NULL,NULL,286a9412-b4bf-49af-840a-a94f08cb65d1;9b9ae971-5e77-434c-ab69-7192c6cb65b6;f28dac32-e3cb-43c2-8b7e-4a1370878c8c;71ccc038-bafa-4238-8bac-1526bdcf0188;cc734a17-f747-445a-8ccf-47df174c90b9;1b16d33b-6132-403b-96c8-413ae88eb1ef;6c572d3a-d723-4fd8-9062-33ded31b983c;c2d606a0-c969-45ae-ac29-89c4cdc04c9d;61e60581-4c9f-4fce-b2f0-786d1dabaa77;1b773a30-0764-4fd8-b851-cf232b806324;de736d04-12a5-463c-a193-404af8ec7f0d,NULL,Conference,"Peter Simeon, Lewis Retik, Josh Almario, William Bjornsson, Jacob Cawker, Virginie Gauthier, Sharagim Habibi, Samantha Myers, Navraj (Nav) Pannu, Natalie S. Rizkalla-Kamel, Adam Sherman",MJBIZ 2022,57896,GWLG.Events,NULL,~/getmedia/e86d6349-87b9-45d4-84d1-8ecdae1769c8/221012-mjbiz-con-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/9db2dd14-6c14-4226-acca-a87bfed4b1f6/221012-mjbiz-con-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.Canada;GWLG.Global;GWLG.UnitedStates,0,NULL,Gowling WLG team,NULL,NULL,Cannabis,NULL,NULL,NULL,~/getmedia/4d5f6d1e-5701-4717-91b5-b541e210cfde/221020-MJBIZ-conference-social.jpg.xml?width=930&height=450&ext=.jpg,NULL,NULL
567,/Events/2022/Practical-Legal-Essentials-Real-Estate-Lending,en-GB,5D68ED57-5818-44D1-AE95-8D9BF541100C,Practical Legal Essentials: Real Estate Lending,Practical Legal Essentials for Commercial Lenders: Real Estate Lending,"Gowling WLG is pleased to invite you to the next installment of our 'Practical Legal Essentials' webinar series, this one focused on Real Estate Lending.",~/getmedia/a2a7ffa6-de9d-4798-93df-6efef1547001/221115-practical-essentials-commercial-lenders.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Webinar,30:35.0,30:41.0,10 a.m.,4 p.m.,EST,0,NULL,"<h3>Gowling WLG is pleased to invite you to the next installment of our &#39;Practical Legal Essentials&#39; webinar series, this one focused on Real Estate Lending.</h3>

<p>As Canada&rsquo;s lending market tightens and talk of recession looms, corporate and commercial banking professionals have reason to expose their real estate deals to a heightened degree of scrutiny.</p>

<p>To help you effectively navigate these economic headwinds, we invite you to join members of Gowling WLG&rsquo;s Real Estate &amp; Lending Group as they examine a range of timely real estate topics. These include:</p>

<ul>
	<li>Registrations on title a lender can&rsquo;t ignore</li>
	<li>Reviewing&nbsp;leases as a banker</li>
	<li>Financing a real estate acquisition</li>
	<li>Construction and development financing</li>
	<li>Essential components for a lender in a insurance policy&nbsp;</li>
</ul>

<p>This interactive webinar promises to be relevant to bankers of all seniority - from seasoned professionals to junior lending team members. Guests are welcome to stay for the entire event, or come and go throughout the day.</p>

<p><a class=""c-button"" href=""https://sites-gowlingwlg.vuturevx.com/96/6829/landing-pages/event-registration-(blank-form).asp"" target=""_blank"">Register today</a></p>

<h2>Agenda</h2>

<table border=""1"" cellpadding=""1"" cellspacing=""1"">
	<thead>
		<tr>
			<th scope=""col"">Time</th>
			<th scope=""col"">Session</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>10 a.m.</td>
			<td>
			<p><strong>Registrations on title a lender can&#39;t ignore&nbsp;</strong></p>

			<p>&ndash; Mark Giavedoni / Pam Green&nbsp;</p>
			</td>
		</tr>
		<tr>
			<td>11 a.m.</td>
			<td>
			<p><strong>Reviewing leases as a banker</strong>&nbsp;</p>

			<p>&ndash; Christina Pawliszyn</p>

			<p><strong>Taking a mortgage on a leasehold interest</strong>&nbsp;</p>

			<p>&ndash; Pam Green</p>
			</td>
		</tr>
		<tr>
			<td>Noon</td>
			<td>Break</td>
		</tr>
		<tr>
			<td>1 p.m.</td>
			<td>
			<p><strong>Financing a real estate acquisition</strong>&nbsp;(1 hour)</p>

			<p>&ndash; Kirsty Strong</p>
			</td>
		</tr>
		<tr>
			<td>2 p.m.</td>
			<td>
			<p><strong>Construction and development financing</strong>&nbsp;(1 hour)</p>

			<p>&ndash; Mark Giavedoni / Pam Green</p>
			</td>
		</tr>
		<tr>
			<td>3 p.m.</td>
			<td>
			<p><strong>Reviewing insurance</strong>&nbsp;</p>

			<p>&ndash; Matthijs van Gaalen and David Truscott (Risk Management Consultant)</p>
			</td>
		</tr>
	</tbody>
</table>

<p>&nbsp;</p>
",NULL,NULL,33:12.0,https://sites-gowlingwlg.vuturevx.com/96/6829/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,06cecb4c-c959-4674-9047-d5d8ee8c673c,ccb3b009-ba81-4ff5-8e8a-9200813a2a54,NULL,b1a1b208-ac53-4ad5-9a3e-12e168384a2f;22caa3a7-ab34-47a7-866b-892c7db3973a;d389ff00-d00d-4d26-9344-d8c7606b3950;386a87fe-3d0f-4432-b16b-49fef6228b94;aa7f72bc-6c00-4c8c-811a-d7567f35fc6a;3899e441-0468-41c1-b38c-bae87b30032a;cb2b14a9-d122-42c8-bc99-fcbfa67b407a,NULL,Webinar,"Mark Giavedoni, Pamela Green, Christina Pawliszyn, Kirsty Strong, Stephanie Harvey, Patrick M. Mc Ilhone, Matthijs van Gaalen",Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada,0,7B2EAA8A-8634-4718-AC77-777C716BB083,Speakers,NULL,NULL,Financial Institutions & Services,Banking & Finance,NULL,NULL,~/getmedia/a2a7ffa6-de9d-4798-93df-6efef1547001/221115-practical-essentials-commercial-lenders.jpg.xml?width=930&height=450&ext=.jpg,NULL,NULL
568,/Events/2022/Decarbonizing-the-transportation-sector,en-GB,9527EDF5-B577-4D8C-A017-062B387C5C1D,Decarbonizing the transportation sector,Energy Innovators Roundtable Series | Roundtable #3: Decarbonizing the transportation sector - EV's and the electricity grid,We will discuss the challenges and opportunities that electric vehicles (EVs) pose to Canada's energy and power industry.,~/getmedia/dadcec9a-08b9-4cc3-be1f-41229e4024f0/220408-electric-vehicle-charging.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Seminar,17-11-2022 05:00,17-11-2022 05:00,8:00 a.m.,10:00 a.m.,EST,1,1.5 hours,"<p>Join us on Nov. 17 for the final session in our Energy Innovator Roundtables series for 2022, where we will discuss the challenges and opportunities that electric vehicles (EVs) pose to Canada&#39;s energy and power industry.</p>

<p><strong>Background</strong></p>

<p>In June 2022, the world&#39;s largest manufacturer of electric-car batteries unveiled an electric-car battery with a reported range of over 1,000 kilometers on a single charge. This new battery, called the &quot;Qilin,&quot;&nbsp;is also reported to have a significantly faster charge rate than current EV battery technologies and it is scheduled to go into production in early 2023.</p>

<p>When combined with existing economic incentives for EV adoption, including current fuel price uncertainty, the Qilin battery and other competitive EV technologies are driving a period of accelerating consumer EV adoption. Thus far in 2022, for instance, Canadian EV sales have surged more than 50 per cent above 2021 sales.</p>

<p>How Canada manages the transition to cleaner modes of transportation is critical. If the federal and provincial governments succeed in supporting and effectively leveraging the transition, Canada could see the addition of over a quarter of a million new high-tech manufacturing jobs and the development of a burgeoning new industry. If not, the jobs and the economic opportunities will go elsewhere.</p>

<p>What types of challenges and opportunities do EVs present to Canadian electrical grid operators? Are local power distributors going to be able to keep up with growing EV charging requirements? Are there growth opportunities for utilities arising from rising EV adoption and the evolution of new charging-related businesses? Can our power system handle the advent of widespread EV charging or are upgrades needed?</p>

<p><strong>Format</strong></p>

<p>Gowling WLG&#39;s Energy Innovator Roundtables are informal and in-person events with an emphasis placed on frank information sharing, subject to the &#39;Chatham House Rule.&#39;&nbsp;The sessions are not recorded and, subject to health restrictions,&nbsp;held in-person. Participation is by invitation only and will gather approximately 25-30 leaders from across the private sector, government and non-governmental organizations.</p>

<h2>Speakers</h2>

<ul>
	<li>Thomas J. Timmins - Partner &amp; Leader - Energy Sector Group, Gowling WLG</li>
	<li>Cara Clairman - President &amp; CEO, Plug&#39;n Drive</li>
	<li>Helen Papachronis - Director E-Mobility, Alectra</li>
	<li>Imran Noorani - Chief Strategy Officer and Late Founder, Peak Power</li>
</ul>

<h2>CPD information</h2>

<p>This program is eligible for up to 1.5 hours of substantive CPD credits with the LSO,&nbsp;the LSBC and the Barreau du Québec.&nbsp;If you indicate on your registration form that a certificate of participation is required, we will email you your certificate after the session.</p>
",NULL,NULL,17-11-2022 13:00,https://sites-gowlingwlg.vuturevx.com/103/6699/landing-pages/event-registration-(blank-form)---nov.-17.asp,NULL,Register for this event,96095DC0-6261-4B55-A0C7-0995037BEF43,f1e960f5-8231-4c56-b7bf-9898ebb538c5,NULL,NULL,4c3c2534-e644-427f-9b61-e7cd1aec53cf,NULL,Seminar,Thomas J. Timmins,Gowling WLG Toronto,56909,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/103/6699/landing-pages/event-registration-(blank-form)---nov.-17.asp,Register now,GWLG.Canada,0,0CDA2C7E-BFD7-48AD-991D-C46DBB4E55AB,Gowling WLG Speaker,NULL,NULL,Energy,NULL,NULL,NULL,~/getmedia/0185c02d-c8b5-439c-8f62-ef4bd27b9886/221028-Energy-roundtable-innovators-decarbonizing-nov-17.jpg.xml?width=930&height=493&ext=.jpg,NULL,_Blank
569,/Events/2022/Workplace-Investigations-Workshop,en-GB,E89CFBC4-50D8-4290-8EDD-086146C23EF7,Workplace Investigations Workshop,Workplace Investigations Workshop,"To help you navigate these situations effectively, we invite you to register for our exclusive Employment, Labour and Equalities masterclass focused on the critical investigation skills that every organization needs to have in its arsenal.",~/getmedia/2933fa62-0b88-48bd-820e-f042dd7acf82/221101-group-working-together.jpg.xml?width=930&height=450&ext=.jpg,aerial view of a diverse group working together,GWLG.SpecialEvents,43:40.0,43:45.0,9 a.m.,5 p.m.,EST,1,6 hours,"<p>Workplace investigations can pose serious legal, financial and reputational risk to any organization if not conducted properly, with tact and professionalism. Indeed, for HR professionals and in-house counsel who must frequently manage this delicate process, there is little margin for error.</p>

<p>To help you navigate these situations effectively, we invite you to register for our exclusive Employment, Labour and Equalities masterclass focused on the critical investigation skills that every organization needs to have in its arsenal. Over the course of the day-long, in-person event, our seasoned employment lawyers will walk you through each step of a workplace investigation, providing practical tips and legal risk-management strategies along the way. Attendees will then have the opportunity to put their learning into practice through interactive tabletop exercises based on real-life scenarios. They will also receive practical materials that can be used to conduct future workplace investigations.</p>

<p>Attendees will be offered a light breakfast, snacks and lunch.</p>

<p>Price is $800 + HST.</p>

<p><strong>Space is limited, so please RSVP by November 25&nbsp;to reserve your spot.</strong></p>

<p><em>This program is eligible fo</em><em>r up to 6 hours of substantive Continuing Professional Development (CPD) credits with the LSO, the LSBC and the Barreau du Québec.</em></p>

<p><em>This program has been approved for 6 hours of&nbsp;CPD hours by the Human Resource Professionals Association (HRPA).&nbsp;</em></p>

<p style=""text-align: center;""><img alt="""" src=""~/getmedia/fbe9484c-5001-4ae4-a7df-a6354774cb6c/14-HRPA-CPD-Seal-RGB-300.jpg.xml?width=124&amp;height=116"" style=""width: 124px; height: 116px;"" /></p>

<h2>Agenda</h2>

<table>
	<thead>
		<tr>
			<th scope=""col"">Time</th>
			<th scope=""col"">Activity</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>8:30 - 9:00 a.m.</td>
			<td>Registration and light breakfast</td>
		</tr>
		<tr>
			<td>9:00 - 9:30 a.m.</td>
			<td>Introduction to workplace investigations</td>
		</tr>
		<tr>
			<td>9:30 - 10:30 a.m.</td>
			<td>What the law requires of employers</td>
		</tr>
		<tr>
			<td><strong>10:30 - 10:45 a.m.</strong></td>
			<td><strong>Mid-morning break</strong></td>
		</tr>
		<tr>
			<td>10:45 - 12:15 a.m.</td>
			<td>How to conduct a workplace investigation</td>
		</tr>
		<tr>
			<td><strong>12:15 - 1:15 p.m.</strong></td>
			<td><strong>Lunch Break - This will be a partial working lunch during which participants can review fact patterns in preparation for afternoon session</strong></td>
		</tr>
		<tr>
			<td>1:15 - 2:30 p.m.</td>
			<td>Putting things into action: Scenario 1</td>
		</tr>
		<tr>
			<td><strong>2:30 - 2:45 p.m.</strong></td>
			<td><strong>Afternoon break</strong></td>
		</tr>
		<tr>
			<td>2:45 - 4:30 p.m.</td>
			<td>Putting things into action: Scenario 2</td>
		</tr>
		<tr>
			<td>4:30 - 5:00 p.m.</td>
			<td>Final remarks and Q&amp;A</td>
		</tr>
	</tbody>
</table>
",NULL,NULL,44:24.0,https://www.eventbrite.ca/e/workplace-investigations-workshop-tickets-444218679027?,NULL,Learn more about pricing and RSVP,5CF9E103-2A23-401F-8D01-81ABC3653158,NULL,d8837737-40d2-4472-8a9e-ba4101ec2105,358f50ad-2a97-425e-a9e1-e0cc6b0e1b1b,c060a8eb-b8cd-4821-817d-e5e9b6677d5a;5d0d0341-b3e5-480d-9812-441dfc3ba63c,NULL,Special events,NULL,Waterloo Region,69,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada,0,AAC12E19-9639-4AE9-96FB-2454136F57BA,Speakers,NULL,NULL,NULL,"Employment, Labour & Equalities",Fast forward: Navigating change in Canada's new age of employment,NULL,~/getmedia/a5c26af2-7729-4af9-8730-c73d7e5cef18/221101-workplace-investigations-workshop.jpg.xml?width=1272&height=675&ext=.jpg,NULL,NULL
570,/Events/2022/Environmental-law-for-business-2022,en-GB,FCC8A5E6-DFB9-4217-BA14-1BE431BA14C6,Environmental law for business 2022,Environmental Law For Business™ 2022: A year in review,Members of Gowling WLG's Environmental Law Group will provide their thoughts on issues and trends seen over this past year and what's anticipated for 2023 in the rapidly evolving world of environmental law.,~/getmedia/dc57bea2-c025-4cea-b3c8-8af456843e92/221115-environmental-year-review-main.png.xml?width=930&height=450&ext=.png,scenic view of trees and river,GWLG.Seminar,15-11-2022 05:00,15-11-2022 05:00,8:00 a.m.,1:00 p.m.,EST,1,3 hours,"<p>Join us at the Gowling WLG Toronto office for &quot;Environmental Law For Business&trade; 2022: A year in review.&quot;&nbsp;Members of Gowling WLG&#39;s Environmental Law Group and industry professionals will provide their thoughts on issues and trends seen over this past year and what&#39;s anticipated for 2023 in the rapidly evolving world of environmental law.</p>

<p>These in-person discussions will focus on various topics, including:</p>

<ul>
	<li>Latest regulatory and legal developments and the impact on your operations</li>
	<li>New and unanticipated compatibility risks between land uses</li>
	<li>Developments and trends in Environmental,&nbsp;social,&nbsp;and governance (ESG)</li>
	<li>Environmental implications of the recent provincial and municipal elections</li>
</ul>

<h2>Agenda</h2>

<table>
	<thead>
		<tr>
			<th scope=""col"">Time</th>
			<th scope=""col"">Activity</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>8:00 a.m.</td>
			<td><strong>Registration &amp; light breakfast</strong></td>
		</tr>
		<tr>
			<td>8:30 a.m.</td>
			<td>
			<p><strong>Regulatory update (20 minutes CPD content)</strong></p>

			<p>Learn about the latest regulatory developments, including administrative monetary penalties and extended producer responsibility, and their impact on your operations with&nbsp;Jessica Boily.</p>
			</td>
		</tr>
		<tr>
			<td>8:50 a.m.</td>
			<td>
			<p><strong>Panel 1: Land use compatibility (55 minutes CPD content)</strong></p>

			<p>Peter Gross,&nbsp;Alex Sadvari&nbsp;and&nbsp;Angela Fang&nbsp;(a Land Use Planner at MGP) provide insights from their practice on new and unanticipated compatibility risks between land uses, moderated by&nbsp;Rod Northey.</p>
			</td>
		</tr>
		<tr>
			<td>9:45 a.m.</td>
			<td>
			<p><strong>Case law update (25 minutes CPD content)</strong></p>

			<p>Join&nbsp;Michael Finley&nbsp;and&nbsp;Chris Hummel&nbsp;for an update on the latest legal developments in Canada.</p>
			</td>
		</tr>
		<tr>
			<td>10:10 a.m.</td>
			<td><strong>Networking &amp; coffee break</strong></td>
		</tr>
		<tr>
			<td>10:30 a.m.</td>
			<td>
			<p><strong>Panel 2: Government relations (30 minutes CPD content)</strong></p>

			<p>Implications of the provincial and municipal elections with guest&nbsp;Robyn Gray&nbsp;from Sussex Strategy Group speaking with&nbsp;Adam Chamberlain.</p>
			</td>
		</tr>
		<tr>
			<td>11:00 a.m.</td>
			<td>
			<p><strong>Panel 3: ESG (60 minutes CPD content)</strong></p>

			<p>Hear about the latest trends and developments from cross-country ESG experts&nbsp;Liane Langstaff,&nbsp;Maya Stano&nbsp;and&nbsp;Stephen Pike, with&nbsp;Jurgita Ashley&nbsp;(Thompson Hine LLP, Cleveland, OH) providing the US perspective, moderated by&nbsp;Jennifer King.</p>
			</td>
		</tr>
		<tr>
			<td>12:00 p.m.</td>
			<td><strong>Lunch &amp; networking</strong></td>
		</tr>
	</tbody>
</table>

<h2>CPD information</h2>

<p>This event is eligible for up to 3 hours of Substantive/General credits toward the mandatory annual CPD requirement of the Law Society of Ontario and the Law Society of British Columbia.</p>
",NULL,NULL,15-11-2022 13:00,https://sites-gowlingwlg.vuturevx.com/103/6791/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,96095DC0-6261-4B55-A0C7-0995037BEF43,NULL,064c02f0-ff64-42f8-8a71-c8dece3600fd;b305a1b6-d0ba-41dc-8e53-579fd077b871,NULL,a3d4a3f0-a1db-4510-af22-4a93fb85bc66;29d7e340-a6af-49b5-b223-993a69997a78;8550c48f-5f32-4cf6-8d7f-b97dcce759f9;b0b875a2-a64e-4ad0-91e0-6abd2f7f60b5;72cdaf33-1510-4480-88df-fc5597a01488;f63465af-154c-4d26-b2ab-6bc7cc79f913;253ecee1-50cf-4b3c-b21d-2a672a89946d;16cf5398-6bf8-473c-b6a8-88461a57e071;03d6dce1-2df8-4f24-8e6b-d7bcda0b6509;5c5c6ec0-2ad9-4d03-887d-f87ab99dc202;6ed517b8-3709-4234-8c1b-a66d3f7e6080,NULL,Seminar,NULL,Gowling WLG Toronto,56909,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/103/6791/landing-pages/event-registration-(blank-form).asp,Register now,GWLG.Canada,0,C244C233-1946-46B1-9EE5-F3A7AD6E3E9B,Gowling WLG Speakers,NULL,NULL,NULL,"Climate Change and Environmental Law, Environmental, Social and Governance (ESG)",NULL,NULL,~/getmedia/4b8395c1-a324-4db5-8aff-fec156cf2454/221115-environmental-year-in-review.jpg.xml?width=930&height=450&ext=.jpg,NULL,_Blank
571,/Events/2022/Legal-tips-for-tech-scale-ups-financing-strategies,en-GB,5FBAAAC8-F082-49A4-B7F3-8681650A9AB1,Legal tips for tech scale-ups financing strategies,Legal tips for tech scale-ups: Financing strategies for growth,"For B.C. tech scale-ups ready to take the world by storm, access to capital can prove to be a major, and oftentimes complex, roadblock. ",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,close-up of group of people looking at financials,GWLG.Webinar,00:52.0,00:55.0,12 p.m.,1 p.m.,PDT,1,60 minutes,"<p>For B.C. tech scale-ups ready to take the world by storm, access to capital can prove to be a major, and oftentimes complex, roadblock. To be sure, there is no shortage of financing options &ndash; including IPOs, private equity financing, and M&amp;A. However, each carries its own risks and rewards that must be considered carefully in the context of your businesses&#39; growth plan.</p>

<p>In the final installment of our three-part &quot;Legal tips for tech scale-ups&quot; series, <strong>Tara Amiri-Khaledi</strong> and <strong>Aimee Halfyard </strong>unpack the opportunities and limitations associated with different financing strategies, and provide practical tips to help you determine the optimal path forward for your organization.</p>

<p><strong>Topics include:</strong></p>

<ul>
	<li>Organizing your company for financing success</li>
	<li>Venture Capital, Private Equity and Private M&amp;A options</li>
	<li>Going Public Transactions</li>
</ul>

<p><strong><em>This program is eligible for up to 60 minutes of general CPD credits with the LSBC.</em></strong></p>
",NULL,NULL,01:44.0,https://sites-gowlingwlg.vuturevx.com/106/6872/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,cdfc9b50-74c2-4af5-9508-342935f81ccd,NULL,NULL,59122736-dae2-43ac-9cfa-81aee775d919;6d48e624-97a1-45b1-9046-0fbe8bc1424d,NULL,Webinar,"Tara Amiri-Khaledi, Aimee Halfyard",Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/106/6872/landing-pages/event-registration-(blank-form).asp,Register today,GWLG.Canada,0,NULL,Speakers,NULL,NULL,Tech,NULL,NULL,NULL,~/getmedia/ac70ae35-3850-4d22-b831-8ca36ed7d5b1/221103-tech-scaleup-financing-strategies.jpg.xml?width=1272&height=675&ext=.jpg,NULL,_Blank
573,/Events/2022/Year-end-legal-review-for-in-house-counsel,en-GB,EAEC2B16-2EBD-48B2-B556-DC9E1204AE26,Year-end legal review for in-house counsel,Year-end legal review for in-house counsel,Join members of Gowling WLG's Toronto office for a broad year-end legal review specifically tailored to help in-house counsel manage risk and give shape to their 2023 strategies.,~/getmedia/6e785625-524b-4430-b2ba-8e22e66b0db4/221103-in-house-counsel-main-image.jpg.xml?width=930&height=450&ext=.jpg,group of people in a conference room,GWLG.Seminar,29-11-2022 05:00,29-11-2022 05:00,2:00 p.m.,6:30 p.m.,EST,1,3 hours,"<p>On Nov. 29,&nbsp;join members of Gowling WLG&#39;s Toronto office for a broad year-end legal review specifically tailored to help in-house counsel manage risk and give shape to their 2023 strategies.</p>

<p>Hosted by our Corporate team, over the course of this event, professionals from our Employment,&nbsp;Labour &amp; Equalities;&nbsp;Intellectual Property;&nbsp;Banking &amp; Finance;&nbsp;and Bankruptcy &amp; Insolvency groups will explore a number of timely legal issues and trends, providing practical tips and insights along the way. Each topic will be followed by a Q&amp;A.</p>

<p>Immediately following the presentations,&nbsp;we invite you to stay and connect with our team and each other at a cocktail reception.</p>

<p>Please note that this event is open&nbsp;to in-house counsel. If you have any questions please&nbsp;<a href=""mailto:shannon.wadsworth@gowlingwlg.com"">contact us</a>.&nbsp;</p>

<h2>Agenda</h2>

<table>
	<thead>
		<tr>
			<th scope=""col"">Time</th>
			<th scope=""col"">Activity</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>2:00 p.m.</td>
			<td><strong>Registration</strong></td>
		</tr>
		<tr>
			<td>2:15 p.m.</td>
			<td>
			<p><strong>Welcome &amp; Brief Corporate Update</strong><br />
			Marcus Hinkley - Partner, Gowling WLG</p>
			</td>
		</tr>
		<tr>
			<td>2:30 p.m.</td>
			<td>
			<p><strong>Employment</strong></p>

			<ul>
				<li>The right to disconnect</li>
				<li>Bill 88: Electronic monitoring</li>
				<li>Common law cause vs. ESA cause</li>
				<li>Employee sophistication and access to legal advice is not relevant to the validity of a termination provision</li>
			</ul>

			<p><strong>Speakers</strong><br />
			Andrew Bratt - Partner &amp; National Practice Group Leader &ndash; Employment, Labour &amp; Equalities<br />
			Alycia Riley - Associate</p>
			</td>
		</tr>
		<tr>
			<td>3:15<strong> </strong>p.m.</td>
			<td><strong>Intellectual Property</strong>
			<ul>
				<li>Tricks of the Trade(marks): Protecting your portfolio in a recession</li>
				<li>Sizing up the competition: How the Competition Act amendments impact businesses</li>
				<li>Publicity for Privacy:&nbsp;A spotlight on the most newsworthy changes (proposed and implemented) to Canada&#39;s privacy laws</li>
			</ul>

			<p><strong>Speakers</strong><br />
			Shelagh Carnegie -&nbsp;Partner &amp; Co-Head - Intellectual Property, Global<br />
			Daniel Cole -&nbsp;Partner &amp; Head of Toronto Intellectual Property Department<br />
			Jasmine Samra - Counsel, Gowling WLG</p>
			</td>
		</tr>
		<tr>
			<td>4:00 p.m.</td>
			<td><strong>Break</strong></td>
		</tr>
		<tr>
			<td>4:15 p.m.</td>
			<td><strong>Banking &amp; Finance</strong>
			<ul>
				<li>Current considerations and trends in negotiating credit agreements</li>
			</ul>

			<p><strong>Speakers</strong><br />
			Christopher Alam -&nbsp;Partner &amp; Lending Practice Group Leader<br />
			Lisa MacDonnell - Partner</p>
			</td>
		</tr>
		<tr>
			<td>5:00<strong> </strong>p.m.</td>
			<td><strong>Bankruptcy &amp; Insolvency</strong>
			<ul>
				<li>What&#39;s going on? Market trends in insolvency</li>
				<li>How to manage the impact of third-party insolvencies on your business
				<ul>
					<li>Customer insolvency</li>
					<li>Supplier / service provider insolvency</li>
					<li>Treatment of contracts with insolvent parties</li>
				</ul>
				</li>
				<li>Turnaround considerations: Best practices to mitigate financial distress
				<ul>
					<li>Portfolio review</li>
					<li>Re-financing</li>
					<li>D&amp;O liabilities</li>
				</ul>
				</li>
			</ul>

			<p><strong>Speakers</strong><br />
			Haddon Murray - Partner<br />
			Virginie Gauthier - Partner</p>
			</td>
		</tr>
		<tr>
			<td>5:45 p.m.</td>
			<td><strong>Cocktail reception &amp; networking</strong></td>
		</tr>
	</tbody>
</table>
",NULL,NULL,29-11-2022 19:00,mailto:shannon.wadsworth@gowlingwlg.com?subject=Year-end legal review for in-house counsel,NULL,Register for this event,96095DC0-6261-4B55-A0C7-0995037BEF43,NULL,ca126ce8-3692-45e8-a1be-aa0808b0c37e;d8837737-40d2-4472-8a9e-ba4101ec2105;08b9a44c-bb26-4255-9779-296a124fcbee;ccb3b009-ba81-4ff5-8e8a-9200813a2a54;cb3477a6-c725-4d55-8fa9-194abc3a4ec4,NULL,45042386-e87e-4fa2-8f87-101784526d0a;64c86b79-7dc4-409e-8260-f244f6349dc3;8ad0e3f6-68e6-45b9-a509-c5811ebc77af;bdad9de9-7ee2-4acc-bee7-e9e5bae30ed7;1b16d33b-6132-403b-96c8-413ae88eb1ef;4b827bd7-79e3-4db7-9446-950eaf10c14f;1453d552-9b71-42c2-bcb2-57addf177bb3;b8a82bd2-8273-4c44-b992-5214d19e0bc3;c060a8eb-b8cd-4821-817d-e5e9b6677d5a;1e89ead2-b051-4550-91fc-43919024c6e9,NULL,Seminar,NULL,Gowling WLG Toronto,56909,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,mailto:shannon.wadsworth@gowlingwlg.com?subject=Year-end legal review for in-house counsel,Register now,GWLG.Canada,0,0CDA2C7E-BFD7-48AD-991D-C46DBB4E55AB,Speakers,NULL,NULL,NULL,"Corporate, Employment, Labour & Equalities, Intellectual Property Law, Banking & Finance, Restructuring & Insolvency",NULL,NULL,~/getmedia/266cf1d6-739e-4992-b415-883fd09ed14d/221103-in-house-counsel-review.jpg.xml?width=930&height=493&ext=.jpg,NULL,_Blank
574,/Events/2022/Comotion-conference-2022,en-GB,7829B7FA-64AF-492E-97A9-5A2FD19736C8,Comotion conference 2022,Connect with Gowling WLG at CoMotion 22 in Los Angeles Consulate General of Canada Dinner,"Members of our team look forward to connecting with you in person at CoMotion 22 and learning more about your aspirations, opportunities and the legal risks you face on the road to success.",~/getmedia/ddd3a0c8-2ba5-4346-98d6-07bddf501055/221108-people-walking-mobility.jpg.xml?width=930&height=450&ext=.jpg,Business people walking on sidewalk,GWLG.Conference,19:31.0,NULL,NULL,NULL,PST,0,NULL,"<p>What is the future of mobility? As governments around the world place unprecedented focus on cities, zero-emission technologies, sustainable transportation, and transit systems, revolutionary possibilities for both the public and private sectors continue to emerge.</p>

<p>Gowling WLG is at the forefront of these exhilarating changes, offering clients a dedicated international, cross-practice team of lawyers who are passionate about all things automotive,&nbsp;infrastructure, renewable energy, hydrogen and clean tech. We accompany numerous U.S. clients with their expansion into Canada and are recognized by Chambers for our expertise in technology, infrastructure, intellectual property, automotive, construction &amp; engineering, energy, financial Institutions &amp; services, food &amp; beverage, life sciences, natural resources, real estate and retail. Like you, we&#39;re used to challenging conventional thinking and providing innovative strategies to help overcome the hurdles of tomorrow.</p>

<h2>Meet our team</h2>

<p>Members of our team look forward to connecting with you in person at the Consulate General of Canada Dinner as part of CoMotion 22 and learning more about your projects, opportunities and the legal risks you face on the road to success.</p>

<h2>Canada CoMotion VIP dinner</h2>

<p>On November 15, join Gowling WLG partner Laura Gheorghiu as she explores Canadian tax opportunities for U.S. investors into Canada as part of CoMotion&rsquo;s exclusive VIP dinner event.</p>

<p>Laura is a partner in Gowling WLG&rsquo;s Montréal office and member of the firm&rsquo;s national Tax Practice Group. Laura&#39;s practice focuses on M&amp;A, cross-border investment structures, corporate reorganizations, and national and multinational private equity funds. She also has significant experience in the taxation of new technologies &mdash; in particular, of providers of e-business and blockchain technology solutions.</p>

<h2>A comprehensive guide to doing business in Canada</h2>

<p>As one of Canada&#39;s leading business law, advocacy and intellectual property law firms, Gowling WLG understands the challenges of establishing and conducting business in this country. Explore our Doing Business in Canada guide for more information on our comprehensive legal service offering.</p>

<p><a href=""~/en/insights-resources/guides/2022/guide-to-doing-business-in-canada/"" target=""_blank""><img alt=""Guide to Doing Business in Canada"" src=""~/getmedia/a173a953-7629-4ce3-9c3f-4a4747a40d0e/guide-to-doing-business-in-canada-thumbnail.jpg.xml"" style=""width: 200px; height: 259px;"" /></a></p>

<h2>Top 5 things to consider when expanding into Canada</h2>

<ul>
	<li>Consider when you should use a subsidiary versus a branch office</li>
	<li>Lead with protecting your most valuable asset (is it your IP, your people?)</li>
	<li>Consider the Canadian-resident and control requirements for certain enhanced tax credits</li>
	<li>Review your privacy policy for compliance with new Canadian rules</li>
	<li>Consider the effectiveness of your structure from a tax perspective</li>
</ul>

<h2>Related thought leadership</h2>

<ul>
	<li><a href=""~/en/topics/what-is-a-smart-city/"" target=""_blank"">What is a smart city</a></li>
	<li><a href=""~/en/insights-resources/white-papers/2021/sustainable-cities-creating-a-smart-future/"" target=""_blank"">Sustainable cities: Creating a smart future</a></li>
	<li><a href=""~/en/insights-resources/articles/2022/federal-government-2022-fall-economic-statement/"" target=""_blank"">Federal Government 2022 Fall Economic Statement</a></li>
	<li><a href=""~/en/insights-resources/articles/2021/british-columbia-electric-vehicle-recharging/"" target=""_blank"">British Columbia paves the way for electric vehicle recharging</a></li>
	<li><a href=""~/en/insights-resources/podcasts/2022/plugged-into-energy-opportunities/"" target=""_blank"">Canadian energy podcast series | The energy exchange | Part 2: Plugged into energy opportunities</a></li>
	<li><a href=""~/en/insights-resources/articles/2021/why-hydrogen-and-why-now-with-myron-dzulynsky/"" target=""_blank"">Why hydrogen, and why now?</a></li>
	<li><a href=""~/en/insights-resources/on-demand-webinars/2021/the-role-of-hydrogen-in-canada/"" target=""_blank"">Canadian energy podcast series | Episode 3: The role of hydrogen in Canada</a></li>
	<li><a href=""~/en/insights-resources/articles/2022/canada-proposed-privacy-law-second-reading/"" target=""_blank"">Canada&#39;s proposed privacy law moves to second reading in the house of commons</a></li>
	<li><a href=""~/en/insights-resources/podcasts/2022/protecting-cleantech-inventions-in-canada/"" target=""_blank"">Protecting cleantech inventions in Canada</a></li>
	<li><a href=""~/en/insights-resources/podcasts/2022/value-of-carbontech-innovation-achieving-net-zero/"" target=""_blank"">Did you know carbontech innovation is helping Canada achieve net zero?</a></li>
	<li><a href=""~/en/insights-resources/podcasts/2022/canadian-energy-podcast-investments-in-hydrogen/"" target=""_blank"">Canadian energy podcast series | Episode 4:| Investments in hydrogen</a></li>
	<li><a href=""~/en/insights-resources/videos/2022/ip-for-life-sciences-startups/"" target=""_blank"">IP for Life Sciences startups: Protecting your most valuable assets</a></li>
	<li><a href=""~/en/insights-resources/podcasts/2021/adapting-to-the-15-minute-city-trend/"" target=""_blank"">How can retailers adapt to the 15-minute city trend?</a></li>
	<li><a href=""~/en/topics/canadas-new-trademarks-act/"" target=""_blank"">Canada&rsquo;s new <em>Trademarks Act</em></a></li>
	<li><a href=""~/en/insights-resources/on-demand-webinars/2022/legal-tips-tech-scale-up-employment-immigration/"" target=""_blank"">Legal tips for your Tech scale-up (Part II): Employment and Immigration Law</a></li>
</ul>
",NULL,NULL,00:00.0,https://comotionla.com/program-2022,NULL,Learn more,4D21C45E-CFBF-4FD0-9844-7057D211A499,de517572-4373-4b36-844b-18be93f6f9bc,ca126ce8-3692-45e8-a1be-aa0808b0c37e;b3f9fce6-b77c-4e15-978e-eaa664c609dc;d8837737-40d2-4472-8a9e-ba4101ec2105,NULL,NULL,NULL,Conference,"Laura Gheorghiu, Henry A. Harris",CoMotion 2022,58194,GWLG.Events,NULL,~/getmedia/330bdcd3-4031-4f1d-9b14-03c004210773/221108-people-walkiing-desktop2.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/09f6560c-57aa-48b1-822a-3d826e4937fa/221108-people-walkiing-mobile2.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,NULL,0,NULL,Contact us,NULL,NULL,Automotive,"Corporate, Competition Law & Antitrust, Employment, Labour & Equalities",NULL,NULL,~/getmedia/030d7d4e-6146-458d-afbb-dc369e9d610a/221108-Comotion-conference-social.jpg.xml?width=930&height=450&ext=.jpg,NULL,NULL
575,/Events/2022/Cost-and-interest-rate-impact-Canada-Real-Estate,en-GB,091B3A8B-2DE2-43A0-8400-4710A8EF9842,Cost and interest rate impact Canada Real Estate,Lending Seminar Series | Session 1: The impact of cost and interest rate increases on the Canadian real estate development industry,A panel of industry professionals will discuss the effect that cost and interest rate increases have had on the Canadian real estate development industry.,~/getmedia/10ceadc2-eed9-491f-9e39-176b65b16fc7/221110-lending-series-webinar-image.jpg.xml?width=930&height=450&ext=.jpg,Close up of hands typing on a laptop keyboard,GWLG.Webinar,00:00.0,00:00.0,1:00 p.m.,1:45 p.m.,EST,1,30 minutes,"<p>In 2022,&nbsp;the Canadian real estate development industry experienced a dramatic increase in hard and soft construction costs. Simultaneously,&nbsp;the significant surge in interest rates has not only raised development budgets but also impacted anticipated take-out by increasing both purchaser cost and cap rates (lowering valuations).</p>

<p>Join us for the first session of our new Lending seminar series,&nbsp;where a panel of industry professionals will discuss the effect that cost and interest rate increases have had on the Canadian real estate development industry. Panellists will share their insights on the impact on development budgets and schedules, financing provisions and requirements,&nbsp;and the application of force majeure provisions.</p>

<p>Attendees will have an opportunity to ask questions at the end of the panel discussion.</p>

<h2>Speakers</h2>

<ul style=""margin-left:0.3in;"">
	<li>Robert Farmer - Partner, Gowling WLG</li>
	<li>Marlon Bray - Senior Director, Cost &amp; Project Management, Altus Group</li>
	<li>Katriina Niitsoo - Vice President, Royal Bank of Canada - Real Estate Markets</li>
</ul>

<h2>CPD information</h2>

<p>This program is eligible for up to 30 minutes of substantive CPD credits with the LSO,&nbsp;the LSBC and the Barreau du Québec. If you indicate on your registration form that a certificate of participation is required, we will email you your certificate after the session.</p>
",NULL,NULL,00:34.0,https://sites-gowlingwlg.vuturevx.com/106/6868/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,06cecb4c-c959-4674-9047-d5d8ee8c673c,ccb3b009-ba81-4ff5-8e8a-9200813a2a54;679ed8d9-29fb-40af-9b27-98b2dd69e1e8,NULL,b18223db-e166-4820-b2ca-9d105412ac7a,NULL,Webinar,Robert Farmer,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/106/6868/landing-pages/event-registration-(blank-form).asp,Register now,GWLG.Canada,0,0CDA2C7E-BFD7-48AD-991D-C46DBB4E55AB,Gowling WLG Speaker,NULL,NULL,Financial Institutions & Services,"Banking & Finance, Real Estate Finance",NULL,NULL,~/getmedia/9b671f71-1244-45f2-8eea-ce79ea3d6c1b/221110-lending-seminar-series-session-1-interest-rate-real-estate.jpg.xml?width=930&height=493&ext=.jpg,NULL,_Blank
576,/Events/2022/Employment-labour-equalities-year-in-review,en-GB,0F883C6A-4093-4BB1-9AF4-574995B2825B,Employment labour equalities year in review,"Employment, Labour & Equalities Law Webinar Series | A year in review",Join a panel of experienced Gowling WLG employment lawyers as they unpack the cases and legal developments that have most impacted Canadian employers during the last 12 months. ,~/getmedia/09c0d922-6a79-4baf-b3be-8005ddce27e0/220304-ele-webinar-series-main-image.jpg.xml?width=930&height=450&ext=.jpg,Business people walking through reception area,GWLG.Webinar,00:00.0,00:00.0,8:30 a.m.,10:00 a.m.,EST,1,1.5 hours,"<p>Join a panel of experienced Gowling WLG employment lawyers as they unpack the cases and legal developments that have most impacted Canadian employers during the last 12 months. Topics that will be addressed during this seminar include:</p>

<ul style=""margin-left:0.3in;"">
	<li>The impact of COVID-19 on notice periods</li>
	<li>The latest update on the enforceability of mandatory vaccination policies and related constructive dismissal claims</li>
	<li>New developments in harassment claims and the consequences for employer&#39;s behaving badly</li>
	<li>The continuing attack on termination and forfeiture provisions</li>
</ul>

<p>Following the presentation,&nbsp;there will be time for a Q&amp;A session. We look forward to having you join us, and feel free to bring your most pressing employment questions. If you would like to send us your questions in advance,&nbsp;please submit them with your RSVP.</p>

<h2>CPD information</h2>

<p>This program is eligible for up to 1.5 hours of substantive CPD credits with the LSO,&nbsp;the LSBC and the Barreau du Québec.&nbsp;If you indicate on your registration form that a certificate of participation is required,&nbsp;we will email you your certificate after the session.</p>
",NULL,NULL,30:41.0,https://sites-gowlingwlg.vuturevx.com/106/6434/landing-pages/event-registration-(blank-form)---dec.-8.asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,d8837737-40d2-4472-8a9e-ba4101ec2105,NULL,64c86b79-7dc4-409e-8260-f244f6349dc3;39410df1-425d-4c6f-bea0-54d5e41e744a;2733c3c9-43b4-45f1-a164-ffdc7556ef2e;a510a502-96d3-4ad6-b74c-b3fb1df466af,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/106/6434/landing-pages/event-registration-(blank-form)---dec.-8.asp,Register now,GWLG.Canada,0,0CDA2C7E-BFD7-48AD-991D-C46DBB4E55AB,Speakers,NULL,NULL,NULL,"Employment, Labour & Equalities",NULL,NULL,~/getmedia/64933e5b-eb76-41a4-b3b7-995be98a8670/221208-ELE-year-in-review.jpg.xml?width=930&height=450&ext=.jpg,NULL,_Blank
577,/Events/2022/Tax-dispute-resolution-monthly-update-Session-10,en-GB,725F99AA-65D5-42F7-AA76-2EA9B31E5BC6,Tax dispute resolution monthly update: Session 10,2022 Tax Dispute Resolution Monthly Update | Session 10,"Topics include successful audit defense of proposed interest rate adjustment, update on mandatory disclosure rules for reportable and notifiable transactions, and rectification.",~/getmedia/d1b4713a-9293-4542-b6b0-8a45965c339d/210901-Tax-dispute-resolution-session-1.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Webinar,00:00.0,00:00.0,12:00 p.m.,12:30 p.m.,EST,1,30 minutes,"<p>With the Canada Revenue Agency deploying massive resources to crack down on perceived tax avoidance,&nbsp;it&#39;s now more important than ever to stay up to date with new CRA policies,&nbsp;legislation and case law. Please join Gowling WLG&#39;s Tax Dispute Resolution Group&nbsp;for our 30 minute interactive monthly tax dispute resolution (TDR) webinars, to keep up with current developments and learn practical insights on how to successfully resolve tax disputes with the CRA.</p>

<p>To submit a question or topic to be covered in future webinars, please email <a href=""mailto:TDR@gowlingwlg.com"">TDR@gowlingwlg.com</a>.</p>

<p>Topics to be discussed at session 10 include:</p>

<ul>
	<li>Transfer pricing case study: Successful audit defense of proposed interest rate adjustment</li>
	<li>Update on mandatory disclosure rules for reportable and notifiable transactions</li>
	<li>Rectification,&nbsp;a case study</li>
</ul>

<h2>Watch previous episodes</h2>

<p>This webinar is part of our Tax Dispute Resolution Monthly Update.&nbsp;<a href=""https://gowlingwlg.com/en/insights-resources/?page=1&amp;resourcetypes=GWLG.Webinar&amp;services=596&amp;sort=Date&amp;q=Tax%20dispute%20Resolution%20Monthly&amp;mode=anyword"">Watch more from the series &raquo;</a></p>

<h2>CPD information</h2>

<p>This program is eligible for up to 30 minutes of substantive CPD credits with the LSO, the LSBC and the Barreau du Québec.&nbsp;If you indicate on your registration form that a certificate of participation is required,&nbsp;we will email you your certificate after the session.</p>
",NULL,NULL,00:00.0,https://sites-gowlingwlg.vuturevx.com/106/6140/landing-pages/event-registration-(blank-form)---dec.-6--2022.asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,5e7a4c28-1f41-45d6-9485-1a23041b34f6;fa76a598-e571-4940-95e3-81b4cc0c7fe6,NULL,6b8f6eff-0e11-457f-a5fb-13663ac51e49;5cecda13-17b4-4875-b9e9-5edae877cf23;e1c3d552-15dd-4d34-addb-90e9203af46d,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/106/6140/landing-pages/event-registration-(blank-form)---dec.-6--2022.asp,Register now,GWLG.Canada,0,0CDA2C7E-BFD7-48AD-991D-C46DBB4E55AB,Speakers,NULL,NULL,NULL,"Tax, Tax Dispute Resolution",NULL,NULL,~/getmedia/a44b7d14-00c1-4497-b76d-7028796e47c0/221123-TDR-session-10-webinar-series_1.jpg.xml?width=930&height=493&ext=.jpg,NULL,_Blank
578,/Events/2022/Doing-business-in-the-metaverse,en-GB,87A44991-F03B-4D33-8B04-D60E385F179E,Doing business in the metaverse,Doing business in the metaverse: Threats and opportunities in Web3,"Join partners Monique Couture and Brent Arnold of Gowling WLG's Metaverse Task Force as they survey the IP, commercial and criminal risks for companies doing business in the metaverse.",~/getmedia/fc805724-858a-4c7f-bd63-c47160257fa5/221123-orange-circuit.jpg.xml?width=930&height=523&ext=.jpg,NULL,GWLG.Webinar,00:00.0,00:00.0,12:00 p.m.,1:00 p.m.,EST,1,1 hour,"<p>The metaverse presents a unique opportunity for business: a virtual,&nbsp;parallel universe where you can interact with customers, buy and sell real and virtual products, dabble in NFTs, or even buy or sell virtual &quot;real estate.&quot; But this panoply of virtual worlds also opens up a world of legal risks for business, from fraud to online defamation to cybercrime and intellectual property infringement.</p>

<p>On Dec. 8,&nbsp;join partners Monique Couture and Brent Arnold of Gowling WLG&#39;s Metaverse Task Force as they survey the IP, commercial and criminal risks for companies doing business in the metaverse, and discuss how businesses can protect themselves as they navigate this emerging digital frontier.</p>

<h2>CPD information</h2>

<p>This program is eligible for up to 1 hour of substantive CPD credits with the LSO,&nbsp;the LSBC and the Barreau du Québec.&nbsp;If you indicate on your registration form that a certificate of participation is required, we will email you your certificate after the session.</p>
",NULL,NULL,00:00.0,https://sites-gowlingwlg.vuturevx.com/106/6924/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,cdfc9b50-74c2-4af5-9508-342935f81ccd,08b9a44c-bb26-4255-9779-296a124fcbee,NULL,7c982ff4-2b05-446c-9f31-9d84cd6e9912;8881287e-24c9-49cc-9a9b-985ad209d75d,87a44991-f03b-4d33-8b04-d60e385f179e,Webinar,"Brent J. Arnold, Monique M. Couture",Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/106/6924/landing-pages/event-registration-(blank-form).asp,Register now,GWLG.Canada,0,0CDA2C7E-BFD7-48AD-991D-C46DBB4E55AB,Speakers,NULL,NULL,Tech,Intellectual Property Law,NULL,NULL,~/getmedia/aa38910d-c824-48c5-8674-e287ad745873/221128-Metaverse-webinar_.jpg.xml?width=930&height=493&ext=.jpg,NULL,_Blank
579,/Events/2023/Ten-years-after-Portas,en-GB,BD9AF1CF-BE66-4128-83E5-B531AE2EB290,Ten years after Portas,"Ten years after Portas, are our high streets delivering variety?","Join us to discuss the high street mix, mixed-use, and barriers to greater variety with our panel of experts.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,"Image of UK highstreet with overlaying text box. Thursday 26 January, 11 Text reads Event: Tens years after Portas, are our high streets delivering variety? Thursday 26 January, 11:00 - 13:00",GWLG.Seminar,26-01-2023 11:00,26-01-2023 13:00,11:00,13:00,GMT,0,NULL,"<p>It is a little over 10 years since the then Prime Minister, David Cameron, asked the broadcaster and retail consultant, Mary Portas, to review the state of our high streets. Central to the Portas Review recommendations was encouraging a greater mix of activities. As Mary Portas herself expressed:</p>

<p>&quot;I want to put the heart back into the centre of our high streets, re-imagined as destinations for socialising, culture, health, wellbeing, creativity, and learning. Places that will develop and sustain new and existing markets and businesses. The new high streets won&#39;t just be about selling goods. The mix will include shops but could also include housing, offices, sport, schools or other social, commercial, and cultural enterprises and meeting places. They should become places where we go to engage with other people in our communities, where shopping is just one small part of a rich mix of activities.&quot;</p>

<p>So, a decade later, how are we doing? Are we seeing the variety that Portas imagined? If not, what is stopping it?</p>

<p>Join us to discuss the high street mix, mixed-use, and barriers to greater variety with our panel of experts, including Leighton Chumbley, Chief Executive of Prime plc,&nbsp;Mark Robinson, Founder of Ellandi, and Chair of the High Streets Task Force,&nbsp;Tim Johnson, Chief Executive of Wolverhampton City Council and Alison Bembenek, Associate Director of&nbsp;Lichfields.</p>

<p>This session is designed for chief executives or other senior leaders of developers, investors, and estate organisations. It provides an opportunity to understand the key issues surrounding revitalisation of our high streets and to network with your peers, as well as our in-house experts.</p>

<p>This event is organised between Gowling WLG and <a href=""https://bpf.org.uk/"" target=""_blank"">The British Property Federation</a>. Audience participation will be encouraged and there will be time for Q&amp;A.</p>

<table>
	<thead>
		<tr>
			<th>Time</th>
			<th>Agenda item</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>11:00</td>
			<td>Registration &amp; refreshments</td>
		</tr>
		<tr>
			<td>11:15</td>
			<td>Welcome &amp; introduction</td>
		</tr>
		<tr>
			<td>11:20</td>
			<td>Panel discussion</td>
		</tr>
		<tr>
			<td>12:20</td>
			<td>Panel Q&amp;A</td>
		</tr>
		<tr>
			<td>12:30</td>
			<td>Informal lunch &amp; networking</td>
		</tr>
		<tr>
			<td>13:00</td>
			<td>Finish</td>
		</tr>
	</tbody>
</table>
","<p>This event is free of charge.</p>

<p>Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession. Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,25-01-2023 17:56,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?rsid=jOoH5qyJv5IUG99tSFu7gfRkPjUqE1RIN8HCZntEnnQoBog-7xBagxpPlDJhUSyY&react=All%20Reactions,NULL,Register for this event,58076178-DA60-4AB6-A07C-EF250971EBF7,59be9dcd-e5f0-43e4-9d50-442a658eda18;0357076d-2635-451a-8d67-ec01f9f3082b,c27f9d3f-c358-48fb-b057-9a291fea02aa;0397d82f-2e03-40d6-856c-712eb9bf6014,NULL,7e72946f-4a54-46f7-9040-36aaf58596bd,NULL,Seminar,Ed Colreavy,Birmingham,70,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,311E4011-F5C1-4BF1-A135-A720BFE33863,Speaker(s),NULL,NULL,"Real Estate, Retail, Leisure & Hotels","Real Estate, Real Estate Development",NULL,NULL,~/getmedia/b0b33798-7e63-4bb6-8d5a-507f9aaaf869/BPF-portas-event.png.xml?width=1272&height=675&ext=.png,NULL,NULL
580,/Events/2023/Employment-Update-Series-January-February-2023,en-GB,D9D0DE24-E0FF-449C-BEA1-5E91FD72E2DE,Employment Update Series - January/February 2023 ,Employment Update Series - January/February 2023 ,"Please join us for four live webinars in January and February, developed specifically for anyone dealing with HR and ER matters within their organisation, whether in-house lawyers, HR professionals or others.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,15:41.0,15:48.0,11:00,11:45,BST,0,NULL,"<p>As we begin 2023, we&#39;ll be taking stock of some of the key issues which employers will face in the workplace over the course of the year and beyond. With the economy still presenting challenges and post-pandemic working practices still bedding in, it&#39;s important to keep abreast of developments across the board. Our next series of live webinars are designed to help you identify and mitigate risk in your organisation, both in the short and long-term. Please join us for four live webinars in January and February, developed specifically for anyone dealing with HR and ER matters within their organisation, whether in-house lawyers, HR professionals or others.</p>

<p>All of the webinars will start at 11:00 and will last approximately 45 minutes, including time for questions.</p>

<hr align=""center"" size=""3"" width=""100%"" />
<p>Speaker - Jonathan Chamberlain: Tuesday 24 January 2023 at 11:00 - 11:45<br />
<strong>Artificial Intelligence &ndash; Help! My manager is a machine </strong><br />
AI has been touted as the Next Big Thing in HR. Indeed, it&#39;s already here. Or is it, really? And what does it mean for employment law and the employment relationship in any event? When you look beyond the hype, it is clear there are still profound questions that need answering and pitfalls to avoid. After all, to err is human: but to really foul up requires a computer&hellip;.<br />
<br />
Speaker - Karin Kiho: Thursday 26 January 2023 at 11:00 - 11:45<br />
<strong>Data protection at work: to look or not to look?</strong><br />
Monitoring staff at work is a legal minefield. Navigating it in compliance with data protection principles has been made all the more difficult with ICO guidance being buried in the depths of an out-of-date employment practices code. Luckily, the ICO has been busy updating many of its online resources; one such release is the &quot;Employment practices: monitoring at work draft guidance&quot; intended to help employers understand their data protection obligations. But what exactly are those obligations? Has anything changed since the last guidance was issued? Tune into this session to find out.<br />
<br />
Speaker - Jane Fielding: Tuesday 31 January 2023 at 11:00 - 11:45<br />
<strong>Philosophical beliefs - how far does protection extend? </strong><br />
There have been some significant and high profile decisions in 2022 in this area, particularly in relation to protection of gender critical/gender identity beliefs. Although several of those cases are ongoing with potential further appeals, in this session we will look at what questions have been answered so far on the scope of protection and what practical steps employers can take to make sure they are complying with the law<br />
<br />
Speaker - Jasmine Coyne: Thursday 2 February 2023 at 11:00 - 11:45<br />
<strong>Exits via settlement agreement - Are you getting it right?</strong><br />
After employment contracts, settlement agreements are one of the most common contracts that employers deal with but are you meeting the legal requirements? Are you protecting the business properly with due consideration? Spoiler alert: Consideration is one of the issues not to miss! Join us in this session for an update on the most common pitfalls when preparing settlement agreements.</p>

<hr align=""center"" size=""3"" width=""100%"" />
<p>During the sessions, the speakers will provide useful information and practical tips on their respective topics, and will answer as many questions as possible in the time available.<br />
<br />
<a href=""https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?RSID=9ZQds7cDe4fmfbtlJkUKvR1TgL9L5IUuzzjKnbsBRzMqVXull5CpgOkNTSM2to2I"" target=""_blank"">Please use this RSVP link</a> to sign up for the sessions that you would like to attend or click on the RSVP button below.</p>
",NULL,NULL,18:59.0,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?RSID=9ZQds7cDe4fmfbtlJkUKvR1TgL9L5IUuzzjKnbsBRzMqVXull5CpgOkNTSM2to2I,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,d8837737-40d2-4472-8a9e-ba4101ec2105,NULL,79205c59-28cb-4630-bd62-bf070ba732b0;265dca2d-30ab-44da-b194-c0378081d7d6;799cf040-59c7-4986-825a-e4b909364823;a184f00c-a582-4296-b689-c8e9a7db7b24;06098c5e-87c7-4c91-805f-3ad029667752,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,NULL,0,NULL,Speaker(s),NULL,NULL,NULL,"Employment, Labour & Equalities",NULL,NULL,NULL,NULL,NULL
581,/Events/2023/Artificial-Intelligence-management,en-GB,5E934FE2-CDB1-4CC7-92EA-7CC82C568A09,Artificial Intelligence – management,Artificial Intelligence – Help! My manager is a machine,"AI has been touted as the Next Big Thing in HR. Indeed, it's already here. Or is it, really? Please join us for our live webinar in January.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,"Image of AI machine with over laying text box. Text reads Employment Update Series: Artificial Intelligence - help my manager is a machine. Tuesday 24 January, 11:00 - 11:45 ",GWLG.Webinar,00:00.0,45:00.0,11:00,11:45,GMT,0,NULL,"<p>AI has been touted as the Next Big Thing in HR. Indeed, it&#39;s already here. Or is it, really? And what does it mean for employment law and the employment relationship in any event? When you look beyond the hype, it is clear there are still profound questions that need answering and pitfalls to avoid. After all, to err is human: but to really foul up requires a computer&hellip;.</p>

<hr />
<p>During the session, the speakers will provide useful information and practical tips on their respective topics, and will answer as many questions as possible in the time available.</p>

<p><a href=""https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?RSID=9ZQds7cDe4fmfbtlJkUKvR1TgL9L5IUuzzjKnbsBRzMqVXull5CpgOkNTSM2to2I"" target=""_blank"">Please use this RSVP link</a>&nbsp;to sign up for the sessions that you would like to attend.</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession.</p>

<p>Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,05:00.0,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?RSID=9ZQds7cDe4fmfbtlJkUKvR1TgL9L5IUuzzjKnbsBRzMqVXull5CpgOkNTSM2to2I,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,d8837737-40d2-4472-8a9e-ba4101ec2105,NULL,79205c59-28cb-4630-bd62-bf070ba732b0;06098c5e-87c7-4c91-805f-3ad029667752,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,"<h2>Employment Update Series - January/February 2023</h2>
",~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,40ECBAEA-9783-479A-8EB9-9D39F577C01D,Speaker(s),NULL,NULL,NULL,"Employment, Labour & Equalities",NULL,NULL,~/getmedia/450e6b12-0470-4ce8-8c73-fcda0bf4154f/Emp-series-ai.png.xml?width=1272&height=675&ext=.png,NULL,NULL
582,/Events/2023/Data-protection-at-work-to-look-or-not-to-look,en-GB,81A58B8F-D662-4FB8-B216-792CDBA9182F,Data protection at work: to look or not to look?,Data protection at work: to look or not to look?,Monitoring staff at work is a legal minefield. Navigating it in compliance with data protection principles has been made all the more difficult with ICO guidance being buried in the depths of an out-of-date employment practices code.,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,"Image of digital lock pad. Overlaying text box. Text reads Employment update series: Data protection at work: to look or not to look? Thursday 26 January, 11:00 - 11:45",GWLG.Webinar,00:00.0,45:00.0,11:00,11:45,GMT,0,NULL,"<p>Monitoring staff at work is a legal minefield. Navigating it in compliance with data protection principles has been made all the more difficult with ICO guidance being buried in the depths of an out-of-date employment practices code. Luckily, the ICO has been busy updating many of its online resources; one such release is the &quot;Employment practices: monitoring at work draft guidance&quot; intended to help employers understand their data protection obligations. But what exactly are those obligations? Has anything changed since the last guidance was issued? Tune into this session to find out.</p>

<hr />
<p>During the session, the speakers will provide useful information and practical tips on their respective topics, and will answer as many questions as possible in the time available.</p>

<p><a href=""https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?RSID=9ZQds7cDe4fmfbtlJkUKvR1TgL9L5IUuzzjKnbsBRzMqVXull5CpgOkNTSM2to2I"" target=""_blank"">Please use this RSVP link</a>&nbsp;to sign up for the sessions that you would like to attend.</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession.</p>

<p>Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,10:58.0,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?RSID=9ZQds7cDe4fmfbtlJkUKvR1TgL9L5IUuzzjKnbsBRzMqVXull5CpgOkNTSM2to2I,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,d8837737-40d2-4472-8a9e-ba4101ec2105,NULL,265dca2d-30ab-44da-b194-c0378081d7d6;06098c5e-87c7-4c91-805f-3ad029667752,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,"<h2>Employment Update Series - January/February 2023</h2>
",~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,40ECBAEA-9783-479A-8EB9-9D39F577C01D,Speaker(s),NULL,NULL,NULL,"Employment, Labour & Equalities",NULL,NULL,~/getmedia/2a1218c4-03b2-4714-8d8f-88607752d924/_Emp-series-data-protection.png.xml?width=1272&height=675&ext=.png,NULL,NULL
583,/Events/2023/How-far-does-protection-extend,en-GB,130EA03B-419B-442E-AD5B-1869EA65E8FB,How far does protection extend?,Philosophical beliefs - how far does protection extend?,"There have been some significant and high profile decisions in 2022 in this area, particularly in relation to protection of gender critical/gender identity beliefs.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,"Image of colleagues in a team meeting with overlaying text box. Text reads Employment Update Series: Philosophical beliefs - how far does protection extend? Tuesday 31 January, 11:00 - 11:45",GWLG.Webinar,00:00.0,45:00.0,11:00,11:45,GMT,0,NULL,"<p>There have been some significant and high profile decisions in 2022 in this area, particularly in relation to protection of gender critical/gender identity beliefs. Although several of those cases are ongoing with potential further appeals, in this session we will look at what questions have been answered so far on the scope of protection and what practical steps employers can take to make sure they are complying with the law.</p>

<hr />
<p>During the session, the speakers will provide useful information and practical tips on their respective topics, and will answer as many questions as possible in the time available.</p>

<p><a href=""https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?RSID=9ZQds7cDe4fmfbtlJkUKvR1TgL9L5IUuzzjKnbsBRzMqVXull5CpgOkNTSM2to2I"" target=""_blank"">Please use this RSVP link</a> to sign up for the sessions that you would like to attend.</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession.</p>

<p>Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,42:34.0,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?RSID=9ZQds7cDe4fmfbtlJkUKvR1TgL9L5IUuzzjKnbsBRzMqVXull5CpgOkNTSM2to2I,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,d8837737-40d2-4472-8a9e-ba4101ec2105,NULL,799cf040-59c7-4986-825a-e4b909364823;06098c5e-87c7-4c91-805f-3ad029667752,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,"<h2>Employment Update Series - January/February 2023</h2>
",~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,40ECBAEA-9783-479A-8EB9-9D39F577C01D,Speaker(s),NULL,NULL,NULL,"Employment, Labour & Equalities",NULL,NULL,~/getmedia/f1a19937-74f1-4cb6-a64b-dc48de7aec36/Emp-series-philosophical-beliefs.png.xml?width=1272&height=675&ext=.png,NULL,NULL
584,/Events/2023/Exits-via-settlement-agreement,en-GB,07C7C31C-0DBE-4C16-B21F-74A6B8E5C1CF,Exits via settlement agreement,Exits via settlement agreement - Are you getting it right?,"After employment contracts, settlement agreements are one of the most common contracts that employers deal with but are you meeting the legal requirements?",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,"Image of man's hand signing a contract with overlaying text box. Text reads employment update series: exits via settlement agreement - are you getting it right? Thursday 2 February, 11:00 - 11:45",GWLG.Webinar,00:00.0,45:00.0,11:00,11:45,GMT,0,NULL,"<p>After employment contracts, settlement agreements are one of the most common contracts that employers deal with but are you meeting the legal requirements? Are you protecting the business properly with due consideration? Spoiler alert: Consideration is one of the issues not to miss! Join us in this session for an update on the most common pitfalls when preparing settlement agreements.</p>

<hr />
<p>During the session, the speakers will provide useful information and practical tips on their respective topics, and will answer as many questions as possible in the time available.</p>

<p><a href=""https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?RSID=9ZQds7cDe4fmfbtlJkUKvR1TgL9L5IUuzzjKnbsBRzMqVXull5CpgOkNTSM2to2I"" target=""_blank"">Please use this RSVP link</a>&nbsp;to sign up for the sessions that you would like to attend.</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession.</p>

<p>Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,49:28.0,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?RSID=9ZQds7cDe4fmfbtlJkUKvR1TgL9L5IUuzzjKnbsBRzMqVXull5CpgOkNTSM2to2I,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,d8837737-40d2-4472-8a9e-ba4101ec2105,NULL,a184f00c-a582-4296-b689-c8e9a7db7b24;06098c5e-87c7-4c91-805f-3ad029667752,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,"<h2>Employment Update Series - January/February 2023</h2>
",~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,40ECBAEA-9783-479A-8EB9-9D39F577C01D,Speaker(s),NULL,NULL,NULL,"Employment, Labour & Equalities",NULL,NULL,~/getmedia/ae8022da-5bc0-4fc9-b90a-e1ba37ec0337/Emp-series-settlement-agreement.png.xml?width=1272&height=675&ext=.png,NULL,NULL
585,/Events/2023/ThinkHouse-Subsidy-control-in-the-UK,en-GB,27DAB954-DA59-4C6D-B368-2568C3F36121,ThinkHouse - Subsidy control in the UK ,Subsidy control in the UK - ThinkHouse,"On 4 January 2023, the UK's Subsidy Control Act entered into full force, introducing the UK's post-Brexit subsidy control regime. Samuel Beighton will outline the requirements of the new regime, and consider what these mean in practice for parties that give or receive financial support from public resources.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,33:50.0,34:00.0,11:00,12:00,GMT,1,1,"<p>On 4 January 2023, the UK&#39;s Subsidy Control Act entered into full force, introducing the UK&#39;s post-Brexit subsidy control regime.</p>

<p>To help public and private sector entities explore how this affects them, Gowling WLG partner Samuel Beighton will host a live webinar on Tuesday 24th January to discuss the Act. He will outline the requirements of the new regime, and consider what these mean in practice for parties that give or receive financial support from public resources.</p>

<p>Please register to secure your place on this free webinar.</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession. Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,55:00.0,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?RSID=hswI0KXP7WwBpxVlSbirRRIkjqLLqZIOQJWLfZ7a60R7TgjZ9xfJWYGHWl06ZXmg,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,5ad41b49-d460-489a-95b9-84c854eda6f1,b3f9fce6-b77c-4e15-978e-eaa664c609dc;2b77428d-a062-4314-9fcb-f5ea9e62dfc8;a7ba0b1b-cbe3-4b6d-bb8e-5835b1fbb08a,a143cbfd-d333-42a0-89a6-7287894464f1,f13a9240-2482-4077-be83-ebaa741dc3f0,NULL,Webinar,Samuel R Beighton,Webinar,34471,GWLG.Events,NULL,~/getmedia/5d57b23c-f4d3-44e3-a08e-7ee56360fd71/thinkhouse-snr-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/27fda93c-8849-4d7e-a292-bcc5eb1e7896/thinkhouse-snr-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,E6BA42AD-61F9-4D74-800C-018A82EFE8AA,Speaker(s),NULL,58076178-da60-4ab6-a07c-ef250971ebf7;9fbe191e-3bcf-45de-a2ba-338bb194fc9d;cec4ff07-ef16-4560-87e9-89e91d584491,Government Contracting & Public Sector ,"Competition Law & Antitrust, Public Law & Regulation, Public Procurement",ThinkHouse,"Birmingham, London, Leeds",NULL,NULL,NULL
586,/Events/2023/25th-Annual-Patents-Seminar-Birmingham,en-GB,E7D39F9A-6E2F-41E5-9321-F4494B665A56,25th Annual Patents Seminar - Birmingham,25th Annual Patents Seminar - Birmingham,"2022 has been a year of some upheaval for patent law. Join us in Birmingham for our Annual Patents Review we look at the key judgments and rulings, as well as the bigger picture for the patents landscape, in the UK.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Conference,59:03.0,59:09.0,09:30,12:30,GMT,0,NULL,"<p>2022 has been a year of some upheaval for patent law. In our Annual Patents Review we look at the key judgments and rulings, as well as the bigger picture for the patents landscape, in the UK. As ever we are keeping a keen eye on the Patents Court retaining its patent-friendly approach to the cases before it and we will be testing that by reference to the key judgments of the year.<br />
<br />
Alex Brodie (whose trial judgments manage to avoid the Annual Patents Review this year) will explain developments in SEP/FRAND which have seen the Courts take innovative and pragmatic approaches to the thorny issues of competing jurisdictions and the FRAND undertaking as well as wider tech patent disputes in 2022.<br />
<br />
Ailsa Carter will take us through the year&#39;s Statistical Review, while &quot;mystic Michael Carter&quot; will gaze into his crystal ball to see what is coming down the tracks in 2023. Alex Driver will take a sideways look at the impending Unified Patents Court through a series of considered case studies.</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession. Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,00:20.0,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?RSID=hswI0KXP7WwBpxVlSbirRRIkjqLLqZIOQJWLfZ7a60RBdqEYf4fepDgUoHcJcd1f,NULL,Register for this event,58076178-DA60-4AB6-A07C-EF250971EBF7,NULL,85764222-db69-43cf-af79-2c6fcbda9589,NULL,6767b2fc-7817-42ae-a54e-05595fe6c1cd;d960a618-a196-404c-b795-b884bc90e603;312328e0-04d7-434f-90ab-92006571de94;51f9af12-8e5e-4dde-8079-d56d710232ff;5db3a441-b3fa-4b52-8ae0-c392f36554cc,NULL,Conference,NULL,Birmingham,70,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,95EC9477-4594-4332-A463-E612BD16CA0C,Speaker(s),NULL,NULL,NULL,Patents,NULL,NULL,NULL,NULL,NULL
587,/Events/2023/25th-Annual-Patents-Seminar-London,en-GB,9D82B1B9-19E2-4B6C-9092-16CD804EC818,25th Annual Patents Seminar - London,25th Annual Patents Seminar - London,"2022 has been a year of some upheaval for patent law. Join us in London for our Annual Patents Review we look at the key judgments and rulings, as well as the bigger picture for the patents landscape, in the UK.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Conference,59:03.0,59:09.0,14:00,17:30,GMT,0,NULL,"<p>2022 has been a year of some upheaval for patent law. In our Annual Patents Review we look at the key judgments and rulings, as well as the bigger picture for the patents landscape, in the UK. As ever we are keeping a keen eye on the Patents Court retaining its patent-friendly approach to the cases before it and we will be testing that by reference to the key judgments of the year.<br />
<br />
Alex Brodie (whose trial judgments manage to avoid the Annual Patents Review this year) will explain developments in SEP/FRAND which have seen the Courts take innovative and pragmatic approaches to the thorny issues of competing jurisdictions and the FRAND undertaking as well as wider tech patent disputes in 2022.<br />
<br />
Ailsa Carter will take us through the year&#39;s Statistical Review, while &quot;mystic Michael Carter&quot; will gaze into his crystal ball to see what is coming down the tracks in 2023. Alex Driver will take a sideways look at the impending Unified Patents Court through a series of considered case studies.</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession. Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,00:00.0,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?RSID=hswI0KXP7WwBpxVlSbirRRIkjqLLqZIOQJWLfZ7a60RBdqEYf4fepDgUoHcJcd1f,NULL,Register for this event,9FBE191E-3BCF-45DE-A2BA-338BB194FC9D,NULL,85764222-db69-43cf-af79-2c6fcbda9589,NULL,6767b2fc-7817-42ae-a54e-05595fe6c1cd;d960a618-a196-404c-b795-b884bc90e603;312328e0-04d7-434f-90ab-92006571de94;51f9af12-8e5e-4dde-8079-d56d710232ff;5db3a441-b3fa-4b52-8ae0-c392f36554cc,NULL,Conference,NULL,London,71,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,95EC9477-4594-4332-A463-E612BD16CA0C,Speaker(s),NULL,NULL,NULL,Patents,NULL,NULL,NULL,NULL,NULL
588,/Events/2023/25th-Annual-Patents-Seminar-Webinar,en-GB,797A3C2A-BC31-4E32-94F0-0A9545BFBB24,25th Annual Patents Seminar - Webinar,25th Annual Patents Seminar - Webinar,"2022 has been a year of some upheaval for patent law. Join us for our Annual Patents Review webinar where we look at the key judgments and rulings, as well as the bigger picture for the patents landscape, in the UK.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,59:03.0,59:09.0,14:30,17:30,GMT,0,NULL,"<p>2022 has been a year of some upheaval for patent law. In our Annual Patents Review we look at the key judgments and rulings, as well as the bigger picture for the patents landscape, in the UK. As ever we are keeping a keen eye on the Patents Court retaining its patent-friendly approach to the cases before it and we will be testing that by reference to the key judgments of the year.<br />
<br />
Alex Brodie (whose trial judgments manage to avoid the Annual Patents Review this year) will explain developments in SEP/FRAND which have seen the Courts take innovative and pragmatic approaches to the thorny issues of competing jurisdictions and the FRAND undertaking as well as wider tech patent disputes in 2022.<br />
<br />
Ailsa Carter will take us through the year&#39;s Statistical Review, while &quot;mystic Michael Carter&quot; will gaze into his crystal ball to see what is coming down the tracks in 2023. Alex Driver will take a sideways look at the impending Unified Patents Court through a series of considered case studies.</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession. Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,00:00.0,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?RSID=hswI0KXP7WwBpxVlSbirRRIkjqLLqZIOQJWLfZ7a60RBdqEYf4fepDgUoHcJcd1f,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,85764222-db69-43cf-af79-2c6fcbda9589,NULL,6767b2fc-7817-42ae-a54e-05595fe6c1cd;d960a618-a196-404c-b795-b884bc90e603;312328e0-04d7-434f-90ab-92006571de94;51f9af12-8e5e-4dde-8079-d56d710232ff;5db3a441-b3fa-4b52-8ae0-c392f36554cc,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,95EC9477-4594-4332-A463-E612BD16CA0C,Speaker(s),NULL,NULL,NULL,Patents,NULL,NULL,NULL,NULL,NULL
589,/Events/2023/Annual-Review-of-Insolvency-conference-2023,en-GB,9EB71CBC-AC44-407B-ACD7-CAA25068015C,Annual Review of Insolvency conference 2023,See you in Calgary at the Annual Review of Insolvency Law Conference,"Gowling WLG is proud to be an innovator sponsor of this year's Annual Review of Insolvency Law (ARIL) Conference, and we look forward to connecting with organizations from across the insolvency and restructuring community.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Conference,30:55.0,30:55.0,7:30 a.m.,5:00 p.m.,CET,0,NULL,"<p>Gowling WLG is proud to be an innovator sponsor of this year&#39;s <a href=""https://cairp.ca/cgi/page.cgi/Annual_Review_of_Insolvency_Law.html"" target=""_blank"">Annual Review of Insolvency Law (ARIL) Conference</a>, and we look forward to connecting with organizations from across the insolvency and restructuring community.</p>

<p>Members of our national Restructuring &amp; Insolvency Group are excited to have the opportunity to meet with you and your team in Calgary. Reach out to one of our lawyers below or come and find us at the conference.</p>

<h2>Speaking engagements</h2>

<p>Over the course of the <a href=""https://cairp.ca/_Library/ARIL/2208420_ARIL_Conference_Brochure-015_-_with_links.pdf"" target=""_blank"">full-day conference</a>, our partners Sam Gabor, Haddon Murray and Virginie Gauthier will be participating in three panel discussions, which will focus on a variety of current and key topics in the industry.</p>

<p>Click the links below for more details about each session. We look forward to seeing you there.</p>

<table>
	<caption>Feb. 3, 2023 &ndash; Calgary TELUS Convention Centre</caption>
	<thead>
		<tr>
			<th>Speaker</th>
			<th>Session</th>
			<th>Time</th>
			<th>Location/Room</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>
			<p><a href=""~/en/people/sam-gabor/"" target=""_blank"">Sam Gabor</a></p>
			</td>
			<td>
			<p><a href=""https://cairp.ca/ARIL_2023_Panel_A.html"" target=""_blank"">Bits &amp; Bytes: The rise and fall of crypto</a></p>
			</td>
			<td>
			<p>10:30 &ndash; 11:10 a.m.</p>
			</td>
			<td>
			<p>Exhibition Hall D &amp; Annex</p>
			</td>
		</tr>
		<tr>
			<td>
			<p><a href=""~/en/people/haddon-murray/"" target=""_blank"">Haddon Murray</a></p>
			</td>
			<td>
			<p><a href=""https://cairp.ca/ARIL_2023_Panel_D.html"" target=""_blank"">Regulators fines, penalties, restitution orders - Is it survival or fresh start?</a></p>
			</td>
			<td>
			<p>11:30 a.m. &ndash; 12:10 p.m.</p>
			</td>
			<td>
			<p>Exhibition Hall C</p>
			</td>
		</tr>
		<tr>
			<td>
			<p><a href=""~/en/people/virginie-gauthier/"" target=""_blank"">Virginie Gauthier</a></p>
			</td>
			<td>
			<p><a href=""https://cairp.ca/ARIL_2023_Panel_H.html"" target=""_blank"">A kinder, gentler process? The increasing use of corporate statutes in Canada to restructure and liquidate distressed entities</a></p>
			</td>
			<td>
			<p>2:40 &ndash; 3:20 p.m.</p>
			</td>
			<td>
			<p>Exhibition Hall D &amp; Annex</p>
			</td>
		</tr>
	</tbody>
</table>

<h2>Who we are</h2>

<p>Our award-winning Restructuring &amp; Insolvency Group in Canada, one of the largest practices of its kind in the nation, delivers tailored solutions to clients from coast to coast. From our seven offices across the country, our lawyers work closely with debtors and creditors alike, helping them fully understand the options available to them before determining a strategic path forward.</p>

<p>No matter the situation or the stakes involved, our aim is to resolve issues swiftly, pragmatically and cost-effectively. In doing so, we harness significant experience across virtually every industry sector, including in the context of complex cross-border transactions. Learn more about our <a href=""~/en/services/restructuring-insolvency/#canada"" target=""_blank"">Restructuring &amp; Insolvency Group</a>.</p>
",NULL,NULL,00:01.0,~/en/services/restructuring-insolvency/#canada,NULL,Learn more about our services,D2B8FA38-AF0C-4DC4-9F2A-63B200DBBDFB,NULL,cb3477a6-c725-4d55-8fa9-194abc3a4ec4,NULL,31589b1d-8773-40f3-b07d-0b7a1a5eee2f;1b16d33b-6132-403b-96c8-413ae88eb1ef;46503468-daa2-4925-9e67-563efcae08f8;37b72b46-1f45-4749-8ed2-c61b6f37a0e1;4c19a7dc-0f41-4d79-bee9-5d126e9e317f;d0937c70-9d37-47b7-9ba6-ffa4f5423ec1;46a7acdd-7e1b-467a-8a0e-a6e0fe114c8b;b8a82bd2-8273-4c44-b992-5214d19e0bc3;97dda124-58f4-4c7e-a897-3b46fb44fb4e;0211299b-31e8-4586-a238-5f8eb0263875;6c0f4ae4-3e0a-4ccf-b507-f7e78541ba3a,NULL,Conference,NULL,ARIL 2022,58801,GWLG.Events,NULL,~/getmedia/c7214054-f9d7-4a61-979a-59af7d9a3e94/230113-Calgary-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/14eebc4f-dd34-4ca0-86c6-bde254735b6c/230113-Calgary-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,Contact our team members attending the ARIL conference:,NULL,NULL,NULL,Restructuring & Insolvency,NULL,NULL,~/getmedia/b4c4a029-9ef3-416b-b9d6-3ea52cf3f4f2/ARIL-Conf-Social-tile.jpg.xml?width=930&height=450&ext=.jpg,NULL,NULL
590,/Events/2023/Connect-with-Gowling-WLG-in-Las-Vegas-at-TMA,en-GB,8C8B771C-48CD-415A-8408-70DC0132AA1F,Connect with Gowling WLG in Las Vegas at TMA,Connect with Gowling WLG in Las Vegas at the TMA Distressed Investing Conference,"The annual TMA Distressed Conference is taking place Jan. 31 to Feb. 3 in Las Vegas, and an experienced team of Gowling WLG restructuring & insolvency lawyers will be on hand for the entire conference.",~/getmedia/e99c539d-a41a-4c2d-8a95-6a3ec67e11a3/230116-las-vegas-TMA-DIC-conference-Wynn-hotel.jpg.xml?width=930&height=450&ext=.jpg,"Las Vegas Strip, Nevada at night",GWLG.Conference,01:38.0,01:46.0,NULL,NULL,PST,0,NULL,"<p align=""left"">Regarded as a leading global event for networking and dealmaking in the restructuring and distressed investing world, the <a href=""https://distressed.turnaround.org/"" target=""_blank"">Turnaround Management Association (TMA) Distressed Investing Conference</a> will bring together hundreds of industry professionals &ndash; and we can&#39;t wait to see you there.</p>

<p align=""left"">The annual TMA Distressed Conference is taking place Jan. 31 to Feb. 3 in Las Vegas, and an experienced team of Gowling WLG restructuring &amp; insolvency lawyers will be on hand for the entire conference.</p>

<p align=""left"">Interested in saying hello? We are eager to connect with you and your team. Reach out to one of our lawyers below or come and find us at the conference. We hope to see you later this month.</p>

<p align=""left"">In the meantime, learn more about our firm below and the services we offer our clients.</p>

<p><a class=""c-button-red"" href=""#team"">Meet this year&#39;s TMA team</a></p>

<h2>Who we are</h2>

<p>Gowling WLG is a global sector-focused firm with legal professionals based in major commercial and financial centres around the world.</p>

<p>Our award-winning <a href=""~/en/services/restructuring-insolvency/#canada"">Restructuring &amp; Insolvency Group</a> in Canada, one of the largest practices of its kind in the nation, delivers tailored solutions to clients from coast to coast. From our seven offices across the country, our lawyers work closely with debtors and creditors alike, helping them fully understand the options available to them before determining a strategic path forward.</p>

<p>No matter the situation or the stakes involved, our aim is to resolve issues swiftly, pragmatically and cost-effectively. In doing so, we harness significant experience across virtually every industry sector, including in the context of complex cross-border transactions. <a href=""~/en/services/restructuring-insolvency/#canada"">Learn more</a>.</p>

<h3>Our services include:</h3>

<ul>
	<li>Advising lenders and other stakeholders on restructurings and distressed and recovery situations</li>
	<li>CCAA, debtors and BIA restructurings and enforcement of secured creditors&#39; rights</li>
	<li>Corporate restructurings</li>
	<li>Creditor, supplier, and customer negotiations</li>
	<li>Directors&#39; liability and duties</li>
	<li>Distressed M&amp;A transactions</li>
	<li>Early-stage financial and operational restructurings</li>
	<li>Forbearance and accommodation arrangements</li>
	<li>Insolvency risks in structured transactions</li>
	<li>Interim and permanent financing solutions</li>
	<li>Lender liability issues</li>
	<li>Regulatory compliance</li>
</ul>

<h2>Global reach</h2>

<p><a href=""~/en/global-reach/"" style=""border: none!important;""><img alt=""Go to Gowling WLG's global reach page."" src=""~/getmedia/f3eca74a-4d91-447c-a001-b5f5c4653be3/220923-Office-Locations-only.png.xml?width=498&amp;height=256"" style=""width: 498px; height: 256px;"" /></a></p>

<p>Our Restructuring &amp; Insolvency Group serves clients in several international jurisdictions, and it&#39;s supported by a <a href=""~/en/global-reach/"">global firm</a> that spans Canada, the UK, Europe, the Middle East, and Asia. We see the world from the perspective of our clients, and collaborate across countries, offices, service areas, and sectors to help them succeed &ndash; no matter how challenging the circumstances.</p>

<p><a id=""team"" name=""team""></a></p>
",NULL,NULL,36:22.0,https://gowlingwlg.com/en/events/2023/connect-with-gowling-wlg-in-las-vegas-at-tma/#team,NULL,Meet the team,6F281F9C-30C6-4F32-A6A0-52B2CDFDB8F1,NULL,cb3477a6-c725-4d55-8fa9-194abc3a4ec4,NULL,5ae5a269-9c5f-4332-920e-28b31ec9066e;02fd8d8c-b165-4102-bfaa-c95935dd2803;1b16d33b-6132-403b-96c8-413ae88eb1ef;37b72b46-1f45-4749-8ed2-c61b6f37a0e1;1a1b98be-fdfb-44fe-abe0-329a6cb018f0;ff9a22b0-45c1-467b-b04f-52d3b451ac4d,NULL,Conference,NULL,Encore at Wynn Las Vegas,58863,GWLG.Events,NULL,~/getmedia/034b243e-939a-4beb-a619-32aafce7e2ae/230110-las-vegas-TMA-DIC-conference-Wynn-hotel.jpg.xml?width=1193&height=237&ext=.jpg,~/getmedia/19ee7210-3a65-4d81-ad3a-a0df8851480c/230116-las-vegas-TMA-DIC-conference-Wynn-hotel-mobile.jpg.xml?width=550&height=500&ext=.jpg,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,Meet the TMA DIC 2023 team,NULL,NULL,NULL,Restructuring & Insolvency,NULL,NULL,~/getmedia/07821ef2-cfc7-427e-b4c8-fdb34c260182/230110-TMA-DI-Conference-Social-Tile.jpg.xml?width=1200&height=628&ext=.jpg,NULL,NULL
592,/Events/2023/ThinkHouse-Spring-Seminar-2023-London,en-GB,DA3AF247-618A-49A4-B949-06A940220450,ThinkHouse - Spring Seminar 2023 - London,ThinkHouse Spring Seminar 2023 - London,"Join us in London for a morning of legal updates and training developed specifically for senior in-house lawyers, focussed on the challenges and opportunities facing businesses in 2023.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,23-03-2023 11:45,23-03-2023 11:46,09:15,13:45,GMT,1,3,"<p>Join us for a morning of legal updates and training developed specifically for senior in-house lawyers, focussed on the challenges and opportunities facing businesses in 2023. The seminar offers a great opportunity to network with existing and new in-house counsel peers, whilst keeping your training up to date.</p>

<h2>IP strategies for the future</h2>

<p>The rise of data, digitisation, social media, influencers, Web3, NFTs, the &quot;metaverse&quot;, AI-generated inventions, images and text, voice cloning, deep fakes and other &quot;disruptive&quot; trends are changing business models. Companies need to update their IP strategies to keep up. Matt Hervey will outline key trends, examine the relevance of traditional IP rights and explain the increasing importance of trade secrets, contractual frameworks and practical measures to protect key assets. He will highlight gaps in existing IP rights that could to be addressed through regulation, the expansion of IP rights or unfair competition and explore business models that could make IP redundant.</p>

<h2>Insolvency in your supply chain</h2>

<p>With insolvency rates rising and a recession on the horizon, even robust businesses are vulnerable to the risk of key customers or suppliers getting into financial difficulty. Tom Pringle will discuss the risks an insolvency in the supply chain poses, the tools an insolvent counterparty has at their disposal and what you can do when you are faced with this problem.</p>

<h2>Alternative routes to qualification</h2>

<p>The introduction of the SQE has fundamentally changed the way Solicitors in the UK qualify. One of the key drivers of this change was a desire to widen access to the profession. At Gowling WLG we launched our apprenticeship pathway in 2015 and currently have over 30 apprentices on programme. In this session Lucy Dolan will share our experiences of launching and running our pioneering apprenticeship programmes, highlighting key learnings that might impact any business considering taking this route.</p>

<h2>Contract law update</h2>

<p>In the final session of the day, Andrew Smith will review the key changes in B2B contract law over the last 12 months, highlighting the specific impact it has on drafting.</p>

<p>Places are limited, so please use the registration button to secure your attendance.</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession. Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,17-03-2023 17:00,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?RSID=gKvQXAgTJRn4LYlEEryepBrEkkxBIGJQMvlCm6Hk4aAVPTNBf6ZaY_wrpNbgCohM,NULL,Register for this event,9FBE191E-3BCF-45DE-A2BA-338BB194FC9D,NULL,08b9a44c-bb26-4255-9779-296a124fcbee;cb3477a6-c725-4d55-8fa9-194abc3a4ec4;549cbe28-f188-44cd-85c0-0f4e23a23817,a143cbfd-d333-42a0-89a6-7287894464f1,a198222e-fff0-47b3-bbca-b7c042e76a69;453e01a7-5d2e-4ac3-93d5-96ff46cb4607;742aa35b-b58b-4d7c-a95e-820a420ada54;9824f4ce-4010-4665-8f86-75ad1450fbe0,NULL,Seminar,NULL,London,71,GWLG.Events,NULL,~/getmedia/5d57b23c-f4d3-44e3-a08e-7ee56360fd71/thinkhouse-snr-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/27fda93c-8849-4d7e-a292-bcc5eb1e7896/thinkhouse-snr-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,B1C224F8-2DD5-4CB9-863C-9EDE6FFDA40B,Speaker(s),NULL,9fbe191e-3bcf-45de-a2ba-338bb194fc9d,NULL,"Intellectual Property Law, Restructuring & Insolvency, Commercial",ThinkHouse,London,NULL,NULL,NULL
593,/Events/2023/ThinkHouse-Spring-Seminar-2023-Birmingham,en-GB,C8D97DFB-C376-4AF6-A4EA-D76CBB9716DB,ThinkHouse - Spring Seminar 2023 - Birmingham,ThinkHouse Spring Seminar 2023 - Birmingham,"Join us in Birmingham for a morning of legal updates and training developed specifically for senior in-house lawyers, focussed on the challenges and opportunities facing businesses in 2023.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,21-03-2023 11:45,21-03-2023 11:46,09:15,13:45,GMT,1,3,"<p>Join us for a morning of legal updates and training developed specifically for senior in-house lawyers, focussed on the challenges and opportunities facing businesses in 2023. The seminar offers a great opportunity to network with existing and new in-house counsel peers, whilst keeping your training up to date.</p>

<h2>IP strategies for the future</h2>

<p>The rise of data, digitisation, social media, influencers, Web3, NFTs, the &quot;metaverse&quot;, AI-generated inventions, images and text, voice cloning, deep fakes and other &quot;disruptive&quot; trends are changing business models. Companies need to update their IP strategies to keep up. Matt Hervey will outline key trends, examine the relevance of traditional IP rights and explain the increasing importance of trade secrets, contractual frameworks and practical measures to protect key assets. He will highlight gaps in existing IP rights that could to be addressed through regulation, the expansion of IP rights or unfair competition and explore business models that could make IP redundant.</p>

<h2>Insolvency in your supply chain</h2>

<p>With insolvency rates rising and a recession on the horizon, even robust businesses are vulnerable to the risk of key customers or suppliers getting into financial difficulty. Tom Pringle will discuss the risks an insolvency in the supply chain poses, the tools an insolvent counterparty has at their disposal and what you can do when you are faced with this problem.</p>

<h2>Alternative routes to qualification</h2>

<p>The introduction of the SQE has fundamentally changed the way Solicitors in the UK qualify. One of the key drivers of this change was a desire to widen access to the profession. At Gowling WLG we launched our apprenticeship pathway in 2015 and currently have over 30 apprentices on programme. In this session Lucy Dolan will share our experiences of launching and running our pioneering apprenticeship programmes, highlighting key learnings that might impact any business considering taking this route.</p>

<h2>Contract law update</h2>

<p>In the final session of the day, Andrew Smith will review the key changes in B2B contract law over the last 12 months, highlighting the specific impact it has on drafting.</p>

<p>Places are limited, so please use the registration button to secure your attendance.</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession. Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,20-03-2023 17:00,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?RSID=gKvQXAgTJRn4LYlEEryepBrEkkxBIGJQMvlCm6Hk4aAVPTNBf6ZaY_wrpNbgCohM,NULL,Register for this event,58076178-DA60-4AB6-A07C-EF250971EBF7,NULL,08b9a44c-bb26-4255-9779-296a124fcbee;cb3477a6-c725-4d55-8fa9-194abc3a4ec4;549cbe28-f188-44cd-85c0-0f4e23a23817,a143cbfd-d333-42a0-89a6-7287894464f1,a198222e-fff0-47b3-bbca-b7c042e76a69;453e01a7-5d2e-4ac3-93d5-96ff46cb4607;742aa35b-b58b-4d7c-a95e-820a420ada54;9824f4ce-4010-4665-8f86-75ad1450fbe0,NULL,Seminar,NULL,Birmingham,70,GWLG.Events,NULL,~/getmedia/5d57b23c-f4d3-44e3-a08e-7ee56360fd71/thinkhouse-snr-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/27fda93c-8849-4d7e-a292-bcc5eb1e7896/thinkhouse-snr-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,B1C224F8-2DD5-4CB9-863C-9EDE6FFDA40B,Speaker(s),NULL,58076178-da60-4ab6-a07c-ef250971ebf7,NULL,"Intellectual Property Law, Restructuring & Insolvency, Commercial",ThinkHouse,Birmingham,NULL,NULL,NULL
594,/Events/2023/Understanding-amendments-Investment-Canada-Act,en-GB,4DCC87CC-6424-4EC9-93FA-6DD807D2BC49,Understanding amendments Investment Canada Act,Understanding the recent proposed amendments to the <em>Investment Canada Act</em>,"Join us on Feb. 1 for an informative webinar, where we will take a look at Canada's current foreign investment review process, the recent treatment of Chinese investment into Canada and the impact which the proposed amendments to the Investment Canada Act are expected to have on businesses.",~/getmedia/a4eb3b25-697f-4613-83b4-37b5af79a837/230123-ICA-amendments.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Webinar,00:00.0,00:00.0,12 p.m.,1 p.m.,EST,0,NULL,"<p>Join us on Feb. 1 for an informative webinar, where we will take a look at Canada&#39;s current foreign investment review process, the recent treatment of Chinese investment into Canada and the impact which the proposed amendments to the <em>Investment Canada Act</em> are expected to have on businesses.</p>

<h2>Background</h2>

<p>In Dec. 2022, the Government of Canada announced significant changes to the <em>Investment Canada Act</em> aimed at, among other things, providing Canadian authorities with an enhanced set of tools to take action with respect to incoming investments.</p>

<p>Canada&#39;s new rules will bolster the federal government&#39;s visibility on investments, enhance transparency and support greater certainty for prospective investors, but, they will also create new regulatory hurdles which will need to be managed &ndash; particularly for Chinese-owned businesses.</p>

<p>How will Canada&#39;s proposed <em>Investment Canada Act </em>changes impact current and potential Chinese investment into Canada? What steps can be taken early to help mitigate risk and enhance competitive advantage? How will Canada&#39;s new foreign investment rules impact Chinese-owned businesses in the coming years?</p>

<p>Our speakers will examine these questions and more. RSVP to reserve your spot for this event. We look forward to seeing you there.</p>
",NULL,NULL,00:00.0,https://sites-gowlingwlg.vuturevx.com/106/6976/landing-pages---english/event-registration-(blank-form).asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,f1e960f5-8231-4c56-b7bf-9898ebb538c5;c0b8c1a8-73eb-4122-972f-dc5df852f68d;cdfc9b50-74c2-4af5-9508-342935f81ccd;59be9dcd-e5f0-43e4-9d50-442a658eda18,c27f9d3f-c358-48fb-b057-9a291fea02aa,NULL,NULL,NULL,Webinar,"Thomas J. Timmins, Ian Macdonald",Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/106/6976/landing-pages---english/event-registration-(blank-form).asp,Register now,GWLG.Canada;GWLG.China,0,937BE43F-8D56-4E25-ACDE-37FD2496B22E,Host and Speaker,NULL,NULL,"Energy, Mining, Tech, Real Estate",Real Estate,NULL,NULL,~/getmedia/b098b8a4-c6a5-4c82-b994-3b5bce733a90/230123-ICA-amendments-social.jpg.xml?width=930&height=450&ext=.jpg,NULL,_Blank
595,/Events/2023/ThinkHouse-Public-Sector-Fraud-and-corruption,en-GB,B8A3EC28-1044-4D5D-AA36-5F7105448754,ThinkHouse Public Sector - Fraud and corruption,ThinkHouse Public Sector - Fraud and corruption,"Christopher Brennan and Simon Harris look at the mechanisms in the procurement regime which aim to keep government contracting clean by denying fraudsters, money-launderers and other criminals the opportunity to bid in public procurement exercises. ",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,45:56.0,46:02.0,10:30,11:30,GMT,1,1,"<p>Christopher Brennan and Simon Harris will host a live webinar to look at the mechanisms in the procurement regime which aim to keep government contracting clean by denying fraudsters, money-launderers and other criminals the opportunity to bid in public procurement exercises.</p>

<p>They will cover the types of crime which are currently within the sights of the regime, how the government and public sector can harness the anti-corruption mechanisms in the procurement rules to best effect, and how to approach the tricky areas of self-cleaning, verification and exclusion. They will also cover the proposals in the Procurement Bill.</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession. Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,00:00.0,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?RSID=YoXeWRTVWP1BZBxYIHIsGhwpprE4QEO0GgpVMIitmliaN86PT-7rjcglGstdFrZE,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,5ad41b49-d460-489a-95b9-84c854eda6f1,20b4abdb-b2ff-4890-a225-b432bd7b664a;311e6350-b4a5-4f58-8201-230ac9fc70b5;a7ba0b1b-cbe3-4b6d-bb8e-5835b1fbb08a,a143cbfd-d333-42a0-89a6-7287894464f1,503e49eb-bfc5-4803-a856-7fcbac77a38a;6b8dbb8c-6f10-4bbb-87e5-242c83032d08,NULL,Webinar,"Christopher Brennan, Simon Harris",Webinar,34471,GWLG.Events,NULL,~/getmedia/d2b9ca59-d716-4c60-abb1-472dd7eeec23/thinkhouse-primary-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/0363a899-4ad3-4e9e-a428-fbf0ebf9f31d/thinkhouse-primary-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,B1C224F8-2DD5-4CB9-863C-9EDE6FFDA40B,Speaker(s),NULL,NULL,Government Contracting & Public Sector ,"Fraud and Asset Recovery, Procurement, Public Procurement",ThinkHouse,NULL,NULL,NULL,NULL
596,/Events/2023/ThinkHouse-TUPE-Club-Back-to-Basics,en-GB,C5D690EA-CF77-4462-BAC2-5FEA27BDB24B,ThinkHouse TUPE Club - Back to Basics,ThinkHouse TUPE Club - Back to Basics,Join us for our next ThinkHouse TUPE Club webinar for in-house lawyers and HR professionals.,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,45:56.0,46:02.0,11:00,12:00,GMT,1,1,"<p>Join us for our next ThinkHouse TUPE Club webinar for in-house lawyers and HR professionals.</p>

<p>This webinar is designed to help you master the fundamental concepts of TUPE. It is a perfect introduction if you don&#39;t regularly deal with TUPE or if you want a refresher on how TUPE works.</p>

<p>The webinar will cover the key issues that arise in a business sale or outsourcing, practical issues and how to avoid liability under TUPE. The issues we&#39;ll focus on are:</p>

<ul>
	<li>When does TUPE apply?</li>
	<li>What is the effect of TUPE?</li>
	<li>What are the TUPE information and consultation obligations?</li>
	<li>How to mitigate TUPE risks and protect your organisation if TUPE may apply</li>
</ul>

<p>Our speakers, Jane Fielding and Hannah Swindle will help you understand the key principles of TUPE and answer as many questions as possible in the time available.</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession. Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,00:00.0,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?RSID=YoXeWRTVWP1BZBxYIHIsGhwpprE4QEO0GgpVMIitmlgfC6c7EHhoQFwnQcqWBgB9,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,d8837737-40d2-4472-8a9e-ba4101ec2105,a143cbfd-d333-42a0-89a6-7287894464f1,799cf040-59c7-4986-825a-e4b909364823;5466df28-982a-4f78-92d0-6e464942cbc1,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/5d57b23c-f4d3-44e3-a08e-7ee56360fd71/thinkhouse-snr-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/27fda93c-8849-4d7e-a292-bcc5eb1e7896/thinkhouse-snr-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,B1C224F8-2DD5-4CB9-863C-9EDE6FFDA40B,Speaker(s),NULL,NULL,NULL,"Employment, Labour & Equalities",ThinkHouse,NULL,NULL,NULL,NULL
597,/Events/2023/How-to-survive-and-thrive-during-compliance-review,en-GB,8A6BD09F-43B9-4E67-863F-45C4A1E6D9D9,How to survive and thrive during compliance review,Crushing the customs audit (and related investigations): How to survive and thrive during compliance review,"This one-hour program will explore how importers can assess their company's readiness, solve problems, and shore-up processes to demonstrate the company's goal and efforts toward achieving customs compliance.",~/getmedia/d1ca920c-d247-4182-9262-2b2a97558e05/230207-compliance-review-event.jpg.xml?width=930&height=450&ext=.jpg,person reviewing documents,GWLG.SpecialEvents,55:20.0,55:28.0,2:30 p.m.,3:30 p.m.,EST,0,NULL,"<p>Has your country&#39;s customs authority sent you a request for information requiring a quick response? Have you just received notice of a formal visit or audit by your customs authority? Do you anticipate the future acquisition or sale of your company, which would require a deep-dive due diligence review of your imports profile and processes?</p>

<p>There are many instances in which importers may find themselves wondering whether their teams and systems are prepared to withstand scrutiny from a customs compliance standpoint. This one-hour program will explore how importers can assess their company&#39;s readiness, solve problems, and shore-up processes to demonstrate the company&#39;s goal and efforts toward achieving customs compliance.</p>

<h2>Agenda</h2>

<ul>
	<li>Introductions</li>
	<li>Know your owners and stakeholders</li>
	<li>Understand your imports profile</li>
	<li>Develop and strengthen systems</li>
	<li>Core compliance areas
	<ul>
		<li>Valuation</li>
		<li>Classification</li>
		<li>Origin (marking / preferential treatment)</li>
	</ul>
	</li>
	<li>Q&amp;A</li>
</ul>

<h2>Speakers</h2>

<ul>
	<li><a href=""~/en/people/wendy-wagner/"" target=""_self"">Wendy Wagner, Partner &ndash; Gowling WLG</a></li>
	<li><a href=""https://sanchezdevanny.com/en/attorneys/partners/Turenna1"" target=""_blank"">Turenna Ramírez, Partner &ndash; Sánchez Devanny</a></li>
	<li><a href=""https://www.crowell.com/professionals/Maria-Vanikiotis"" target=""_blank"">Maria Vanikiotis, Counsel &ndash; Crowell &amp; Moring</a></li>
</ul>

<h2>Event partners</h2>

<ul>
	<li><a href=""https://www.crowell.com/"" target=""_blank"">Crowell &amp; Moring</a></li>
	<li><a href=""https://sanchezdevanny.com/en"" target=""_blank"">Sánchez Devanny</a></li>
</ul>
",NULL,NULL,55:55.0,https://us06web.zoom.us/webinar/register/WN_QYYNwplJR3CZcAIMXnVvmg,NULL,Register now,C41373B4-86B9-4F74-8894-0B0BB7DDBD18,cdfc9b50-74c2-4af5-9508-342935f81ccd,NULL,NULL,afc382e9-2b75-4a26-9e20-0a8c68694164,NULL,Special events,Wendy J. Wagner,Online event,694,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,Gowling WLG speaker,NULL,NULL,Tech,NULL,NULL,NULL,NULL,NULL,NULL
598,/Events/2023/Black-futures-Being-Black-in-Canada-in-2023,en-GB,929B772D-1EF0-4DFF-BEB7-E2E74B5B8AE6,Black futures: Being Black in Canada in 2023,Black futures: Being Black in Canada in 2023,"Blending perspectives from the worlds of grassroots resistance, justice system reform and artistic activism, Sandy Hudson reflects on the past 10 years – what has changed, what hasn’t, and the future in store for Black communities in Canada.",~/getmedia/e6f6ce07-8017-4cd4-89a1-ed36449c0fcd/230208-bhm-being-black-in-canada-webinar.jpg.xml?width=1400&height=639&ext=.jpg,NULL,GWLG.Webinar,08:07.0,08:12.0,1:00 p.m. ,2:00 p.m.,EST,1,1.0 hour,"<p>Blending perspectives from the worlds of grassroots resistance, justice system reform and artistic activism, <a href=""https://www.sandyhudson.ca/"" target=""_blank"">Sandy Hudson</a> reflects on the past 10 years &ndash; what has changed, what hasn&rsquo;t, and the future in store for Black communities in Canada.</p>

<p>Sandy is the founder of&nbsp;<em>Black Lives Matter Canad</em>a in 2014, co-founder of the&nbsp;<em>Black Legal Action Centre and Wildseed Centre for Art &amp; Activism</em>&nbsp;in Toronto, and co-host of the&nbsp;<em>Sandy and Nora Talk Politics</em>&nbsp;podcast. She is also an acclaimed author and co-editor of the 2020 bestselling anthology&nbsp;<em>Until We Are Free: Reflections on Black Lives Matter in Canada</em>, and is currently studying law at UCLA. She has been named one of&nbsp;<em>Maclean&rsquo;s</em>&nbsp;most powerful people in Canada, one of&nbsp;<em>Toronto Life&rsquo;s</em>&nbsp;50 Most Influential Torontonians, one of&nbsp;<em>Post City Magazine&rsquo;s</em>&nbsp;Most Inspiring Women, and one of Canada International Black Women&rsquo;s 100 Black Women to Watch.</p>

<h2>CPD Information</h2>

<p><strong>LSO:</strong>&nbsp;This program is eligible for up to 1.0 hour of&nbsp;<strong>DEI&nbsp;Professionalism content</strong></p>

<p><strong>LSBC:</strong>&nbsp;This program is eligible for up to 1.0 hour of<strong>&nbsp;Practice Management &amp; Professional Responsibility credit</strong></p>

<p><strong><img alt="""" src=""~/getattachment/Events/2023/Black-futures-Being-Black-in-Canada-in-2023/law-society-of-ontario-accredited-edi.png.xml?lang=en-GB&amp;width=149&amp;height=125"" style=""width: 149px; height: 125px;"" /></strong></p>

<p><em>This organization has been approved as an Accredited Provider of Professionalism Content by the Law Society of Ontario.</em></p>
",NULL,NULL,25:55.0,https://sites-gowlingwlg.vuturevx.com/106/7005/landing-pages---english/event-registration-(blank-form).asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,NULL,NULL,NULL,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e6f6ce07-8017-4cd4-89a1-ed36449c0fcd/230208-bhm-being-black-in-canada-webinar.jpg.xml?width=1400&height=639&ext=.jpg,~/getmedia/ea2efdbf-f572-4d0a-b0f0-655c60387c98/230208-bhm-being-black-in-canada-webinar-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
599,/Events/2023/Black-futures-Being-Black-in-Canada-in-2023,fr-CA,929B772D-1EF0-4DFF-BEB7-E2E74B5B8AE6,Black futures: Being Black in Canada in 2023,Être Noir.e au Canada en 2023 : perspectives d’avenir,"Inspirée par les mouvements de résistance populaire, la réforme du système judiciaire et l'activisme artistique, Sandy Hudson allie ces diverses perspectives et pose un regard sur les 10 dernières années : ce qui a changé, ce qui n'a pas changé, et l'avenir des communautés noires au Canada.",~/getmedia/e6f6ce07-8017-4cd4-89a1-ed36449c0fcd/230208-bhm-being-black-in-canada-webinar.jpg.xml?width=1400&height=639&ext=.jpg,NULL,GWLG.Webinar,08:07.0,08:12.0,1:00 p.m. ,2:00 p.m.,EST,1,1.0 hour,"<div style=""clear:both;"">
<p>Inspirée par les mouvements de résistance populaire, la réforme du système judiciaire et l&#39;activisme artistique, Sandy Hudson allie ces diverses perspectives et pose un regard sur les 10 dernières années : ce qui a changé, ce qui n&#39;a pas changé, et l&#39;avenir des communautés noires au Canada.</p>

<p>Mme Hudson est la fondatrice de<em>&nbsp;Black Lives Matter Canada</em>&nbsp;(en 2014), coanimatrice du balado&nbsp;<em>Sandy and Nora Talk Politics,</em>&nbsp;ainsi que cofondatrice du&nbsp;<em>Black Legal Action Centre et du Wildseed Centre for Art &amp; Activism</em>&nbsp;à Toronto. Autrice acclamée et coéditrice de l&rsquo;anthologie à succès de 2020 intitulée&nbsp;<em>Until We Are Free: Reflections on Black Lives Matter in Canada</em>, elle étudie actuellement le droit à UCLA, en Californie. En plus de figurer au palmarès des personnes les plus puissantes du Canada dans la revue&nbsp;<em>Maclean&#39;s</em>, elle a été nommée l&rsquo;une des 50 personnes torontoises les plus influentes selon&nbsp;<em>Toronto Life</em>, l&rsquo;une des femmes les plus inspirantes selon&nbsp;<em>Post City Magazines</em>&nbsp;et l&rsquo;une des 100 femmes noires à suivre selon l&rsquo;organisme&nbsp;<em>Canada International Black Women Excellence.</em></p>

<h2>Information FPC</h2>

<p><strong>Barreau de l&rsquo;Ontario :</strong>&nbsp;cette présentation compte pour 1 heure de&nbsp;<strong>crédit en professionnalisme en matière de DEI.</strong><br />
<br />
<strong>Barreau de la Colombie-Britannique :</strong>&nbsp;cette présentation compte pour<br />
1 heure de&nbsp;<strong>crédit en gestion de la pratique et responsabilité professionnelle.</strong></p>

<p><img alt="""" src=""~/getattachment/Events/2023/Black-futures-Being-Black-in-Canada-in-2023/accreditation-edi-fr.png.xml?lang=fr-CA&amp;width=150&amp;height=125"" style=""width: 150px; height: 125px;"" /></p>

<p><em>Cette organisation est reconnue à titre de fournisseur agréé de formation professionnelle continue en matière de professionnalisme par le Barreau de l&rsquo;Ontario.</em></p>
</div>
",NULL,NULL,26:46.0,https://sites-gowlingwlg.vuturevx.com/106/7005/landing-pages---french/event-registration-(blank-form)-fr.asp,NULL,RSVP,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,NULL,NULL,NULL,NULL,Webinaires,NULL,Webinaire,34471,GWLG.Events,NULL,~/getmedia/e6f6ce07-8017-4cd4-89a1-ed36449c0fcd/230208-bhm-being-black-in-canada-webinar.jpg.xml?width=1400&height=639&ext=.jpg,~/getmedia/ea2efdbf-f572-4d0a-b0f0-655c60387c98/230208-bhm-being-black-in-canada-webinar-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.Canada,0,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
600,/Events/2023/Moving-forward-on-diversity-equality-inclusion,en-GB,D3DA230F-755A-4F72-B327-E27ACAB317DA,"Moving forward on diversity, equality, inclusion","Practical governance: Moving forward on diversity, equality and inclusion","This session will consider diversity, equality and inclusion (DE&I) from the perspective of trustees' own internal governance and interactions with scheme members.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,00:00.0,00:00.0,12:00,13:00,BST,0,NULL,"<p>Scheme Sessions is back! This April, our first series will cover practical governance in two areas:</p>

<ul>
	<li>Session 1: moving forward on diversity, equality and inclusion;</li>
	<li><a href=""~/en/events/2023/making-the-single-code-work-for-you/"">Session 2: making the Single Code work for you</a>.</li>
</ul>

<p>During the sessions, the speakers will provide useful information and insights, as well as practical tips on their respective topics, and will answer as many questions as possible in the time available.</p>

<p>This session will consider diversity, equality and inclusion (DE&amp;I) from the perspective of trustees&#39; own internal governance and interactions with scheme members. We will look at the breadth of DE&amp;I areas that should be considered as well as some practical steps that trustee boards can take to move forward in this area (e.g. training, DE&amp;I mapping, objective-setting), all set in the context of the Pension Regulator&#39;s own Equality, Diversity and Inclusion Strategy.</p>

<p><strong>Chair and Speaker&nbsp;</strong>-&nbsp;Joanne Tibbott, Partner at Gowling WLG</p>

<p><strong>Other Speakers </strong>- <a href=""https://www.linkedin.com/in/nadeemladha/?originalSubdomain=uk"" target=""_blank"">Nadeem Ladha</a>, Trustee Director at 20-20 Trustees and Vivienne Reeve, Principal Associate at Gowling WLG.</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession. Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,30:00.0,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?RSID=9ZQds7cDe4fmfbtlJkUKvR1TgL9L5IUuzzjKnbsBRzN1ThuveB5NebQFhx6AJtQL,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,28b9078c-383d-431a-b8a9-dacac4b8bfb0;a19c4c5e-c05a-4fa5-95aa-c5a274279d8c;d2158c36-b0a3-4e47-8b27-8b1d3d1eb6ec;77a48a94-53b0-48da-a854-7c4553726627;33d70f43-fe64-4fe8-a74b-ae24f9e914df,NULL,c35a7ba7-40bb-474d-8a7a-a7897e0c7332;51f73678-d5d2-4a3a-80be-bb454ae873c1,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,"<p><strong>Scheme Sessions Vol1.2023</strong></p>
",~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,311E4011-F5C1-4BF1-A135-A720BFE33863,Speaker(s),NULL,NULL,NULL,"Defined Contribution Pensions, Pensions, Pensions Disputes, Public Sector Pensions, Workplace Pension Reform",NULL,NULL,NULL,NULL,NULL
601,/Events/2023/Making-the-Single-Code-work-for-you,en-GB,30B13E10-29E5-48FD-8641-A325A780CC29,Making the Single Code work for you,Practical governance: Making the Single Code work for you,This second session will consider some practical steps trustee boards can take in relation to the Single Code.,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,00:00.0,00:00.0,12:00,13:00,BST,0,NULL,"<p>Scheme Sessions is back! This April, our first series will cover practical governance in two areas:</p>

<ul>
	<li>Session 1: moving forward on diversity, equality and inclusion;</li>
	<li>Session 2: making the Single Code work for you.</li>
</ul>

<p>During the sessions, the speakers will provide useful information and insights, as well as practical tips on their respective topics, and will answer as many questions as possible in the time available.</p>

<p>This second session will consider some practical steps trustee boards can take in relation to the Single Code. We will be looking at the concept of proportionality, how to link actions to the scheme&#39;s strategic goals, how to conduct an &#39;own-risk assessment&#39;, and what &#39;an effective system of governance&#39; looks like in the real world. While the Single Code has not yet been finalised, we expect it soon and these concepts have been in the law since 2019.</p>

<p><strong>Chair </strong>-&nbsp;&nbsp;Elizabeth Gane, Head of Pensions at Gowling WLG</p>

<p><strong>Speakers </strong>- <a href=""https://www.rosstrustees.com/team/amanda-osborne/"" target=""_blank"">Amanda Osborne</a>, Trustee Director at Ross Trustees, <a href=""https://www.linkedin.com/in/rosanne-corbett-1163431b/?originalSubdomain=uk"" target=""_blank"">Rosanne Corbett</a>, Client Director at Muse Advisory and Maddy Frost, Legal Director at Gowling WLG.</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession. Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,30:00.0,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?RSID=9ZQds7cDe4fmfbtlJkUKvR1TgL9L5IUuzzjKnbsBRzN1ThuveB5NebQFhx6AJtQL,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,28b9078c-383d-431a-b8a9-dacac4b8bfb0;a19c4c5e-c05a-4fa5-95aa-c5a274279d8c;d2158c36-b0a3-4e47-8b27-8b1d3d1eb6ec;77a48a94-53b0-48da-a854-7c4553726627;33d70f43-fe64-4fe8-a74b-ae24f9e914df,NULL,ba2d9a11-808e-48c9-aec4-0c9d2ef8b403;ff8e1a8b-903b-4c8e-97a9-46b6ab4b3fae,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,"<p><strong>Scheme Sessions Vol1.2023</strong></p>
",~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,311E4011-F5C1-4BF1-A135-A720BFE33863,Speaker(s),NULL,NULL,NULL,"Defined Contribution Pensions, Pensions, Pensions Disputes, Public Sector Pensions, Workplace Pension Reform",NULL,NULL,NULL,NULL,NULL
602,/Events/2023/How-we-live-Sustainably,en-GB,D29F3CD9-5AB6-417B-A306-39E5CFEE5015,How we live... Sustainably,How we live... Sustainably,"New biodiversity net gain (BNG) rules are set to come into force that mean from November 2023, developments granted planning permission will need to deliver at least 10% net gain in biodiversity, compared with the pre-development site condition.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,00:00.0,00:00.0,10:00,11:00,GMT,0,NULL,"<p>New biodiversity net gain (BNG) rules are set to come into force that mean from November 2023, developments granted planning permission will need to deliver at least 10% net gain in biodiversity, compared with the pre-development site condition.</p>

<p>Although the <abbr title=""biodiversity net gain"">BNG</abbr> requirement may be some way off, it is critical that developers think now about how they will satisfy the rules, which includes a reassessment of your land acquisition strategy and a flexible solution as to how and where you will deliver <abbr title=""biodiversity net gain"">BNG</abbr>.</p>

<p>The Government recently published further guidance on the implementation of <abbr title=""biodiversity net gain"">BNG</abbr> with more detail expected in the coming weeks and months, as well as covering that guidance in detail. In this webinar, our panel will explore:</p>

<ul>
	<li>Why biodiversity matters</li>
	<li>What the <abbr title=""biodiversity net gain"">BNG</abbr> rules require</li>
	<li>What the recent guidance from Government means for developers and how it impacts <abbr title=""biodiversity net gain"">BNG</abbr> delivery strategies</li>
	<li>How planners need to address <abbr title=""biodiversity net gain"">BNG</abbr> in their applications</li>
	<li>How land deals need to address <abbr title=""biodiversity net gain"">BNG</abbr></li>
</ul>

<p>With few exceptions, <abbr title=""biodiversity net gain"">BNG</abbr> applies to everyone undertaking development, but this session will focus particularly on the impacts for the living sector, whether a developer, a contractor, a planner or an ecologist. We do hope you can join us.</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession. Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,30:00.0,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?rsid=jOoH5qyJv5IUG99tSFu7gfRkPjUqE1RIN8HCZntEnnSXNDgHDTaii3UznOoCg7Ax&react=REGISTER,NULL,Register for this event,C41373B4-86B9-4F74-8894-0B0BB7DDBD18,59be9dcd-e5f0-43e4-9d50-442a658eda18,509c08ba-ecd3-4e2b-8a6e-94b148e9534f;c27f9d3f-c358-48fb-b057-9a291fea02aa,NULL,fab98035-4515-4fb3-8875-591118effeb3;1a0f69ce-d1e7-42e2-96d6-0dbdd570161e;7e72946f-4a54-46f7-9040-36aaf58596bd,NULL,Webinar,"Anjali Bancroft, Ben Stansfield, Ed Colreavy",Online event,694,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,311E4011-F5C1-4BF1-A135-A720BFE33863,Speaker(s),NULL,NULL,Real Estate,"Living, Real Estate",NULL,NULL,~/getmedia/06891a13-eea6-422b-ad51-4de47d8c1a9f/230307-how-we-live-sustainably.jpg.xml?width=1272&height=675&ext=.jpg,NULL,NULL
603,/Events/2023/Remedies-for-patent-infringement-around-the-world,en-GB,9188C621-5188-487E-854E-B225A886E70B,Remedies for patent infringement around the world,Lifecycle of a smart idea | Remedies for patent infringement around the world,"In the next installment of our Lifecycle of a Smart Idea series, we will take a close look at the remedies available for patent infringement in Canada, the US, the UK, France, China, as well as under the new Unified Patent Court.",~/getmedia/26d014bd-4804-4bcb-ad98-8f54be45717f/230307-Patent-infringement.jpg.xml?width=930&height=450&ext=.jpg,NULL,GWLG.Webinar,00:00.0,00:00.0,10 a.m. EDT / 2 p.m. GMT / 3 p.m. CET / 10 p.m. CST,NULL,Local time,1,"1 hour of substantive CPD credits with the LSO, the LSBC and the Barreau du Québec.","<p>We&#39;re back with the latest webinar in our Lifecycle of a Smart Idea series!</p>

<p>On March 22, join our international panel of intellectual property (IP) professionals for an informative discussion focusing on the remedies available for patent infringement in Canada, the US, the UK, France, China, as well as under the new Unified Patent Court.</p>

<p>In this webinar, patent owners will gain an understanding of the similarities and differences of the patent remedies available in various jurisdictions. Our global IP team will review a number of options, including:</p>

<ul>
	<li>Preliminary and permanent injunctions</li>
	<li>Damages</li>
	<li>Costs</li>
	<li>Delivery-up</li>
	<li>FRAND</li>
	<li>Anti-suit injunctions</li>
	<li>Account of profits</li>
</ul>

<p>Register for this webinar today to learn about how to effectively manage your patent infringement cases, both domestically and internationally.</p>

<h2>Speakers</h2>

<ul>
	<li>Ronald Dimock - Partner, Gowling WLG</li>
	<li>Huw Evans - Partner, Gowling WLG</li>
	<li>Céline Bey - Partner, Gowling WLG</li>
	<li>Alexandra Brodie - Partner, Gowling WLG</li>
	<li>Nelson Godfrey - Partner, Gowling WLG</li>
	<li>Ivy Liang - Director, Gowling WLG</li>
	<li>Bill Needle - Patent attorney, JAMS</li>
</ul>

<h2>Watch previous episodes</h2>

<p><em>This is the 22nd&nbsp;installment in our Lifecycle of a Smart Idea series, dedicated to helping you maximize opportunity and minimize risk when taking innovative ideas to the global market. <a href=""~/en/insights-resources/?page=1&amp;services=454&amp;resourcetypes=GWLG.Webinar&amp;q=Lifecycle&amp;mode=anyword&amp;sort=Date"" target=""_blank"">Watch more from the series &raquo;</a></em></p>

<h2>CPD information</h2>

<p><em>*This program is eligible for up to one hour of substantive CPD credits with the LSO, the LSBC and the Barreau du Québec. If you indicate on your registration form that a certificate of participation is required, we will email you your certificate after the session.</em></p>
",NULL,NULL,46:50.0,https://sites-gowlingwlg.vuturevx.com/106/7053/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,08b9a44c-bb26-4255-9779-296a124fcbee;85764222-db69-43cf-af79-2c6fcbda9589,NULL,7daffdf3-ccec-45a0-9a0e-0b8811e00398;a21f77d5-b08e-4dac-9b34-efe5dddc9db1;ad4cc2a0-5825-4d92-930d-64226a7659b3;d960a618-a196-404c-b795-b884bc90e603;538a936e-b130-4df1-b42e-bdd98442edb4;49370d7b-1121-45da-90e6-96dcc50c1710,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/106/7053/landing-pages/event-registration-(blank-form).asp,Register now,GWLG.Canada;GWLG.China;GWLG.UnitedStates;GWLG.France;GWLG.UK,0,E27DAF69-E758-4617-9BAE-E854B13AF32A,Gowling WLG speakers,NULL,NULL,NULL,"Intellectual Property Law, Patents",NULL,NULL,~/getmedia/761c513a-ec68-4fc5-85a7-06b6bd80804a/230307-Patent-infringement-social.jpg.xml?width=930&height=450&ext=.jpg,NULL,_Blank
604,/Events/2023/Bill-96-Impact-on-Quebec-employers,en-GB,E8009F9B-F8BC-42EC-AE40-C914F31B05B1,Bill 96: Impact on Québec employers,Bill 96: Impact on Québec employers,Olivier Lamoureux and Cedric Marsan-Lafond from Gowling WLG's Montreal office will discuss the ins and outs of obligations arising from the recent adoption of Bill 96 in the workplace and provide practical solutions for employers to implement in their companies.,~/getmedia/b2b879a3-0558-4124-a9ce-40064007b33c/20230308-bookshelf-law-books.jpg.xml?width=930&height=450&ext=.jpg,bookshelf with law books,GWLG.Webinar,32:54.0,33:03.0,8:30 a.m.,10:00 a.m.,EDT,0,NULL,"<p>With the recent adoption of Bill 96,&nbsp;<em>An Act respecting French, the official and common language of Québec</em>, several amendments were made to the Charter of the French language (Bill 101), which has significantly affected&nbsp;companies doing business in Québec.</p>

<p>On June 1, 2022, a number of these amendments came into force. These include new language-related obligations in the workplace, which impact, among other things:</p>

<ul>
	<li>The scope of employment-related documents&nbsp;in which must be drafted or available in French;</li>
	<li>The language of job postings and publication modalities; and</li>
	<li>The requirement to have knowledge (or a specific level of knowledge) of a language other than French to keep or&nbsp;obtain a position/role.</li>
</ul>

<p>In the first webinar of our 2023 Employment, Labour &amp; Equalities Law Webinar Series, employment lawyers Olivier Lamoureux and Cedric Marsan-Lafond from our Montreal office will discuss the ins and outs of these obligations in the workplace and provide practical solutions for employers to implement in their companies.</p>
",NULL,NULL,33:48.0,https://sites-gowlingwlg.vuturevx.com/106/7058/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,d8837737-40d2-4472-8a9e-ba4101ec2105,NULL,aac7181f-061a-4203-86bf-3d3c742afce5;0db113a5-e700-4e3c-923e-8ce14ce684c9,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada;GWLG.Global,0,NULL,Speakers,NULL,NULL,NULL,"Employment, Labour & Equalities",NULL,NULL,~/getmedia/f465179e-48a4-4df1-a02f-7582233ab671/230314-ELE-webinar-series-1-Bill-96-Quebec.jpg.xml?width=1272&height=675&ext=.jpg,NULL,NULL
607,/Events/2023/ThinkHouse-Foundations-Spring-Seminar-Birmingham,en-GB,AAB526D0-4809-4278-875C-C2C68C33FC99,ThinkHouse Foundations Spring Seminar Birmingham,ThinkHouse Foundations Spring Seminar - Birmingham,Join us for our ThinkHouse Foundations Spring Seminar 2023 on 18th May in Birmingham.,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,18-05-2023 10:33,18-05-2023 10:33,09:15,13:30,BST,0,NULL,"<p>Join us for our ThinkHouse Foundations Spring Seminar 2023 on 18th May in Birmingham, and <a href=""~/en/events/2023/thinkhouse-foundations-spring-seminar-london/"">23rd May in London</a>. In this seminar we will be hosting a contract drafting workshop, a session on legal, tech and AI, a question and answer session with one of our Senior Associates who took part in a Commonwealth Games 2022 secondment and an afternoon talking all about ESG with our panel of professionals.</p>

<p>The seminars offer a great opportunity to network with the future faces and many others.</p>

<h2>Contract drafting workshop</h2>

<p>In this interactive workshop Charlotte Avery will provide an introduction to contract law drafting. She will share some &#39;top tips&#39; for drafting contracts and provide examples of key issues she sees when negotiating contracts.</p>

<h2>Legal, Tech and AI</h2>

<p>Legaltech is changing the legal industry. Although with the advent of ChatGPT, AI is by far the most prominent area of focus, automation and technology has been driving efficiencies for decades. Dom Conte&nbsp; will be covering some of the main areas that legaltech is affecting, along with a demo of some cutting-edge technology.</p>

<h2>In conversation with Khemi</h2>

<p>Khemi Salhan is a senior associate in our Intellectual Property team at Gowling WLG. Khemi was seconded to the Birmingham Organising Committee for the 2022 Commonwealth Games. In this short Q&amp;A, Khemi will discuss her time spent on secondment compared with private practice, the skills, values and insights she has taken from the different environments &ndash; and will share some fun stories from the Games!</p>

<h2>ESG Panel</h2>

<p>Sustainability and transparency in the supply chain is of growing importance, with tighter regulation and reporting moving it from a reputational issue to a legal requirement. In this panel discussion with Nick Harding, Owen Shave and Emma Kensett , we will draw out the key elements that need to be considered including environmental impacts, modern slavery human rights and corporate governance. We will highlight new and changing regulations and provide practical steps that can be taken by you as employees to manage risks.</p>

<h2>Agenda</h2>

<table>
	<thead>
		<tr>
			<th>Time</th>
			<th>Agenda item</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>09:15</td>
			<td>Registration &amp; breakfast networking</td>
		</tr>
		<tr>
			<td>09:50</td>
			<td>Welcome &amp; introduction</td>
		</tr>
		<tr>
			<td>10:00</td>
			<td>Contract drafting workshop</td>
		</tr>
		<tr>
			<td>11:00</td>
			<td>Legal, Tech and AI</td>
		</tr>
		<tr>
			<td>11:30</td>
			<td>Coffee &amp; networking</td>
		</tr>
		<tr>
			<td>11:50</td>
			<td>In conversation with Khemi Salhan</td>
		</tr>
		<tr>
			<td>12:10</td>
			<td>ESG Panel</td>
		</tr>
		<tr>
			<td>13:10</td>
			<td>Lunch &amp; networking</td>
		</tr>
		<tr>
			<td>13:30</td>
			<td>Close</td>
		</tr>
	</tbody>
</table>
","<p>This event is free of charge.</p>

<p>Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession. Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,17-05-2023 16:00,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?RSID=hswI0KXP7WwBpxVlSbirRRIkjqLLqZIOQJWLfZ7a60TZzc-jocelMKML9eEAC1wV,NULL,Register for this event,58076178-DA60-4AB6-A07C-EF250971EBF7,cdfc9b50-74c2-4af5-9508-342935f81ccd,549cbe28-f188-44cd-85c0-0f4e23a23817;09ef8b8d-ebb3-4643-89b1-7781cc96a384;b305a1b6-d0ba-41dc-8e53-579fd077b871,a143cbfd-d333-42a0-89a6-7287894464f1,d03f4474-15e0-41a7-a007-5fa3f7547a82;e8081a0b-9874-4c18-8a1a-2ef51aaa161c;23b62899-1b35-4596-9523-a2823336c23e;0f7aa96c-d740-40ad-9583-52bfd55c4088;7d991ab5-fa7b-4aaf-a3e8-6be706e424aa,NULL,Seminar,"Zoe Pearman, Nick Harding, Khemi Salhan, Owen Shave, Emma Kensett",Birmingham,70,GWLG.Events,NULL,~/getmedia/5c73cf2c-5ac2-465b-9dff-9377774e4d9b/thinkhouse-foundations-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/a1bd54ac-e5a3-4c45-8585-8ccbdce9e524/thinkhouse-foundations-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,B1C224F8-2DD5-4CB9-863C-9EDE6FFDA40B,Speaker(s),NULL,58076178-da60-4ab6-a07c-ef250971ebf7,Tech,"Commercial, Artificial Intelligence (AI) Law, Environmental, Social and Governance (ESG)",ThinkHouse,Birmingham,NULL,NULL,NULL
608,/Events/2023/ThinkHouse-Foundations-Spring-Seminar-London,en-GB,A695B484-6E78-47AC-BFF5-B58F343E1CEE,ThinkHouse Foundations Spring Seminar London,ThinkHouse Foundations Spring Seminar - London,Join us for our ThinkHouse Foundations Spring Seminar 2023 on 23rd May in London.,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,23-05-2023 10:33,23-05-2023 10:33,09:15,13:30,BST,0,NULL,"<p>Join us for our ThinkHouse Foundations Spring Seminar 2023 on <a href=""~/en/events/2023/thinkhouse-foundations-spring-seminar-birmingham/"">18th May in Birmingham</a>, and 23rd May in London. In this seminar we will be hosting a contract drafting workshop, a session on legal, tech and AI, a question and answer session with one of our Senior Associates who took part in a Commonwealth Games 2022 secondment and an afternoon talking all about ESG with our panel of professionals.</p>

<p>The seminars offer a great opportunity to network with the future faces and many others.</p>

<h2>Contract drafting workshop</h2>

<p>In this interactive workshop Charlotte Avery will provide an introduction to contract law drafting. She will share some &#39;top tips&#39; for drafting contracts and provide examples of key issues she sees when negotiating contracts.</p>

<h2>Legal, Tech and AI</h2>

<p>Legaltech is changing the legal industry. Although with the advent of ChatGPT, AI is by far the most prominent area of focus, automation and technology has been driving efficiencies for decades. Dom Conte will be covering some of the main areas that legaltech is affecting, along with a demo of some cutting-edge technology.</p>

<h2>In conversation with Khemi</h2>

<p>Khemi Salhan is a senior associate in our Intellectual Property team at Gowling WLG. Khemi was seconded to the Birmingham Organising Committee for the 2022 Commonwealth Games. In this short Q&amp;A, Khemi will discuss her time spent on secondment compared with private practice, the skills, values and insights she has taken from the different environments &ndash; and will share some fun stories from the Games!</p>

<h2>ESG Panel</h2>

<p>Sustainability and transparency in the supply chain is of growing importance, with tighter regulation and reporting moving it from a reputational issue to a legal requirement. In this panel discussion with Nick Harding, Owen Shave and Emma Kensett , we will draw out the key elements that need to be considered including environmental impacts, modern slavery human rights and corporate governance. We will highlight new and changing regulations and provide practical steps that can be taken by you as employees to manage risks.</p>

<h2>Agenda</h2>

<table>
	<thead>
		<tr>
			<th>Time</th>
			<th>Agenda item</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>09:15</td>
			<td>Registration &amp; breakfast networking</td>
		</tr>
		<tr>
			<td>09:50</td>
			<td>Welcome &amp; introduction</td>
		</tr>
		<tr>
			<td>10:00</td>
			<td>Contract drafting workshop</td>
		</tr>
		<tr>
			<td>11:00</td>
			<td>Legal, Tech and AI</td>
		</tr>
		<tr>
			<td>11:30</td>
			<td>Coffee &amp; networking</td>
		</tr>
		<tr>
			<td>11:50</td>
			<td>In conversation with Khemi Salhan</td>
		</tr>
		<tr>
			<td>12:10</td>
			<td>ESG Panel</td>
		</tr>
		<tr>
			<td>13:10</td>
			<td>Lunch &amp; networking</td>
		</tr>
		<tr>
			<td>13:30</td>
			<td>Close</td>
		</tr>
	</tbody>
</table>
","<p>This event is free of charge.</p>

<p>Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession. Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,22-05-2023 16:00,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?RSID=hswI0KXP7WwBpxVlSbirRRIkjqLLqZIOQJWLfZ7a60TZzc-jocelMKML9eEAC1wV,NULL,Register for this event,9FBE191E-3BCF-45DE-A2BA-338BB194FC9D,cdfc9b50-74c2-4af5-9508-342935f81ccd,549cbe28-f188-44cd-85c0-0f4e23a23817;09ef8b8d-ebb3-4643-89b1-7781cc96a384;b305a1b6-d0ba-41dc-8e53-579fd077b871,a143cbfd-d333-42a0-89a6-7287894464f1,d03f4474-15e0-41a7-a007-5fa3f7547a82;e8081a0b-9874-4c18-8a1a-2ef51aaa161c;23b62899-1b35-4596-9523-a2823336c23e;0f7aa96c-d740-40ad-9583-52bfd55c4088;7d991ab5-fa7b-4aaf-a3e8-6be706e424aa,NULL,Seminar,"Zoe Pearman, Nick Harding, Khemi Salhan, Owen Shave, Emma Kensett",London,71,GWLG.Events,NULL,~/getmedia/5c73cf2c-5ac2-465b-9dff-9377774e4d9b/thinkhouse-foundations-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/a1bd54ac-e5a3-4c45-8585-8ccbdce9e524/thinkhouse-foundations-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,B1C224F8-2DD5-4CB9-863C-9EDE6FFDA40B,Speaker(s),NULL,9fbe191e-3bcf-45de-a2ba-338bb194fc9d,Tech,"Commercial, Artificial Intelligence (AI) Law, Environmental, Social and Governance (ESG)",ThinkHouse,London,NULL,NULL,NULL
611,/Events/2023/Trade-secrets-enforcement-A-global-perspective,en-GB,A31AEF89-D931-4E94-8103-A4422FA440DB,Trade secrets enforcement: A global perspective,Trade secrets enforcement: A global perspective,"On May 3, join Gowling WLG's international panel of lawyers and Tim Londergan, CEO and founder of Tangibly, a world leader in trade secrets management solutions, for an informative seminar focusing on the enforcement of trade secrets protection.",~/getmedia/cbbad3e1-346c-41bb-a436-290d25d9d0fa/230410-trade-secerts-global.jpg.xml?width=930&height=450&ext=.jpg,"close up of shredded documents with words ""information"" visible",GWLG.Seminar,03-05-2023 15:09,03-05-2023 15:09,8 a.m.,10 a.m.,EDT,0,NULL,"<p>Trade secrets law is one of the fastest growing areas of IP litigation in the world. The courts, investors and financial institutions are recognizing the importance of such non-tangible property in the valuation of companies and potential losses. In this age of digital technologies, remote working and ease of travel, how does one contain any breaches and put the &quot;genie&quot; or &quot;genius of the secret&quot; back in the bottle?</p>

<p>On May 3, join Gowling WLG&#39;s international panel of lawyers and Tim Londergan, CEO and founder of <a href=""https://www.tangibly.com/about/"" target=""_blank"">Tangibly</a>, a world leader in trade secrets management solutions, for an informative seminar focusing on the enforcement of trade secrets protection.</p>

<p>The seminar will include:</p>

<ul>
	<li>A case scenario, which follows the actions of a trade secrets thief around the world and looks at the mechanisms of the international enforcement process</li>
	<li>An analysis of various real-life situations, where systems and processes, including artificial intelligence, can be adopted to identify trade secrets, manage information flow (including agreement clauses), monitor breaches and take action</li>
	<li>A Q&amp;A session with the speakers</li>
</ul>

<p>Please RSVP to reserve your spot! We hope to see many of you at this event.</p>

<p>* The presentation will be in English but the Q&amp;A session will be in both English and French.</p>

<h2>Agenda</h2>

<table>
	<thead>
		<tr>
			<th scope=""col"">Time</th>
			<th scope=""col"">Activity</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td><strong>8:00 a.m. -<br />
			8:25 a.m.</strong></td>
			<td>Breakfast</td>
		</tr>
		<tr>
			<td><strong>8:25 a.m.</strong></td>
			<td>Welcome &amp; introduction</td>
		</tr>
		<tr>
			<td><strong>8:30 a.m. -<br />
			9:30 a.m.</strong></td>
			<td>Around the world scenario</td>
		</tr>
		<tr>
			<td><strong>9:30 a.m. -<br />
			9:55 a.m.</strong></td>
			<td>Q &amp; A</td>
		</tr>
		<tr>
			<td><strong>10:00 a.m.</strong></td>
			<td>Conclusion</td>
		</tr>
	</tbody>
</table>

<h2>Online via Zoom or in-person at:</h2>

<p><strong>Gowling WLG</strong><br />
Suite 3700, 1 Place Ville Marie<br />
Montréal QC H3B 3P4<br />
<strong><a href=""https://www.google.com/maps/place/Gowling+WLG/@45.5017817,-73.567755,15z/data=!4m2!3m1!1s0x0:0x6d65958b48d4b49e?sa=X&amp;ved=2ahUKEwiGkuzw7vL9AhXtkokEHUY2D1cQ_BJ6BAh3EAg"" rel=""noopener"" target=""_blank"" title=""Map location"">View map</a></strong></p>
",NULL,NULL,02-05-2023 15:09,https://sites-gowlingwlg.vuturevx.com/99/7097/landing-pages---english/event-registration-(blank-form).asp,NULL,Register for this hybrid event,C0068CFF-B410-4701-8BAE-904CB487774D,NULL,08b9a44c-bb26-4255-9779-296a124fcbee;7e5cc100-41f8-49ad-9286-b51e6da41373,NULL,7fb29160-44a7-4f27-b030-99ef5d9941cf;a422060d-6f9d-4027-8e91-d7badbd87370;a21f77d5-b08e-4dac-9b34-efe5dddc9db1;ad4cc2a0-5825-4d92-930d-64226a7659b3;49370d7b-1121-45da-90e6-96dcc50c1710;55fe5486-16b8-4eff-8d24-4d3c9963bb7d;30cca9c9-eb77-425a-91fc-d88d492318e6;81de8dd8-6df3-4268-b613-8a07f2747c5f,NULL,Seminar,NULL,Hybrid event - En,56656,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Global;GWLG.Canada;GWLG.UK;GWLG.China;GWLG.UnitedStates;GWLG.UAEDubai;GWLG.Japan;GWLG.France;GWLG.Germany,0,NULL,Gowling WLG speakers,NULL,NULL,NULL,"Intellectual Property Law, Trade Secrets Law",NULL,NULL,~/getmedia/4a657f71-d901-466c-8a30-8c5594b2a167/230410-trade-secerts-global-social-EN.jpg.xml?width=1272&height=675&ext=.jpg,NULL,NULL
612,/Events/2023/Trade-secrets-enforcement-A-global-perspective,fr-CA,A31AEF89-D931-4E94-8103-A4422FA440DB,Conference : Protection des secrets commerciaux,Conférence : Protection des secrets commerciaux – une perspective mondiale,"Le 3 mai prochain, joignez-vous au groupe international d'avocats de Gowling WLG et à Tim Londergan, président de la direction et fondateur de la société Tangibly, chef de file mondial en solutions de gestion des secrets commerciaux pour un séminaire informatif axé sur la protection et l'application des droits des secrets commerciaux.",~/getmedia/cbbad3e1-346c-41bb-a436-290d25d9d0fa/230410-trade-secerts-global.jpg.xml?width=930&height=450&ext=.jpg,"close up of shredded documents with words ""information"" visible",GWLG.Seminar,03-05-2023 15:09,03-05-2023 15:09,8 h,10 h,EDT,0,NULL,"<p>Le droit des secrets commerciaux est le domaine du litige en PI qui connaît la plus fulgurante croissance à l&#39;échelle mondiale. Les tribunaux, les investisseurs et les institutions financières reconnaissent l&#39;importance de tels biens incorporels dans l&#39;évaluation des entreprises et les pertes potentielles qu&#39;ils peuvent représenter. En cette ère des technologies numériques, du travail à distance et de la facilité des déplacements, comment éviter les violations et s&#39;assurer que le &laquo;&thinsp;génie&thinsp;&raquo; ou &laquo;&thinsp;génie du secret&thinsp;&raquo; demeure à l&#39;abri dans sa lampe?</p>

<p>Le 3 mai prochain, joignez-vous au groupe international d&#39;avocats de Gowling WLG et à Tim Londergan, président de la direction et fondateur de la société Tangibly, chef de file mondial en solutions de gestion des secrets commerciaux pour un séminaire informatif axé sur la protection et l&#39;application des droits des secrets commerciaux.</p>

<p>Au programme :</p>

<p>Scénario fictif &ndash; À l&#39;aide d&#39;une mise en situation, vous pourrez suivre les traces d&#39;un voleur de secrets commerciaux autour du monde, et observer de près les mécanismes du processus de protection international.</p>

<p>Analyse concrète &ndash; Nous analyserons diverses situations réelles, dans le cadre desquelles des systèmes et des processus, dont l&#39;intelligence artificielle, peuvent être employés pour déceler les secrets commerciaux, gérer le flux d&#39;information (y compris les clauses d&#39;ententes), surveiller les violations et poser des gestes concrets.</p>

<p>Période de questions et réponses avec les conférenciers</p>

<p>Veuillez confirmer votre présence afin de&nbsp;réserver votre place. Nous espérons que vous assisterez en grand nombre à cet événement!</p>

<p>*&nbsp;La présentation sera en anglais; ceci dit, la période de questions sera en français et en anglais.</p>

<table>
	<thead>
		<tr>
			<th scope=""col"">Heure</th>
			<th scope=""col"">Programme</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td><strong>8 h -<br />
			8 h 25</strong></td>
			<td>Petit déjeuner</td>
		</tr>
		<tr>
			<td><strong>8 h 25</strong></td>
			<td>Mot de bienvenue et introduction</td>
		</tr>
		<tr>
			<td><strong>8 h 30 -<br />
			9 h 30</strong></td>
			<td>Scénario &laquo;&thinsp;autour du monde&thinsp;&raquo;</td>
		</tr>
		<tr>
			<td><strong>9 h 30 -<br />
			9 h 55</strong></td>
			<td>Période de questions et réponses</td>
		</tr>
		<tr>
			<td><strong>10 h</strong></td>
			<td>Conclusion</td>
		</tr>
	</tbody>
</table>

<p>&nbsp;</p>

<h2>En ligne ou en personne :</h2>

<p><strong>Gowling WLG</strong><br />
Suite 3700, 1 Place Ville Marie<br />
Montréal QC H3B 3P4<br />
<strong><a href=""https://www.google.com/maps/place/Gowling+WLG/@45.5017817,-73.567755,15z/data=!4m2!3m1!1s0x0:0x6d65958b48d4b49e?sa=X&amp;ved=2ahUKEwiGkuzw7vL9AhXtkokEHUY2D1cQ_BJ6BAh3EAg"" rel=""noopener"" target=""_blank"" title=""Map location"">Voir la carte</a></strong></p>
",NULL,NULL,02-05-2023 15:09,https://sites-gowlingwlg.vuturevx.com/99/7097/landing-pages---french/event-registration-(blank-form)-fr.asp,NULL,RSVP,C0068CFF-B410-4701-8BAE-904CB487774D,NULL,08b9a44c-bb26-4255-9779-296a124fcbee;7e5cc100-41f8-49ad-9286-b51e6da41373,NULL,7fb29160-44a7-4f27-b030-99ef5d9941cf;a422060d-6f9d-4027-8e91-d7badbd87370;a21f77d5-b08e-4dac-9b34-efe5dddc9db1;ad4cc2a0-5825-4d92-930d-64226a7659b3;49370d7b-1121-45da-90e6-96dcc50c1710;55fe5486-16b8-4eff-8d24-4d3c9963bb7d;30cca9c9-eb77-425a-91fc-d88d492318e6;81de8dd8-6df3-4268-b613-8a07f2747c5f,NULL,Séminaire,NULL,Hybrid event - Fr,56656,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Global;GWLG.Canada;GWLG.UK;GWLG.China;GWLG.UnitedStates;GWLG.UAEDubai;GWLG.Japan;GWLG.France;GWLG.Germany,0,NULL,Gowling WLG Conférenciers,NULL,NULL,NULL,"Propriété intellectuelle, Les lois relatives aux secrets commerciaux",NULL,NULL,~/getmedia/3c2e37a4-37e5-4ddd-a2a7-e950011910c3/230410-trade-secerts-global-social-FR.jpg.xml?width=1272&height=675&ext=.jpg,NULL,NULL
613,/Events/2023/Lifecycle-of-a-smart-idea-in-the-metaverse,en-GB,0E07D9AA-2A4C-4CD9-87A4-1329BEEF0AB7,Lifecycle of a smart idea in the metaverse,Lifecycle of a smart idea … in the metaverse,"On April 26, join us as we examine the current state of the metaverse, what it means for business, and the commercial and legal risks that surround it. Featuring a cross-practice panel of IP, tech and corporate professionals from Canada, Singapore and the UAE, the webinar will cover several timely topics.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,virtual world,GWLG.Webinar,23:30.0,23:18.0,"9 a.m. - 10 a.m. EDT, 2 p.m. - 3 p.m. BST, 3 p.m. - 4 p.m. CEST, 9 p.m. - 10 p.m.",NULL,CST,0,NULL,"<p>For IP owners around the world, the metaverse seems to pose more questions than answers &ndash; from the common &quot;what is it?&quot;&nbsp;to the more complex &quot;how do I protect my brand, and my business, in a virtual, borderless universe?&quot;&nbsp; One thing seems certain however: the metaverse presents enormous potential for brands who understand the opportunities &ndash; with preparation, knowledge and strategy being the difference makers.</p>

<p>On April 26, join us as we examine the current state of the metaverse, what it means for business, and the commercial and legal risks that surround it. Featuring a cross-practice panel of IP, tech and corporate professionals from Canada, Singapore and the UAE, the webinar will cover several timely topics, including:</p>

<ul>
	<li>The general structure and functionality of the metaverse</li>
	<li>Metaverse-related legal, social and political developments in different jurisdictions</li>
	<li>Business and legal risks: cyber security, privacy and civil liability</li>
	<li>IP risks and dispute resolution strategies, including in connection with NFTs</li>
</ul>

<p><strong>Register for this webinar today.</strong></p>

<h2>Speakers</h2>

<p><strong>Moderator:</strong> Monique Couture</p>

<p><strong>Panellists:</strong> Brent Arnold, Harleen Khanijoun, Jon Parker and Vincent Tan from JurisAsia LLC</p>

<p><em>This is the 23nd installment in our Lifecycle of a Smart Idea series, dedicated to helping you maximize opportunity and minimize risk when taking innovative ideas to the global market.&nbsp;</em><a href=""https://gowlingwlg.com/en/services/intellectual-property-law/webinars/"" target=""_blank""><em>Watch more from the series&nbsp;&raquo;</em></a></p>
",NULL,NULL,24:23.0,https://sites-gowlingwlg.vuturevx.com/106/7053/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,08b9a44c-bb26-4255-9779-296a124fcbee,NULL,7c982ff4-2b05-446c-9f31-9d84cd6e9912;8881287e-24c9-49cc-9a9b-985ad209d75d;6efa805b-ac52-4e6a-8888-b70e015f1c00;3fd4913d-3096-46ba-93b4-f365a5b14944,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada;GWLG.China;GWLG.HongKong;GWLG.Global;GWLG.UnitedStates;GWLG.UK,0,NULL,Gowling WLG Speakers,NULL,NULL,NULL,Intellectual Property Law,NULL,NULL,~/getmedia/68115a9b-79fe-4a08-b426-2a6407a093a4/230412-lifecycle-smart-idea-metaverse-social.jpg.xml?width=1272&height=675&ext=.jpg,NULL,NULL
614,/Events/2023/Workplace-Investigations-Workshop-Toronto,en-GB,22CFD20C-A8FC-43C7-9301-98AF64A90CFA,Workplace Investigations Workshop Toronto,Workplace Investigations Workshop,"Workplace investigations can pose serious legal, financial and reputational risk to any organization if not conducted properly. Indeed, for HR professionals and in-house counsel who must frequently manage this delicate process, there is little margin for error.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,Top down view of a group of people working together,GWLG.SpecialEvents,52:08.0,52:15.0,9 a.m.,5 p.m.,EDT,1,6 hours,"<p>Workplace investigations can pose serious legal, financial and reputational risk to any organization if not conducted properly. Indeed, for HR professionals and in-house counsel who must frequently manage this delicate process, there is little margin for error.</p>

<p>To help you navigate these situations effectively, we invite you to register for our upcoming Employment, Labour and Equalities workshop which explores the critical investigation skills that every organization needs to have in its arsenal. Over the course of the day-long event, we will walk you through each step of a workplace investigation, providing practical tips and legal risk-management strategies along the way. You will then have the opportunity to put this knowledge into practice through interactive tabletop exercises based on real-life scenarios.</p>

<p>Attendees will be offered a light breakfast, snacks and lunch.</p>

<p>Price is $800 + HST.</p>

<p><strong>Space is limited, so please RSVP by May 15&nbsp;to reserve your spot.</strong></p>

<h2>CPD Credits</h2>

<p><em>This program is eligible for up to 6 hours of substantive Continuing Professional Development (CPD) credits with the LSO, the LSBC and the Barreau du Québec.</em></p>

<p><em>This program has been approved for 6 hours of CPD hours by the Human Resource Professionals Association (HRPA).&nbsp;</em></p>

<p><em><img alt=""HRPA logo - Continuing Professional Development pre-approved"" height=""92px"" src=""~/getmedia/266eabe9-206f-46f4-85ff-012a111b35bf/hrpa-cpd-seal-rgb-72-002.png.xml?width=99&amp;height=92"" width=""99px"" /></em></p>

<h2>Agenda</h2>

<table>
	<thead>
		<tr>
			<th scope=""col"">Time</th>
			<th scope=""col"">Activity</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>8:30 - 9:00 a.m.</td>
			<td>Registration and light breakfast</td>
		</tr>
		<tr>
			<td>9:00 - 10:15 a.m.</td>
			<td>Introduction to workplace investigations and what the law requires of employers</td>
		</tr>
		<tr>
			<td><strong>10:15 - 10:30 a.m.</strong></td>
			<td><strong>Mid-morning break</strong></td>
		</tr>
		<tr>
			<td>10:30 - 12:15 p.m.</td>
			<td>How to conduct a workplace investigation</td>
		</tr>
		<tr>
			<td><strong>12:15 - 1:15 p.m.</strong></td>
			<td><strong>Lunch Break - This will be a partial working lunch during which participants can review fact patterns in preparation for afternoon session</strong></td>
		</tr>
		<tr>
			<td>1:15 - 2:30 p.m.</td>
			<td>Putting things into action: Scenario 1</td>
		</tr>
		<tr>
			<td><strong>2:30 - 2:45 p.m.</strong></td>
			<td><strong>Afternoon break</strong></td>
		</tr>
		<tr>
			<td>2:45 - 4:30 p.m.</td>
			<td>Putting things into action: Scenario 2</td>
		</tr>
		<tr>
			<td>4:30 - 5:00 p.m.</td>
			<td>Final remarks and Q&amp;A</td>
		</tr>
	</tbody>
</table>
",NULL,NULL,52:57.0,https://www.eventbrite.ca/e/614979057917,NULL,Register today,B2DC4461-DC66-4F96-9AE6-32BC2B14259D,NULL,d8837737-40d2-4472-8a9e-ba4101ec2105,NULL,c060a8eb-b8cd-4821-817d-e5e9b6677d5a;5d0d0341-b3e5-480d-9812-441dfc3ba63c,NULL,Special events,NULL,Toronto,63,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada,0,937BE43F-8D56-4E25-ACDE-37FD2496B22E,Speakers,NULL,NULL,NULL,"Employment, Labour & Equalities",NULL,NULL,~/getmedia/efe24d91-cb9b-4675-b68c-55ebab2f8c12/230413-investigations-workshop-toronto.jpg.xml?width=1272&height=675&ext=.jpg,NULL,NULL
615,/Events/2023/Fireside-chat-hot-topics-INTA-2023,en-GB,030B9888-2ABA-441B-8DEC-35930B1CCFB9,Fireside chat hot topics INTA 2023,Gowling WLG and JurisAsia fireside chat: Hot topics at INTA 2023,"Gowling WLG's global IP team is excited about next month's INTA 2023 Annual Meeting in Singapore, and we look forward to connecting with professionals across the global IP community.",~/getmedia/8b8b7d89-06b4-41b3-aeef-2faeb8772870/230413-Singapore-skyline.jpg.xml?width=930&height=450&ext=.jpg,Singapore skyline,GWLG.Webinar,32:54.0,33:03.0,9 a.m.,10 a.m.,EDT,0,NULL,"<p>Gowling WLG&#39;s global IP team is excited about next month&#39;s INTA 2023 Annual Meeting in Singapore, and we look forward to connecting with professionals across the global IP community.</p>

<p>Join us on May 3 for a virtual fireside chat between John Coldham, Gowling WLG UK Head of Brands and Designs, and his colleagues from Canada and China, as well as members of JurisAsia*, where they will discuss the hot topics for trademarks, brands and designs.</p>

<p>Stay up to date on the current developments and opportunities in Southeast Asia, while gaining insights into the Singapore market. Learn about unexpected IP solutions in China and hear about the emerging topics, including the metaverse and trade secrets.</p>

<p>Reserve your spot today and tune in from anywhere around the world.</p>

<h2>Speakers</h2>

<p><strong>Moderator:</strong> John Coldham</p>

<p><strong>Panellists:</strong> Monique Couture, Elliot Papageorgiou, <a href=""https://jurisasiallc.com/people/vivian-wei-cheng/"" target=""_blank"">Vivian Wei Cheng</a> and <a href=""https://jurisasiallc.com/people/tan-choon-leng/"" target=""_blank"">Tan Choon Leng</a> from JurisAsia LLC</p>

<h2>Event partner</h2>

<p><img alt="""" height=""44px"" src=""~/getmedia/0eb8dfe8-cbc1-4525-98ab-8303e276dd32/JURISASIA_logo.png.xml?width=250&amp;height=44"" width=""250px"" /></p>

<p><em>*A firm with whom Gowling WLG has an exclusive association</em></p>
",NULL,NULL,33:48.0,https://sites-gowlingwlg.vuturevx.com/106/7107/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,08b9a44c-bb26-4255-9779-296a124fcbee;aa72ea93-20f8-455a-8e77-6f6cea510684,NULL,9ff8fd1a-c2f5-4084-b72e-4aa02fdf3312;8881287e-24c9-49cc-9a9b-985ad209d75d;a7effb2c-0eb7-4c96-8973-18670001730f,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/106/7107/landing-pages/event-registration-(blank-form).asp,Register now,GWLG.Canada;GWLG.Global;GWLG.China;GWLG.UK,0,E27DAF69-E758-4617-9BAE-E854B13AF32A,Gowling WLG speakers,NULL,NULL,NULL,"Intellectual Property Law, Trademarks, Brands & Designs",NULL,NULL,~/getmedia/d4126e15-6e96-4ccc-a68d-688224b2dc27/230414-Pre-INTA-hot-topics.jpg.xml?width=930&height=450&ext=.jpg,NULL,_Blank
616,/Events/2023/See-you-at-BIO-2023,en-GB,50CA35AD-E47F-4A5E-9762-105A211522B6,See you at BIO 2023,See you at BIO 2023,Gowling WLG's global life sciences team looks forward to seeing you at BIO 2023.,~/getmedia/e623e9bb-94a0-41e0-b32d-8449084435b1/230417-Chicago-skyline.jpg.xml?width=930&height=450&ext=.jpg,Boston skyline seen from Harbor,GWLG.Conference,30:54.0,25:08.0,NULL,NULL,Local time,0,NULL,"<p>Gowling WLG&#39;s global life sciences team looks forward to seeing you at <a href=""https://www.bio.org/events/bio-international-convention"" target=""_blank"">BIO 2023</a>.</p>

<p>In attendance will be several of our professionals, bringing their breadth of experience in areas such as intellectual property law, corporate, IP litigation, patents, dispute resolution and tax.</p>

<p>With Gowling WLG, you will benefit from our in-depth understanding of the life sciences sector, as well as our global reach, seamless service, and cross-border multijurisdictional insight &ndash; all of which can provide you with the strategies you need to grow your business successfully. <a href=""~/en/sectors/life-sciences/global/"" target=""_blank"">Learn more about Gowling WLG&#39;s global Life Sciences Group</a>.</p>

<p>Below is the full list of our attendees. Don&#39;t hesitate to reach out in advance to book a meeting with any of them during BIO 2023. We look forward to seeing you there.</p>

<h2 align=""left"">BIO Professional Development</h2>

<p align=""left"">On June 3, our UK partners Jenny Davies and Luke Kempton will be teaching at the Advanced Business Development Course (ABD), taking place ahead of the BIO Convention. <a href=""https://www.bio.org/courses/advanced-business-development"" target=""_blank"">Learn more about the program here</a>.</p>
",NULL,NULL,20:55.0,/en/sectors/life-sciences/global/,NULL,Life Science Group - Learn more,AC4961B2-D57F-4047-B73F-AF0511891153,049c8249-7ff3-4ee3-a439-590f45fd5cff,NULL,NULL,870774bf-534e-466c-be9a-e89fb3fb38bf;1407399d-65b8-4056-acd8-99b863f88ab6;f546a9e0-8a3e-4ff5-a1ee-c3353d83aaac;74b9d0c7-28ad-4afc-8e4c-194a33906a90;0fe65d88-2f4b-401a-b90d-ea8ea4bdd72d;318ad67b-b673-41d5-a888-784ab5b9ea66;31699bd7-da5f-4d73-834a-7e345e466806;a422060d-6f9d-4027-8e91-d7badbd87370;ad5b2bf6-d057-4747-9426-315343c58711;ab7f980f-908e-4c42-bbc3-ea2d39c20924;f801a2a1-89ec-4986-8030-70e2352aa794;f7c8b707-bfc6-4f71-9b9a-314f270c393b;3b6c194b-1e76-443d-80ba-309e4b6d23fd;d9a834e2-7b85-4089-b241-ed2e95e1b3d6;b6fa127b-32c2-4ce4-9131-5f8519c73f84;afb0aeb9-6399-4d76-ac46-5bff1bebc521;56ee3f73-d210-49c8-9910-551c59e95fb2,NULL,Conference,"John Norman, PhD, Will Boyer, Patricia Brooks, Jenny Davies, George Elvira, Laura Gheorghiu, Dr Luke Kempton, Anita Nador, Omar A. Nassif, Trevor Newton, Edith Penty Geraets, Marc Richard, Susan Tandan, Lisa Thorne, Christopher C. Van Barr, Mark S. Wilke, PhD, Sonia M. Ziesche, PhD",BIO International Convention,56213,GWLG.Events,NULL,~/getmedia/90803071-da1e-41b8-bb70-a6acbbcb814a/230417-Chicago-skyline-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/d75b4e91-133c-400a-ae43-109cd8c97ab2/230417-Chicago-skyline-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,https://sites-gowlingwlg.vuturevx.com/6/4899/newsletter-sign-ups/subscribe---pharmacaps.asp?utm_source=Bio+event+page&utm_medium=CTA+bar&utm_campaign=Pharma+subscription,Sign up to receive our Pharmaceuticals (PharmaCapsules) newsletter,GWLG.Canada;GWLG.UnitedStates;GWLG.Global,0,NULL,Book a meeting with our Canada and UK attendees:,NULL,NULL,Life Sciences,NULL,NULL,NULL,~/getmedia/d8264a27-197f-4456-ae27-9aec37946188/230418-Bio-conference-social.jpg.xml?width=930&height=450&ext=.jpg,NULL,_Blank
617,/Events/2023/Tout-savoir-sur-les-cookies-en-une-bouchee,fr-CA,4164EBAD-BBDD-495A-86D6-5F210EA02D81,Tout savoir sur les cookies en une bouchee,Tout savoir sur les <em>cookies</em> en une bouchée : pratiques marketing et conformité légale,Pour vous le mot cookie est synonyme de biscuit? Vous n’êtes pas seuls! Participez à notre formation sur les cookies (ou témoins de connexion) et découvrez comment utiliser cette technologie pour améliorer votre site Web tout en vous conformant aux nouvelles exigences en matière de protection de la vie privée découlant de la Loi 25.,~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,cookie placed on a laptop keyboard,GWLG.SpecialEvents,52:31.0,52:40.0,8 h 30,10 h,EDT,0,NULL,"<p>Pour vous le mot&nbsp;<em>cookie</em>&nbsp;est synonyme de biscuit? Vous n&rsquo;êtes pas seuls! Participez à notre formation sur les&nbsp;<em>cookies</em>&nbsp;(ou témoins de connexion) et découvrez comment utiliser cette technologie pour améliorer votre site Web tout en vous conformant aux nouvelles exigences en matière de protection de la vie privée découlant de la Loi 25.</p>

<p>Nous vous proposerons notamment quelques trucs et astuces pour que votre site continue à tirer avantage de cette technologie dans le respect de la vie privée des utilisateurs.</p>

<p>Et pour joindre l&#39;utile à l&#39;agréable, notre conférence sera également agrémentée de vrais biscuits confectionnés par une artisane locale qui sera sur place pour vous présenter ses délices.</p>

<p>En espérant vous y voir en grand nombre!</p>

<h2>Agenda</h2>

<table>
	<thead>
		<tr>
			<th scope=""col"">Heure</th>
			<th scope=""col"">Programme</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>8 h 30</td>
			<td>Accueil et petit-déjeuner</td>
		</tr>
		<tr>
			<td>8 h 55</td>
			<td>Introduction</td>
		</tr>
		<tr>
			<td>9 h</td>
			<td>Début de la conférence</td>
		</tr>
		<tr>
			<td>9 h 55</td>
			<td>Période de questions et réponses</td>
		</tr>
		<tr>
			<td>10 h</td>
			<td>Conclusion</td>
		</tr>
	</tbody>
</table>

<h2>Actualités et ressources</h2>

<ul>
	<li><a href=""~/fr/insights-resources/articles/2023/artificial-intelligence-and-data-act-aida/"" target=""_self"">Loi sur l&#39;intelligence artificielle et les données (AIDA)</a></li>
	<li><a href=""~/fr/insights-resources/guides/2023/law-25-annotated-private-sector-act/"" target=""_self"">Loi 25 : loi annotée touchant le secteur privé</a></li>
	<li><a href=""~/fr/insights-resources/articles/2022/the-abcs-of-reporting-a-privacy-breach-law-25/"" target=""_self"">Comment déclarer des incidents de confidentialité en vertu de la nouvelle loi 25 au Québec</a></li>
</ul>
",NULL,NULL,53:20.0,https://sites-gowlingwlg.vuturevx.com/99/7024/landing-pages/event-registration-(blank-form).asp,NULL,RSVP,4EEBBC16-5EC7-4186-B6BB-A7F0CF2F7CA4,NULL,NULL,NULL,NULL,NULL,Événements spéciaux,NULL,Montréal,66,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada,0,D4175C8F-4D3F-4641-A45F-20EC57DC60F9,Conférenciers,NULL,NULL,NULL,NULL,NULL,NULL,~/getmedia/ce508012-a77f-4733-b15a-12d7f4445196/230417-Tout-savoir-sur-les-cookies.jpg.xml?width=1272&height=675&ext=.jpg,NULL,NULL
618,/Events/2023/Fireside-chat-hot-topics-INTA-2023,fr-CA,030B9888-2ABA-441B-8DEC-35930B1CCFB9,Discussion franche 2023 de l'INTA,Discussion franche entre <br>Gowling WLG et JurisAsia : les sujets brûlants de la conférence 2023 de l'INTA (en anglais),"Gowling WLG's global IP team is excited about next month's INTA 2023 Annual Meeting in Singapore, and we look forward to connecting with professionals across the global IP community.",~/getmedia/8b8b7d89-06b4-41b3-aeef-2faeb8772870/230413-Singapore-skyline.jpg.xml?width=930&height=450&ext=.jpg,Singapore skyline,GWLG.Webinar,32:54.0,33:03.0,9 a.m.,10 a.m.,EDT,0,NULL,"<p>Gowling WLG&#39;s global IP team is excited about next month&#39;s INTA 2023 Annual Meeting in Singapore, and we look forward to connecting with professionals across the global IP community.</p>

<p>Join us on May 3 for a virtual fireside chat between John Coldham, Gowling WLG UK Head of Brands and Designs, and his colleagues from Canada and China, as well as members of JurisAsia*, where they will discuss the hot topics for trademarks, brands and designs.</p>

<p>Stay up to date on the current developments and opportunities in Southeast Asia, while gaining insights into the Singapore market. Learn about unexpected IP solutions in China and hear about the emerging topics, including the metaverse and trade secrets.</p>

<p>Reserve your spot today and tune in from anywhere around the world.</p>

<h2>Speakers</h2>

<p><strong>Moderator:</strong> John Coldham</p>

<p><strong>Panellists:</strong> Monique Couture, Elliot Papageorgiou, <a href=""https://jurisasiallc.com/people/vivian-wei-cheng/"" target=""_blank"">Vivian Wei Cheng</a> and <a href=""https://jurisasiallc.com/people/tan-choon-leng/"" target=""_blank"">Tan Choon Leng</a> from JurisAsia LLC</p>

<h2>Event partner</h2>

<p><img alt="""" src=""~/getmedia/0eb8dfe8-cbc1-4525-98ab-8303e276dd32/JURISASIA_logo.png.xml?width=250&amp;height=44"" style=""width: 250px; height: 44px;"" /></p>

<p><em>*A firm with whom Gowling WLG has an exclusive association</em></p>
",NULL,NULL,33:48.0,https://sites-gowlingwlg.vuturevx.com/106/7107/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,08b9a44c-bb26-4255-9779-296a124fcbee;aa72ea93-20f8-455a-8e77-6f6cea510684,NULL,9ff8fd1a-c2f5-4084-b72e-4aa02fdf3312;8881287e-24c9-49cc-9a9b-985ad209d75d;a7effb2c-0eb7-4c96-8973-18670001730f,NULL,Webinaires,NULL,Webinaire,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/106/7107/landing-pages/event-registration-(blank-form).asp,Register now,GWLG.Canada;GWLG.Global;GWLG.China;GWLG.UK,0,E27DAF69-E758-4617-9BAE-E854B13AF32A,Conférenciers de Gowling WLG,NULL,NULL,NULL,"Propriété intellectuelle, Marques de commerce, marques et dessins",NULL,NULL,~/getmedia/d4126e15-6e96-4ccc-a68d-688224b2dc27/230414-Pre-INTA-hot-topics.jpg.xml?width=930&height=450&ext=.jpg,NULL,_Blank
619,/Events/2023/Employment-Mid-Year-Update-Birmingham,en-GB,ACBB37E5-A0B9-4ACB-AE5B-7F318198FDBD,Employment Mid-Year Update - Birmingham,Employment Mid-Year Update - Birmingham,"The session has been developed specifically for anyone dealing with HR and ER matters within their organisation, whether in-house lawyers, HR professionals or others. ",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,13-06-2023 09:00,13-06-2023 13:30,09:00,13:30,GMT,0,NULL,"<p>Please note this event is also being held in <a href=""https://gowlingwlg.com/en/events/2023/employment-mid-year-update-london/"">London on 28 June</a>.</p>

<p>Before heading into the summer, we&#39;ll be taking stock of some of the key issues which employers will face in the workplace over the rest of the year and beyond. With the jury still out on whether the second half of the year will see an improvement in the economy and with a number of changes to employment law coming down the tracks, it&#39;s important to keep abreast of developments across the board. Our updates aim to help you identify and mitigate risk in your organisation, both in the short and long-term. For our summer update session we&#39;re delighted to return to in person events. Going forward we will put on a mixture of webinars and in person events. This event will be in person only.</p>

<p>Please join us for a morning session covering the four topics below in June. The morning has been developed specifically for anyone dealing with HR and ER matters within their organisation, whether in-house lawyers, HR professionals or others. The morning will start at 09:00 and the sessions will end by 12:45, with plenty of opportunity to ask questions. We would be delighted if you can join us for lunch after the sessions end.</p>

<hr width=""100%"" />
<p><strong>Speaker - Anna Fletcher &ndash; Neurodiversity in the workplace - how well do you understand it?</strong><br />
With an increasing focus on neurodiversity in society as a whole, we will look at the work that employers can do to drive awareness and understanding of managing people with neuro-diverse conditions at work. We will be joined by in-house employment Counsel at Virgin Atlantic to give the in-house employment perspective on this important topic.</p>

<p><strong>Speaker - Dan Phillips &ndash; Understanding the risks of employment references</strong><br />
The recent High Court decision in <em>Smith v Surridge</em>, is a helpful reminder that employment references need to be drafted with care given the duties you owe to the individual and to those relying on the reference. This session will bring you up to speed on the rules around providing references, to help you manage the risk of breaching those duties.</p>

<p><strong>Speaker - Jane Fielding &ndash; Philosophical beliefs - how far does protection extend? </strong><br />
There have been some significant and high profile decisions in 2022 and 2023 in this area, particularly in relation to protection of gender critical/gender identity beliefs. Although several of those cases are ongoing with potential further appeals, in this session we will look at what questions have been answered so far on the scope of protection and what practical steps employers can take to make sure they are complying with the law.</p>

<p><strong>Speaker - Kiran Gosal &ndash; Round up - what is on the legislative horizon? </strong><br />
After a period which has seen relatively little in the way of legislative reform, there are a number of potential legislative changes to the employment law landscape in the pipeline. The pending legislative developments cover a range of issues, from family leave and flexible working to industrial action and protection from harassment and the &quot;sunset&quot; clause in the Retained EU Law Bill. Several of them are contained in private member bills which makes them harder to keep track of. In this session, we will share a round-up of the key anticipated changes and consider what they will mean for employers.</p>

<p>During the morning, the speakers will provide useful information and practical tips on their respective topics, and will answer as many questions as possible in the time available.</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession. Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,12-06-2023 11:46,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?RSID=YoXeWRTVWP1BZBxYIHIsGhwpprE4QEO0GgpVMIitmlgBEjI_0AOTnQnrBYkUMUlV,NULL,Register for this event,58076178-DA60-4AB6-A07C-EF250971EBF7,NULL,d8837737-40d2-4472-8a9e-ba4101ec2105,NULL,79205c59-28cb-4630-bd62-bf070ba732b0;06098c5e-87c7-4c91-805f-3ad029667752;40fe7819-6e1c-47d1-b0b7-5e0fd63d9996;799cf040-59c7-4986-825a-e4b909364823;5f449485-052b-475e-b601-b3cc9e729856,NULL,Seminar,NULL,Birmingham,70,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,40ECBAEA-9783-479A-8EB9-9D39F577C01D,Speaker(s),NULL,58076178-da60-4ab6-a07c-ef250971ebf7,NULL,"Employment, Labour & Equalities",NULL,Birmingham,NULL,NULL,NULL
620,/Events/2023/Employment-Mid-Year-Update-London,en-GB,8381C486-FDBF-4FF2-8DC5-B9165B9F22F3,Employment Mid-Year Update - London,Employment Mid-Year Update - London,"The session has been developed specifically for anyone dealing with HR and ER matters within their organisation, whether in-house lawyers, HR professionals or others. ",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,28-06-2023 09:00,28-06-2023 13:30,09:00,13:30,GMT,0,NULL,"<p>Please note this event is also being held in <a href=""https://gowlingwlg.com/en/events/2023/employment-mid-year-update-birmingham/"">Birmingham on 13&nbsp;June</a>.</p>

<p>Before heading into the summer, we&#39;ll be taking stock of some of the key issues which employers will face in the workplace over the rest of the year and beyond. With the jury still out on whether the second half of the year will see an improvement in the economy and with a number of changes to employment law coming down the tracks, it&#39;s important to keep abreast of developments across the board. Our updates aim to help you identify and mitigate risk in your organisation, both in the short and long-term. For our summer update session we&#39;re delighted to return to in person events. Going forward we will put on a mixture of webinars and in person events. This event will be in person only.</p>

<p>Please join us for a morning session covering the four topics below in June. The morning has been developed specifically for anyone dealing with HR and ER matters within their organisation, whether in-house lawyers, HR professionals or others. The morning will start at 09:00 and the sessions will end by 12:45, with plenty of opportunity to ask questions. We would be delighted if you can join us for lunch after the sessions end.</p>

<hr width=""100%"" />
<p><strong>Speaker - Anna Fletcher &ndash; Neurodiversity in the workplace - how well do you understand it?</strong><br />
With an increasing focus on neurodiversity in society as a whole, we will look at the work that employers can do to drive awareness and understanding of managing people with neuro-diverse conditions at work. We will be joined by in-house employment Counsel at Virgin Atlantic to give the in-house employment perspective on this important topic.</p>

<p><strong>Speaker - Dan Phillips &ndash; Understanding the risks of employment references</strong><br />
The recent High Court decision in <em>Smith v Surridge</em>, is a helpful reminder that employment references need to be drafted with care given the duties you owe to the individual and to those relying on the reference. This session will bring you up to speed on the rules around providing references, to help you manage the risk of breaching those duties.</p>

<p><strong>Speaker - Jane Fielding &ndash; Philosophical beliefs - how far does protection extend? </strong><br />
There have been some significant and high profile decisions in 2022 and 2023 in this area, particularly in relation to protection of gender critical/gender identity beliefs. Although several of those cases are ongoing with potential further appeals, in this session we will look at what questions have been answered so far on the scope of protection and what practical steps employers can take to make sure they are complying with the law.</p>

<p><strong>Speaker - Kiran Gosal &ndash; Round up - what is on the legislative horizon? </strong><br />
After a period which has seen relatively little in the way of legislative reform, there are a number of potential legislative changes to the employment law landscape in the pipeline. The pending legislative developments cover a range of issues, from family leave and flexible working to industrial action and protection from harassment and the &quot;sunset&quot; clause in the Retained EU Law Bill. Several of them are contained in private member bills which makes them harder to keep track of. In this session, we will share a round-up of the key anticipated changes and consider what they will mean for employers.</p>

<p>During the morning, the speakers will provide useful information and practical tips on their respective topics, and will answer as many questions as possible in the time available.</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession. Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,28-06-2023 11:46,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?RSID=YoXeWRTVWP1BZBxYIHIsGhwpprE4QEO0GgpVMIitmlgBEjI_0AOTnQnrBYkUMUlV,NULL,Register for this event,9FBE191E-3BCF-45DE-A2BA-338BB194FC9D,NULL,d8837737-40d2-4472-8a9e-ba4101ec2105,NULL,79205c59-28cb-4630-bd62-bf070ba732b0;06098c5e-87c7-4c91-805f-3ad029667752;40fe7819-6e1c-47d1-b0b7-5e0fd63d9996;799cf040-59c7-4986-825a-e4b909364823;5f449485-052b-475e-b601-b3cc9e729856,NULL,Seminar,NULL,London,71,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.UK,0,40ECBAEA-9783-479A-8EB9-9D39F577C01D,Speaker(s),NULL,58076178-da60-4ab6-a07c-ef250971ebf7,NULL,"Employment, Labour & Equalities",NULL,Birmingham,NULL,NULL,NULL
621,/Events/2023/ThinkHouse-Public-Sector-Grants-V-Contracts,en-GB,668C4AD9-3D3D-4221-A4CE-F6EA6AF6D27B,ThinkHouse - Public Sector - Grants V Contracts,ThinkHouse - Public Sector - Grants V Contracts,"In this session we will explore the key differences between grants and contracts reminding attendees of principles such as consideration, contract obligations, remedies for default and how they play into the discussion about whether an arrangement is a grant or a contract.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Webinar,30:00.0,30:33.0,10:30,11:30,BST,0,NULL,"<p>In this session we will explore the key differences between grants and contracts reminding attendees of principles such as consideration, contract obligations, remedies for default and how they play into the discussion about whether an arrangement is a grant or a contract. Significantly, we will explore how the distinction between grants and contracts can bring into play the operation of public procurement law with all its constraints and requirements for advertisement etc.</p>

<p>Christopher Brennan, Alexi Markham and the ThinkHouse team hope you are able to join us for this webinar.</p>
","<p>This event is free of charge.</p>

<p>Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession. Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,30:03.0,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?RSID=hswI0KXP7WwBpxVlSbirRRIkjqLLqZIOQJWLfZ7a60RSV9xi_GK7bZO6dCxQbHvx,NULL,Register for this event,C41373B4-86B9-4F74-8894-0B0BB7DDBD18,5ad41b49-d460-489a-95b9-84c854eda6f1,549cbe28-f188-44cd-85c0-0f4e23a23817,a143cbfd-d333-42a0-89a6-7287894464f1,503e49eb-bfc5-4803-a856-7fcbac77a38a;667bbf5f-7038-4fe6-9e59-de081f876b1c,NULL,Webinar,"Christopher Brennan, Alexi Markham",Online event,694,GWLG.Events,NULL,~/getmedia/efc984db-24bf-45e0-84ed-597e573468c2/thinkhouse-gc-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/394302bb-a5cf-4c8a-8056-79fb1a3ce761/thinkhouse-gc-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,B1C224F8-2DD5-4CB9-863C-9EDE6FFDA40B,Speaker(s),NULL,NULL,Government Contracting & Public Sector ,Commercial,ThinkHouse,NULL,NULL,NULL,NULL
622,/Events/2023/Disability-accommodation-in-the-workplace,en-GB,EB0ED136-79EC-46A2-8305-BCA9C24DE3E2,Disability accommodation in the workplace,Disability accommodation in the workplace: What are your responsibilities as an employer?,"Join us for a webinar that will walk you through what constitutes a disability, as well as best practices for handling accommodation requests.",~/getmedia/46c7020c-29c6-4ab6-9e6e-54ee21b8bbe8/230427-ELE-disabilities-webinar.jpg.xml?width=930&height=450&ext=.jpg,group of business people around table,GWLG.Webinar,23:39.0,23:45.0,8:30 a.m,9:30 a.m,EDT,0,NULL,"<p>As an employer, you have a legal obligation to accommodate employees with disabilities.&nbsp;</p>

<p>Join us for a webinar that will walk you through what constitutes a disability, as well as best practices for handling accommodation requests.<br />
<br />
Topics will include:</p>

<ul>
	<li>What medical information may an employer request</li>
	<li>How to communicate with employees regarding disability accommodation</li>
	<li>Can an employer ever prove undue hardship</li>
</ul>

<p>Our panel of Employment Labour &amp; Equalities Law professionals will help you answer these questions, and provide insight into how you can create a safe, accommodating environment in your workplace.&nbsp;&nbsp;</p>
",NULL,NULL,24:10.0,https://sites-gowlingwlg.vuturevx.com/106/7124/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,d8837737-40d2-4472-8a9e-ba4101ec2105,NULL,c060a8eb-b8cd-4821-817d-e5e9b6677d5a;645ef482-5bb3-4909-a3b7-460f29738efb;a510a502-96d3-4ad6-b74c-b3fb1df466af,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,NULL,NULL,GWLG.Canada;GWLG.Global,0,NULL,Speakers,NULL,NULL,NULL,"Employment, Labour & Equalities",NULL,NULL,~/getmedia/617459ce-e4f5-42d6-a507-043a6387c6aa/230427-ELE-disabilities-webinar-social.jpg.xml?width=1272&height=675&ext=.jpg,NULL,NULL
623,/Events/2023/ThinkHouse-IT-Masterclass-Birmingham,en-GB,376D8D23-95C5-420C-9DAC-99F32937D7DC,ThinkHouse - IT Masterclass - Birmingham,ThinkHouse - IT Masterclass - Birmingham,"This interactive masterclass consists of a morning delving into Artificial Intelligence (AI) and where it is now, before a session looking at the new pragmatic approach from the Information Commissioner's Office (ICO). We will then look at how to respond to ransomware before wrapping the day up with legal structures for sharing data.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,08-06-2023 07:38,08-06-2023 07:39,09:15,13:45,BST,0,NULL,"<p>This interactive masterclass&nbsp;consists of a morning delving into Artificial Intelligence (AI) and where it is now, before a session looking at the new pragmatic approach from the Information Commissioner&#39;s Office (ICO). We will then look at how to respond to ransomware before wrapping the day up with legal structures for sharing data.</p>

<p>This seminar&nbsp;offers a great opportunity to network with senior General Counsel, General Counsel and more.</p>

<h2><abbr title=""Artificial Intelligence"">AI</abbr> and where is it now</h2>

<p>Our <abbr title=""Artificial Intelligence"">AI</abbr> team will look at the state of <abbr title=""Artificial Intelligence"">AI</abbr>, including the growing importance of generative <abbr title=""Artificial Intelligence"">AI</abbr> and foundation models, and highlight the emerging regulatory and legal issues.</p>

<h2>A new pragmatic approach from the <abbr title=""Information Commissioner's Office"">ICO</abbr></h2>

<p>Alex Gill will examine the <abbr title=""Information Commissioner's Office"">ICO</abbr>&#39;s new strategic approach to regulating the UK&#39;s data protection law including a deep dive into recent enforcement decisions, recent fines and the role of the <abbr title=""Information Commissioner's Office"">ICO</abbr> in a post-Brexit, pre-DPDI world.</p>

<h2>How to respond to ransomware</h2>

<p>Helen Davenport and Amber Strickland, our cyber security experts will discuss responding to ransomware attacks and cover recent cases where victims have sought injunctions against hackers through the civil courts; including a look at claims against &quot;Persons Unknown&quot;, anonymous proceedings and practical considerations.</p>

<h2>Legal structures for sharing data</h2>

<p>Jocelyn Paulley will look at issues and structures when sharing data between businesses and how to prepare to share data, avoiding the pitfalls and establishing clear corporate or contractual structures.</p>

<h2>Agenda</h2>

<table>
	<tbody>
		<tr>
			<th scope=""col"">Time</th>
			<th scope=""col"">Agenda item</th>
		</tr>
		<tr>
			<td>09:15</td>
			<td>Registration</td>
		</tr>
		<tr>
			<td>09:45</td>
			<td>Seated</td>
		</tr>
		<tr>
			<td>09:50</td>
			<td>Welcome/housekeeping from chair</td>
		</tr>
		<tr>
			<td>10:00</td>
			<td>Where AI has got to now</td>
		</tr>
		<tr>
			<td>10:45</td>
			<td>A new pragmatic approach from the ICO</td>
		</tr>
		<tr>
			<td>11:30</td>
			<td>Break</td>
		</tr>
		<tr>
			<td>11:50</td>
			<td>How to respond to ransomware</td>
		</tr>
		<tr>
			<td>12:35</td>
			<td>Legal structures for sharing data</td>
		</tr>
		<tr>
			<td>13:20</td>
			<td>Lunch</td>
		</tr>
		<tr>
			<td>13:45</td>
			<td>Close</td>
		</tr>
	</tbody>
</table>
","<p>This event is free of charge.</p>

<p>Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession. Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,07-06-2023 17:30,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?RSID=hswI0KXP7WwBpxVlSbirRRIkjqLLqZIOQJWLfZ7a60RFXajEAJxTJv8NAsbKFeeU,NULL,Register for this event,58076178-DA60-4AB6-A07C-EF250971EBF7,NULL,09ef8b8d-ebb3-4643-89b1-7781cc96a384;2e9a87e2-3d2e-4d69-ba9c-06b4b358ca0d,a143cbfd-d333-42a0-89a6-7287894464f1,75a219e7-ea84-4ba2-9990-61b83de62877;d3e0fa3e-1011-4fe0-b62a-88c920f62d49;65759eac-aef5-40db-84d5-4b0cce3d860c;501b9c0e-a224-4ff6-af95-42744c0d29d3,NULL,Seminar,NULL,Birmingham,70,GWLG.Events,NULL,~/getmedia/efc984db-24bf-45e0-84ed-597e573468c2/thinkhouse-gc-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/394302bb-a5cf-4c8a-8056-79fb1a3ce761/thinkhouse-gc-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,NULL,Speaker(s),NULL,58076178-da60-4ab6-a07c-ef250971ebf7,NULL,"Artificial Intelligence (AI) Law, Cyber Security & Data Protection Law",ThinkHouse,Birmingham,NULL,NULL,NULL
624,/Events/2023/ThinkHouse-IT-Masterclass-London,en-GB,DD26142B-AC1F-4FA4-8D12-02804994A1AA,ThinkHouse - IT Masterclass - London,ThinkHouse - IT Masterclass - London,"This interactive masterclass consists of a morning delving into Artificial Intelligence (AI) and where it is now, before a session looking at the new pragmatic approach from the Information Commissioner's Office (ICO). We will then look at how to respond to ransomware before wrapping the day up with legal structures for sharing data.",~/getmedia/f98364e4-b284-4d9c-8dd2-c08b1692796a/Gowling-WLG-Default-Page-Image.jpg.xml?width=930&amp;height=450&amp;ext=.jpg,NULL,GWLG.Seminar,15-06-2023 07:38,15-06-2023 07:39,09:15,13:45,BST,0,NULL,"<p>This interactive masterclass&nbsp;consists of a morning delving into Artificial Intelligence (AI) and where it is now, before a session looking at the new pragmatic approach from the Information Commissioner&#39;s Office (ICO). We will then look at how to respond to ransomware before wrapping the day up with legal structures for sharing data.</p>

<p>This&nbsp;seminar&nbsp;offers a great opportunity to network with senior General Counsel, General Counsel and more.</p>

<h2><abbr title=""Artificial Intelligence"">AI</abbr> and where is it now</h2>

<p>Our <abbr title=""Artificial Intelligence"">AI</abbr> team will look at the state of <abbr title=""Artificial Intelligence"">AI</abbr>, including the growing importance of generative <abbr title=""Artificial Intelligence"">AI</abbr> and foundation models, and highlight the emerging regulatory and legal issues.</p>

<h2>A new pragmatic approach from the <abbr title=""Information Commissioner's Office"">ICO</abbr></h2>

<p>Alex Gill will examine the <abbr title=""Information Commissioner's Office"">ICO</abbr>&#39;s new strategic approach to regulating the UK&#39;s data protection law including a deep dive into recent enforcement decisions, recent fines and the role of the <abbr title=""Information Commissioner's Office"">ICO</abbr> in a post-Brexit, pre-DPDI world.</p>

<h2>How to respond to ransomware</h2>

<p>Helen Davenport and Amber Strickland, our cyber security experts will discuss responding to ransomware attacks and cover recent cases where victims have sought injunctions against hackers through the civil courts; including a look at claims against &quot;Persons Unknown&quot;, anonymous proceedings and practical considerations.</p>

<h2>Legal structures for sharing data</h2>

<p>Jocelyn Paulley will look at issues and structures when sharing data between businesses and how to prepare to share data, avoiding the pitfalls and establishing clear corporate or contractual structures.</p>

<h2>Agenda</h2>

<table>
	<tbody>
		<tr>
			<th scope=""col"">Time</th>
			<th scope=""col"">Agenda item</th>
		</tr>
		<tr>
			<td>09:15</td>
			<td>Registration</td>
		</tr>
		<tr>
			<td>09:45</td>
			<td>Seated</td>
		</tr>
		<tr>
			<td>09:50</td>
			<td>Welcome/housekeeping from chair</td>
		</tr>
		<tr>
			<td>10:00</td>
			<td>Where AI has got to now</td>
		</tr>
		<tr>
			<td>10:45</td>
			<td>A new pragmatic approach from the ICO</td>
		</tr>
		<tr>
			<td>11:30</td>
			<td>Break</td>
		</tr>
		<tr>
			<td>11:50</td>
			<td>How to respond to ransomware</td>
		</tr>
		<tr>
			<td>12:35</td>
			<td>Legal structures for sharing data</td>
		</tr>
		<tr>
			<td>13:20</td>
			<td>Lunch</td>
		</tr>
		<tr>
			<td>13:45</td>
			<td>Close</td>
		</tr>
	</tbody>
</table>
","<p>This event is free of charge.</p>

<p>Gowling WLG is an accredited provider with the Bar Standards Board (provider ID number 1940). For all other professions, we suggest that you check with your professional body or your learning and development team as to whether this event meets the CPD requirements for your profession. Please do get in touch if you have any further queries about this event and CPD.</p>

<p>Gowling WLG is committed to ensuring people with disabilities can participate fully in our events. If you would like to attend this event and there is something which will help you do so more easily, please provide details to the event organiser.</p>
",NULL,14-06-2023 17:30,https://marketing.uk.gowlingwlg.com/REACTION/Home/RSForm?RSID=hswI0KXP7WwBpxVlSbirRRIkjqLLqZIOQJWLfZ7a60RFXajEAJxTJv8NAsbKFeeU,NULL,Register for this event,9FBE191E-3BCF-45DE-A2BA-338BB194FC9D,NULL,09ef8b8d-ebb3-4643-89b1-7781cc96a384;2e9a87e2-3d2e-4d69-ba9c-06b4b358ca0d,a143cbfd-d333-42a0-89a6-7287894464f1,75a219e7-ea84-4ba2-9990-61b83de62877;d3e0fa3e-1011-4fe0-b62a-88c920f62d49;65759eac-aef5-40db-84d5-4b0cce3d860c;501b9c0e-a224-4ff6-af95-42744c0d29d3,NULL,Seminar,NULL,London,71,GWLG.Events,NULL,~/getmedia/efc984db-24bf-45e0-84ed-597e573468c2/thinkhouse-gc-desktop.jpg.xml?width=1400&height=540&ext=.jpg,~/getmedia/394302bb-a5cf-4c8a-8056-79fb1a3ce761/thinkhouse-gc-mobile.jpg.xml?width=500&height=550&ext=.jpg,0,NULL,NULL,NULL,GWLG.UK,0,NULL,Speaker(s),NULL,58076178-da60-4ab6-a07c-ef250971ebf7,NULL,"Artificial Intelligence (AI) Law, Cyber Security & Data Protection Law",ThinkHouse,Birmingham,NULL,NULL,NULL
625,/Events/2023/Best-practices-Canadian-businesses-cyber-insurance,en-GB,28ECEFDE-8D8F-411A-9877-FD817633DF9A,Best practices Canadian businesses cyber insurance,Best practices for Canadian businesses to get and keep cyber insurance coverage: Tough lessons learned from U.S. hardening market,"Cyber attacks, including ransomware, continue to grow more sophisticated and more prevalent each passing year. Despite this, many Canadian companies have been slow to secure cyber insurance coverage – and those now wishing to do so may face a brittle insurance climate.",~/getmedia/71ff4fce-2521-4c09-9306-e36c64864b8d/230503-cyber-insurance-US-market-lock-image.jpg.xml?width=930&height=450&ext=.jpg,abstract image of a lock,GWLG.Webinar,41:19.0,41:23.0,11:15 a.m.,12 p.m.,EDT,0,NULL,"<p>Cyber attacks, including ransomware, continue to grow more sophisticated and more prevalent each passing year. Despite this, many Canadian companies have been slow to secure cyber insurance coverage &ndash; and those now wishing to do so may face a brittle insurance climate. Indeed, in the wake of a sharp increase in the volume of high-value claims, U.S. cyber insurers are revisiting coverage requirements and exclusions, and pursuing more aggressive strategies to protect themselves against increasing future risk exposure posed by such claims. This when a binder is provided based on misrepresentations (for instance, making false claims to having enterprise-wide multifactor authentication), which resulted last year in a U.S. claims case where a policy was rescinded possibly triggering an alarming trend that might be followed in Canada.</p>

<p>Accordingly, the primary purpose of this presentation is to show why it behooves companies of all sizes in Canada seeking to obtain or renew a binder in this changing market to: 1) be all the more diligent in continuously strengthening their cyber readiness by meeting imposed products/practices requirements; and 2) be transparent to prospective insurers - both of these things giving companies the possibility of securing better terms in the future.</p>

<p>On May 17, please join our panel of experienced industry professionals as they explore this evolving space from a number of perspectives. The topics, which are tailored to Canadian companies of any size, will include:</p>

<ul>
	<li>The practical implications of Canada&rsquo;s hardening cyber insurance market.</li>
	<li>Cyber security practices and measures applicants either must or &ndash; if they want to exceed then-minimum requirements to be able to request with confidence lower premiums/higher limits/other better terms &ndash; should consider prior to seeking a new or renewed policy, as well as what brokers/carriers might do to engender much-needed trust/good will/confidence that claims will be honored/paid.</li>
	<li>Lessons from the U.S. insurance market, including that recent high-profile (some might say &ldquo;shot across the bow&rdquo;) claims case noted above.</li>
	<li>How Canadian policyholders can manage and mitigate the risk of potential policy rescission.</li>
</ul>

<p>Register for this webinar today.</p>

<h2>Moderator</h2>

<ul>
	<li><a href=""https://~/en/people/brent-arnold/"" target=""_self"">Brent Arnold</a>, Partner (Gowling WLG)</li>
</ul>

<h2>Speakers</h2>

<ul>
	<li align=""left"">Deborah Hirschorn, Managing Director (U.S. Cyber &amp; Technology Claims Leader, Lockton)</li>
	<li>Roger Hacala, National Practice Leader (Financial and Professional Services, BFL Canada)</li>
	<li>Pauline Gardikiotis, Vice President (Western Region Leader- Claims &amp; Operations, BFL Canada)</li>
	<li>Avi Mali, Underwriting Specialist (Cyber &amp; Professional Liability, Zurich Canada)</li>
</ul>

<h2>Event partner</h2>

<p><a href=""https://www.gcracorp.com/"" target=""_blank""><img alt=""GCRA logo"" src=""~/getmedia/7cccb107-75eb-463a-8690-f32c3a1f5312/gcra.png.xml"" /></a></p>

<p>&nbsp;</p>
",NULL,NULL,45:04.0,https://sites-gowlingwlg.vuturevx.com/106/7129/landing-pages/event-registration-(blank-form).asp,NULL,Register for this event,2AC31727-4C97-4C05-A86C-595D3554B185,NULL,2e9a87e2-3d2e-4d69-ba9c-06b4b358ca0d;3389c6cf-54c5-47db-81a0-7c09be2be982,NULL,NULL,NULL,Webinar,NULL,Webinar,34471,GWLG.Events,NULL,~/getmedia/e3f1a261-60a0-47e2-bb35-2360b067d6f7/aubergine_desktop.xml,~/getmedia/1064a211-9bae-4731-85df-81196eaa47d8/aubergine_mobile.xml,0,NULL,https://sites-gowlingwlg.vuturevx.com/106/7129/landing-pages/event-registration-(blank-form).asp,Register today,GWLG.Canada,0,NULL,NULL,t-white,NULL,NULL,"Cyber Security & Data Protection Law, Insurance & Professional Liability",NULL,NULL,~/getmedia/74411116-ce07-47a5-b6a9-be93408ce548/230503-cyber-insurance-US-market.jpg.xml?width=1272&height=675&ext=.jpg,NULL,_Blank

- ID: "6954b7c7-2487-423f-8600-436cb3b6dc0e"
  Hint: Size
  Value: 1771456
- ID: "6f47a0a5-9c94-4b48-abeb-42d38def6054"
  Hint: Mime Type
  Value: text/csv
- ID: "c06867fe-9a43-4c7d-b739-48780492d06f"
  Hint: Extension
  Value: csv
Languages:
- Language: en
  Versions:
  - Version: 1
    Fields:
    - ID: "25bed78c-4957-4165-998a-ca1b52f67497"
      Hint: __Created
      Value: 20230828T131111Z
    - ID: "52807595-0f8f-4b20-8d2a-cb71d28c6103"
      Hint: __Owner
      Value: |
        sitecore\sanjeevi.ram@altudo.co
    - ID: "5dd74568-4d4b-44c1-b513-0af5f4cda34f"
      Hint: __Created by
      Value: |
        sitecore\sanjeevi.ram@altudo.co
    - ID: "8cdc337e-a112-42fb-bbb4-4143751e123f"
      Hint: __Revision
      Value: "8d3e98aa-fd86-4ce1-8341-c2022307bad8"
    - ID: "badd9cf9-53e0-4d0c-bcc0-2d784c282f6a"
      Hint: __Updated by
      Value: |
        sitecore\sanjeevi.ram@altudo.co
    - ID: "d9cf14b1-fa16-4ba6-9288-e8a174d4d522"
      Hint: __Updated
      Value: 20230828T131111Z
